{"traceEvents": [{"ph": "M", "pid": 1040, "tid": 1040, "name": "process_name", "args": {"name": "SpawnProcess-3"}}, {"ph": "M", "pid": 1040, "tid": 21812, "name": "thread_name", "args": {"name": "MainThread"}}, {"pid": 1040, "tid": 21812, "ts": 64655946086.8, "ph": "X", "cat": "fee", "dur": 1.499, "name": "_multiprocessing.SemLock.__enter__"}, {"pid": 1040, "tid": 21812, "ts": 64655946086.1, "ph": "X", "cat": "fee", "dur": 2.4, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:94)"}, {"pid": 1040, "tid": 21812, "ts": 64655946090.9, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 1040, "tid": 21812, "ts": 64655946092.3, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 1040, "tid": 21812, "ts": 64655946095.8, "ph": "X", "cat": "fee", "dur": 9.0, "name": "_winapi.ReadFile"}, {"pid": 1040, "tid": 21812, "ts": 64655946106.4, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 1040, "tid": 21812, "ts": 64655946111.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 1040, "tid": 21812, "ts": 64655946113.3, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_io.BytesIO.write"}, {"pid": 1040, "tid": 21812, "ts": 64655946114.1, "ph": "X", "cat": "fee", "dur": 7.8, "name": "_winapi.PeekNamedPipe"}, {"pid": 1040, "tid": 21812, "ts": 64655946122.9, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_winapi.ReadFile"}, {"pid": 1040, "tid": 21812, "ts": 64655946126.4, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 1040, "tid": 21812, "ts": 64655946127.299, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 1040, "tid": 21812, "ts": 64655946127.5, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_io.BytesIO.write"}, {"pid": 1040, "tid": 21812, "ts": 64655946110.8, "ph": "X", "cat": "fee", "dur": 17.4, "name": "_get_more_data (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:337)"}, {"pid": 1040, "tid": 21812, "ts": 64655946094.5, "ph": "X", "cat": "fee", "dur": 34.8, "name": "_recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:299)"}, {"pid": 1040, "tid": 21812, "ts": 64655946130.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_io.BytesIO.getvalue"}, {"pid": 1040, "tid": 21812, "ts": 64655946090.0, "ph": "X", "cat": "fee", "dur": 40.599, "name": "recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:213)"}, {"pid": 1040, "tid": 21812, "ts": 64655946132.6, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_multiprocessing.SemLock.__exit__"}, {"pid": 1040, "tid": 21812, "ts": 64655946131.9, "ph": "X", "cat": "fee", "dur": 1.399, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:97)"}, {"pid": 1040, "tid": 21812, "ts": 64655946134.1, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_multiprocessing.SemLock.release"}, {"pid": 1040, "tid": 21812, "ts": 64655946149.2, "ph": "X", "cat": "fee", "dur": 1.6, "name": "_rebuild_partial (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:225)"}, {"pid": 1040, "tid": 21812, "ts": 64655946135.3, "ph": "X", "cat": "fee", "dur": 20.899, "name": "_pickle.loads"}, {"pid": 1040, "tid": 21812, "ts": 64655946083.9, "ph": "X", "cat": "fee", "dur": 72.5, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:98)"}, {"pid": 1040, "tid": 21812, "ts": 64655946160.8, "ph": "X", "cat": "fee", "dur": 0.399, "name": "time.perf_counter"}, {"pid": 1040, "tid": 21812, "ts": 64655946161.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "nt.getpid"}, {"pid": 1040, "tid": 21812, "ts": 64655946162.9, "ph": "X", "cat": "fee", "dur": 45.6, "name": "builtins.print"}, {"pid": 1040, "tid": 21812, "ts": 64655946254.799, "ph": "X", "cat": "fee", "dur": 2.0, "name": "_locale._getdefaultlocale"}, {"pid": 1040, "tid": 21812, "ts": 64655946253.7, "ph": "X", "cat": "fee", "dur": 3.5, "name": "getpreferredencoding (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_bootlocale.py:11)"}, {"pid": 1040, "tid": 21812, "ts": 64655946260.3, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\codecs.py:260)"}, {"pid": 1040, "tid": 21812, "ts": 64655946211.6, "ph": "X", "cat": "fee", "dur": 51.0, "name": "io.open"}, {"pid": 1040, "tid": 21812, "ts": 64656139038.9, "ph": "X", "cat": "fee", "dur": 324201.1, "name": "_codecs.charmap_decode"}, {"pid": 1040, "tid": 21812, "ts": 64656139035.9, "ph": "X", "cat": "fee", "dur": 324209.2, "name": "decode (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\encodings\\cp1252.py:22)"}, {"pid": 1040, "tid": 21812, "ts": 64655946263.9, "ph": "X", "cat": "fee", "dur": 1083364.399, "name": "_io.TextIOWrapper.read"}, {"pid": 1040, "tid": 21812, "ts": 64657029637.9, "ph": "X", "cat": "fee", "dur": 83.2, "name": "_io.TextIOWrapper.__exit__"}, {"pid": 1040, "tid": 21812, "ts": 64655946210.9, "ph": "X", "cat": "fee", "dur": 1083511.0, "name": "readInData (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:47)"}, {"pid": 1040, "tid": 21812, "ts": 64657029748.199, "ph": "X", "cat": "fee", "dur": 3940813.2, "name": "str.split"}, {"pid": 1040, "tid": 21812, "ts": 64660970567.8, "ph": "X", "cat": "fee", "dur": 2100558.2, "name": "str.join"}, {"pid": 1040, "tid": 21812, "ts": 64664061139.7, "ph": "X", "cat": "fee", "dur": 5.5, "name": "builtins.isinstance"}, {"pid": 1040, "tid": 21812, "ts": 64664061155.5, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.isinstance"}, {"pid": 1040, "tid": 21812, "ts": 64664061159.3, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.isinstance"}, {"pid": 1040, "tid": 21812, "ts": 64664061157.499, "ph": "X", "cat": "fee", "dur": 2.3, "name": "isstring (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:595)"}, {"pid": 1040, "tid": 21812, "ts": 64664061162.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 1040, "tid": 21812, "ts": 64664061162.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "isstring (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:595)"}, {"pid": 1040, "tid": 21812, "ts": 64664061167.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 1040, "tid": 21812, "ts": 64664061171.4, "ph": "X", "cat": "fee", "dur": 1.9, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 1040, "tid": 21812, "ts": 64664061167.4, "ph": "X", "cat": "fee", "dur": 6.1, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:224)"}, {"pid": 1040, "tid": 21812, "ts": 64664061176.9, "ph": "X", "cat": "fee", "dur": 2.5, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:76)"}, {"pid": 1040, "tid": 21812, "ts": 64664061184.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 1040, "tid": 21812, "ts": 64664061184.099, "ph": "X", "cat": "fee", "dur": 0.9, "name": "tell (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:286)"}, {"pid": 1040, "tid": 21812, "ts": 64664061187.1, "ph": "X", "cat": "fee", "dur": 1.7, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:111)"}, {"pid": 1040, "tid": 21812, "ts": 64664061191.8, "ph": "X", "cat": "fee", "dur": 0.399, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 1040, "tid": 21812, "ts": 64664061191.4, "ph": "X", "cat": "fee", "dur": 0.9, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 1040, "tid": 21812, "ts": 64664061193.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 1040, "tid": 21812, "ts": 64664061193.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "tell (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:286)"}, {"pid": 1040, "tid": 21812, "ts": 64664061194.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 1040, "tid": 21812, "ts": 64664061194.1, "ph": "X", "cat": "fee", "dur": 0.7, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 1040, "tid": 21812, "ts": 64664061195.2, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 1040, "tid": 21812, "ts": 64664061194.999, "ph": "X", "cat": "fee", "dur": 0.62, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 1040, "tid": 21812, "ts": 64664061196.6, "ph": "X", "cat": "fee", "dur": 0.6, "name": "builtins.ord"}, {"pid": 1040, "tid": 21812, "ts": 64664061197.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 1040, "tid": 21812, "ts": 64664061197.5, "ph": "X", "cat": "fee", "dur": 0.52, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 1040, "tid": 21812, "ts": 64664061198.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 1040, "tid": 21812, "ts": 64664061198.299, "ph": "X", "cat": "fee", "dur": 0.5, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 1040, "tid": 21812, "ts": 64664061199.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.ord"}, {"pid": 1040, "tid": 21812, "ts": 64664061200.599, "ph": "X", "cat": "fee", "dur": 0.5, "name": "list.append"}, {"pid": 1040, "tid": 21812, "ts": 64664061201.599, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 1040, "tid": 21812, "ts": 64664061201.4, "ph": "X", "cat": "fee", "dur": 0.419, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 1040, "tid": 21812, "ts": 64664061202.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.ord"}, {"pid": 1040, "tid": 21812, "ts": 64664061202.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 1040, "tid": 21812, "ts": 64664061202.599, "ph": "X", "cat": "fee", "dur": 0.5, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 1040, "tid": 21812, "ts": 64664061203.5, "ph": "X", "cat": "fee", "dur": 1.1, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 1040, "tid": 21812, "ts": 64664061203.3, "ph": "X", "cat": "fee", "dur": 1.4, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 1040, "tid": 21812, "ts": 64664061204.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.ord"}, {"pid": 1040, "tid": 21812, "ts": 64664061205.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 1040, "tid": 21812, "ts": 64664061205.899, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 1040, "tid": 21812, "ts": 64664061205.7, "ph": "X", "cat": "fee", "dur": 0.5, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 1040, "tid": 21812, "ts": 64664061208.3, "ph": "X", "cat": "fee", "dur": 0.7, "name": "dict.get"}, {"pid": 1040, "tid": 21812, "ts": 64664061209.199, "ph": "X", "cat": "fee", "dur": 0.3, "name": "dict.get"}, {"pid": 1040, "tid": 21812, "ts": 64664061207.0, "ph": "X", "cat": "fee", "dur": 2.9, "name": "_class_escape (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:295)"}, {"pid": 1040, "tid": 21812, "ts": 64664061210.199, "ph": "X", "cat": "fee", "dur": 0.1, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 1040, "tid": 21812, "ts": 64664061210.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 1040, "tid": 21812, "ts": 64664061211.3, "ph": "X", "cat": "fee", "dur": 0.199, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 1040, "tid": 21812, "ts": 64664061211.1, "ph": "X", "cat": "fee", "dur": 0.419, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 1040, "tid": 21812, "ts": 64664061213.4, "ph": "X", "cat": "fee", "dur": 2.8, "name": "type.fromkeys"}, {"pid": 1040, "tid": 21812, "ts": 64664061212.2, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_uniq (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:432)"}, {"pid": 1040, "tid": 21812, "ts": 64664061218.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 1040, "tid": 21812, "ts": 64664061218.6, "ph": "X", "cat": "fee", "dur": 0.499, "name": "list.insert"}, {"pid": 1040, "tid": 21812, "ts": 64664061219.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 1040, "tid": 21812, "ts": 64664061219.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "append (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:172)"}, {"pid": 1040, "tid": 21812, "ts": 64664061220.4, "ph": "X", "cat": "fee", "dur": 2.099, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 1040, "tid": 21812, "ts": 64664061220.2, "ph": "X", "cat": "fee", "dur": 2.4, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 1040, "tid": 21812, "ts": 64664061223.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 1040, "tid": 21812, "ts": 64664061223.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "tell (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:286)"}, {"pid": 1040, "tid": 21812, "ts": 64664061226.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 1040, "tid": 21812, "ts": 64664061226.199, "ph": "X", "cat": "fee", "dur": 0.32, "name": "__len__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:160)"}, {"pid": 1040, "tid": 21812, "ts": 64664061229.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 1040, "tid": 21812, "ts": 64664061230.8, "ph": "X", "cat": "fee", "dur": 0.199, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:111)"}, {"pid": 1040, "tid": 21812, "ts": 64664061228.1, "ph": "X", "cat": "fee", "dur": 3.0, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 1040, "tid": 21812, "ts": 64664061231.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 1040, "tid": 21812, "ts": 64664061231.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__len__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:160)"}, {"pid": 1040, "tid": 21812, "ts": 64664061232.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 1040, "tid": 21812, "ts": 64664061231.999, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 1040, "tid": 21812, "ts": 64664061232.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 1040, "tid": 21812, "ts": 64664061232.9, "ph": "X", "cat": "fee", "dur": 0.22, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 1040, "tid": 21812, "ts": 64664061234.12, "ph": "X", "cat": "fee", "dur": 0.079, "name": "builtins.isinstance"}, {"pid": 1040, "tid": 21812, "ts": 64664061234.1, "ph": "X", "cat": "fee", "dur": 0.199, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 1040, "tid": 21812, "ts": 64664061234.7, "ph": "X", "cat": "fee", "dur": 0.5, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 1040, "tid": 21812, "ts": 64664061236.0, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__setitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:168)"}, {"pid": 1040, "tid": 21812, "ts": 64664061237.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 1040, "tid": 21812, "ts": 64664061236.9, "ph": "X", "cat": "fee", "dur": 0.199, "name": "__len__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:160)"}, {"pid": 1040, "tid": 21812, "ts": 64664061236.7, "ph": "X", "cat": "fee", "dur": 0.5, "name": "builtins.len"}, {"pid": 1040, "tid": 21812, "ts": 64664061240.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 1040, "tid": 21812, "ts": 64664061240.599, "ph": "X", "cat": "fee", "dur": 0.22, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 1040, "tid": 21812, "ts": 64664061185.899, "ph": "X", "cat": "fee", "dur": 55.2, "name": "_parse (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:493)"}, {"pid": 1040, "tid": 21812, "ts": 64664061241.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 1040, "tid": 21812, "ts": 64664061242.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 1040, "tid": 21812, "ts": 64664061242.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 1040, "tid": 21812, "ts": 64664061181.299, "ph": "X", "cat": "fee", "dur": 61.4, "name": "_parse_sub (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:435)"}, {"pid": 1040, "tid": 21812, "ts": 64664061243.899, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 1040, "tid": 21812, "ts": 64664061243.5, "ph": "X", "cat": "fee", "dur": 2.1, "name": "fix_flags (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:921)"}, {"pid": 1040, "tid": 21812, "ts": 64664061164.4, "ph": "X", "cat": "fee", "dur": 81.6, "name": "parse (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:937)"}, {"pid": 1040, "tid": 21812, "ts": 64664061250.999, "ph": "X", "cat": "fee", "dur": 2.3, "name": "builtins.min"}, {"pid": 1040, "tid": 21812, "ts": 64664061253.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.min"}, {"pid": 1040, "tid": 21812, "ts": 64664061249.999, "ph": "X", "cat": "fee", "dur": 3.7, "name": "getwidth (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:174)"}, {"pid": 1040, "tid": 21812, "ts": 64664061255.1, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.min"}, {"pid": 1040, "tid": 21812, "ts": 64664061255.4, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.min"}, {"pid": 1040, "tid": 21812, "ts": 64664061248.9, "ph": "X", "cat": "fee", "dur": 6.8, "name": "getwidth (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:174)"}, {"pid": 1040, "tid": 21812, "ts": 64664061258.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_get_iscased (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:453)"}, {"pid": 1040, "tid": 21812, "ts": 64664061257.099, "ph": "X", "cat": "fee", "dur": 1.8, "name": "_get_literal_prefix (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:461)"}, {"pid": 1040, "tid": 21812, "ts": 64664061260.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_get_iscased (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:453)"}, {"pid": 1040, "tid": 21812, "ts": 64664061259.5, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_get_charset_prefix (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:492)"}, {"pid": 1040, "tid": 21812, "ts": 64664061260.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 1040, "tid": 21812, "ts": 64664061260.899, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 1040, "tid": 21812, "ts": 64664061261.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 1040, "tid": 21812, "ts": 64664061261.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 1040, "tid": 21812, "ts": 64664061261.399, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 1040, "tid": 21812, "ts": 64664061261.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.min"}, {"pid": 1040, "tid": 21812, "ts": 64664061261.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 1040, "tid": 21812, "ts": 64664061262.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 1040, "tid": 21812, "ts": 64664061248.1, "ph": "X", "cat": "fee", "dur": 14.1, "name": "_compile_info (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:536)"}, {"pid": 1040, "tid": 21812, "ts": 64664061266.199, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 1040, "tid": 21812, "ts": 64664061266.1, "ph": "X", "cat": "fee", "dur": 0.22, "name": "__len__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:160)"}, {"pid": 1040, "tid": 21812, "ts": 64664061265.8, "ph": "X", "cat": "fee", "dur": 0.6, "name": "builtins.len"}, {"pid": 1040, "tid": 21812, "ts": 64664061266.82, "ph": "X", "cat": "fee", "dur": 0.079, "name": "builtins.isinstance"}, {"pid": 1040, "tid": 21812, "ts": 64664061266.8, "ph": "X", "cat": "fee", "dur": 0.199, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 1040, "tid": 21812, "ts": 64664061265.6, "ph": "X", "cat": "fee", "dur": 1.7, "name": "_simple (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:423)"}, {"pid": 1040, "tid": 21812, "ts": 64664061267.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 1040, "tid": 21812, "ts": 64664061267.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 1040, "tid": 21812, "ts": 64664061267.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 1040, "tid": 21812, "ts": 64664061267.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 1040, "tid": 21812, "ts": 64664061267.999, "ph": "X", "cat": "fee", "dur": 0.4, "name": "list.append"}, {"pid": 1040, "tid": 21812, "ts": 64664061274.099, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 1040, "tid": 21812, "ts": 64664061274.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 1040, "tid": 21812, "ts": 64664061277.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 1040, "tid": 21812, "ts": 64664061281.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 1040, "tid": 21812, "ts": 64664061282.699, "ph": "X", "cat": "fee", "dur": 2.0, "name": "bytearray.find"}, {"pid": 1040, "tid": 21812, "ts": 64664061284.999, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 1040, "tid": 21812, "ts": 64664061285.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "bytearray.find"}, {"pid": 1040, "tid": 21812, "ts": 64664061285.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 1040, "tid": 21812, "ts": 64664061285.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "bytearray.find"}, {"pid": 1040, "tid": 21812, "ts": 64664061285.999, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 1040, "tid": 21812, "ts": 64664061286.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "bytearray.find"}, {"pid": 1040, "tid": 21812, "ts": 64664061286.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 1040, "tid": 21812, "ts": 64664061286.499, "ph": "X", "cat": "fee", "dur": 0.2, "name": "bytearray.find"}, {"pid": 1040, "tid": 21812, "ts": 64664061287.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 1040, "tid": 21812, "ts": 64664061287.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 1040, "tid": 21812, "ts": 64664061287.999, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 1040, "tid": 21812, "ts": 64664061288.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 1040, "tid": 21812, "ts": 64664061274.8, "ph": "X", "cat": "fee", "dur": 13.4, "name": "_optimize_charset (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:276)"}, {"pid": 1040, "tid": 21812, "ts": 64664061289.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 1040, "tid": 21812, "ts": 64664061289.299, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 1040, "tid": 21812, "ts": 64664061289.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 1040, "tid": 21812, "ts": 64664061290.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 1040, "tid": 21812, "ts": 64664061290.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 1040, "tid": 21812, "ts": 64664061290.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 1040, "tid": 21812, "ts": 64664061290.799, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 1040, "tid": 21812, "ts": 64664061290.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 1040, "tid": 21812, "ts": 64664061291.1, "ph": "X", "cat": "fee", "dur": 0.199, "name": "list.append"}, {"pid": 1040, "tid": 21812, "ts": 64664061291.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 1040, "tid": 21812, "ts": 64664061291.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 1040, "tid": 21812, "ts": 64664061292.599, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 1040, "tid": 21812, "ts": 64664061292.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 1040, "tid": 21812, "ts": 64664061289.9, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_compile_charset (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:249)"}, {"pid": 1040, "tid": 21812, "ts": 64664061293.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 1040, "tid": 21812, "ts": 64664061293.52, "ph": "X", "cat": "fee", "dur": 0.079, "name": "builtins.isinstance"}, {"pid": 1040, "tid": 21812, "ts": 64664061293.5, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 1040, "tid": 21812, "ts": 64664061272.7, "ph": "X", "cat": "fee", "dur": 22.6, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:71)"}, {"pid": 1040, "tid": 21812, "ts": 64664061295.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 1040, "tid": 21812, "ts": 64664061295.62, "ph": "X", "cat": "fee", "dur": 0.08, "name": "builtins.len"}, {"pid": 1040, "tid": 21812, "ts": 64664061263.699, "ph": "X", "cat": "fee", "dur": 32.2, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:71)"}, {"pid": 1040, "tid": 21812, "ts": 64664061296.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 1040, "tid": 21812, "ts": 64664061247.199, "ph": "X", "cat": "fee", "dur": 49.2, "name": "_code (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:598)"}, {"pid": 1040, "tid": 21812, "ts": 64664061297.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 1040, "tid": 21812, "ts": 64664061297.5, "ph": "X", "cat": "fee", "dur": 0.419, "name": "groups (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:81)"}, {"pid": 1040, "tid": 21812, "ts": 64664061298.6, "ph": "X", "cat": "fee", "dur": 0.299, "name": "dict.items"}, {"pid": 1040, "tid": 21812, "ts": 64664061300.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 1040, "tid": 21812, "ts": 64664061300.5, "ph": "X", "cat": "fee", "dur": 0.219, "name": "groups (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:81)"}, {"pid": 1040, "tid": 21812, "ts": 64664061301.699, "ph": "X", "cat": "fee", "dur": 1.6, "name": "_sre.compile"}, {"pid": 1040, "tid": 21812, "ts": 64664061161.6, "ph": "X", "cat": "fee", "dur": 141.799, "name": "compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:759)"}, {"pid": 1040, "tid": 21812, "ts": 64664061309.6, "ph": "X", "cat": "fee", "dur": 0.399, "name": "builtins.isinstance"}, {"pid": 1040, "tid": 21812, "ts": 64664061315.2, "ph": "X", "cat": "fee", "dur": 2.399, "name": "__new__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:670)"}, {"pid": 1040, "tid": 21812, "ts": 64664061312.599, "ph": "X", "cat": "fee", "dur": 5.1, "name": "__call__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:358)"}, {"pid": 1040, "tid": 21812, "ts": 64664061318.9, "ph": "X", "cat": "fee", "dur": 0.299, "name": "__new__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:670)"}, {"pid": 1040, "tid": 21812, "ts": 64664061318.6, "ph": "X", "cat": "fee", "dur": 0.7, "name": "__call__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:358)"}, {"pid": 1040, "tid": 21812, "ts": 64664061306.799, "ph": "X", "cat": "fee", "dur": 12.6, "name": "__and__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:977)"}, {"pid": 1040, "tid": 21812, "ts": 64664061319.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 1040, "tid": 21812, "ts": 64664061138.1, "ph": "X", "cat": "fee", "dur": 182.4, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:289)"}, {"pid": 1040, "tid": 21812, "ts": 64664061320.9, "ph": "X", "cat": "fee", "dur": 6233441.3, "name": "re.Pattern.sub"}, {"pid": 1040, "tid": 21812, "ts": 64664061136.3, "ph": "X", "cat": "fee", "dur": 6233630.4, "name": "sub (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:203)"}, {"pid": 1040, "tid": 21812, "ts": 64670294774.4, "ph": "X", "cat": "fee", "dur": 2506142.999, "name": "str.split"}, {"pid": 1040, "tid": 21812, "ts": 64657029746.1, "ph": "X", "cat": "fee", "dur": 15788306.6, "name": "cleanAndTokenize (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:64)"}, {"pid": 1040, "tid": 21812, "ts": 64672822558.2, "ph": "X", "cat": "fee", "dur": 0.7, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 1040, "tid": 21812, "ts": 64672822566.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 1040, "tid": 21812, "ts": 64672822572.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 1040, "tid": 21812, "ts": 64672822570.9, "ph": "X", "cat": "fee", "dur": 2.9, "name": "_abc._abc_subclasscheck"}, {"pid": 1040, "tid": 21812, "ts": 64672822570.8, "ph": "X", "cat": "fee", "dur": 3.1, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 1040, "tid": 21812, "ts": 64672822576.999, "ph": "X", "cat": "fee", "dur": 0.02, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 1040, "tid": 21812, "ts": 64672822574.42, "ph": "X", "cat": "fee", "dur": 3.28, "name": "_abc._abc_subclasscheck"}, {"pid": 1040, "tid": 21812, "ts": 64672822574.4, "ph": "X", "cat": "fee", "dur": 3.32, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 1040, "tid": 21812, "ts": 64672822579.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 1040, "tid": 21812, "ts": 64672822578.02, "ph": "X", "cat": "fee", "dur": 1.68, "name": "_abc._abc_subclasscheck"}, {"pid": 1040, "tid": 21812, "ts": 64672822578.0, "ph": "X", "cat": "fee", "dur": 1.72, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 1040, "tid": 21812, "ts": 64672822581.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 1040, "tid": 21812, "ts": 64672822580.1, "ph": "X", "cat": "fee", "dur": 1.999, "name": "_abc._abc_subclasscheck"}, {"pid": 1040, "tid": 21812, "ts": 64672822580.0, "ph": "X", "cat": "fee", "dur": 2.2, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 1040, "tid": 21812, "ts": 64672822583.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 1040, "tid": 21812, "ts": 64672822582.5, "ph": "X", "cat": "fee", "dur": 1.9, "name": "_abc._abc_subclasscheck"}, {"pid": 1040, "tid": 21812, "ts": 64672822582.4, "ph": "X", "cat": "fee", "dur": 2.02, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 1040, "tid": 21812, "ts": 64672822586.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 1040, "tid": 21812, "ts": 64672822589.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 1040, "tid": 21812, "ts": 64672822591.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 1040, "tid": 21812, "ts": 64672822590.5, "ph": "X", "cat": "fee", "dur": 2.3, "name": "_abc._abc_subclasscheck"}, {"pid": 1040, "tid": 21812, "ts": 64672822590.4, "ph": "X", "cat": "fee", "dur": 2.42, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 1040, "tid": 21812, "ts": 64672822587.82, "ph": "X", "cat": "fee", "dur": 9.68, "name": "_abc._abc_subclasscheck"}, {"pid": 1040, "tid": 21812, "ts": 64672822587.8, "ph": "X", "cat": "fee", "dur": 9.8, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 1040, "tid": 21812, "ts": 64672822584.72, "ph": "X", "cat": "fee", "dur": 13.179, "name": "_abc._abc_subclasscheck"}, {"pid": 1040, "tid": 21812, "ts": 64672822584.7, "ph": "X", "cat": "fee", "dur": 13.299, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 1040, "tid": 21812, "ts": 64672822599.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 1040, "tid": 21812, "ts": 64672822598.299, "ph": "X", "cat": "fee", "dur": 1.7, "name": "_abc._abc_subclasscheck"}, {"pid": 1040, "tid": 21812, "ts": 64672822598.2, "ph": "X", "cat": "fee", "dur": 1.899, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 1040, "tid": 21812, "ts": 64672822601.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 1040, "tid": 21812, "ts": 64672822600.32, "ph": "X", "cat": "fee", "dur": 1.58, "name": "_abc._abc_subclasscheck"}, {"pid": 1040, "tid": 21812, "ts": 64672822600.3, "ph": "X", "cat": "fee", "dur": 1.62, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 1040, "tid": 21812, "ts": 64672822565.4, "ph": "X", "cat": "fee", "dur": 36.799, "name": "_abc._abc_subclasscheck"}, {"pid": 1040, "tid": 21812, "ts": 64672822565.3, "ph": "X", "cat": "fee", "dur": 37.0, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 1040, "tid": 21812, "ts": 64672822603.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 1040, "tid": 21812, "ts": 64672822602.599, "ph": "X", "cat": "fee", "dur": 1.9, "name": "_abc._abc_subclasscheck"}, {"pid": 1040, "tid": 21812, "ts": 64672822602.5, "ph": "X", "cat": "fee", "dur": 2.1, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 1040, "tid": 21812, "ts": 64672822553.6, "ph": "X", "cat": "fee", "dur": 51.2, "name": "_abc._abc_subclasscheck"}, {"pid": 1040, "tid": 21812, "ts": 64672822553.5, "ph": "X", "cat": "fee", "dur": 51.399, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 1040, "tid": 21812, "ts": 64672822544.299, "ph": "X", "cat": "fee", "dur": 60.7, "name": "_abc._abc_instancecheck"}, {"pid": 1040, "tid": 21812, "ts": 64672822543.299, "ph": "X", "cat": "fee", "dur": 61.8, "name": "__instancecheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:117)"}, {"pid": 1040, "tid": 21812, "ts": 64672822539.9, "ph": "X", "cat": "fee", "dur": 65.4, "name": "builtins.isinstance"}, {"pid": 1040, "tid": 21812, "ts": 64672822605.899, "ph": "X", "cat": "fee", "dur": 5388988.6, "name": "_collections._count_elements"}, {"pid": 1040, "tid": 21812, "ts": 64672822536.699, "ph": "X", "cat": "fee", "dur": 5389060.0, "name": "update (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:649)"}, {"pid": 1040, "tid": 21812, "ts": 64672822526.4, "ph": "X", "cat": "fee", "dur": 5389072.299, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:581)"}, {"pid": 1040, "tid": 21812, "ts": 64655946210.4, "ph": "X", "cat": "fee", "dur": 22265389.2, "name": "getWordCount (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:83)"}, {"pid": 1040, "tid": 21812, "ts": 64678571459.3, "ph": "X", "cat": "fee", "dur": 1.3, "name": "time.perf_counter"}, {"pid": 1040, "tid": 21812, "ts": 64678571463.2, "ph": "X", "cat": "fee", "dur": 1.8, "name": "nt.getpid"}, {"pid": 1040, "tid": 21812, "ts": 64678571479.2, "ph": "X", "cat": "fee", "dur": 336.199, "name": "builtins.print"}, {"pid": 1040, "tid": 21812, "ts": 64678571819.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "Counter.values"}, {"pid": 1040, "tid": 21812, "ts": 64678571820.199, "ph": "X", "cat": "fee", "dur": 4498.4, "name": "builtins.sum"}, {"pid": 1040, "tid": 21812, "ts": 64678576319.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "Counter.items"}, {"pid": 1040, "tid": 21812, "ts": 64678571818.0, "ph": "X", "cat": "fee", "dur": 169442.6, "name": "getWordFrequencies (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:101)"}, {"pid": 1040, "tid": 21812, "ts": 64655946160.1, "ph": "X", "cat": "fee", "dur": 22795104.499, "name": "getWordData (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:123)"}, {"pid": 1040, "tid": 21812, "ts": 64655946159.4, "ph": "X", "cat": "fee", "dur": 22795108.0, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:202)"}, {"pid": 1040, "tid": 21812, "ts": 64655946158.499, "ph": "X", "cat": "fee", "dur": 22795110.7, "name": "_process_chunk (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:193)"}, {"pid": 1040, "tid": 21812, "ts": 64678741287.2, "ph": "X", "cat": "fee", "dur": 1.399, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:145)"}, {"pid": 1040, "tid": 21812, "ts": 64678741321.8, "ph": "X", "cat": "fee", "dur": 1.8, "name": "dict.copy"}, {"pid": 1040, "tid": 21812, "ts": 64678741324.899, "ph": "X", "cat": "fee", "dur": 2.4, "name": "dict.update"}, {"pid": 1040, "tid": 21812, "ts": 64678741299.2, "ph": "X", "cat": "fee", "dur": 28.4, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 1040, "tid": 21812, "ts": 64678741350.6, "ph": "X", "cat": "fee", "dur": 0.7, "name": "mappingproxy.get"}, {"pid": 1040, "tid": 21812, "ts": 64678741352.2, "ph": "X", "cat": "fee", "dur": 3.099, "name": "builtins.hasattr"}, {"pid": 1040, "tid": 21812, "ts": 64678741348.8, "ph": "X", "cat": "fee", "dur": 7.499, "name": "_slotnames (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\copyreg.py:103)"}, {"pid": 1040, "tid": 21812, "ts": 64678741373.5, "ph": "X", "cat": "fee", "dur": 37559.299, "name": "__reduce__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:714)"}, {"pid": 1040, "tid": 21812, "ts": 64678741328.1, "ph": "X", "cat": "fee", "dur": 223672.9, "name": "ForkingPickler.dump"}, {"pid": 1040, "tid": 21812, "ts": 64678980887.3, "ph": "X", "cat": "fee", "dur": 2.0, "name": "_io.BytesIO.getbuffer"}, {"pid": 1040, "tid": 21812, "ts": 64678741294.7, "ph": "X", "cat": "fee", "dur": 239594.9, "name": "dumps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:48)"}, {"pid": 1040, "tid": 21812, "ts": 64678980895.7, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 1040, "tid": 21812, "ts": 64678980900.8, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 1040, "tid": 21812, "ts": 64678980904.2, "ph": "X", "cat": "fee", "dur": 0.299, "name": "builtins.len"}, {"pid": 1040, "tid": 21812, "ts": 64678980910.9, "ph": "X", "cat": "fee", "dur": 2443.9, "name": "_winapi.WriteFile"}, {"pid": 1040, "tid": 21812, "ts": 64678983363.799, "ph": "X", "cat": "fee", "dur": 4732.8, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 1040, "tid": 21812, "ts": 64678988098.6, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 1040, "tid": 21812, "ts": 64678988102.0, "ph": "X", "cat": "fee", "dur": 0.299, "name": "builtins.len"}, {"pid": 1040, "tid": 21812, "ts": 64678980907.9, "ph": "X", "cat": "fee", "dur": 7194.6, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 1040, "tid": 21812, "ts": 64678980894.6, "ph": "X", "cat": "fee", "dur": 7213.2, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 1040, "tid": 21812, "ts": 64678741289.899, "ph": "X", "cat": "fee", "dur": 246818.6, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:370)"}, {"pid": 1040, "tid": 21812, "ts": 64678741279.5, "ph": "X", "cat": "fee", "dur": 247319.3, "name": "_sendback_result (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:205)"}, {"pid": 1040, "tid": 21812, "ts": 64679162897.099, "ph": "X", "cat": "fee", "dur": 15679.1, "name": "_multiprocessing.SemLock.__enter__"}, {"pid": 1040, "tid": 21812, "ts": 64679162896.1, "ph": "X", "cat": "fee", "dur": 15681.599, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:94)"}, {"pid": 1040, "tid": 21812, "ts": 64679178582.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 1040, "tid": 21812, "ts": 64679178587.9, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 1040, "tid": 21812, "ts": 64679178591.2, "ph": "X", "cat": "fee", "dur": 6.6, "name": "_winapi.ReadFile"}, {"pid": 1040, "tid": 21812, "ts": 64679178598.9, "ph": "X", "cat": "fee", "dur": 1.3, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 1040, "tid": 21812, "ts": 64679178602.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 1040, "tid": 21812, "ts": 64679178602.299, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_io.BytesIO.write"}, {"pid": 1040, "tid": 21812, "ts": 64679178589.3, "ph": "X", "cat": "fee", "dur": 13.4, "name": "_recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:299)"}, {"pid": 1040, "tid": 21812, "ts": 64679178604.4, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_io.BytesIO.getvalue"}, {"pid": 1040, "tid": 21812, "ts": 64679178580.999, "ph": "X", "cat": "fee", "dur": 23.8, "name": "recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:213)"}, {"pid": 1040, "tid": 21812, "ts": 64679178606.9, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_multiprocessing.SemLock.__exit__"}, {"pid": 1040, "tid": 21812, "ts": 64679178605.7, "ph": "X", "cat": "fee", "dur": 2.1, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:97)"}, {"pid": 1040, "tid": 21812, "ts": 64679178609.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_multiprocessing.SemLock.release"}, {"pid": 1040, "tid": 21812, "ts": 64679178610.0, "ph": "X", "cat": "fee", "dur": 1.9, "name": "_pickle.loads"}, {"pid": 1040, "tid": 21812, "ts": 64679162892.6, "ph": "X", "cat": "fee", "dur": 15719.4, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:98)"}, {"pid": 1040, "tid": 21812, "ts": 64679178613.6, "ph": "X", "cat": "fee", "dur": 1.099, "name": "nt.getpid"}, {"pid": 1040, "tid": 21812, "ts": 64679178622.4, "ph": "X", "cat": "fee", "dur": 0.399, "name": "dict.copy"}, {"pid": 1040, "tid": 21812, "ts": 64679178623.4, "ph": "X", "cat": "fee", "dur": 1.099, "name": "dict.update"}, {"pid": 1040, "tid": 21812, "ts": 64679178617.999, "ph": "X", "cat": "fee", "dur": 6.7, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 1040, "tid": 21812, "ts": 64679178625.099, "ph": "X", "cat": "fee", "dur": 2.4, "name": "ForkingPickler.dump"}, {"pid": 1040, "tid": 21812, "ts": 64679178628.2, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_io.BytesIO.getbuffer"}, {"pid": 1040, "tid": 21812, "ts": 64679178616.7, "ph": "X", "cat": "fee", "dur": 12.0, "name": "dumps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:48)"}, {"pid": 1040, "tid": 21812, "ts": 64679178630.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 1040, "tid": 21812, "ts": 64679178631.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 1040, "tid": 21812, "ts": 64679178632.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 1040, "tid": 21812, "ts": 64679178634.6, "ph": "X", "cat": "fee", "dur": 3.9, "name": "_winapi.WriteFile"}, {"pid": 1040, "tid": 21812, "ts": 64679178639.0, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 1040, "tid": 21812, "ts": 64679178639.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 1040, "tid": 21812, "ts": 64679178633.999, "ph": "X", "cat": "fee", "dur": 5.7, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 1040, "tid": 21812, "ts": 64679178630.1, "ph": "X", "cat": "fee", "dur": 10.7, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 1040, "tid": 21812, "ts": 64679178615.2, "ph": "X", "cat": "fee", "dur": 25.8, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:370)"}, {"pid": 1040, "tid": 21812, "ts": 64655946081.8, "ph": "X", "cat": "fee", "dur": 23232559.6, "name": "_process_worker (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:215)"}, {"pid": 1040, "tid": 21812, "ts": 64655946079.6, "ph": "X", "cat": "fee", "dur": 23232562.7, "name": "run (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:103)"}, {"pid": 1040, "tid": 21812, "ts": 64679178649.4, "ph": "X", "cat": "fee", "dur": 0.5, "name": "info (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:52)"}, {"pid": 1040, "tid": 21812, "ts": 64679178650.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:48)"}, {"pid": 1040, "tid": 21812, "ts": 64679178656.6, "ph": "X", "cat": "fee", "dur": 0.299, "name": "<lambda> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:284)"}, {"pid": 1040, "tid": 21812, "ts": 64679178656.0, "ph": "X", "cat": "fee", "dur": 3.3, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:291)"}, {"pid": 1040, "tid": 21812, "ts": 64679178659.9, "ph": "X", "cat": "fee", "dur": 0.5, "name": "list.sort"}, {"pid": 1040, "tid": 21812, "ts": 64679178651.8, "ph": "X", "cat": "fee", "dur": 8.899, "name": "_run_finalizers (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:268)"}, {"pid": 1040, "tid": 21812, "ts": 64679178661.8, "ph": "X", "cat": "fee", "dur": 0.7, "name": "current_process (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:37)"}, {"pid": 1040, "tid": 21812, "ts": 64679178664.2, "ph": "X", "cat": "fee", "dur": 1.199, "name": "_cleanup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:61)"}, {"pid": 1040, "tid": 21812, "ts": 64679178663.399, "ph": "X", "cat": "fee", "dur": 2.2, "name": "active_children (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:43)"}, {"pid": 1040, "tid": 21812, "ts": 64679178666.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_cleanup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:61)"}, {"pid": 1040, "tid": 21812, "ts": 64679178666.0, "ph": "X", "cat": "fee", "dur": 0.5, "name": "active_children (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:43)"}, {"pid": 1040, "tid": 21812, "ts": 64679178666.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:48)"}, {"pid": 1040, "tid": 21812, "ts": 64679178668.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<lambda> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:282)"}, {"pid": 1040, "tid": 21812, "ts": 64679178668.0, "ph": "X", "cat": "fee", "dur": 0.599, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:291)"}, {"pid": 1040, "tid": 21812, "ts": 64679178668.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.sort"}, {"pid": 1040, "tid": 21812, "ts": 64679178669.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.get"}, {"pid": 1040, "tid": 21812, "ts": 64679178669.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "sub_debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:44)"}, {"pid": 1040, "tid": 21812, "ts": 64679178672.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 1040, "tid": 21812, "ts": 64679178674.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "sub_debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:44)"}, {"ph": "M", "pid": 15376, "tid": 15376, "name": "process_name", "args": {"name": "SpawnProcess-7"}}, {"ph": "M", "pid": 15376, "tid": 21648, "name": "thread_name", "args": {"name": "MainThread"}}, {"pid": 15376, "tid": 21648, "ts": 64655952356.999, "ph": "X", "cat": "fee", "dur": 0.9, "name": "_multiprocessing.SemLock.__enter__"}, {"pid": 15376, "tid": 21648, "ts": 64655952356.6, "ph": "X", "cat": "fee", "dur": 1.6, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:94)"}, {"pid": 15376, "tid": 21648, "ts": 64655952359.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 15376, "tid": 21648, "ts": 64655952360.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 15376, "tid": 21648, "ts": 64655952361.5, "ph": "X", "cat": "fee", "dur": 6.8, "name": "_winapi.ReadFile"}, {"pid": 15376, "tid": 21648, "ts": 64655952369.3, "ph": "X", "cat": "fee", "dur": 2.0, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 15376, "tid": 21648, "ts": 64655952372.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 15376, "tid": 21648, "ts": 64655952373.699, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_io.BytesIO.write"}, {"pid": 15376, "tid": 21648, "ts": 64655952374.4, "ph": "X", "cat": "fee", "dur": 5.3, "name": "_winapi.PeekNamedPipe"}, {"pid": 15376, "tid": 21648, "ts": 64655952380.299, "ph": "X", "cat": "fee", "dur": 2.0, "name": "_winapi.ReadFile"}, {"pid": 15376, "tid": 21648, "ts": 64655952382.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 15376, "tid": 21648, "ts": 64655952383.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 15376, "tid": 21648, "ts": 64655952383.3, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_io.BytesIO.write"}, {"pid": 15376, "tid": 21648, "ts": 64655952372.199, "ph": "X", "cat": "fee", "dur": 11.8, "name": "_get_more_data (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:337)"}, {"pid": 15376, "tid": 21648, "ts": 64655952360.6, "ph": "X", "cat": "fee", "dur": 24.3, "name": "_recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:299)"}, {"pid": 15376, "tid": 21648, "ts": 64655952385.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_io.BytesIO.getvalue"}, {"pid": 15376, "tid": 21648, "ts": 64655952358.8, "ph": "X", "cat": "fee", "dur": 27.099, "name": "recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:213)"}, {"pid": 15376, "tid": 21648, "ts": 64655952387.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_multiprocessing.SemLock.__exit__"}, {"pid": 15376, "tid": 21648, "ts": 64655952386.899, "ph": "X", "cat": "fee", "dur": 0.82, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:97)"}, {"pid": 15376, "tid": 21648, "ts": 64655952388.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_multiprocessing.SemLock.release"}, {"pid": 15376, "tid": 21648, "ts": 64655952398.299, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_rebuild_partial (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:225)"}, {"pid": 15376, "tid": 21648, "ts": 64655952389.0, "ph": "X", "cat": "fee", "dur": 13.7, "name": "_pickle.loads"}, {"pid": 15376, "tid": 21648, "ts": 64655952355.199, "ph": "X", "cat": "fee", "dur": 47.7, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:98)"}, {"pid": 15376, "tid": 21648, "ts": 64655952406.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "time.perf_counter"}, {"pid": 15376, "tid": 21648, "ts": 64655952406.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "nt.getpid"}, {"pid": 15376, "tid": 21648, "ts": 64655952407.7, "ph": "X", "cat": "fee", "dur": 45.999, "name": "builtins.print"}, {"pid": 15376, "tid": 21648, "ts": 64655952500.1, "ph": "X", "cat": "fee", "dur": 2.4, "name": "_locale._getdefaultlocale"}, {"pid": 15376, "tid": 21648, "ts": 64655952499.3, "ph": "X", "cat": "fee", "dur": 3.699, "name": "getpreferredencoding (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_bootlocale.py:11)"}, {"pid": 15376, "tid": 21648, "ts": 64655952506.1, "ph": "X", "cat": "fee", "dur": 0.6, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\codecs.py:260)"}, {"pid": 15376, "tid": 21648, "ts": 64655952456.5, "ph": "X", "cat": "fee", "dur": 51.9, "name": "io.open"}, {"pid": 15376, "tid": 21648, "ts": 64656122671.499, "ph": "X", "cat": "fee", "dur": 295060.6, "name": "_codecs.charmap_decode"}, {"pid": 15376, "tid": 21648, "ts": 64656122668.3, "ph": "X", "cat": "fee", "dur": 295065.7, "name": "decode (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\encodings\\cp1252.py:22)"}, {"pid": 15376, "tid": 21648, "ts": 64655952510.3, "ph": "X", "cat": "fee", "dur": 873187.8, "name": "_io.TextIOWrapper.read"}, {"pid": 15376, "tid": 21648, "ts": 64656825702.6, "ph": "X", "cat": "fee", "dur": 49.8, "name": "_io.TextIOWrapper.__exit__"}, {"pid": 15376, "tid": 21648, "ts": 64655952455.9, "ph": "X", "cat": "fee", "dur": 873297.299, "name": "readInData (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:47)"}, {"pid": 15376, "tid": 21648, "ts": 64656825764.7, "ph": "X", "cat": "fee", "dur": 3561139.9, "name": "str.split"}, {"pid": 15376, "tid": 21648, "ts": 64660386909.399, "ph": "X", "cat": "fee", "dur": 1600107.4, "name": "str.join"}, {"pid": 15376, "tid": 21648, "ts": 64663410455.399, "ph": "X", "cat": "fee", "dur": 6.5, "name": "builtins.isinstance"}, {"pid": 15376, "tid": 21648, "ts": 64663410475.9, "ph": "X", "cat": "fee", "dur": 0.6, "name": "builtins.isinstance"}, {"pid": 15376, "tid": 21648, "ts": 64663410480.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 15376, "tid": 21648, "ts": 64663410479.4, "ph": "X", "cat": "fee", "dur": 2.1, "name": "isstring (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:595)"}, {"pid": 15376, "tid": 21648, "ts": 64663410485.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 15376, "tid": 21648, "ts": 64663410484.9, "ph": "X", "cat": "fee", "dur": 0.9, "name": "isstring (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:595)"}, {"pid": 15376, "tid": 21648, "ts": 64663410494.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 15376, "tid": 21648, "ts": 64663410499.2, "ph": "X", "cat": "fee", "dur": 5.1, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 15376, "tid": 21648, "ts": 64663410493.6, "ph": "X", "cat": "fee", "dur": 10.8, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:224)"}, {"pid": 15376, "tid": 21648, "ts": 64663410512.5, "ph": "X", "cat": "fee", "dur": 3.3, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:76)"}, {"pid": 15376, "tid": 21648, "ts": 64663410523.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.len"}, {"pid": 15376, "tid": 21648, "ts": 64663410522.4, "ph": "X", "cat": "fee", "dur": 1.199, "name": "tell (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:286)"}, {"pid": 15376, "tid": 21648, "ts": 64663410526.6, "ph": "X", "cat": "fee", "dur": 2.1, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:111)"}, {"pid": 15376, "tid": 21648, "ts": 64663410531.5, "ph": "X", "cat": "fee", "dur": 0.399, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 15376, "tid": 21648, "ts": 64663410531.0, "ph": "X", "cat": "fee", "dur": 1.0, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 15376, "tid": 21648, "ts": 64663410532.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 15376, "tid": 21648, "ts": 64663410532.8, "ph": "X", "cat": "fee", "dur": 0.199, "name": "tell (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:286)"}, {"pid": 15376, "tid": 21648, "ts": 64663410534.6, "ph": "X", "cat": "fee", "dur": 0.6, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 15376, "tid": 21648, "ts": 64663410534.2, "ph": "X", "cat": "fee", "dur": 1.1, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 15376, "tid": 21648, "ts": 64663410535.8, "ph": "X", "cat": "fee", "dur": 0.399, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 15376, "tid": 21648, "ts": 64663410535.6, "ph": "X", "cat": "fee", "dur": 0.699, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 15376, "tid": 21648, "ts": 64663410537.4, "ph": "X", "cat": "fee", "dur": 0.7, "name": "builtins.ord"}, {"pid": 15376, "tid": 21648, "ts": 64663410538.6, "ph": "X", "cat": "fee", "dur": 0.299, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 15376, "tid": 21648, "ts": 64663410538.299, "ph": "X", "cat": "fee", "dur": 0.7, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 15376, "tid": 21648, "ts": 64663410539.4, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 15376, "tid": 21648, "ts": 64663410539.2, "ph": "X", "cat": "fee", "dur": 0.8, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 15376, "tid": 21648, "ts": 64663410540.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.ord"}, {"pid": 15376, "tid": 21648, "ts": 64663410542.2, "ph": "X", "cat": "fee", "dur": 0.6, "name": "list.append"}, {"pid": 15376, "tid": 21648, "ts": 64663410543.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 15376, "tid": 21648, "ts": 64663410543.0, "ph": "X", "cat": "fee", "dur": 0.5, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 15376, "tid": 21648, "ts": 64663410543.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.ord"}, {"pid": 15376, "tid": 21648, "ts": 64663410544.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 15376, "tid": 21648, "ts": 64663410544.1, "ph": "X", "cat": "fee", "dur": 0.52, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 15376, "tid": 21648, "ts": 64663410545.1, "ph": "X", "cat": "fee", "dur": 1.2, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 15376, "tid": 21648, "ts": 64663410544.899, "ph": "X", "cat": "fee", "dur": 1.5, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 15376, "tid": 21648, "ts": 64663410546.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.ord"}, {"pid": 15376, "tid": 21648, "ts": 64663410547.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 15376, "tid": 21648, "ts": 64663410547.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 15376, "tid": 21648, "ts": 64663410547.6, "ph": "X", "cat": "fee", "dur": 0.4, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 15376, "tid": 21648, "ts": 64663410550.699, "ph": "X", "cat": "fee", "dur": 0.9, "name": "dict.get"}, {"pid": 15376, "tid": 21648, "ts": 64663410551.8, "ph": "X", "cat": "fee", "dur": 0.599, "name": "dict.get"}, {"pid": 15376, "tid": 21648, "ts": 64663410549.1, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_class_escape (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:295)"}, {"pid": 15376, "tid": 21648, "ts": 64663410553.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 15376, "tid": 21648, "ts": 64663410554.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 15376, "tid": 21648, "ts": 64663410554.6, "ph": "X", "cat": "fee", "dur": 0.299, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 15376, "tid": 21648, "ts": 64663410554.4, "ph": "X", "cat": "fee", "dur": 0.52, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 15376, "tid": 21648, "ts": 64663410557.799, "ph": "X", "cat": "fee", "dur": 3.0, "name": "type.fromkeys"}, {"pid": 15376, "tid": 21648, "ts": 64663410555.7, "ph": "X", "cat": "fee", "dur": 7.699, "name": "_uniq (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:432)"}, {"pid": 15376, "tid": 21648, "ts": 64663410563.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 15376, "tid": 21648, "ts": 64663410564.2, "ph": "X", "cat": "fee", "dur": 0.799, "name": "list.insert"}, {"pid": 15376, "tid": 21648, "ts": 64663410565.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 15376, "tid": 21648, "ts": 64663410565.5, "ph": "X", "cat": "fee", "dur": 0.319, "name": "append (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:172)"}, {"pid": 15376, "tid": 21648, "ts": 64663410566.4, "ph": "X", "cat": "fee", "dur": 3.2, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 15376, "tid": 21648, "ts": 64663410566.199, "ph": "X", "cat": "fee", "dur": 3.5, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 15376, "tid": 21648, "ts": 64663410570.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 15376, "tid": 21648, "ts": 64663410570.499, "ph": "X", "cat": "fee", "dur": 0.3, "name": "tell (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:286)"}, {"pid": 15376, "tid": 21648, "ts": 64663410574.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 15376, "tid": 21648, "ts": 64663410574.2, "ph": "X", "cat": "fee", "dur": 0.32, "name": "__len__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:160)"}, {"pid": 15376, "tid": 21648, "ts": 64663410577.599, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 15376, "tid": 21648, "ts": 64663410579.8, "ph": "X", "cat": "fee", "dur": 0.599, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:111)"}, {"pid": 15376, "tid": 21648, "ts": 64663410576.4, "ph": "X", "cat": "fee", "dur": 4.1, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 15376, "tid": 21648, "ts": 64663410581.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 15376, "tid": 21648, "ts": 64663410580.899, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__len__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:160)"}, {"pid": 15376, "tid": 21648, "ts": 64663410581.399, "ph": "X", "cat": "fee", "dur": 0.9, "name": "builtins.isinstance"}, {"pid": 15376, "tid": 21648, "ts": 64663410581.3, "ph": "X", "cat": "fee", "dur": 1.099, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 15376, "tid": 21648, "ts": 64663410583.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 15376, "tid": 21648, "ts": 64663410583.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 15376, "tid": 21648, "ts": 64663410584.82, "ph": "X", "cat": "fee", "dur": 0.08, "name": "builtins.isinstance"}, {"pid": 15376, "tid": 21648, "ts": 64663410584.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 15376, "tid": 21648, "ts": 64663410585.4, "ph": "X", "cat": "fee", "dur": 0.6, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 15376, "tid": 21648, "ts": 64663410587.499, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__setitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:168)"}, {"pid": 15376, "tid": 21648, "ts": 64663410588.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 15376, "tid": 21648, "ts": 64663410588.499, "ph": "X", "cat": "fee", "dur": 0.22, "name": "__len__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:160)"}, {"pid": 15376, "tid": 21648, "ts": 64663410588.3, "ph": "X", "cat": "fee", "dur": 0.5, "name": "builtins.len"}, {"pid": 15376, "tid": 21648, "ts": 64663410593.52, "ph": "X", "cat": "fee", "dur": 0.08, "name": "builtins.isinstance"}, {"pid": 15376, "tid": 21648, "ts": 64663410593.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 15376, "tid": 21648, "ts": 64663410524.9, "ph": "X", "cat": "fee", "dur": 69.099, "name": "_parse (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:493)"}, {"pid": 15376, "tid": 21648, "ts": 64663410594.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 15376, "tid": 21648, "ts": 64663410595.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 15376, "tid": 21648, "ts": 64663410595.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 15376, "tid": 21648, "ts": 64663410518.6, "ph": "X", "cat": "fee", "dur": 76.8, "name": "_parse_sub (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:435)"}, {"pid": 15376, "tid": 21648, "ts": 64663410596.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 15376, "tid": 21648, "ts": 64663410596.3, "ph": "X", "cat": "fee", "dur": 2.3, "name": "fix_flags (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:921)"}, {"pid": 15376, "tid": 21648, "ts": 64663410489.399, "ph": "X", "cat": "fee", "dur": 109.7, "name": "parse (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:937)"}, {"pid": 15376, "tid": 21648, "ts": 64663410606.2, "ph": "X", "cat": "fee", "dur": 1.9, "name": "builtins.min"}, {"pid": 15376, "tid": 21648, "ts": 64663410608.3, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.min"}, {"pid": 15376, "tid": 21648, "ts": 64663410604.5, "ph": "X", "cat": "fee", "dur": 4.199, "name": "getwidth (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:174)"}, {"pid": 15376, "tid": 21648, "ts": 64663410610.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.min"}, {"pid": 15376, "tid": 21648, "ts": 64663410610.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.min"}, {"pid": 15376, "tid": 21648, "ts": 64663410602.8, "ph": "X", "cat": "fee", "dur": 7.999, "name": "getwidth (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:174)"}, {"pid": 15376, "tid": 21648, "ts": 64663410614.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_get_iscased (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:453)"}, {"pid": 15376, "tid": 21648, "ts": 64663410612.799, "ph": "X", "cat": "fee", "dur": 2.1, "name": "_get_literal_prefix (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:461)"}, {"pid": 15376, "tid": 21648, "ts": 64663410617.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_get_iscased (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:453)"}, {"pid": 15376, "tid": 21648, "ts": 64663410616.099, "ph": "X", "cat": "fee", "dur": 1.3, "name": "_get_charset_prefix (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:492)"}, {"pid": 15376, "tid": 21648, "ts": 64663410617.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 15376, "tid": 21648, "ts": 64663410618.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 15376, "tid": 21648, "ts": 64663410618.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 15376, "tid": 21648, "ts": 64663410618.399, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 15376, "tid": 21648, "ts": 64663410618.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 15376, "tid": 21648, "ts": 64663410618.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.min"}, {"pid": 15376, "tid": 21648, "ts": 64663410619.02, "ph": "X", "cat": "fee", "dur": 0.18, "name": "list.append"}, {"pid": 15376, "tid": 21648, "ts": 64663410619.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 15376, "tid": 21648, "ts": 64663410601.7, "ph": "X", "cat": "fee", "dur": 17.799, "name": "_compile_info (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:536)"}, {"pid": 15376, "tid": 21648, "ts": 64663410624.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 15376, "tid": 21648, "ts": 64663410624.8, "ph": "X", "cat": "fee", "dur": 0.299, "name": "__len__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:160)"}, {"pid": 15376, "tid": 21648, "ts": 64663410624.499, "ph": "X", "cat": "fee", "dur": 0.62, "name": "builtins.len"}, {"pid": 15376, "tid": 21648, "ts": 64663410625.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 15376, "tid": 21648, "ts": 64663410625.499, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 15376, "tid": 21648, "ts": 64663410624.4, "ph": "X", "cat": "fee", "dur": 1.7, "name": "_simple (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:423)"}, {"pid": 15376, "tid": 21648, "ts": 64663410626.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 15376, "tid": 21648, "ts": 64663410626.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 15376, "tid": 21648, "ts": 64663410626.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 15376, "tid": 21648, "ts": 64663410626.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 15376, "tid": 21648, "ts": 64663410627.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 15376, "tid": 21648, "ts": 64663410634.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 15376, "tid": 21648, "ts": 64663410634.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 15376, "tid": 21648, "ts": 64663410640.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 15376, "tid": 21648, "ts": 64663410644.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 15376, "tid": 21648, "ts": 64663410645.7, "ph": "X", "cat": "fee", "dur": 3.099, "name": "bytearray.find"}, {"pid": 15376, "tid": 21648, "ts": 64663410649.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 15376, "tid": 21648, "ts": 64663410649.1, "ph": "X", "cat": "fee", "dur": 0.199, "name": "bytearray.find"}, {"pid": 15376, "tid": 21648, "ts": 64663410649.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 15376, "tid": 21648, "ts": 64663410649.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "bytearray.find"}, {"pid": 15376, "tid": 21648, "ts": 64663410649.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 15376, "tid": 21648, "ts": 64663410650.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "bytearray.find"}, {"pid": 15376, "tid": 21648, "ts": 64663410650.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 15376, "tid": 21648, "ts": 64663410650.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "bytearray.find"}, {"pid": 15376, "tid": 21648, "ts": 64663410651.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 15376, "tid": 21648, "ts": 64663410651.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 15376, "tid": 21648, "ts": 64663410652.099, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 15376, "tid": 21648, "ts": 64663410652.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 15376, "tid": 21648, "ts": 64663410636.3, "ph": "X", "cat": "fee", "dur": 16.1, "name": "_optimize_charset (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:276)"}, {"pid": 15376, "tid": 21648, "ts": 64663410653.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 15376, "tid": 21648, "ts": 64663410653.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 15376, "tid": 21648, "ts": 64663410653.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 15376, "tid": 21648, "ts": 64663410654.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 15376, "tid": 21648, "ts": 64663410655.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 15376, "tid": 21648, "ts": 64663410655.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 15376, "tid": 21648, "ts": 64663410655.52, "ph": "X", "cat": "fee", "dur": 0.08, "name": "list.append"}, {"pid": 15376, "tid": 21648, "ts": 64663410655.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 15376, "tid": 21648, "ts": 64663410655.899, "ph": "X", "cat": "fee", "dur": 0.3, "name": "list.append"}, {"pid": 15376, "tid": 21648, "ts": 64663410656.22, "ph": "X", "cat": "fee", "dur": 0.079, "name": "list.append"}, {"pid": 15376, "tid": 21648, "ts": 64663410656.32, "ph": "X", "cat": "fee", "dur": 0.079, "name": "list.append"}, {"pid": 15376, "tid": 21648, "ts": 64663410658.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 15376, "tid": 21648, "ts": 64663410658.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 15376, "tid": 21648, "ts": 64663410654.3, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_compile_charset (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:249)"}, {"pid": 15376, "tid": 21648, "ts": 64663410658.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 15376, "tid": 21648, "ts": 64663410659.199, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 15376, "tid": 21648, "ts": 64663410659.1, "ph": "X", "cat": "fee", "dur": 0.599, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 15376, "tid": 21648, "ts": 64663410632.9, "ph": "X", "cat": "fee", "dur": 28.299, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:71)"}, {"pid": 15376, "tid": 21648, "ts": 64663410661.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 15376, "tid": 21648, "ts": 64663410661.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 15376, "tid": 21648, "ts": 64663410621.4, "ph": "X", "cat": "fee", "dur": 40.8, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:71)"}, {"pid": 15376, "tid": 21648, "ts": 64663410662.499, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 15376, "tid": 21648, "ts": 64663410600.6, "ph": "X", "cat": "fee", "dur": 62.0, "name": "_code (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:598)"}, {"pid": 15376, "tid": 21648, "ts": 64663410663.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 15376, "tid": 21648, "ts": 64663410663.6, "ph": "X", "cat": "fee", "dur": 0.32, "name": "groups (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:81)"}, {"pid": 15376, "tid": 21648, "ts": 64663410664.799, "ph": "X", "cat": "fee", "dur": 0.6, "name": "dict.items"}, {"pid": 15376, "tid": 21648, "ts": 64663410666.799, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 15376, "tid": 21648, "ts": 64663410666.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "groups (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:81)"}, {"pid": 15376, "tid": 21648, "ts": 64663410667.799, "ph": "X", "cat": "fee", "dur": 1.8, "name": "_sre.compile"}, {"pid": 15376, "tid": 21648, "ts": 64663410483.6, "ph": "X", "cat": "fee", "dur": 186.099, "name": "compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:759)"}, {"pid": 15376, "tid": 21648, "ts": 64663410675.2, "ph": "X", "cat": "fee", "dur": 0.599, "name": "builtins.isinstance"}, {"pid": 15376, "tid": 21648, "ts": 64663410683.6, "ph": "X", "cat": "fee", "dur": 2.399, "name": "__new__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:670)"}, {"pid": 15376, "tid": 21648, "ts": 64663410678.9, "ph": "X", "cat": "fee", "dur": 7.2, "name": "__call__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:358)"}, {"pid": 15376, "tid": 21648, "ts": 64663410687.3, "ph": "X", "cat": "fee", "dur": 0.299, "name": "__new__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:670)"}, {"pid": 15376, "tid": 21648, "ts": 64663410687.0, "ph": "X", "cat": "fee", "dur": 0.619, "name": "__call__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:358)"}, {"pid": 15376, "tid": 21648, "ts": 64663410674.6, "ph": "X", "cat": "fee", "dur": 13.3, "name": "__and__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:977)"}, {"pid": 15376, "tid": 21648, "ts": 64663410688.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 15376, "tid": 21648, "ts": 64663410452.899, "ph": "X", "cat": "fee", "dur": 236.3, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:289)"}, {"pid": 15376, "tid": 21648, "ts": 64663410690.1, "ph": "X", "cat": "fee", "dur": 5335656.1, "name": "re.Pattern.sub"}, {"pid": 15376, "tid": 21648, "ts": 64663410450.8, "ph": "X", "cat": "fee", "dur": 5335900.9, "name": "sub (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:203)"}, {"pid": 15376, "tid": 21648, "ts": 64668746357.199, "ph": "X", "cat": "fee", "dur": 2714849.8, "name": "str.split"}, {"pid": 15376, "tid": 21648, "ts": 64656825763.599, "ph": "X", "cat": "fee", "dur": 14656852.8, "name": "cleanAndTokenize (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:64)"}, {"pid": 15376, "tid": 21648, "ts": 64671486841.999, "ph": "X", "cat": "fee", "dur": 0.9, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 15376, "tid": 21648, "ts": 64671486854.199, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 15376, "tid": 21648, "ts": 64671486860.1, "ph": "X", "cat": "fee", "dur": 0.399, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 15376, "tid": 21648, "ts": 64671486858.4, "ph": "X", "cat": "fee", "dur": 4.899, "name": "_abc._abc_subclasscheck"}, {"pid": 15376, "tid": 21648, "ts": 64671486857.999, "ph": "X", "cat": "fee", "dur": 5.7, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 15376, "tid": 21648, "ts": 64671486866.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 15376, "tid": 21648, "ts": 64671486864.619, "ph": "X", "cat": "fee", "dur": 2.48, "name": "_abc._abc_subclasscheck"}, {"pid": 15376, "tid": 21648, "ts": 64671486864.599, "ph": "X", "cat": "fee", "dur": 2.52, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 15376, "tid": 21648, "ts": 64671486869.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 15376, "tid": 21648, "ts": 64671486867.42, "ph": "X", "cat": "fee", "dur": 2.379, "name": "_abc._abc_subclasscheck"}, {"pid": 15376, "tid": 21648, "ts": 64671486867.4, "ph": "X", "cat": "fee", "dur": 2.419, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 15376, "tid": 21648, "ts": 64671486871.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 15376, "tid": 21648, "ts": 64671486870.12, "ph": "X", "cat": "fee", "dur": 2.18, "name": "_abc._abc_subclasscheck"}, {"pid": 15376, "tid": 21648, "ts": 64671486870.1, "ph": "X", "cat": "fee", "dur": 2.22, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 15376, "tid": 21648, "ts": 64671486873.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 15376, "tid": 21648, "ts": 64671486872.6, "ph": "X", "cat": "fee", "dur": 1.5, "name": "_abc._abc_subclasscheck"}, {"pid": 15376, "tid": 21648, "ts": 64671486872.5, "ph": "X", "cat": "fee", "dur": 1.699, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 15376, "tid": 21648, "ts": 64671486877.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 15376, "tid": 21648, "ts": 64671486887.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 15376, "tid": 21648, "ts": 64671486889.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 15376, "tid": 21648, "ts": 64671486888.5, "ph": "X", "cat": "fee", "dur": 1.6, "name": "_abc._abc_subclasscheck"}, {"pid": 15376, "tid": 21648, "ts": 64671486888.3, "ph": "X", "cat": "fee", "dur": 1.82, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 15376, "tid": 21648, "ts": 64671486886.2, "ph": "X", "cat": "fee", "dur": 6.4, "name": "_abc._abc_subclasscheck"}, {"pid": 15376, "tid": 21648, "ts": 64671486886.099, "ph": "X", "cat": "fee", "dur": 6.52, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 15376, "tid": 21648, "ts": 64671486874.5, "ph": "X", "cat": "fee", "dur": 18.399, "name": "_abc._abc_subclasscheck"}, {"pid": 15376, "tid": 21648, "ts": 64671486874.4, "ph": "X", "cat": "fee", "dur": 18.52, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 15376, "tid": 21648, "ts": 64671486894.3, "ph": "X", "cat": "fee", "dur": 0.199, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 15376, "tid": 21648, "ts": 64671486893.3, "ph": "X", "cat": "fee", "dur": 1.9, "name": "_abc._abc_subclasscheck"}, {"pid": 15376, "tid": 21648, "ts": 64671486893.199, "ph": "X", "cat": "fee", "dur": 2.02, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 15376, "tid": 21648, "ts": 64671486896.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 15376, "tid": 21648, "ts": 64671486895.499, "ph": "X", "cat": "fee", "dur": 2.6, "name": "_abc._abc_subclasscheck"}, {"pid": 15376, "tid": 21648, "ts": 64671486895.4, "ph": "X", "cat": "fee", "dur": 2.8, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 15376, "tid": 21648, "ts": 64671486852.1, "ph": "X", "cat": "fee", "dur": 46.4, "name": "_abc._abc_subclasscheck"}, {"pid": 15376, "tid": 21648, "ts": 64671486852.0, "ph": "X", "cat": "fee", "dur": 46.52, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 15376, "tid": 21648, "ts": 64671486900.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 15376, "tid": 21648, "ts": 64671486898.819, "ph": "X", "cat": "fee", "dur": 2.68, "name": "_abc._abc_subclasscheck"}, {"pid": 15376, "tid": 21648, "ts": 64671486898.799, "ph": "X", "cat": "fee", "dur": 2.8, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 15376, "tid": 21648, "ts": 64671486837.8, "ph": "X", "cat": "fee", "dur": 64.0, "name": "_abc._abc_subclasscheck"}, {"pid": 15376, "tid": 21648, "ts": 64671486837.5, "ph": "X", "cat": "fee", "dur": 64.4, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 15376, "tid": 21648, "ts": 64671486825.0, "ph": "X", "cat": "fee", "dur": 77.099, "name": "_abc._abc_instancecheck"}, {"pid": 15376, "tid": 21648, "ts": 64671486824.299, "ph": "X", "cat": "fee", "dur": 77.9, "name": "__instancecheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:117)"}, {"pid": 15376, "tid": 21648, "ts": 64671486819.3, "ph": "X", "cat": "fee", "dur": 83.1, "name": "builtins.isinstance"}, {"pid": 15376, "tid": 21648, "ts": 64671486902.9, "ph": "X", "cat": "fee", "dur": 4435388.6, "name": "_collections._count_elements"}, {"pid": 15376, "tid": 21648, "ts": 64671486816.0, "ph": "X", "cat": "fee", "dur": 4435481.8, "name": "update (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:649)"}, {"pid": 15376, "tid": 21648, "ts": 64671486804.4, "ph": "X", "cat": "fee", "dur": 4435501.1, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:581)"}, {"pid": 15376, "tid": 21648, "ts": 64655952455.4, "ph": "X", "cat": "fee", "dur": 19969852.199, "name": "getWordCount (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:83)"}, {"pid": 15376, "tid": 21648, "ts": 64676720124.4, "ph": "X", "cat": "fee", "dur": 2.0, "name": "time.perf_counter"}, {"pid": 15376, "tid": 21648, "ts": 64676720130.399, "ph": "X", "cat": "fee", "dur": 2.1, "name": "nt.getpid"}, {"pid": 15376, "tid": 21648, "ts": 64676720150.0, "ph": "X", "cat": "fee", "dur": 239.5, "name": "builtins.print"}, {"pid": 15376, "tid": 21648, "ts": 64676720396.799, "ph": "X", "cat": "fee", "dur": 0.5, "name": "Counter.values"}, {"pid": 15376, "tid": 21648, "ts": 64676720397.4, "ph": "X", "cat": "fee", "dur": 5107.4, "name": "builtins.sum"}, {"pid": 15376, "tid": 21648, "ts": 64676725507.2, "ph": "X", "cat": "fee", "dur": 0.299, "name": "Counter.items"}, {"pid": 15376, "tid": 21648, "ts": 64676720393.9, "ph": "X", "cat": "fee", "dur": 224280.0, "name": "getWordFrequencies (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:101)"}, {"pid": 15376, "tid": 21648, "ts": 64655952405.6, "ph": "X", "cat": "fee", "dur": 20992270.7, "name": "getWordData (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:123)"}, {"pid": 15376, "tid": 21648, "ts": 64655952405.1, "ph": "X", "cat": "fee", "dur": 20992273.7, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:202)"}, {"pid": 15376, "tid": 21648, "ts": 64655952404.399, "ph": "X", "cat": "fee", "dur": 20992276.7, "name": "_process_chunk (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:193)"}, {"pid": 15376, "tid": 21648, "ts": 64676944696.5, "ph": "X", "cat": "fee", "dur": 1.7, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:145)"}, {"pid": 15376, "tid": 21648, "ts": 64676944736.1, "ph": "X", "cat": "fee", "dur": 1.7, "name": "dict.copy"}, {"pid": 15376, "tid": 21648, "ts": 64676944738.9, "ph": "X", "cat": "fee", "dur": 2.0, "name": "dict.update"}, {"pid": 15376, "tid": 21648, "ts": 64676944712.7, "ph": "X", "cat": "fee", "dur": 28.5, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 15376, "tid": 21648, "ts": 64676944766.9, "ph": "X", "cat": "fee", "dur": 0.799, "name": "mappingproxy.get"}, {"pid": 15376, "tid": 21648, "ts": 64676944768.7, "ph": "X", "cat": "fee", "dur": 2.0, "name": "builtins.hasattr"}, {"pid": 15376, "tid": 21648, "ts": 64676944764.299, "ph": "X", "cat": "fee", "dur": 7.4, "name": "_slotnames (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\copyreg.py:103)"}, {"pid": 15376, "tid": 21648, "ts": 64676944789.7, "ph": "X", "cat": "fee", "dur": 64713.0, "name": "__reduce__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:714)"}, {"pid": 15376, "tid": 21648, "ts": 64676944741.999, "ph": "X", "cat": "fee", "dur": 336293.7, "name": "ForkingPickler.dump"}, {"pid": 15376, "tid": 21648, "ts": 64677307744.7, "ph": "X", "cat": "fee", "dur": 1.899, "name": "_io.BytesIO.getbuffer"}, {"pid": 15376, "tid": 21648, "ts": 64676944707.9, "ph": "X", "cat": "fee", "dur": 363039.2, "name": "dumps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:48)"}, {"pid": 15376, "tid": 21648, "ts": 64677307755.799, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 15376, "tid": 21648, "ts": 64677307763.5, "ph": "X", "cat": "fee", "dur": 1.099, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 15376, "tid": 21648, "ts": 64677307768.8, "ph": "X", "cat": "fee", "dur": 0.5, "name": "builtins.len"}, {"pid": 15376, "tid": 21648, "ts": 64677307776.599, "ph": "X", "cat": "fee", "dur": 4275.0, "name": "_winapi.WriteFile"}, {"pid": 15376, "tid": 21648, "ts": 64677312059.1, "ph": "X", "cat": "fee", "dur": 9581.5, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 15376, "tid": 21648, "ts": 64677321643.9, "ph": "X", "cat": "fee", "dur": 3.5, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 15376, "tid": 21648, "ts": 64677321648.4, "ph": "X", "cat": "fee", "dur": 0.4, "name": "builtins.len"}, {"pid": 15376, "tid": 21648, "ts": 64677307773.1, "ph": "X", "cat": "fee", "dur": 13876.099, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 15376, "tid": 21648, "ts": 64677307754.4, "ph": "X", "cat": "fee", "dur": 13901.6, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 15376, "tid": 21648, "ts": 64676944700.3, "ph": "X", "cat": "fee", "dur": 376957.0, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:370)"}, {"pid": 15376, "tid": 21648, "ts": 64676944690.0, "ph": "X", "cat": "fee", "dur": 377520.0, "name": "_sendback_result (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:205)"}, {"pid": 15376, "tid": 21648, "ts": 64677515138.2, "ph": "X", "cat": "fee", "dur": 1663235.499, "name": "_multiprocessing.SemLock.__enter__"}, {"pid": 15376, "tid": 21648, "ts": 64677515136.8, "ph": "X", "cat": "fee", "dur": 1663238.5, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:94)"}, {"pid": 15376, "tid": 21648, "ts": 64679178379.1, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 15376, "tid": 21648, "ts": 64679178379.999, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 15376, "tid": 21648, "ts": 64679178383.2, "ph": "X", "cat": "fee", "dur": 5.1, "name": "_winapi.ReadFile"}, {"pid": 15376, "tid": 21648, "ts": 64679178389.3, "ph": "X", "cat": "fee", "dur": 1.4, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 15376, "tid": 21648, "ts": 64679178392.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 15376, "tid": 21648, "ts": 64679178392.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_io.BytesIO.write"}, {"pid": 15376, "tid": 21648, "ts": 64679178381.1, "ph": "X", "cat": "fee", "dur": 11.799, "name": "_recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:299)"}, {"pid": 15376, "tid": 21648, "ts": 64679178394.5, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_io.BytesIO.getvalue"}, {"pid": 15376, "tid": 21648, "ts": 64679178378.2, "ph": "X", "cat": "fee", "dur": 16.6, "name": "recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:213)"}, {"pid": 15376, "tid": 21648, "ts": 64679178396.499, "ph": "X", "cat": "fee", "dur": 2.0, "name": "_multiprocessing.SemLock.__exit__"}, {"pid": 15376, "tid": 21648, "ts": 64679178395.8, "ph": "X", "cat": "fee", "dur": 2.799, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:97)"}, {"pid": 15376, "tid": 21648, "ts": 64679178399.6, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_multiprocessing.SemLock.release"}, {"pid": 15376, "tid": 21648, "ts": 64679178400.5, "ph": "X", "cat": "fee", "dur": 1.799, "name": "_pickle.loads"}, {"pid": 15376, "tid": 21648, "ts": 64677515132.4, "ph": "X", "cat": "fee", "dur": 1663270.0, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:98)"}, {"pid": 15376, "tid": 21648, "ts": 64679178404.099, "ph": "X", "cat": "fee", "dur": 0.6, "name": "nt.getpid"}, {"pid": 15376, "tid": 21648, "ts": 64679178413.199, "ph": "X", "cat": "fee", "dur": 0.4, "name": "dict.copy"}, {"pid": 15376, "tid": 21648, "ts": 64679178414.1, "ph": "X", "cat": "fee", "dur": 2.399, "name": "dict.update"}, {"pid": 15376, "tid": 21648, "ts": 64679178408.0, "ph": "X", "cat": "fee", "dur": 8.7, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 15376, "tid": 21648, "ts": 64679178417.1, "ph": "X", "cat": "fee", "dur": 7.3, "name": "ForkingPickler.dump"}, {"pid": 15376, "tid": 21648, "ts": 64679178427.1, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_io.BytesIO.getbuffer"}, {"pid": 15376, "tid": 21648, "ts": 64679178406.7, "ph": "X", "cat": "fee", "dur": 20.899, "name": "dumps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:48)"}, {"pid": 15376, "tid": 21648, "ts": 64679178429.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 15376, "tid": 21648, "ts": 64679178430.5, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 15376, "tid": 21648, "ts": 64679178432.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 15376, "tid": 21648, "ts": 64679178434.8, "ph": "X", "cat": "fee", "dur": 3.599, "name": "_winapi.WriteFile"}, {"pid": 15376, "tid": 21648, "ts": 64679178438.799, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 15376, "tid": 21648, "ts": 64679178439.299, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 15376, "tid": 21648, "ts": 64679178433.9, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 15376, "tid": 21648, "ts": 64679178429.199, "ph": "X", "cat": "fee", "dur": 10.9, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 15376, "tid": 21648, "ts": 64679178405.3, "ph": "X", "cat": "fee", "dur": 35.0, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:370)"}, {"pid": 15376, "tid": 21648, "ts": 64655952354.0, "ph": "X", "cat": "fee", "dur": 23226086.799, "name": "_process_worker (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:215)"}, {"pid": 15376, "tid": 21648, "ts": 64655952352.7, "ph": "X", "cat": "fee", "dur": 23226088.799, "name": "run (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:103)"}, {"pid": 15376, "tid": 21648, "ts": 64679178450.4, "ph": "X", "cat": "fee", "dur": 0.7, "name": "info (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:52)"}, {"pid": 15376, "tid": 21648, "ts": 64679178451.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:48)"}, {"pid": 15376, "tid": 21648, "ts": 64679178457.7, "ph": "X", "cat": "fee", "dur": 0.399, "name": "<lambda> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:284)"}, {"pid": 15376, "tid": 21648, "ts": 64679178457.2, "ph": "X", "cat": "fee", "dur": 3.0, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:291)"}, {"pid": 15376, "tid": 21648, "ts": 64679178461.0, "ph": "X", "cat": "fee", "dur": 0.6, "name": "list.sort"}, {"pid": 15376, "tid": 21648, "ts": 64679178453.499, "ph": "X", "cat": "fee", "dur": 8.4, "name": "_run_finalizers (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:268)"}, {"pid": 15376, "tid": 21648, "ts": 64679178463.3, "ph": "X", "cat": "fee", "dur": 0.8, "name": "current_process (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:37)"}, {"pid": 15376, "tid": 21648, "ts": 64679178465.9, "ph": "X", "cat": "fee", "dur": 1.2, "name": "_cleanup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:61)"}, {"pid": 15376, "tid": 21648, "ts": 64679178465.1, "ph": "X", "cat": "fee", "dur": 2.3, "name": "active_children (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:43)"}, {"pid": 15376, "tid": 21648, "ts": 64679178468.0, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_cleanup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:61)"}, {"pid": 15376, "tid": 21648, "ts": 64679178467.8, "ph": "X", "cat": "fee", "dur": 0.6, "name": "active_children (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:43)"}, {"pid": 15376, "tid": 21648, "ts": 64679178468.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:48)"}, {"pid": 15376, "tid": 21648, "ts": 64679178470.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<lambda> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:282)"}, {"pid": 15376, "tid": 21648, "ts": 64679178469.8, "ph": "X", "cat": "fee", "dur": 0.699, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:291)"}, {"pid": 15376, "tid": 21648, "ts": 64679178470.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.sort"}, {"pid": 15376, "tid": 21648, "ts": 64679178471.3, "ph": "X", "cat": "fee", "dur": 0.199, "name": "dict.get"}, {"pid": 15376, "tid": 21648, "ts": 64679178471.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "sub_debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:44)"}, {"pid": 15376, "tid": 21648, "ts": 64679178475.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 15376, "tid": 21648, "ts": 64679178476.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "sub_debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:44)"}, {"ph": "M", "pid": 19656, "tid": 19656, "name": "process_name", "args": {"name": "MainProcess"}}, {"ph": "M", "pid": 19656, "tid": 5356, "name": "thread_name", "args": {"name": "QueueFeederThread"}}, {"ph": "M", "pid": 19656, "tid": 17528, "name": "thread_name", "args": {"name": "Thread-1"}}, {"ph": "M", "pid": 19656, "tid": 21652, "name": "thread_name", "args": {"name": "MainThread"}}, {"pid": 19656, "tid": 21652, "ts": 64655786951.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655786954.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655786956.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__init__ (<frozen importlib._bootstrap>:152)"}, {"pid": 19656, "tid": 21652, "ts": 64655786957.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_imp.acquire_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655786959.1, "ph": "X", "cat": "fee", "dur": 1.599, "name": "_thread.allocate_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655786961.0, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_thread.allocate_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655786959.0, "ph": "X", "cat": "fee", "dur": 2.599, "name": "__init__ (<frozen importlib._bootstrap>:58)"}, {"pid": 19656, "tid": 21652, "ts": 64655786962.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_imp.release_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655786957.2, "ph": "X", "cat": "fee", "dur": 5.899, "name": "_get_module_lock (<frozen importlib._bootstrap>:166)"}, {"pid": 19656, "tid": 21652, "ts": 64655786963.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.get_ident"}, {"pid": 19656, "tid": 21652, "ts": 64655786964.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655786963.499, "ph": "X", "cat": "fee", "dur": 1.8, "name": "acquire (<frozen importlib._bootstrap>:87)"}, {"pid": 19656, "tid": 21652, "ts": 64655786957.0, "ph": "X", "cat": "fee", "dur": 8.499, "name": "__enter__ (<frozen importlib._bootstrap>:156)"}, {"pid": 19656, "tid": 21652, "ts": 64655786965.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.get"}, {"pid": 19656, "tid": 21652, "ts": 64655786966.5, "ph": "X", "cat": "fee", "dur": 0.299, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655786968.799, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_imp.acquire_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655786968.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__enter__ (<frozen importlib._bootstrap>:874)"}, {"pid": 19656, "tid": 21652, "ts": 64655786969.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "find_spec (<frozen importlib._bootstrap>:736)"}, {"pid": 19656, "tid": 21652, "ts": 64655786969.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_imp.release_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655786969.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__exit__ (<frozen importlib._bootstrap>:878)"}, {"pid": 19656, "tid": 21652, "ts": 64655786970.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_imp.acquire_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655786970.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__enter__ (<frozen importlib._bootstrap>:874)"}, {"pid": 19656, "tid": 21652, "ts": 64655786970.8, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_imp.is_frozen"}, {"pid": 19656, "tid": 21652, "ts": 64655786970.7, "ph": "X", "cat": "fee", "dur": 0.6, "name": "find_spec (<frozen importlib._bootstrap>:811)"}, {"pid": 19656, "tid": 21652, "ts": 64655786971.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_imp.release_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655786971.4, "ph": "X", "cat": "fee", "dur": 0.199, "name": "__exit__ (<frozen importlib._bootstrap>:878)"}, {"pid": 19656, "tid": 21652, "ts": 64655786971.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_imp.acquire_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655786971.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__enter__ (<frozen importlib._bootstrap>:874)"}, {"pid": 19656, "tid": 21652, "ts": 64655786973.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655786973.5, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_path_importer_cache (<frozen importlib._bootstrap_external>:1337)"}, {"pid": 19656, "tid": 21652, "ts": 64655786974.1, "ph": "X", "cat": "fee", "dur": 0.299, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 21652, "ts": 64655786974.7, "ph": "X", "cat": "fee", "dur": 0.199, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655786975.399, "ph": "X", "cat": "fee", "dur": 29.3, "name": "nt.stat"}, {"pid": 19656, "tid": 21652, "ts": 64655786975.2, "ph": "X", "cat": "fee", "dur": 29.699, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 19656, "tid": 21652, "ts": 64655787006.1, "ph": "X", "cat": "fee", "dur": 0.499, "name": "_relax_case (<frozen importlib._bootstrap_external>:64)"}, {"pid": 19656, "tid": 21652, "ts": 64655787007.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655787009.899, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787010.399, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787010.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655787011.899, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787012.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787012.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787012.7, "ph": "X", "cat": "fee", "dur": 0.199, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655787013.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655787013.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655787013.3, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 19656, "tid": 21652, "ts": 64655787016.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655787016.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655787007.7, "ph": "X", "cat": "fee", "dur": 8.999, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 19656, "tid": 21652, "ts": 64655787017.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655787018.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655787019.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787019.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787020.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655787020.799, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787021.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787021.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787021.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655787021.799, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655787022.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655787021.7, "ph": "X", "cat": "fee", "dur": 0.42, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 19656, "tid": 21652, "ts": 64655787022.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655787022.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655787018.499, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 19656, "tid": 21652, "ts": 64655787023.1, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655787023.799, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655787024.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787024.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787025.099, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655787025.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787025.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787026.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787026.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655787026.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655787026.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655787026.4, "ph": "X", "cat": "fee", "dur": 0.419, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 19656, "tid": 21652, "ts": 64655787026.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655787027.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655787023.7, "ph": "X", "cat": "fee", "dur": 3.6, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 19656, "tid": 21652, "ts": 64655787027.599, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655787028.6, "ph": "X", "cat": "fee", "dur": 24.9, "name": "nt.stat"}, {"pid": 19656, "tid": 21652, "ts": 64655787028.5, "ph": "X", "cat": "fee", "dur": 25.1, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 19656, "tid": 21652, "ts": 64655787028.399, "ph": "X", "cat": "fee", "dur": 26.0, "name": "_path_is_mode_type (<frozen importlib._bootstrap_external>:145)"}, {"pid": 19656, "tid": 21652, "ts": 64655787028.2, "ph": "X", "cat": "fee", "dur": 26.499, "name": "_path_isfile (<frozen importlib._bootstrap_external>:154)"}, {"pid": 19656, "tid": 21652, "ts": 64655787055.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__init__ (<frozen importlib._bootstrap_external>:1006)"}, {"pid": 19656, "tid": 21652, "ts": 64655787056.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655787057.6, "ph": "X", "cat": "fee", "dur": 0.599, "name": "__init__ (<frozen importlib._bootstrap>:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655787056.3, "ph": "X", "cat": "fee", "dur": 2.599, "name": "spec_from_file_location (<frozen importlib._bootstrap_external>:696)"}, {"pid": 19656, "tid": 21652, "ts": 64655787055.2, "ph": "X", "cat": "fee", "dur": 3.8, "name": "_get_spec (<frozen importlib._bootstrap_external>:1500)"}, {"pid": 19656, "tid": 21652, "ts": 64655786974.6, "ph": "X", "cat": "fee", "dur": 84.699, "name": "find_spec (<frozen importlib._bootstrap_external>:1505)"}, {"pid": 19656, "tid": 21652, "ts": 64655786972.599, "ph": "X", "cat": "fee", "dur": 87.2, "name": "_get_spec (<frozen importlib._bootstrap_external>:1374)"}, {"pid": 19656, "tid": 21652, "ts": 64655786972.3, "ph": "X", "cat": "fee", "dur": 87.8, "name": "find_spec (<frozen importlib._bootstrap_external>:1406)"}, {"pid": 19656, "tid": 21652, "ts": 64655787060.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_imp.release_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655787060.4, "ph": "X", "cat": "fee", "dur": 1.6, "name": "__exit__ (<frozen importlib._bootstrap>:878)"}, {"pid": 19656, "tid": 21652, "ts": 64655786967.799, "ph": "X", "cat": "fee", "dur": 94.7, "name": "_find_spec (<frozen importlib._bootstrap>:901)"}, {"pid": 19656, "tid": 21652, "ts": 64655787063.099, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 21652, "ts": 64655787063.599, "ph": "X", "cat": "fee", "dur": 1.0, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 21652, "ts": 64655787064.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "create_module (<frozen importlib._bootstrap_external>:841)"}, {"pid": 19656, "tid": 21652, "ts": 64655787065.2, "ph": "X", "cat": "fee", "dur": 0.699, "name": "_new_module (<frozen importlib._bootstrap>:35)"}, {"pid": 19656, "tid": 21652, "ts": 64655787066.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655787066.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655787067.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655787067.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655787067.3, "ph": "X", "cat": "fee", "dur": 0.8, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655787068.5, "ph": "X", "cat": "fee", "dur": 1.199, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655787070.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "has_location (<frozen importlib._bootstrap>:406)"}, {"pid": 19656, "tid": 21652, "ts": 64655787070.199, "ph": "X", "cat": "fee", "dur": 0.6, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655787071.199, "ph": "X", "cat": "fee", "dur": 0.6, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655787072.7, "ph": "X", "cat": "fee", "dur": 0.299, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787073.499, "ph": "X", "cat": "fee", "dur": 0.02, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655787075.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rfind"}, {"pid": 19656, "tid": 21652, "ts": 64655787074.8, "ph": "X", "cat": "fee", "dur": 0.699, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 19656, "tid": 21652, "ts": 64655787075.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rfind"}, {"pid": 19656, "tid": 21652, "ts": 64655787075.6, "ph": "X", "cat": "fee", "dur": 0.4, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 19656, "tid": 21652, "ts": 64655787076.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 19656, "tid": 21652, "ts": 64655787074.4, "ph": "X", "cat": "fee", "dur": 2.0, "name": "builtins.max"}, {"pid": 19656, "tid": 21652, "ts": 64655787073.8, "ph": "X", "cat": "fee", "dur": 3.399, "name": "_path_split (<frozen importlib._bootstrap_external>:127)"}, {"pid": 19656, "tid": 21652, "ts": 64655787077.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655787078.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655787079.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655787081.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787081.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787081.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655787082.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787082.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787083.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787083.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655787083.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787083.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787084.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787084.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655787084.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655787085.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655787085.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655787084.7, "ph": "X", "cat": "fee", "dur": 0.599, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 19656, "tid": 21652, "ts": 64655787085.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655787085.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655787079.7, "ph": "X", "cat": "fee", "dur": 6.199, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 19656, "tid": 21652, "ts": 64655787073.3, "ph": "X", "cat": "fee", "dur": 12.9, "name": "cache_from_source (<frozen importlib._bootstrap_external>:361)"}, {"pid": 19656, "tid": 21652, "ts": 64655787072.3, "ph": "X", "cat": "fee", "dur": 14.199, "name": "_get_cached (<frozen importlib._bootstrap_external>:491)"}, {"pid": 19656, "tid": 21652, "ts": 64655787071.9, "ph": "X", "cat": "fee", "dur": 15.799, "name": "cached (<frozen importlib._bootstrap>:385)"}, {"pid": 19656, "tid": 21652, "ts": 64655787087.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "cached (<frozen importlib._bootstrap>:385)"}, {"pid": 19656, "tid": 21652, "ts": 64655787066.2, "ph": "X", "cat": "fee", "dur": 21.999, "name": "_init_module_attrs (<frozen importlib._bootstrap>:486)"}, {"pid": 19656, "tid": 21652, "ts": 64655787063.5, "ph": "X", "cat": "fee", "dur": 24.9, "name": "module_from_spec (<frozen importlib._bootstrap>:558)"}, {"pid": 19656, "tid": 21652, "ts": 64655787090.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "get_filename (<frozen importlib._bootstrap_external>:1031)"}, {"pid": 19656, "tid": 21652, "ts": 64655787089.6, "ph": "X", "cat": "fee", "dur": 0.899, "name": "_check_name_wrapper (<frozen importlib._bootstrap_external>:523)"}, {"pid": 19656, "tid": 21652, "ts": 64655787091.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655787091.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rfind"}, {"pid": 19656, "tid": 21652, "ts": 64655787091.8, "ph": "X", "cat": "fee", "dur": 0.419, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 19656, "tid": 21652, "ts": 64655787092.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rfind"}, {"pid": 19656, "tid": 21652, "ts": 64655787092.3, "ph": "X", "cat": "fee", "dur": 0.319, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 19656, "tid": 21652, "ts": 64655787092.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 19656, "tid": 21652, "ts": 64655787091.6, "ph": "X", "cat": "fee", "dur": 1.3, "name": "builtins.max"}, {"pid": 19656, "tid": 21652, "ts": 64655787091.3, "ph": "X", "cat": "fee", "dur": 2.0, "name": "_path_split (<frozen importlib._bootstrap_external>:127)"}, {"pid": 19656, "tid": 21652, "ts": 64655787093.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655787094.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655787095.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655787096.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787096.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787096.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655787097.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787097.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787097.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787097.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655787098.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787098.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787098.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787098.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655787099.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655787099.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655787099.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655787099.0, "ph": "X", "cat": "fee", "dur": 0.52, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 19656, "tid": 21652, "ts": 64655787099.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655787099.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655787094.9, "ph": "X", "cat": "fee", "dur": 5.199, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 19656, "tid": 21652, "ts": 64655787090.9, "ph": "X", "cat": "fee", "dur": 9.3, "name": "cache_from_source (<frozen importlib._bootstrap_external>:361)"}, {"pid": 19656, "tid": 21652, "ts": 64655787100.9, "ph": "X", "cat": "fee", "dur": 24.399, "name": "nt.stat"}, {"pid": 19656, "tid": 21652, "ts": 64655787100.8, "ph": "X", "cat": "fee", "dur": 24.7, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 19656, "tid": 21652, "ts": 64655787100.599, "ph": "X", "cat": "fee", "dur": 25.5, "name": "path_stats (<frozen importlib._bootstrap_external>:1077)"}, {"pid": 19656, "tid": 21652, "ts": 64655787127.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655787128.3, "ph": "X", "cat": "fee", "dur": 123.399, "name": "io.open_code"}, {"pid": 19656, "tid": 21652, "ts": 64655787252.8, "ph": "X", "cat": "fee", "dur": 25.1, "name": "_io.BufferedReader.read"}, {"pid": 19656, "tid": 21652, "ts": 64655787278.2, "ph": "X", "cat": "fee", "dur": 7.4, "name": "_io.BufferedReader.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655787127.3, "ph": "X", "cat": "fee", "dur": 158.499, "name": "get_data (<frozen importlib._bootstrap_external>:1036)"}, {"pid": 19656, "tid": 21652, "ts": 64655787288.699, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655787289.219, "ph": "X", "cat": "fee", "dur": 0.08, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655787291.0, "ph": "X", "cat": "fee", "dur": 0.199, "name": "type.from_bytes"}, {"pid": 19656, "tid": 21652, "ts": 64655787289.199, "ph": "X", "cat": "fee", "dur": 2.1, "name": "_unpack_uint32 (<frozen importlib._bootstrap_external>:79)"}, {"pid": 19656, "tid": 21652, "ts": 64655787287.9, "ph": "X", "cat": "fee", "dur": 3.9, "name": "_classify_pyc (<frozen importlib._bootstrap_external>:560)"}, {"pid": 19656, "tid": 21652, "ts": 64655787293.62, "ph": "X", "cat": "fee", "dur": 0.08, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655787293.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "type.from_bytes"}, {"pid": 19656, "tid": 21652, "ts": 64655787293.6, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_unpack_uint32 (<frozen importlib._bootstrap_external>:79)"}, {"pid": 19656, "tid": 21652, "ts": 64655787294.42, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655787294.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "type.from_bytes"}, {"pid": 19656, "tid": 21652, "ts": 64655787294.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_unpack_uint32 (<frozen importlib._bootstrap_external>:79)"}, {"pid": 19656, "tid": 21652, "ts": 64655787293.3, "ph": "X", "cat": "fee", "dur": 1.599, "name": "_validate_timestamp_pyc (<frozen importlib._bootstrap_external>:593)"}, {"pid": 19656, "tid": 21652, "ts": 64655787295.6, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655787296.5, "ph": "X", "cat": "fee", "dur": 80.0, "name": "marshal.loads"}, {"pid": 19656, "tid": 21652, "ts": 64655787376.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655787377.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655787378.1, "ph": "X", "cat": "fee", "dur": 1.3, "name": "_imp._fix_co_filename"}, {"pid": 19656, "tid": 21652, "ts": 64655787296.299, "ph": "X", "cat": "fee", "dur": 83.2, "name": "_compile_bytecode (<frozen importlib._bootstrap_external>:645)"}, {"pid": 19656, "tid": 21652, "ts": 64655787089.3, "ph": "X", "cat": "fee", "dur": 290.399, "name": "get_code (<frozen importlib._bootstrap_external>:916)"}, {"pid": 19656, "tid": 21652, "ts": 64655787428.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655787428.9, "ph": "X", "cat": "fee", "dur": 0.5, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 21652, "ts": 64655787384.1, "ph": "X", "cat": "fee", "dur": 45.4, "name": "_handle_fromlist (<frozen importlib._bootstrap>:1033)"}, {"pid": 19656, "tid": 21652, "ts": 64655787433.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__init__ (<frozen importlib._bootstrap>:152)"}, {"pid": 19656, "tid": 21652, "ts": 64655787434.199, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.acquire_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655787435.9, "ph": "X", "cat": "fee", "dur": 1.4, "name": "_thread.allocate_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655787437.6, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_thread.allocate_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655787435.699, "ph": "X", "cat": "fee", "dur": 2.6, "name": "__init__ (<frozen importlib._bootstrap>:58)"}, {"pid": 19656, "tid": 21652, "ts": 64655787439.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_imp.release_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655787433.899, "ph": "X", "cat": "fee", "dur": 5.7, "name": "_get_module_lock (<frozen importlib._bootstrap>:166)"}, {"pid": 19656, "tid": 21652, "ts": 64655787440.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.get_ident"}, {"pid": 19656, "tid": 21652, "ts": 64655787441.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655787439.9, "ph": "X", "cat": "fee", "dur": 2.0, "name": "acquire (<frozen importlib._bootstrap>:87)"}, {"pid": 19656, "tid": 21652, "ts": 64655787433.7, "ph": "X", "cat": "fee", "dur": 8.299, "name": "__enter__ (<frozen importlib._bootstrap>:156)"}, {"pid": 19656, "tid": 21652, "ts": 64655787442.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "dict.get"}, {"pid": 19656, "tid": 21652, "ts": 64655787443.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655787445.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_imp.acquire_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655787445.3, "ph": "X", "cat": "fee", "dur": 0.299, "name": "__enter__ (<frozen importlib._bootstrap>:874)"}, {"pid": 19656, "tid": 21652, "ts": 64655787446.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "find_spec (<frozen importlib._bootstrap>:736)"}, {"pid": 19656, "tid": 21652, "ts": 64655787446.32, "ph": "X", "cat": "fee", "dur": 0.08, "name": "_imp.release_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655787446.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__exit__ (<frozen importlib._bootstrap>:878)"}, {"pid": 19656, "tid": 21652, "ts": 64655787446.92, "ph": "X", "cat": "fee", "dur": 0.079, "name": "_imp.acquire_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655787446.9, "ph": "X", "cat": "fee", "dur": 0.119, "name": "__enter__ (<frozen importlib._bootstrap>:874)"}, {"pid": 19656, "tid": 21652, "ts": 64655787447.4, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_imp.is_frozen"}, {"pid": 19656, "tid": 21652, "ts": 64655787447.3, "ph": "X", "cat": "fee", "dur": 0.5, "name": "find_spec (<frozen importlib._bootstrap>:811)"}, {"pid": 19656, "tid": 21652, "ts": 64655787448.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_imp.release_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655787447.9, "ph": "X", "cat": "fee", "dur": 0.199, "name": "__exit__ (<frozen importlib._bootstrap>:878)"}, {"pid": 19656, "tid": 21652, "ts": 64655787448.42, "ph": "X", "cat": "fee", "dur": 0.079, "name": "_imp.acquire_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655787448.4, "ph": "X", "cat": "fee", "dur": 0.119, "name": "__enter__ (<frozen importlib._bootstrap>:874)"}, {"pid": 19656, "tid": 21652, "ts": 64655787449.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655787451.3, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_path_importer_cache (<frozen importlib._bootstrap_external>:1337)"}, {"pid": 19656, "tid": 21652, "ts": 64655787451.899, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 21652, "ts": 64655787452.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655787453.4, "ph": "X", "cat": "fee", "dur": 29.5, "name": "nt.stat"}, {"pid": 19656, "tid": 21652, "ts": 64655787453.199, "ph": "X", "cat": "fee", "dur": 30.0, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 19656, "tid": 21652, "ts": 64655787484.5, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_relax_case (<frozen importlib._bootstrap_external>:64)"}, {"pid": 19656, "tid": 21652, "ts": 64655787486.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655787488.399, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787489.0, "ph": "X", "cat": "fee", "dur": 0.199, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787489.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655787490.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787490.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787491.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787491.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655787492.199, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655787492.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655787492.0, "ph": "X", "cat": "fee", "dur": 0.599, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 19656, "tid": 21652, "ts": 64655787492.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655787493.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655787486.0, "ph": "X", "cat": "fee", "dur": 7.499, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 19656, "tid": 21652, "ts": 64655787494.3, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655787495.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655787496.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787496.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787496.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655787497.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787497.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787497.799, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787498.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655787498.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655787498.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655787498.299, "ph": "X", "cat": "fee", "dur": 0.42, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 19656, "tid": 21652, "ts": 64655787498.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655787499.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655787495.1, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 19656, "tid": 21652, "ts": 64655787499.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655787500.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655787501.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787501.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787501.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655787502.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787502.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787502.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787502.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655787503.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655787503.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655787503.0, "ph": "X", "cat": "fee", "dur": 1.5, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 19656, "tid": 21652, "ts": 64655787504.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655787504.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655787500.3, "ph": "X", "cat": "fee", "dur": 4.8, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 19656, "tid": 21652, "ts": 64655787505.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655787506.399, "ph": "X", "cat": "fee", "dur": 25.5, "name": "nt.stat"}, {"pid": 19656, "tid": 21652, "ts": 64655787506.3, "ph": "X", "cat": "fee", "dur": 25.699, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 19656, "tid": 21652, "ts": 64655787506.1, "ph": "X", "cat": "fee", "dur": 26.6, "name": "_path_is_mode_type (<frozen importlib._bootstrap_external>:145)"}, {"pid": 19656, "tid": 21652, "ts": 64655787506.0, "ph": "X", "cat": "fee", "dur": 27.1, "name": "_path_isfile (<frozen importlib._bootstrap_external>:154)"}, {"pid": 19656, "tid": 21652, "ts": 64655787534.0, "ph": "X", "cat": "fee", "dur": 0.299, "name": "__init__ (<frozen importlib._bootstrap_external>:1006)"}, {"pid": 19656, "tid": 21652, "ts": 64655787534.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655787535.799, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__init__ (<frozen importlib._bootstrap>:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655787534.7, "ph": "X", "cat": "fee", "dur": 2.399, "name": "spec_from_file_location (<frozen importlib._bootstrap_external>:696)"}, {"pid": 19656, "tid": 21652, "ts": 64655787533.6, "ph": "X", "cat": "fee", "dur": 3.699, "name": "_get_spec (<frozen importlib._bootstrap_external>:1500)"}, {"pid": 19656, "tid": 21652, "ts": 64655787452.5, "ph": "X", "cat": "fee", "dur": 84.999, "name": "find_spec (<frozen importlib._bootstrap_external>:1505)"}, {"pid": 19656, "tid": 21652, "ts": 64655787449.2, "ph": "X", "cat": "fee", "dur": 88.799, "name": "_get_spec (<frozen importlib._bootstrap_external>:1374)"}, {"pid": 19656, "tid": 21652, "ts": 64655787448.8, "ph": "X", "cat": "fee", "dur": 89.5, "name": "find_spec (<frozen importlib._bootstrap_external>:1406)"}, {"pid": 19656, "tid": 21652, "ts": 64655787538.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.release_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655787538.599, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__exit__ (<frozen importlib._bootstrap>:878)"}, {"pid": 19656, "tid": 21652, "ts": 64655787444.5, "ph": "X", "cat": "fee", "dur": 95.0, "name": "_find_spec (<frozen importlib._bootstrap>:901)"}, {"pid": 19656, "tid": 21652, "ts": 64655787540.099, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 21652, "ts": 64655787540.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 21652, "ts": 64655787541.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "create_module (<frozen importlib._bootstrap_external>:841)"}, {"pid": 19656, "tid": 21652, "ts": 64655787541.3, "ph": "X", "cat": "fee", "dur": 0.599, "name": "_new_module (<frozen importlib._bootstrap>:35)"}, {"pid": 19656, "tid": 21652, "ts": 64655787542.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655787542.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655787543.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655787543.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655787543.3, "ph": "X", "cat": "fee", "dur": 0.7, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655787544.4, "ph": "X", "cat": "fee", "dur": 1.299, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655787546.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "has_location (<frozen importlib._bootstrap>:406)"}, {"pid": 19656, "tid": 21652, "ts": 64655787546.3, "ph": "X", "cat": "fee", "dur": 0.7, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655787547.3, "ph": "X", "cat": "fee", "dur": 0.699, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655787548.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787549.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655787551.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rfind"}, {"pid": 19656, "tid": 21652, "ts": 64655787550.9, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 19656, "tid": 21652, "ts": 64655787551.799, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rfind"}, {"pid": 19656, "tid": 21652, "ts": 64655787551.62, "ph": "X", "cat": "fee", "dur": 0.399, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 19656, "tid": 21652, "ts": 64655787552.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 19656, "tid": 21652, "ts": 64655787550.6, "ph": "X", "cat": "fee", "dur": 1.9, "name": "builtins.max"}, {"pid": 19656, "tid": 21652, "ts": 64655787549.999, "ph": "X", "cat": "fee", "dur": 3.2, "name": "_path_split (<frozen importlib._bootstrap_external>:127)"}, {"pid": 19656, "tid": 21652, "ts": 64655787553.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655787554.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655787555.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655787557.4, "ph": "X", "cat": "fee", "dur": 0.199, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787557.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787559.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655787559.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787560.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787560.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787561.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655787561.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787562.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787562.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787562.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655787563.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655787563.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655787563.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655787562.9, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 19656, "tid": 21652, "ts": 64655787563.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655787564.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655787555.7, "ph": "X", "cat": "fee", "dur": 8.6, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 19656, "tid": 21652, "ts": 64655787549.499, "ph": "X", "cat": "fee", "dur": 15.0, "name": "cache_from_source (<frozen importlib._bootstrap_external>:361)"}, {"pid": 19656, "tid": 21652, "ts": 64655787548.6, "ph": "X", "cat": "fee", "dur": 16.2, "name": "_get_cached (<frozen importlib._bootstrap_external>:491)"}, {"pid": 19656, "tid": 21652, "ts": 64655787548.2, "ph": "X", "cat": "fee", "dur": 16.9, "name": "cached (<frozen importlib._bootstrap>:385)"}, {"pid": 19656, "tid": 21652, "ts": 64655787565.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "cached (<frozen importlib._bootstrap>:385)"}, {"pid": 19656, "tid": 21652, "ts": 64655787542.2, "ph": "X", "cat": "fee", "dur": 23.399, "name": "_init_module_attrs (<frozen importlib._bootstrap>:486)"}, {"pid": 19656, "tid": 21652, "ts": 64655787540.6, "ph": "X", "cat": "fee", "dur": 25.2, "name": "module_from_spec (<frozen importlib._bootstrap>:558)"}, {"pid": 19656, "tid": 21652, "ts": 64655787567.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "get_filename (<frozen importlib._bootstrap_external>:1031)"}, {"pid": 19656, "tid": 21652, "ts": 64655787567.1, "ph": "X", "cat": "fee", "dur": 0.899, "name": "_check_name_wrapper (<frozen importlib._bootstrap_external>:523)"}, {"pid": 19656, "tid": 21652, "ts": 64655787568.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655787569.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rfind"}, {"pid": 19656, "tid": 21652, "ts": 64655787569.3, "ph": "X", "cat": "fee", "dur": 0.399, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 19656, "tid": 21652, "ts": 64655787569.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rfind"}, {"pid": 19656, "tid": 21652, "ts": 64655787569.799, "ph": "X", "cat": "fee", "dur": 0.3, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 19656, "tid": 21652, "ts": 64655787570.12, "ph": "X", "cat": "fee", "dur": 0.079, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 19656, "tid": 21652, "ts": 64655787569.1, "ph": "X", "cat": "fee", "dur": 1.3, "name": "builtins.max"}, {"pid": 19656, "tid": 21652, "ts": 64655787568.7, "ph": "X", "cat": "fee", "dur": 2.099, "name": "_path_split (<frozen importlib._bootstrap_external>:127)"}, {"pid": 19656, "tid": 21652, "ts": 64655787571.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655787571.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655787572.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655787573.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787574.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787574.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655787574.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787574.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787575.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787575.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655787575.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787575.92, "ph": "X", "cat": "fee", "dur": 0.079, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787576.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787576.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655787577.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655787577.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655787578.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655787577.5, "ph": "X", "cat": "fee", "dur": 0.6, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 19656, "tid": 21652, "ts": 64655787578.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655787578.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655787572.6, "ph": "X", "cat": "fee", "dur": 5.999, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 19656, "tid": 21652, "ts": 64655787568.3, "ph": "X", "cat": "fee", "dur": 10.499, "name": "cache_from_source (<frozen importlib._bootstrap_external>:361)"}, {"pid": 19656, "tid": 21652, "ts": 64655787579.5, "ph": "X", "cat": "fee", "dur": 24.6, "name": "nt.stat"}, {"pid": 19656, "tid": 21652, "ts": 64655787579.3, "ph": "X", "cat": "fee", "dur": 25.0, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 19656, "tid": 21652, "ts": 64655787579.2, "ph": "X", "cat": "fee", "dur": 25.699, "name": "path_stats (<frozen importlib._bootstrap_external>:1077)"}, {"pid": 19656, "tid": 21652, "ts": 64655787606.299, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655787607.0, "ph": "X", "cat": "fee", "dur": 117.1, "name": "io.open_code"}, {"pid": 19656, "tid": 21652, "ts": 64655787725.3, "ph": "X", "cat": "fee", "dur": 25.1, "name": "_io.BufferedReader.read"}, {"pid": 19656, "tid": 21652, "ts": 64655787750.7, "ph": "X", "cat": "fee", "dur": 7.3, "name": "_io.BufferedReader.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655787606.1, "ph": "X", "cat": "fee", "dur": 152.099, "name": "get_data (<frozen importlib._bootstrap_external>:1036)"}, {"pid": 19656, "tid": 21652, "ts": 64655787761.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655787761.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655787762.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "type.from_bytes"}, {"pid": 19656, "tid": 21652, "ts": 64655787761.8, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_unpack_uint32 (<frozen importlib._bootstrap_external>:79)"}, {"pid": 19656, "tid": 21652, "ts": 64655787760.6, "ph": "X", "cat": "fee", "dur": 2.5, "name": "_classify_pyc (<frozen importlib._bootstrap_external>:560)"}, {"pid": 19656, "tid": 21652, "ts": 64655787765.199, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655787765.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "type.from_bytes"}, {"pid": 19656, "tid": 21652, "ts": 64655787765.1, "ph": "X", "cat": "fee", "dur": 0.42, "name": "_unpack_uint32 (<frozen importlib._bootstrap_external>:79)"}, {"pid": 19656, "tid": 21652, "ts": 64655787766.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655787766.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "type.from_bytes"}, {"pid": 19656, "tid": 21652, "ts": 64655787765.9, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_unpack_uint32 (<frozen importlib._bootstrap_external>:79)"}, {"pid": 19656, "tid": 21652, "ts": 64655787765.0, "ph": "X", "cat": "fee", "dur": 1.5, "name": "_validate_timestamp_pyc (<frozen importlib._bootstrap_external>:593)"}, {"pid": 19656, "tid": 21652, "ts": 64655787766.999, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655787767.9, "ph": "X", "cat": "fee", "dur": 112.099, "name": "marshal.loads"}, {"pid": 19656, "tid": 21652, "ts": 64655787880.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655787881.0, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655787881.6, "ph": "X", "cat": "fee", "dur": 2.099, "name": "_imp._fix_co_filename"}, {"pid": 19656, "tid": 21652, "ts": 64655787767.8, "ph": "X", "cat": "fee", "dur": 115.999, "name": "_compile_bytecode (<frozen importlib._bootstrap_external>:645)"}, {"pid": 19656, "tid": 21652, "ts": 64655787566.9, "ph": "X", "cat": "fee", "dur": 317.1, "name": "get_code (<frozen importlib._bootstrap_external>:916)"}, {"pid": 19656, "tid": 21652, "ts": 64655787893.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__init__ (<frozen importlib._bootstrap>:152)"}, {"pid": 19656, "tid": 21652, "ts": 64655787894.199, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.acquire_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655787895.9, "ph": "X", "cat": "fee", "dur": 1.4, "name": "_thread.allocate_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655787897.499, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_thread.allocate_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655787895.7, "ph": "X", "cat": "fee", "dur": 2.7, "name": "__init__ (<frozen importlib._bootstrap>:58)"}, {"pid": 19656, "tid": 21652, "ts": 64655787899.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.release_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655787893.9, "ph": "X", "cat": "fee", "dur": 5.7, "name": "_get_module_lock (<frozen importlib._bootstrap>:166)"}, {"pid": 19656, "tid": 21652, "ts": 64655787900.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.get_ident"}, {"pid": 19656, "tid": 21652, "ts": 64655787901.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655787900.0, "ph": "X", "cat": "fee", "dur": 1.799, "name": "acquire (<frozen importlib._bootstrap>:87)"}, {"pid": 19656, "tid": 21652, "ts": 64655787893.8, "ph": "X", "cat": "fee", "dur": 8.1, "name": "__enter__ (<frozen importlib._bootstrap>:156)"}, {"pid": 19656, "tid": 21652, "ts": 64655787902.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.get"}, {"pid": 19656, "tid": 21652, "ts": 64655787904.099, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655787905.899, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_imp.acquire_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655787905.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__enter__ (<frozen importlib._bootstrap>:874)"}, {"pid": 19656, "tid": 21652, "ts": 64655787906.8, "ph": "X", "cat": "fee", "dur": 1.5, "name": "_imp.is_builtin"}, {"pid": 19656, "tid": 21652, "ts": 64655787906.5, "ph": "X", "cat": "fee", "dur": 1.899, "name": "find_spec (<frozen importlib._bootstrap>:736)"}, {"pid": 19656, "tid": 21652, "ts": 64655787908.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_imp.release_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655787908.6, "ph": "X", "cat": "fee", "dur": 0.22, "name": "__exit__ (<frozen importlib._bootstrap>:878)"}, {"pid": 19656, "tid": 21652, "ts": 64655787909.399, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_imp.acquire_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655787909.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__enter__ (<frozen importlib._bootstrap>:874)"}, {"pid": 19656, "tid": 21652, "ts": 64655787909.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_imp.is_frozen"}, {"pid": 19656, "tid": 21652, "ts": 64655787909.699, "ph": "X", "cat": "fee", "dur": 0.4, "name": "find_spec (<frozen importlib._bootstrap>:811)"}, {"pid": 19656, "tid": 21652, "ts": 64655787910.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_imp.release_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655787910.199, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__exit__ (<frozen importlib._bootstrap>:878)"}, {"pid": 19656, "tid": 21652, "ts": 64655787910.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.acquire_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655787910.6, "ph": "X", "cat": "fee", "dur": 0.22, "name": "__enter__ (<frozen importlib._bootstrap>:874)"}, {"pid": 19656, "tid": 21652, "ts": 64655787911.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655787912.699, "ph": "X", "cat": "fee", "dur": 1.1, "name": "nt.getcwd"}, {"pid": 19656, "tid": 21652, "ts": 64655787916.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655787916.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655787917.299, "ph": "X", "cat": "fee", "dur": 31.2, "name": "nt.stat"}, {"pid": 19656, "tid": 21652, "ts": 64655787917.2, "ph": "X", "cat": "fee", "dur": 31.499, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 19656, "tid": 21652, "ts": 64655787916.1, "ph": "X", "cat": "fee", "dur": 35.1, "name": "__init__ (<frozen zipimport>:63)"}, {"pid": 19656, "tid": 21652, "ts": 64655787954.2, "ph": "X", "cat": "fee", "dur": 22.1, "name": "nt.stat"}, {"pid": 19656, "tid": 21652, "ts": 64655787954.0, "ph": "X", "cat": "fee", "dur": 22.5, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 19656, "tid": 21652, "ts": 64655787953.9, "ph": "X", "cat": "fee", "dur": 23.199, "name": "_path_is_mode_type (<frozen importlib._bootstrap_external>:145)"}, {"pid": 19656, "tid": 21652, "ts": 64655787953.7, "ph": "X", "cat": "fee", "dur": 23.7, "name": "_path_isdir (<frozen importlib._bootstrap_external>:159)"}, {"pid": 19656, "tid": 21652, "ts": 64655787979.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (<frozen importlib._bootstrap_external>:1472)"}, {"pid": 19656, "tid": 21652, "ts": 64655787980.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (<frozen importlib._bootstrap_external>:1472)"}, {"pid": 19656, "tid": 21652, "ts": 64655787980.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "<genexpr> (<frozen importlib._bootstrap_external>:1472)"}, {"pid": 19656, "tid": 21652, "ts": 64655787979.6, "ph": "X", "cat": "fee", "dur": 1.4, "name": "list.extend"}, {"pid": 19656, "tid": 21652, "ts": 64655787981.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (<frozen importlib._bootstrap_external>:1472)"}, {"pid": 19656, "tid": 21652, "ts": 64655787981.72, "ph": "X", "cat": "fee", "dur": 0.079, "name": "<genexpr> (<frozen importlib._bootstrap_external>:1472)"}, {"pid": 19656, "tid": 21652, "ts": 64655787981.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (<frozen importlib._bootstrap_external>:1472)"}, {"pid": 19656, "tid": 21652, "ts": 64655787981.5, "ph": "X", "cat": "fee", "dur": 0.7, "name": "list.extend"}, {"pid": 19656, "tid": 21652, "ts": 64655787982.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "<genexpr> (<frozen importlib._bootstrap_external>:1472)"}, {"pid": 19656, "tid": 21652, "ts": 64655787982.699, "ph": "X", "cat": "fee", "dur": 0.02, "name": "<genexpr> (<frozen importlib._bootstrap_external>:1472)"}, {"pid": 19656, "tid": 21652, "ts": 64655787982.5, "ph": "X", "cat": "fee", "dur": 0.4, "name": "list.extend"}, {"pid": 19656, "tid": 21652, "ts": 64655787983.699, "ph": "X", "cat": "fee", "dur": 1.1, "name": "nt._path_splitroot"}, {"pid": 19656, "tid": 21652, "ts": 64655787985.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655787985.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655787985.699, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787986.199, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655787983.5, "ph": "X", "cat": "fee", "dur": 3.019, "name": "_path_isabs (<frozen importlib._bootstrap_external>:167)"}, {"pid": 19656, "tid": 21652, "ts": 64655787978.599, "ph": "X", "cat": "fee", "dur": 9.0, "name": "__init__ (<frozen importlib._bootstrap_external>:1466)"}, {"pid": 19656, "tid": 21652, "ts": 64655787953.4, "ph": "X", "cat": "fee", "dur": 34.5, "name": "path_hook_for_FileFinder (<frozen importlib._bootstrap_external>:1597)"}, {"pid": 19656, "tid": 21652, "ts": 64655787914.999, "ph": "X", "cat": "fee", "dur": 73.3, "name": "_path_hooks (<frozen importlib._bootstrap_external>:1324)"}, {"pid": 19656, "tid": 21652, "ts": 64655787912.4, "ph": "X", "cat": "fee", "dur": 77.7, "name": "_path_importer_cache (<frozen importlib._bootstrap_external>:1337)"}, {"pid": 19656, "tid": 21652, "ts": 64655787990.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 21652, "ts": 64655787991.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655787991.7, "ph": "X", "cat": "fee", "dur": 21.899, "name": "nt.stat"}, {"pid": 19656, "tid": 21652, "ts": 64655787991.6, "ph": "X", "cat": "fee", "dur": 22.199, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 19656, "tid": 21652, "ts": 64655788015.2, "ph": "X", "cat": "fee", "dur": 52.2, "name": "nt.listdir"}, {"pid": 19656, "tid": 21652, "ts": 64655788068.099, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788069.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.partition"}, {"pid": 19656, "tid": 21652, "ts": 64655788069.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "set.add"}, {"pid": 19656, "tid": 21652, "ts": 64655788070.099, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.partition"}, {"pid": 19656, "tid": 21652, "ts": 64655788070.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655788071.0, "ph": "X", "cat": "fee", "dur": 0.899, "name": "str.format"}, {"pid": 19656, "tid": 21652, "ts": 64655788072.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "set.add"}, {"pid": 19656, "tid": 21652, "ts": 64655788072.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.partition"}, {"pid": 19656, "tid": 21652, "ts": 64655788072.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655788072.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.format"}, {"pid": 19656, "tid": 21652, "ts": 64655788073.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "set.add"}, {"pid": 19656, "tid": 21652, "ts": 64655788073.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.partition"}, {"pid": 19656, "tid": 21652, "ts": 64655788073.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655788073.62, "ph": "X", "cat": "fee", "dur": 0.18, "name": "str.format"}, {"pid": 19656, "tid": 21652, "ts": 64655788073.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "set.add"}, {"pid": 19656, "tid": 21652, "ts": 64655788074.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.partition"}, {"pid": 19656, "tid": 21652, "ts": 64655788074.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655788074.42, "ph": "X", "cat": "fee", "dur": 0.18, "name": "str.format"}, {"pid": 19656, "tid": 21652, "ts": 64655788074.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "set.add"}, {"pid": 19656, "tid": 21652, "ts": 64655788074.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.partition"}, {"pid": 19656, "tid": 21652, "ts": 64655788075.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655788075.219, "ph": "X", "cat": "fee", "dur": 0.18, "name": "str.format"}, {"pid": 19656, "tid": 21652, "ts": 64655788075.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "set.add"}, {"pid": 19656, "tid": 21652, "ts": 64655788075.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.partition"}, {"pid": 19656, "tid": 21652, "ts": 64655788075.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "set.add"}, {"pid": 19656, "tid": 21652, "ts": 64655788076.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.partition"}, {"pid": 19656, "tid": 21652, "ts": 64655788076.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655788076.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.format"}, {"pid": 19656, "tid": 21652, "ts": 64655788076.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "set.add"}, {"pid": 19656, "tid": 21652, "ts": 64655788076.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.partition"}, {"pid": 19656, "tid": 21652, "ts": 64655788077.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655788077.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.format"}, {"pid": 19656, "tid": 21652, "ts": 64655788077.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "set.add"}, {"pid": 19656, "tid": 21652, "ts": 64655788077.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.partition"}, {"pid": 19656, "tid": 21652, "ts": 64655788077.999, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655788078.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.format"}, {"pid": 19656, "tid": 21652, "ts": 64655788078.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "set.add"}, {"pid": 19656, "tid": 21652, "ts": 64655788078.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.partition"}, {"pid": 19656, "tid": 21652, "ts": 64655788078.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655788078.92, "ph": "X", "cat": "fee", "dur": 0.18, "name": "str.format"}, {"pid": 19656, "tid": 21652, "ts": 64655788079.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "set.add"}, {"pid": 19656, "tid": 21652, "ts": 64655788080.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.partition"}, {"pid": 19656, "tid": 21652, "ts": 64655788080.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655788080.999, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.format"}, {"pid": 19656, "tid": 21652, "ts": 64655788081.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "set.add"}, {"pid": 19656, "tid": 21652, "ts": 64655788081.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.partition"}, {"pid": 19656, "tid": 21652, "ts": 64655788081.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655788081.819, "ph": "X", "cat": "fee", "dur": 0.18, "name": "str.format"}, {"pid": 19656, "tid": 21652, "ts": 64655788082.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "set.add"}, {"pid": 19656, "tid": 21652, "ts": 64655788082.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.partition"}, {"pid": 19656, "tid": 21652, "ts": 64655788082.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655788082.6, "ph": "X", "cat": "fee", "dur": 0.199, "name": "str.format"}, {"pid": 19656, "tid": 21652, "ts": 64655788082.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "set.add"}, {"pid": 19656, "tid": 21652, "ts": 64655788083.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.partition"}, {"pid": 19656, "tid": 21652, "ts": 64655788083.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655788083.319, "ph": "X", "cat": "fee", "dur": 0.18, "name": "str.format"}, {"pid": 19656, "tid": 21652, "ts": 64655788083.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "set.add"}, {"pid": 19656, "tid": 21652, "ts": 64655788083.799, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.partition"}, {"pid": 19656, "tid": 21652, "ts": 64655788084.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655788084.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.format"}, {"pid": 19656, "tid": 21652, "ts": 64655788084.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "set.add"}, {"pid": 19656, "tid": 21652, "ts": 64655788084.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.partition"}, {"pid": 19656, "tid": 21652, "ts": 64655788084.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655788084.799, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.format"}, {"pid": 19656, "tid": 21652, "ts": 64655788085.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "set.add"}, {"pid": 19656, "tid": 21652, "ts": 64655788085.22, "ph": "X", "cat": "fee", "dur": 0.08, "name": "str.partition"}, {"pid": 19656, "tid": 21652, "ts": 64655788085.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "set.add"}, {"pid": 19656, "tid": 21652, "ts": 64655788085.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.partition"}, {"pid": 19656, "tid": 21652, "ts": 64655788085.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655788086.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.format"}, {"pid": 19656, "tid": 21652, "ts": 64655788086.3, "ph": "X", "cat": "fee", "dur": 0.6, "name": "set.add"}, {"pid": 19656, "tid": 21652, "ts": 64655788087.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.partition"}, {"pid": 19656, "tid": 21652, "ts": 64655788087.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "set.add"}, {"pid": 19656, "tid": 21652, "ts": 64655788087.8, "ph": "X", "cat": "fee", "dur": 0.299, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788088.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655788089.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655788089.399, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655788089.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655788089.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655788090.1, "ph": "X", "cat": "fee", "dur": 0.299, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655788090.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655788090.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655788090.899, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655788091.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655788091.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655788091.399, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655788091.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655788092.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655788092.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655788093.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655788093.199, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655788093.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655788093.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655788094.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655788088.599, "ph": "X", "cat": "fee", "dur": 5.7, "name": "<setcomp> (<frozen importlib._bootstrap_external>:1585)"}, {"pid": 19656, "tid": 21652, "ts": 64655788014.9, "ph": "X", "cat": "fee", "dur": 79.799, "name": "_fill_cache (<frozen importlib._bootstrap_external>:1556)"}, {"pid": 19656, "tid": 21652, "ts": 64655788095.3, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_relax_case (<frozen importlib._bootstrap_external>:64)"}, {"pid": 19656, "tid": 21652, "ts": 64655788096.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655788098.8, "ph": "X", "cat": "fee", "dur": 0.199, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788099.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788099.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655788100.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788100.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788100.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788101.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655788101.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655788102.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655788101.7, "ph": "X", "cat": "fee", "dur": 0.599, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 19656, "tid": 21652, "ts": 64655788102.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655788102.799, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655788096.7, "ph": "X", "cat": "fee", "dur": 6.4, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 19656, "tid": 21652, "ts": 64655788104.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655788104.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655788105.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788106.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788106.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655788106.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788107.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788107.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788107.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655788107.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655788108.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655788107.8, "ph": "X", "cat": "fee", "dur": 0.42, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 19656, "tid": 21652, "ts": 64655788108.399, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655788108.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655788104.8, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 19656, "tid": 21652, "ts": 64655788109.2, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655788109.899, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655788110.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788110.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788111.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655788111.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788111.82, "ph": "X", "cat": "fee", "dur": 0.18, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788112.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788113.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655788113.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655788113.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655788113.3, "ph": "X", "cat": "fee", "dur": 0.399, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 19656, "tid": 21652, "ts": 64655788113.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655788114.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655788109.8, "ph": "X", "cat": "fee", "dur": 4.399, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 19656, "tid": 21652, "ts": 64655788114.499, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655788115.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655788115.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788115.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788116.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655788116.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788116.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788117.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788117.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655788117.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655788117.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655788117.6, "ph": "X", "cat": "fee", "dur": 0.32, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 19656, "tid": 21652, "ts": 64655788118.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655788118.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655788114.999, "ph": "X", "cat": "fee", "dur": 3.4, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 19656, "tid": 21652, "ts": 64655788118.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655788119.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655788119.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788120.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788120.299, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655788120.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788120.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788121.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788121.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655788121.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655788121.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655788121.5, "ph": "X", "cat": "fee", "dur": 0.4, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 19656, "tid": 21652, "ts": 64655788122.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655788122.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655788119.1, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 19656, "tid": 21652, "ts": 64655788122.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655787990.9, "ph": "X", "cat": "fee", "dur": 132.1, "name": "find_spec (<frozen importlib._bootstrap_external>:1505)"}, {"pid": 19656, "tid": 21652, "ts": 64655788123.599, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655788124.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_path_importer_cache (<frozen importlib._bootstrap_external>:1337)"}, {"pid": 19656, "tid": 21652, "ts": 64655788124.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 21652, "ts": 64655788125.5, "ph": "X", "cat": "fee", "dur": 0.5, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 21652, "ts": 64655788127.2, "ph": "X", "cat": "fee", "dur": 0.199, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655788126.899, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_get_module_path (<frozen zipimport>:308)"}, {"pid": 19656, "tid": 21652, "ts": 64655788126.6, "ph": "X", "cat": "fee", "dur": 2.299, "name": "_get_module_info (<frozen zipimport>:321)"}, {"pid": 19656, "tid": 21652, "ts": 64655788129.199, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655788129.1, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_get_module_path (<frozen zipimport>:308)"}, {"pid": 19656, "tid": 21652, "ts": 64655788130.4, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_is_dir (<frozen zipimport>:312)"}, {"pid": 19656, "tid": 21652, "ts": 64655788126.399, "ph": "X", "cat": "fee", "dur": 4.4, "name": "find_loader (<frozen zipimport>:109)"}, {"pid": 19656, "tid": 21652, "ts": 64655788131.699, "ph": "X", "cat": "fee", "dur": 0.7, "name": "__init__ (<frozen importlib._bootstrap>:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655788125.399, "ph": "X", "cat": "fee", "dur": 7.2, "name": "_legacy_get_spec (<frozen importlib._bootstrap_external>:1359)"}, {"pid": 19656, "tid": 21652, "ts": 64655788132.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.extend"}, {"pid": 19656, "tid": 21652, "ts": 64655788133.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655788133.499, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_path_importer_cache (<frozen importlib._bootstrap_external>:1337)"}, {"pid": 19656, "tid": 21652, "ts": 64655788134.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655788134.3, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_path_importer_cache (<frozen importlib._bootstrap_external>:1337)"}, {"pid": 19656, "tid": 21652, "ts": 64655788134.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 21652, "ts": 64655788134.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655788135.4, "ph": "X", "cat": "fee", "dur": 25.8, "name": "nt.stat"}, {"pid": 19656, "tid": 21652, "ts": 64655788135.3, "ph": "X", "cat": "fee", "dur": 26.1, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 19656, "tid": 21652, "ts": 64655788162.399, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_relax_case (<frozen importlib._bootstrap_external>:64)"}, {"pid": 19656, "tid": 21652, "ts": 64655788163.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655788165.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788165.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788165.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655788166.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788166.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788167.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788167.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655788167.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655788168.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655788167.8, "ph": "X", "cat": "fee", "dur": 0.5, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 19656, "tid": 21652, "ts": 64655788168.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655788168.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655788163.7, "ph": "X", "cat": "fee", "dur": 5.199, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 19656, "tid": 21652, "ts": 64655788169.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655788170.12, "ph": "X", "cat": "fee", "dur": 0.08, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655788170.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788171.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788171.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655788171.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788172.019, "ph": "X", "cat": "fee", "dur": 0.18, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788172.22, "ph": "X", "cat": "fee", "dur": 0.18, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788172.499, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655788172.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655788173.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655788172.7, "ph": "X", "cat": "fee", "dur": 0.4, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 19656, "tid": 21652, "ts": 64655788173.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655788173.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655788170.1, "ph": "X", "cat": "fee", "dur": 3.5, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 19656, "tid": 21652, "ts": 64655788173.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655788174.9, "ph": "X", "cat": "fee", "dur": 26.3, "name": "nt.stat"}, {"pid": 19656, "tid": 21652, "ts": 64655788174.7, "ph": "X", "cat": "fee", "dur": 27.8, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 19656, "tid": 21652, "ts": 64655788174.6, "ph": "X", "cat": "fee", "dur": 28.4, "name": "_path_is_mode_type (<frozen importlib._bootstrap_external>:145)"}, {"pid": 19656, "tid": 21652, "ts": 64655788174.5, "ph": "X", "cat": "fee", "dur": 28.9, "name": "_path_isfile (<frozen importlib._bootstrap_external>:154)"}, {"pid": 19656, "tid": 21652, "ts": 64655788204.9, "ph": "X", "cat": "fee", "dur": 0.9, "name": "nt._path_splitroot"}, {"pid": 19656, "tid": 21652, "ts": 64655788206.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655788206.499, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655788206.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788206.999, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788204.699, "ph": "X", "cat": "fee", "dur": 2.6, "name": "_path_isabs (<frozen importlib._bootstrap_external>:167)"}, {"pid": 19656, "tid": 21652, "ts": 64655788204.4, "ph": "X", "cat": "fee", "dur": 3.099, "name": "__init__ (<frozen importlib._bootstrap_external>:1155)"}, {"pid": 19656, "tid": 21652, "ts": 64655788208.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655788208.999, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__init__ (<frozen importlib._bootstrap>:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655788207.999, "ph": "X", "cat": "fee", "dur": 2.2, "name": "spec_from_file_location (<frozen importlib._bootstrap_external>:696)"}, {"pid": 19656, "tid": 21652, "ts": 64655788203.8, "ph": "X", "cat": "fee", "dur": 6.499, "name": "_get_spec (<frozen importlib._bootstrap_external>:1500)"}, {"pid": 19656, "tid": 21652, "ts": 64655788134.9, "ph": "X", "cat": "fee", "dur": 75.7, "name": "find_spec (<frozen importlib._bootstrap_external>:1505)"}, {"pid": 19656, "tid": 21652, "ts": 64655787911.5, "ph": "X", "cat": "fee", "dur": 299.6, "name": "_get_spec (<frozen importlib._bootstrap_external>:1374)"}, {"pid": 19656, "tid": 21652, "ts": 64655787911.1, "ph": "X", "cat": "fee", "dur": 300.5, "name": "find_spec (<frozen importlib._bootstrap_external>:1406)"}, {"pid": 19656, "tid": 21652, "ts": 64655788212.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_imp.release_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655788211.9, "ph": "X", "cat": "fee", "dur": 0.399, "name": "__exit__ (<frozen importlib._bootstrap>:878)"}, {"pid": 19656, "tid": 21652, "ts": 64655787904.8, "ph": "X", "cat": "fee", "dur": 307.999, "name": "_find_spec (<frozen importlib._bootstrap>:901)"}, {"pid": 19656, "tid": 21652, "ts": 64655788213.4, "ph": "X", "cat": "fee", "dur": 0.299, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 21652, "ts": 64655788214.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 21652, "ts": 64655788215.099, "ph": "X", "cat": "fee", "dur": 587.4, "name": "_imp.create_dynamic"}, {"pid": 19656, "tid": 21652, "ts": 64655788214.9, "ph": "X", "cat": "fee", "dur": 587.999, "name": "_call_with_frames_removed (<frozen importlib._bootstrap>:220)"}, {"pid": 19656, "tid": 21652, "ts": 64655788804.6, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655788214.4, "ph": "X", "cat": "fee", "dur": 590.8, "name": "create_module (<frozen importlib._bootstrap_external>:1171)"}, {"pid": 19656, "tid": 21652, "ts": 64655788805.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655788806.199, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655788806.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655788807.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655788807.1, "ph": "X", "cat": "fee", "dur": 0.8, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655788808.199, "ph": "X", "cat": "fee", "dur": 1.6, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655788810.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "has_location (<frozen importlib._bootstrap>:406)"}, {"pid": 19656, "tid": 21652, "ts": 64655788810.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655788810.6, "ph": "X", "cat": "fee", "dur": 0.7, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655788812.4, "ph": "X", "cat": "fee", "dur": 0.399, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788813.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788811.999, "ph": "X", "cat": "fee", "dur": 1.3, "name": "_get_cached (<frozen importlib._bootstrap_external>:491)"}, {"pid": 19656, "tid": 21652, "ts": 64655788811.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "cached (<frozen importlib._bootstrap>:385)"}, {"pid": 19656, "tid": 21652, "ts": 64655788805.699, "ph": "X", "cat": "fee", "dur": 8.0, "name": "_init_module_attrs (<frozen importlib._bootstrap>:486)"}, {"pid": 19656, "tid": 21652, "ts": 64655788213.8, "ph": "X", "cat": "fee", "dur": 600.1, "name": "module_from_spec (<frozen importlib._bootstrap>:558)"}, {"pid": 19656, "tid": 21652, "ts": 64655788815.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_imp.exec_dynamic"}, {"pid": 19656, "tid": 21652, "ts": 64655788815.0, "ph": "X", "cat": "fee", "dur": 0.52, "name": "_call_with_frames_removed (<frozen importlib._bootstrap>:220)"}, {"pid": 19656, "tid": 21652, "ts": 64655788816.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655788814.6, "ph": "X", "cat": "fee", "dur": 1.699, "name": "exec_module (<frozen importlib._bootstrap_external>:1179)"}, {"pid": 19656, "tid": 21652, "ts": 64655788816.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "dict.pop"}, {"pid": 19656, "tid": 21652, "ts": 64655788817.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655788213.3, "ph": "X", "cat": "fee", "dur": 605.7, "name": "_load_unlocked (<frozen importlib._bootstrap>:659)"}, {"pid": 19656, "tid": 21652, "ts": 64655787903.9, "ph": "X", "cat": "fee", "dur": 915.299, "name": "_find_and_load_unlocked (<frozen importlib._bootstrap>:967)"}, {"pid": 19656, "tid": 21652, "ts": 64655788820.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.get_ident"}, {"pid": 19656, "tid": 21652, "ts": 64655788821.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655788820.0, "ph": "X", "cat": "fee", "dur": 2.2, "name": "release (<frozen importlib._bootstrap>:112)"}, {"pid": 19656, "tid": 21652, "ts": 64655788819.7, "ph": "X", "cat": "fee", "dur": 2.6, "name": "__exit__ (<frozen importlib._bootstrap>:160)"}, {"pid": 19656, "tid": 21652, "ts": 64655788823.2, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_imp.acquire_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655788823.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.get"}, {"pid": 19656, "tid": 21652, "ts": 64655788824.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_imp.release_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655788823.0, "ph": "X", "cat": "fee", "dur": 1.199, "name": "cb (<frozen importlib._bootstrap>:185)"}, {"pid": 19656, "tid": 21652, "ts": 64655787892.699, "ph": "X", "cat": "fee", "dur": 933.4, "name": "_find_and_load (<frozen importlib._bootstrap>:1002)"}, {"pid": 19656, "tid": 21652, "ts": 64655788827.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655788827.1, "ph": "X", "cat": "fee", "dur": 0.7, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655788829.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655788829.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 21652, "ts": 64655788828.8, "ph": "X", "cat": "fee", "dur": 0.799, "name": "_handle_fromlist (<frozen importlib._bootstrap>:1033)"}, {"pid": 19656, "tid": 21652, "ts": 64655788830.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655788829.999, "ph": "X", "cat": "fee", "dur": 0.4, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655788830.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655788830.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 21652, "ts": 64655788831.299, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655788831.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 21652, "ts": 64655788830.6, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_handle_fromlist (<frozen importlib._bootstrap>:1033)"}, {"pid": 19656, "tid": 21652, "ts": 64655788832.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655788832.0, "ph": "X", "cat": "fee", "dur": 0.299, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655788837.8, "ph": "X", "cat": "fee", "dur": 0.8, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 21652, "ts": 64655788840.899, "ph": "X", "cat": "fee", "dur": 3.4, "name": "_ConnectionBase (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:119)"}, {"pid": 19656, "tid": 21652, "ts": 64655788839.899, "ph": "X", "cat": "fee", "dur": 13.4, "name": "builtins.__build_class__"}, {"pid": 19656, "tid": 21652, "ts": 64655788854.4, "ph": "X", "cat": "fee", "dur": 0.899, "name": "PipeConnection (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:273)"}, {"pid": 19656, "tid": 21652, "ts": 64655788853.9, "ph": "X", "cat": "fee", "dur": 8.999, "name": "builtins.__build_class__"}, {"pid": 19656, "tid": 21652, "ts": 64655788863.699, "ph": "X", "cat": "fee", "dur": 1.6, "name": "Connection (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:353)"}, {"pid": 19656, "tid": 21652, "ts": 64655788863.3, "ph": "X", "cat": "fee", "dur": 8.1, "name": "builtins.__build_class__"}, {"pid": 19656, "tid": 21652, "ts": 64655788872.0, "ph": "X", "cat": "fee", "dur": 1.5, "name": "Listener (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:437)"}, {"pid": 19656, "tid": 21652, "ts": 64655788871.7, "ph": "X", "cat": "fee", "dur": 7.8, "name": "builtins.__build_class__"}, {"pid": 19656, "tid": 21652, "ts": 64655788881.199, "ph": "X", "cat": "fee", "dur": 0.7, "name": "SocketListener (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:584)"}, {"pid": 19656, "tid": 21652, "ts": 64655788880.9, "ph": "X", "cat": "fee", "dur": 6.8, "name": "builtins.__build_class__"}, {"pid": 19656, "tid": 21652, "ts": 64655788888.7, "ph": "X", "cat": "fee", "dur": 0.8, "name": "PipeListener (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:644)"}, {"pid": 19656, "tid": 21652, "ts": 64655788888.4, "ph": "X", "cat": "fee", "dur": 6.2, "name": "builtins.__build_class__"}, {"pid": 19656, "tid": 21652, "ts": 64655788895.7, "ph": "X", "cat": "fee", "dur": 0.299, "name": "ConnectionWrapper (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:770)"}, {"pid": 19656, "tid": 21652, "ts": 64655788895.399, "ph": "X", "cat": "fee", "dur": 5.9, "name": "builtins.__build_class__"}, {"pid": 19656, "tid": 21652, "ts": 64655788901.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "XmlListener (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:792)"}, {"pid": 19656, "tid": 21652, "ts": 64655788901.7, "ph": "X", "cat": "fee", "dur": 7.2, "name": "builtins.__build_class__"}, {"pid": 19656, "tid": 21652, "ts": 64655788911.0, "ph": "X", "cat": "fee", "dur": 0.899, "name": "register (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:43)"}, {"pid": 19656, "tid": 21652, "ts": 64655788912.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "register (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:43)"}, {"pid": 19656, "tid": 21652, "ts": 64655787886.7, "ph": "X", "cat": "fee", "dur": 1025.9, "name": "<module> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:10)"}, {"pid": 19656, "tid": 21652, "ts": 64655787886.0, "ph": "X", "cat": "fee", "dur": 1026.8, "name": "builtins.exec"}, {"pid": 19656, "tid": 21652, "ts": 64655787885.7, "ph": "X", "cat": "fee", "dur": 1028.4, "name": "_call_with_frames_removed (<frozen importlib._bootstrap>:220)"}, {"pid": 19656, "tid": 21652, "ts": 64655787566.7, "ph": "X", "cat": "fee", "dur": 1347.699, "name": "exec_module (<frozen importlib._bootstrap_external>:844)"}, {"pid": 19656, "tid": 21652, "ts": 64655788918.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "dict.pop"}, {"pid": 19656, "tid": 21652, "ts": 64655788919.3, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655787540.0, "ph": "X", "cat": "fee", "dur": 1379.8, "name": "_load_unlocked (<frozen importlib._bootstrap>:659)"}, {"pid": 19656, "tid": 21652, "ts": 64655788920.3, "ph": "X", "cat": "fee", "dur": 0.299, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655788920.9, "ph": "X", "cat": "fee", "dur": 0.5, "name": "builtins.setattr"}, {"pid": 19656, "tid": 21652, "ts": 64655787443.0, "ph": "X", "cat": "fee", "dur": 1478.499, "name": "_find_and_load_unlocked (<frozen importlib._bootstrap>:967)"}, {"pid": 19656, "tid": 21652, "ts": 64655788922.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.get_ident"}, {"pid": 19656, "tid": 21652, "ts": 64655788923.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655788922.2, "ph": "X", "cat": "fee", "dur": 1.599, "name": "release (<frozen importlib._bootstrap>:112)"}, {"pid": 19656, "tid": 21652, "ts": 64655788921.9, "ph": "X", "cat": "fee", "dur": 2.0, "name": "__exit__ (<frozen importlib._bootstrap>:160)"}, {"pid": 19656, "tid": 21652, "ts": 64655788924.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.acquire_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655788924.799, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.get"}, {"pid": 19656, "tid": 21652, "ts": 64655788925.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_imp.release_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655788924.299, "ph": "X", "cat": "fee", "dur": 0.92, "name": "cb (<frozen importlib._bootstrap>:185)"}, {"pid": 19656, "tid": 21652, "ts": 64655787432.6, "ph": "X", "cat": "fee", "dur": 1493.999, "name": "_find_and_load (<frozen importlib._bootstrap>:1002)"}, {"pid": 19656, "tid": 21652, "ts": 64655788928.599, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__init__ (<frozen importlib._bootstrap>:152)"}, {"pid": 19656, "tid": 21652, "ts": 64655788929.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_imp.acquire_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655788930.899, "ph": "X", "cat": "fee", "dur": 1.5, "name": "_thread.allocate_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655788932.6, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_thread.allocate_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655788930.8, "ph": "X", "cat": "fee", "dur": 2.5, "name": "__init__ (<frozen importlib._bootstrap>:58)"}, {"pid": 19656, "tid": 21652, "ts": 64655788934.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_imp.release_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655788929.3, "ph": "X", "cat": "fee", "dur": 5.0, "name": "_get_module_lock (<frozen importlib._bootstrap>:166)"}, {"pid": 19656, "tid": 21652, "ts": 64655788934.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.get_ident"}, {"pid": 19656, "tid": 21652, "ts": 64655788935.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655788934.6, "ph": "X", "cat": "fee", "dur": 1.4, "name": "acquire (<frozen importlib._bootstrap>:87)"}, {"pid": 19656, "tid": 21652, "ts": 64655788929.2, "ph": "X", "cat": "fee", "dur": 6.82, "name": "__enter__ (<frozen importlib._bootstrap>:156)"}, {"pid": 19656, "tid": 21652, "ts": 64655788936.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.get"}, {"pid": 19656, "tid": 21652, "ts": 64655788936.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655788938.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_imp.acquire_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655788938.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__enter__ (<frozen importlib._bootstrap>:874)"}, {"pid": 19656, "tid": 21652, "ts": 64655788939.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "find_spec (<frozen importlib._bootstrap>:736)"}, {"pid": 19656, "tid": 21652, "ts": 64655788939.62, "ph": "X", "cat": "fee", "dur": 0.08, "name": "_imp.release_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655788939.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__exit__ (<frozen importlib._bootstrap>:878)"}, {"pid": 19656, "tid": 21652, "ts": 64655788940.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_imp.acquire_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655788940.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__enter__ (<frozen importlib._bootstrap>:874)"}, {"pid": 19656, "tid": 21652, "ts": 64655788940.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_imp.is_frozen"}, {"pid": 19656, "tid": 21652, "ts": 64655788940.499, "ph": "X", "cat": "fee", "dur": 0.42, "name": "find_spec (<frozen importlib._bootstrap>:811)"}, {"pid": 19656, "tid": 21652, "ts": 64655788941.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_imp.release_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655788941.1, "ph": "X", "cat": "fee", "dur": 0.199, "name": "__exit__ (<frozen importlib._bootstrap>:878)"}, {"pid": 19656, "tid": 21652, "ts": 64655788941.62, "ph": "X", "cat": "fee", "dur": 0.079, "name": "_imp.acquire_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655788941.6, "ph": "X", "cat": "fee", "dur": 0.119, "name": "__enter__ (<frozen importlib._bootstrap>:874)"}, {"pid": 19656, "tid": 21652, "ts": 64655788942.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655788943.299, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_path_importer_cache (<frozen importlib._bootstrap_external>:1337)"}, {"pid": 19656, "tid": 21652, "ts": 64655788943.799, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 21652, "ts": 64655788944.4, "ph": "X", "cat": "fee", "dur": 0.199, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655788946.099, "ph": "X", "cat": "fee", "dur": 30.7, "name": "nt.stat"}, {"pid": 19656, "tid": 21652, "ts": 64655788945.9, "ph": "X", "cat": "fee", "dur": 31.099, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 19656, "tid": 21652, "ts": 64655788978.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_relax_case (<frozen importlib._bootstrap_external>:64)"}, {"pid": 19656, "tid": 21652, "ts": 64655788980.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655788982.099, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788982.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788983.099, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655788984.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788984.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788984.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788985.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655788985.899, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655788986.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655788985.7, "ph": "X", "cat": "fee", "dur": 0.599, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 19656, "tid": 21652, "ts": 64655788986.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655788986.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655788979.799, "ph": "X", "cat": "fee", "dur": 7.4, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 19656, "tid": 21652, "ts": 64655788988.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655788988.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655788989.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788990.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788990.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655788991.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788991.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788991.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788991.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655788992.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655788992.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655788992.1, "ph": "X", "cat": "fee", "dur": 0.419, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 19656, "tid": 21652, "ts": 64655788992.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655788992.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655788988.8, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 19656, "tid": 21652, "ts": 64655788993.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655788994.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655788994.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788995.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788995.499, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655788996.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788996.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788996.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655788996.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655788997.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655788997.299, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655788997.0, "ph": "X", "cat": "fee", "dur": 0.4, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 19656, "tid": 21652, "ts": 64655788997.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655788997.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655788994.2, "ph": "X", "cat": "fee", "dur": 6.7, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 19656, "tid": 21652, "ts": 64655789001.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655789002.3, "ph": "X", "cat": "fee", "dur": 26.5, "name": "nt.stat"}, {"pid": 19656, "tid": 21652, "ts": 64655789002.2, "ph": "X", "cat": "fee", "dur": 26.799, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 19656, "tid": 21652, "ts": 64655789002.099, "ph": "X", "cat": "fee", "dur": 27.6, "name": "_path_is_mode_type (<frozen importlib._bootstrap_external>:145)"}, {"pid": 19656, "tid": 21652, "ts": 64655789001.9, "ph": "X", "cat": "fee", "dur": 28.199, "name": "_path_isfile (<frozen importlib._bootstrap_external>:154)"}, {"pid": 19656, "tid": 21652, "ts": 64655789030.999, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__init__ (<frozen importlib._bootstrap_external>:1006)"}, {"pid": 19656, "tid": 21652, "ts": 64655789031.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655789032.799, "ph": "X", "cat": "fee", "dur": 0.6, "name": "__init__ (<frozen importlib._bootstrap>:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655789031.7, "ph": "X", "cat": "fee", "dur": 2.5, "name": "spec_from_file_location (<frozen importlib._bootstrap_external>:696)"}, {"pid": 19656, "tid": 21652, "ts": 64655789030.6, "ph": "X", "cat": "fee", "dur": 3.699, "name": "_get_spec (<frozen importlib._bootstrap_external>:1500)"}, {"pid": 19656, "tid": 21652, "ts": 64655788944.299, "ph": "X", "cat": "fee", "dur": 90.3, "name": "find_spec (<frozen importlib._bootstrap_external>:1505)"}, {"pid": 19656, "tid": 21652, "ts": 64655788942.5, "ph": "X", "cat": "fee", "dur": 92.5, "name": "_get_spec (<frozen importlib._bootstrap_external>:1374)"}, {"pid": 19656, "tid": 21652, "ts": 64655788942.1, "ph": "X", "cat": "fee", "dur": 93.299, "name": "find_spec (<frozen importlib._bootstrap_external>:1406)"}, {"pid": 19656, "tid": 21652, "ts": 64655789035.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_imp.release_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655789035.7, "ph": "X", "cat": "fee", "dur": 0.32, "name": "__exit__ (<frozen importlib._bootstrap>:878)"}, {"pid": 19656, "tid": 21652, "ts": 64655788937.9, "ph": "X", "cat": "fee", "dur": 98.699, "name": "_find_spec (<frozen importlib._bootstrap>:901)"}, {"pid": 19656, "tid": 21652, "ts": 64655789037.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 21652, "ts": 64655789037.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 21652, "ts": 64655789038.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "create_module (<frozen importlib._bootstrap_external>:841)"}, {"pid": 19656, "tid": 21652, "ts": 64655789038.3, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_new_module (<frozen importlib._bootstrap>:35)"}, {"pid": 19656, "tid": 21652, "ts": 64655789039.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655789039.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655789040.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655789040.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655789040.2, "ph": "X", "cat": "fee", "dur": 0.799, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655789041.399, "ph": "X", "cat": "fee", "dur": 1.3, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655789043.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "has_location (<frozen importlib._bootstrap>:406)"}, {"pid": 19656, "tid": 21652, "ts": 64655789043.2, "ph": "X", "cat": "fee", "dur": 0.599, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655789044.1, "ph": "X", "cat": "fee", "dur": 0.599, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655789045.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655789046.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655789048.8, "ph": "X", "cat": "fee", "dur": 0.399, "name": "str.rfind"}, {"pid": 19656, "tid": 21652, "ts": 64655789048.6, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 19656, "tid": 21652, "ts": 64655789049.499, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rfind"}, {"pid": 19656, "tid": 21652, "ts": 64655789049.4, "ph": "X", "cat": "fee", "dur": 0.32, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 19656, "tid": 21652, "ts": 64655789049.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 19656, "tid": 21652, "ts": 64655789047.2, "ph": "X", "cat": "fee", "dur": 3.0, "name": "builtins.max"}, {"pid": 19656, "tid": 21652, "ts": 64655789046.6, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_path_split (<frozen importlib._bootstrap_external>:127)"}, {"pid": 19656, "tid": 21652, "ts": 64655789051.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655789052.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655789053.799, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789055.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655789055.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655789056.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655789056.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655789057.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655789058.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655789058.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655789059.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655789059.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655789059.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655789059.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655789060.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655789060.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655789060.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655789060.2, "ph": "X", "cat": "fee", "dur": 0.799, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 19656, "tid": 21652, "ts": 64655789061.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789061.399, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655789053.6, "ph": "X", "cat": "fee", "dur": 8.099, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 19656, "tid": 21652, "ts": 64655789046.199, "ph": "X", "cat": "fee", "dur": 15.8, "name": "cache_from_source (<frozen importlib._bootstrap_external>:361)"}, {"pid": 19656, "tid": 21652, "ts": 64655789045.199, "ph": "X", "cat": "fee", "dur": 17.1, "name": "_get_cached (<frozen importlib._bootstrap_external>:491)"}, {"pid": 19656, "tid": 21652, "ts": 64655789044.8, "ph": "X", "cat": "fee", "dur": 17.8, "name": "cached (<frozen importlib._bootstrap>:385)"}, {"pid": 19656, "tid": 21652, "ts": 64655789062.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "cached (<frozen importlib._bootstrap>:385)"}, {"pid": 19656, "tid": 21652, "ts": 64655789039.2, "ph": "X", "cat": "fee", "dur": 23.9, "name": "_init_module_attrs (<frozen importlib._bootstrap>:486)"}, {"pid": 19656, "tid": 21652, "ts": 64655789037.599, "ph": "X", "cat": "fee", "dur": 25.7, "name": "module_from_spec (<frozen importlib._bootstrap>:558)"}, {"pid": 19656, "tid": 21652, "ts": 64655789065.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "get_filename (<frozen importlib._bootstrap_external>:1031)"}, {"pid": 19656, "tid": 21652, "ts": 64655789064.6, "ph": "X", "cat": "fee", "dur": 0.899, "name": "_check_name_wrapper (<frozen importlib._bootstrap_external>:523)"}, {"pid": 19656, "tid": 21652, "ts": 64655789065.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655789066.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rfind"}, {"pid": 19656, "tid": 21652, "ts": 64655789066.7, "ph": "X", "cat": "fee", "dur": 0.42, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 19656, "tid": 21652, "ts": 64655789067.3, "ph": "X", "cat": "fee", "dur": 0.199, "name": "str.rfind"}, {"pid": 19656, "tid": 21652, "ts": 64655789067.2, "ph": "X", "cat": "fee", "dur": 0.319, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 19656, "tid": 21652, "ts": 64655789067.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 19656, "tid": 21652, "ts": 64655789066.6, "ph": "X", "cat": "fee", "dur": 1.2, "name": "builtins.max"}, {"pid": 19656, "tid": 21652, "ts": 64655789066.1, "ph": "X", "cat": "fee", "dur": 2.2, "name": "_path_split (<frozen importlib._bootstrap_external>:127)"}, {"pid": 19656, "tid": 21652, "ts": 64655789068.499, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655789069.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655789070.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789071.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655789071.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655789071.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655789072.299, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655789072.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655789072.619, "ph": "X", "cat": "fee", "dur": 0.18, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655789072.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655789073.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655789073.599, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655789073.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655789073.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655789074.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655789074.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655789074.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655789074.2, "ph": "X", "cat": "fee", "dur": 1.399, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 19656, "tid": 21652, "ts": 64655789075.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789076.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655789070.0, "ph": "X", "cat": "fee", "dur": 6.2, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 19656, "tid": 21652, "ts": 64655789065.7, "ph": "X", "cat": "fee", "dur": 10.699, "name": "cache_from_source (<frozen importlib._bootstrap_external>:361)"}, {"pid": 19656, "tid": 21652, "ts": 64655789077.2, "ph": "X", "cat": "fee", "dur": 25.399, "name": "nt.stat"}, {"pid": 19656, "tid": 21652, "ts": 64655789077.1, "ph": "X", "cat": "fee", "dur": 25.6, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 19656, "tid": 21652, "ts": 64655789076.899, "ph": "X", "cat": "fee", "dur": 26.5, "name": "path_stats (<frozen importlib._bootstrap_external>:1077)"}, {"pid": 19656, "tid": 21652, "ts": 64655789104.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655789105.6, "ph": "X", "cat": "fee", "dur": 116.499, "name": "io.open_code"}, {"pid": 19656, "tid": 21652, "ts": 64655789223.2, "ph": "X", "cat": "fee", "dur": 23.3, "name": "_io.BufferedReader.read"}, {"pid": 19656, "tid": 21652, "ts": 64655789246.9, "ph": "X", "cat": "fee", "dur": 7.1, "name": "_io.BufferedReader.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655789104.6, "ph": "X", "cat": "fee", "dur": 149.6, "name": "get_data (<frozen importlib._bootstrap_external>:1036)"}, {"pid": 19656, "tid": 21652, "ts": 64655789257.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789257.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789258.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "type.from_bytes"}, {"pid": 19656, "tid": 21652, "ts": 64655789257.7, "ph": "X", "cat": "fee", "dur": 0.82, "name": "_unpack_uint32 (<frozen importlib._bootstrap_external>:79)"}, {"pid": 19656, "tid": 21652, "ts": 64655789256.4, "ph": "X", "cat": "fee", "dur": 2.599, "name": "_classify_pyc (<frozen importlib._bootstrap_external>:560)"}, {"pid": 19656, "tid": 21652, "ts": 64655789260.72, "ph": "X", "cat": "fee", "dur": 0.079, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789260.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "type.from_bytes"}, {"pid": 19656, "tid": 21652, "ts": 64655789260.7, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_unpack_uint32 (<frozen importlib._bootstrap_external>:79)"}, {"pid": 19656, "tid": 21652, "ts": 64655789261.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789261.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "type.from_bytes"}, {"pid": 19656, "tid": 21652, "ts": 64655789261.5, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_unpack_uint32 (<frozen importlib._bootstrap_external>:79)"}, {"pid": 19656, "tid": 21652, "ts": 64655789260.5, "ph": "X", "cat": "fee", "dur": 1.5, "name": "_validate_timestamp_pyc (<frozen importlib._bootstrap_external>:593)"}, {"pid": 19656, "tid": 21652, "ts": 64655789262.699, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655789263.6, "ph": "X", "cat": "fee", "dur": 48.7, "name": "marshal.loads"}, {"pid": 19656, "tid": 21652, "ts": 64655789312.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655789313.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655789313.7, "ph": "X", "cat": "fee", "dur": 0.9, "name": "_imp._fix_co_filename"}, {"pid": 19656, "tid": 21652, "ts": 64655789263.5, "ph": "X", "cat": "fee", "dur": 51.119, "name": "_compile_bytecode (<frozen importlib._bootstrap_external>:645)"}, {"pid": 19656, "tid": 21652, "ts": 64655789064.3, "ph": "X", "cat": "fee", "dur": 250.5, "name": "get_code (<frozen importlib._bootstrap_external>:916)"}, {"pid": 19656, "tid": 21652, "ts": 64655789323.499, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655789323.2, "ph": "X", "cat": "fee", "dur": 1.0, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655789325.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655789325.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 21652, "ts": 64655789324.9, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_handle_fromlist (<frozen importlib._bootstrap>:1033)"}, {"pid": 19656, "tid": 21652, "ts": 64655789326.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655789326.1, "ph": "X", "cat": "fee", "dur": 0.399, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655789326.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655789327.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 21652, "ts": 64655789326.7, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_handle_fromlist (<frozen importlib._bootstrap>:1033)"}, {"pid": 19656, "tid": 21652, "ts": 64655789328.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655789328.2, "ph": "X", "cat": "fee", "dur": 0.32, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655789331.4, "ph": "X", "cat": "fee", "dur": 3.3, "name": "Queue (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:35)"}, {"pid": 19656, "tid": 21652, "ts": 64655789330.8, "ph": "X", "cat": "fee", "dur": 12.1, "name": "builtins.__build_class__"}, {"pid": 19656, "tid": 21652, "ts": 64655789343.9, "ph": "X", "cat": "fee", "dur": 0.6, "name": "JoinableQueue (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:295)"}, {"pid": 19656, "tid": 21652, "ts": 64655789343.5, "ph": "X", "cat": "fee", "dur": 9.6, "name": "builtins.__build_class__"}, {"pid": 19656, "tid": 21652, "ts": 64655789353.8, "ph": "X", "cat": "fee", "dur": 1.399, "name": "SimpleQueue (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:338)"}, {"pid": 19656, "tid": 21652, "ts": 64655789353.399, "ph": "X", "cat": "fee", "dur": 8.1, "name": "builtins.__build_class__"}, {"pid": 19656, "tid": 21652, "ts": 64655789317.2, "ph": "X", "cat": "fee", "dur": 44.499, "name": "<module> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:10)"}, {"pid": 19656, "tid": 21652, "ts": 64655789316.5, "ph": "X", "cat": "fee", "dur": 45.4, "name": "builtins.exec"}, {"pid": 19656, "tid": 21652, "ts": 64655789316.3, "ph": "X", "cat": "fee", "dur": 45.8, "name": "_call_with_frames_removed (<frozen importlib._bootstrap>:220)"}, {"pid": 19656, "tid": 21652, "ts": 64655789064.1, "ph": "X", "cat": "fee", "dur": 298.3, "name": "exec_module (<frozen importlib._bootstrap_external>:844)"}, {"pid": 19656, "tid": 21652, "ts": 64655789363.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "dict.pop"}, {"pid": 19656, "tid": 21652, "ts": 64655789364.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655789037.0, "ph": "X", "cat": "fee", "dur": 328.3, "name": "_load_unlocked (<frozen importlib._bootstrap>:659)"}, {"pid": 19656, "tid": 21652, "ts": 64655789365.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655789366.3, "ph": "X", "cat": "fee", "dur": 0.4, "name": "builtins.setattr"}, {"pid": 19656, "tid": 21652, "ts": 64655788936.699, "ph": "X", "cat": "fee", "dur": 430.02, "name": "_find_and_load_unlocked (<frozen importlib._bootstrap>:967)"}, {"pid": 19656, "tid": 21652, "ts": 64655789367.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.get_ident"}, {"pid": 19656, "tid": 21652, "ts": 64655789369.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655789367.5, "ph": "X", "cat": "fee", "dur": 2.0, "name": "release (<frozen importlib._bootstrap>:112)"}, {"pid": 19656, "tid": 21652, "ts": 64655789367.2, "ph": "X", "cat": "fee", "dur": 2.4, "name": "__exit__ (<frozen importlib._bootstrap>:160)"}, {"pid": 19656, "tid": 21652, "ts": 64655789370.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.acquire_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655789370.7, "ph": "X", "cat": "fee", "dur": 0.199, "name": "dict.get"}, {"pid": 19656, "tid": 21652, "ts": 64655789371.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_imp.release_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655789370.1, "ph": "X", "cat": "fee", "dur": 1.2, "name": "cb (<frozen importlib._bootstrap>:185)"}, {"pid": 19656, "tid": 21652, "ts": 64655788928.3, "ph": "X", "cat": "fee", "dur": 444.6, "name": "_find_and_load (<frozen importlib._bootstrap>:1002)"}, {"pid": 19656, "tid": 21652, "ts": 64655789377.6, "ph": "X", "cat": "fee", "dur": 2.5, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\weakref.py:368)"}, {"pid": 19656, "tid": 21652, "ts": 64655789381.4, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_ThreadWakeup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:66)"}, {"pid": 19656, "tid": 21652, "ts": 64655789380.9, "ph": "X", "cat": "fee", "dur": 7.1, "name": "builtins.__build_class__"}, {"pid": 19656, "tid": 21652, "ts": 64655789390.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655789389.3, "ph": "X", "cat": "fee", "dur": 1.6, "name": "_register_atexit (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:1383)"}, {"pid": 19656, "tid": 21652, "ts": 64655789391.699, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_RemoteTraceback (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:118)"}, {"pid": 19656, "tid": 21652, "ts": 64655789391.3, "ph": "X", "cat": "fee", "dur": 8.4, "name": "builtins.__build_class__"}, {"pid": 19656, "tid": 21652, "ts": 64655789400.5, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_ExceptionWithTraceback (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:124)"}, {"pid": 19656, "tid": 21652, "ts": 64655789400.0, "ph": "X", "cat": "fee", "dur": 6.0, "name": "builtins.__build_class__"}, {"pid": 19656, "tid": 21652, "ts": 64655789406.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_WorkItem (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:137)"}, {"pid": 19656, "tid": 21652, "ts": 64655789406.3, "ph": "X", "cat": "fee", "dur": 4.8, "name": "builtins.__build_class__"}, {"pid": 19656, "tid": 21652, "ts": 64655789411.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_ResultItem (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:144)"}, {"pid": 19656, "tid": 21652, "ts": 64655789411.3, "ph": "X", "cat": "fee", "dur": 4.0, "name": "builtins.__build_class__"}, {"pid": 19656, "tid": 21652, "ts": 64655789415.8, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_CallItem (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:150)"}, {"pid": 19656, "tid": 21652, "ts": 64655789415.6, "ph": "X", "cat": "fee", "dur": 3.5, "name": "builtins.__build_class__"}, {"pid": 19656, "tid": 21652, "ts": 64655789419.7, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_SafeQueue (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:158)"}, {"pid": 19656, "tid": 21652, "ts": 64655789419.299, "ph": "X", "cat": "fee", "dur": 7.3, "name": "builtins.__build_class__"}, {"pid": 19656, "tid": 21652, "ts": 64655789427.699, "ph": "X", "cat": "fee", "dur": 1.9, "name": "_ExecutorManagerThread (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:256)"}, {"pid": 19656, "tid": 21652, "ts": 64655789427.4, "ph": "X", "cat": "fee", "dur": 9.0, "name": "builtins.__build_class__"}, {"pid": 19656, "tid": 21652, "ts": 64655789438.1, "ph": "X", "cat": "fee", "dur": 0.199, "name": "BrokenProcessPool (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:565)"}, {"pid": 19656, "tid": 21652, "ts": 64655789437.799, "ph": "X", "cat": "fee", "dur": 9.7, "name": "builtins.__build_class__"}, {"pid": 19656, "tid": 21652, "ts": 64655789448.199, "ph": "X", "cat": "fee", "dur": 2.6, "name": "ProcessPoolExecutor (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:572)"}, {"pid": 19656, "tid": 21652, "ts": 64655789447.9, "ph": "X", "cat": "fee", "dur": 10.1, "name": "builtins.__build_class__"}, {"pid": 19656, "tid": 21652, "ts": 64655787382.4, "ph": "X", "cat": "fee", "dur": 2075.8, "name": "<module> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:4)"}, {"pid": 19656, "tid": 21652, "ts": 64655787381.5, "ph": "X", "cat": "fee", "dur": 2077.9, "name": "builtins.exec"}, {"pid": 19656, "tid": 21652, "ts": 64655787381.3, "ph": "X", "cat": "fee", "dur": 2078.299, "name": "_call_with_frames_removed (<frozen importlib._bootstrap>:220)"}, {"pid": 19656, "tid": 21652, "ts": 64655787089.1, "ph": "X", "cat": "fee", "dur": 2370.7, "name": "exec_module (<frozen importlib._bootstrap_external>:844)"}, {"pid": 19656, "tid": 21652, "ts": 64655789461.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "dict.pop"}, {"pid": 19656, "tid": 21652, "ts": 64655789462.399, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655787062.9, "ph": "X", "cat": "fee", "dur": 2400.099, "name": "_load_unlocked (<frozen importlib._bootstrap>:659)"}, {"pid": 19656, "tid": 21652, "ts": 64655789463.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655789464.0, "ph": "X", "cat": "fee", "dur": 0.5, "name": "builtins.setattr"}, {"pid": 19656, "tid": 21652, "ts": 64655786966.299, "ph": "X", "cat": "fee", "dur": 2498.22, "name": "_find_and_load_unlocked (<frozen importlib._bootstrap>:967)"}, {"pid": 19656, "tid": 21652, "ts": 64655789465.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.get_ident"}, {"pid": 19656, "tid": 21652, "ts": 64655789466.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655789465.199, "ph": "X", "cat": "fee", "dur": 1.7, "name": "release (<frozen importlib._bootstrap>:112)"}, {"pid": 19656, "tid": 21652, "ts": 64655789465.0, "ph": "X", "cat": "fee", "dur": 2.0, "name": "__exit__ (<frozen importlib._bootstrap>:160)"}, {"pid": 19656, "tid": 21652, "ts": 64655789467.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.acquire_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655789467.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "dict.get"}, {"pid": 19656, "tid": 21652, "ts": 64655789468.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_imp.release_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655789467.4, "ph": "X", "cat": "fee", "dur": 0.9, "name": "cb (<frozen importlib._bootstrap>:185)"}, {"pid": 19656, "tid": 21652, "ts": 64655786955.899, "ph": "X", "cat": "fee", "dur": 2513.7, "name": "_find_and_load (<frozen importlib._bootstrap>:1002)"}, {"pid": 19656, "tid": 21652, "ts": 64655786953.9, "ph": "X", "cat": "fee", "dur": 2517.099, "name": "__getattr__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\__init__.py:40)"}, {"pid": 19656, "tid": 21652, "ts": 64655786952.3, "ph": "X", "cat": "fee", "dur": 2519.1, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 21652, "ts": 64655786951.7, "ph": "X", "cat": "fee", "dur": 2520.0, "name": "_handle_fromlist (<frozen importlib._bootstrap>:1033)"}, {"pid": 19656, "tid": 21652, "ts": 64655789473.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655789473.299, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 21652, "ts": 64655789472.799, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_handle_fromlist (<frozen importlib._bootstrap>:1033)"}, {"pid": 19656, "tid": 21652, "ts": 64655789478.899, "ph": "X", "cat": "fee", "dur": 59.0, "name": "builtins.print"}, {"pid": 19656, "tid": 21652, "ts": 64655789538.699, "ph": "X", "cat": "fee", "dur": 4.4, "name": "nt.cpu_count"}, {"pid": 19656, "tid": 21652, "ts": 64655789544.9, "ph": "X", "cat": "fee", "dur": 19.5, "name": "builtins.print"}, {"pid": 19656, "tid": 21652, "ts": 64655789564.9, "ph": "X", "cat": "fee", "dur": 0.899, "name": "nt.cpu_count"}, {"pid": 19656, "tid": 21652, "ts": 64655789566.0, "ph": "X", "cat": "fee", "dur": 28.4, "name": "builtins.print"}, {"pid": 19656, "tid": 21652, "ts": 64655789594.699, "ph": "X", "cat": "fee", "dur": 1.0, "name": "nt.cpu_count"}, {"pid": 19656, "tid": 21652, "ts": 64655789595.999, "ph": "X", "cat": "fee", "dur": 16.9, "name": "builtins.print"}, {"pid": 19656, "tid": 21652, "ts": 64655789613.199, "ph": "X", "cat": "fee", "dur": 0.7, "name": "nt.cpu_count"}, {"pid": 19656, "tid": 21652, "ts": 64655789614.3, "ph": "X", "cat": "fee", "dur": 0.299, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655789614.999, "ph": "X", "cat": "fee", "dur": 27.7, "name": "builtins.print"}, {"pid": 19656, "tid": 21652, "ts": 64655789644.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655789644.7, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655789645.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655789645.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655789646.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655789646.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789647.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655789647.199, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655789646.399, "ph": "X", "cat": "fee", "dur": 2.1, "name": "splitdrive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:124)"}, {"pid": 19656, "tid": 21652, "ts": 64655789648.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655789649.5, "ph": "X", "cat": "fee", "dur": 0.199, "name": "str.lstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655789649.9, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.split"}, {"pid": 19656, "tid": 21652, "ts": 64655789650.499, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789654.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789655.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789655.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789655.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789655.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789655.799, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789656.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789656.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655789644.2, "ph": "X", "cat": "fee", "dur": 12.499, "name": "normpath (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:450)"}, {"pid": 19656, "tid": 21652, "ts": 64655789657.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655789657.5, "ph": "X", "cat": "fee", "dur": 0.7, "name": "nt.getcwd"}, {"pid": 19656, "tid": 21652, "ts": 64655789658.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655789658.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655789659.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655789659.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655789658.599, "ph": "X", "cat": "fee", "dur": 0.9, "name": "normcase (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:44)"}, {"pid": 19656, "tid": 21652, "ts": 64655789659.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655789659.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655789660.02, "ph": "X", "cat": "fee", "dur": 0.079, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655789660.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655789659.7, "ph": "X", "cat": "fee", "dur": 0.62, "name": "normcase (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:44)"}, {"pid": 19656, "tid": 21652, "ts": 64655789660.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655789661.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655789661.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655789661.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655789661.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655789662.02, "ph": "X", "cat": "fee", "dur": 0.08, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655789662.12, "ph": "X", "cat": "fee", "dur": 0.08, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789662.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655789662.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655789662.0, "ph": "X", "cat": "fee", "dur": 1.1, "name": "splitdrive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:124)"}, {"pid": 19656, "tid": 21652, "ts": 64655789663.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789663.899, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655789663.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_get_bothseps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:34)"}, {"pid": 19656, "tid": 21652, "ts": 64655789661.0, "ph": "X", "cat": "fee", "dur": 3.2, "name": "isabs (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:61)"}, {"pid": 19656, "tid": 21652, "ts": 64655789664.399, "ph": "X", "cat": "fee", "dur": 83.3, "name": "nt._getfinalpathname"}, {"pid": 19656, "tid": 21652, "ts": 64655789748.4, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655789749.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655789749.4, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789750.0, "ph": "X", "cat": "fee", "dur": 48.6, "name": "nt._getfinalpathname"}, {"pid": 19656, "tid": 21652, "ts": 64655789643.899, "ph": "X", "cat": "fee", "dur": 155.4, "name": "realpath (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:625)"}, {"pid": 19656, "tid": 21652, "ts": 64655789801.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655789801.6, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655789801.5, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_get_bothseps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:34)"}, {"pid": 19656, "tid": 21652, "ts": 64655789802.299, "ph": "X", "cat": "fee", "dur": 0.02, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655789802.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789802.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655789803.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655789802.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "splitdrive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:124)"}, {"pid": 19656, "tid": 21652, "ts": 64655789804.599, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789807.099, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655789800.799, "ph": "X", "cat": "fee", "dur": 6.9, "name": "split (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:180)"}, {"pid": 19656, "tid": 21652, "ts": 64655789800.299, "ph": "X", "cat": "fee", "dur": 7.7, "name": "dirname (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:221)"}, {"pid": 19656, "tid": 21652, "ts": 64655789809.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655789809.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655789809.399, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655789809.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655789809.0, "ph": "X", "cat": "fee", "dur": 1.0, "name": "normcase (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:44)"}, {"pid": 19656, "tid": 21652, "ts": 64655789810.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655789810.62, "ph": "X", "cat": "fee", "dur": 0.08, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655789811.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655789811.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789811.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655789811.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655789811.1, "ph": "X", "cat": "fee", "dur": 1.0, "name": "splitdrive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:124)"}, {"pid": 19656, "tid": 21652, "ts": 64655789813.199, "ph": "X", "cat": "fee", "dur": 0.02, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655789813.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789813.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655789813.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655789813.1, "ph": "X", "cat": "fee", "dur": 1.0, "name": "splitdrive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:124)"}, {"pid": 19656, "tid": 21652, "ts": 64655789810.399, "ph": "X", "cat": "fee", "dur": 4.7, "name": "join (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:77)"}, {"pid": 19656, "tid": 21652, "ts": 64655789815.4, "ph": "X", "cat": "fee", "dur": 45.9, "name": "nt.listdir"}, {"pid": 19656, "tid": 21652, "ts": 64655789862.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "time.perf_counter"}, {"pid": 19656, "tid": 21652, "ts": 64655789863.899, "ph": "X", "cat": "fee", "dur": 2.7, "name": "_check_system_limits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:529)"}, {"pid": 19656, "tid": 21652, "ts": 64655789868.5, "ph": "X", "cat": "fee", "dur": 1.199, "name": "get_context (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:233)"}, {"pid": 19656, "tid": 21652, "ts": 64655789871.9, "ph": "X", "cat": "fee", "dur": 1.5, "name": "_thread.allocate_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655789874.6, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_thread.allocate_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655789875.9, "ph": "X", "cat": "fee", "dur": 3.699, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:228)"}, {"pid": 19656, "tid": 21652, "ts": 64655789874.4, "ph": "X", "cat": "fee", "dur": 5.699, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655789883.899, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655789883.5, "ph": "X", "cat": "fee", "dur": 1.0, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655789887.9, "ph": "X", "cat": "fee", "dur": 0.5, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655789888.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.next"}, {"pid": 19656, "tid": 21652, "ts": 64655789890.999, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_get_candidate_names (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py:225)"}, {"pid": 19656, "tid": 21652, "ts": 64655789894.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655789894.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655789893.9, "ph": "X", "cat": "fee", "dur": 0.7, "name": "rng (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py:134)"}, {"pid": 19656, "tid": 21652, "ts": 64655789896.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789897.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655789898.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655789897.3, "ph": "X", "cat": "fee", "dur": 0.9, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655789896.4, "ph": "X", "cat": "fee", "dur": 2.099, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655789899.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789899.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655789899.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655789899.5, "ph": "X", "cat": "fee", "dur": 0.32, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655789899.0, "ph": "X", "cat": "fee", "dur": 1.0, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655789900.399, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789900.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655789900.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655789900.6, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655789900.3, "ph": "X", "cat": "fee", "dur": 0.7, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655789901.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789901.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655789901.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655789901.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655789901.2, "ph": "X", "cat": "fee", "dur": 0.699, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655789902.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789902.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655789902.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655789902.399, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655789902.1, "ph": "X", "cat": "fee", "dur": 0.7, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655789903.12, "ph": "X", "cat": "fee", "dur": 0.079, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789903.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655789903.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655789903.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655789903.4, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655789903.1, "ph": "X", "cat": "fee", "dur": 0.9, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655789904.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789904.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655789904.699, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655789904.5, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655789904.199, "ph": "X", "cat": "fee", "dur": 0.7, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655789905.12, "ph": "X", "cat": "fee", "dur": 0.079, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789905.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655789905.52, "ph": "X", "cat": "fee", "dur": 0.079, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655789905.3, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655789905.1, "ph": "X", "cat": "fee", "dur": 0.7, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655789895.599, "ph": "X", "cat": "fee", "dur": 10.4, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py:148)"}, {"pid": 19656, "tid": 21652, "ts": 64655789906.3, "ph": "X", "cat": "fee", "dur": 0.299, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655789893.299, "ph": "X", "cat": "fee", "dur": 13.32, "name": "__next__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py:145)"}, {"pid": 19656, "tid": 21652, "ts": 64655789892.6, "ph": "X", "cat": "fee", "dur": 14.299, "name": "builtins.next"}, {"pid": 19656, "tid": 21652, "ts": 64655789907.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655789907.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655789908.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655789908.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789908.499, "ph": "X", "cat": "fee", "dur": 0.6, "name": "splitdrive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:124)"}, {"pid": 19656, "tid": 21652, "ts": 64655789909.92, "ph": "X", "cat": "fee", "dur": 0.08, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655789910.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789910.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655789910.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655789911.799, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.find"}, {"pid": 19656, "tid": 21652, "ts": 64655789912.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.find"}, {"pid": 19656, "tid": 21652, "ts": 64655789909.9, "ph": "X", "cat": "fee", "dur": 3.0, "name": "splitdrive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:124)"}, {"pid": 19656, "tid": 21652, "ts": 64655789907.6, "ph": "X", "cat": "fee", "dur": 6.1, "name": "join (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:77)"}, {"pid": 19656, "tid": 21652, "ts": 64655789914.7, "ph": "X", "cat": "fee", "dur": 17.3, "name": "nt.lstat"}, {"pid": 19656, "tid": 21652, "ts": 64655789914.3, "ph": "X", "cat": "fee", "dur": 18.5, "name": "_exists (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py:76)"}, {"pid": 19656, "tid": 21652, "ts": 64655789890.3, "ph": "X", "cat": "fee", "dur": 42.699, "name": "mktemp (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py:375)"}, {"pid": 19656, "tid": 21652, "ts": 64655789887.199, "ph": "X", "cat": "fee", "dur": 46.1, "name": "arbitrary_address (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:69)"}, {"pid": 19656, "tid": 21652, "ts": 64655789936.0, "ph": "X", "cat": "fee", "dur": 19.8, "name": "_winapi.CreateNamedPipe"}, {"pid": 19656, "tid": 21652, "ts": 64655789956.5, "ph": "X", "cat": "fee", "dur": 5.2, "name": "_winapi.CreateFile"}, {"pid": 19656, "tid": 21652, "ts": 64655789962.1, "ph": "X", "cat": "fee", "dur": 5.4, "name": "_winapi.SetNamedPipeHandleState"}, {"pid": 19656, "tid": 21652, "ts": 64655789967.799, "ph": "X", "cat": "fee", "dur": 4.9, "name": "_winapi.ConnectNamedPipe"}, {"pid": 19656, "tid": 21652, "ts": 64655789973.3, "ph": "X", "cat": "fee", "dur": 2.099, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 21652, "ts": 64655789976.9, "ph": "X", "cat": "fee", "dur": 1.5, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:122)"}, {"pid": 19656, "tid": 21652, "ts": 64655789979.1, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:122)"}, {"pid": 19656, "tid": 21652, "ts": 64655789886.8, "ph": "X", "cat": "fee", "dur": 93.0, "name": "Pipe (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:540)"}, {"pid": 19656, "tid": 21652, "ts": 64655789882.899, "ph": "X", "cat": "fee", "dur": 97.9, "name": "Pipe (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:60)"}, {"pid": 19656, "tid": 21652, "ts": 64655789882.1, "ph": "X", "cat": "fee", "dur": 99.3, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:67)"}, {"pid": 19656, "tid": 21652, "ts": 64655789986.1, "ph": "X", "cat": "fee", "dur": 0.199, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655789986.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.next"}, {"pid": 19656, "tid": 21652, "ts": 64655789988.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_get_candidate_names (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py:225)"}, {"pid": 19656, "tid": 21652, "ts": 64655789990.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655789990.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655789989.9, "ph": "X", "cat": "fee", "dur": 0.499, "name": "rng (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py:134)"}, {"pid": 19656, "tid": 21652, "ts": 64655789991.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789992.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655789992.399, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655789992.0, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655789991.5, "ph": "X", "cat": "fee", "dur": 1.2, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655789993.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789993.399, "ph": "X", "cat": "fee", "dur": 0.02, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655789993.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655789993.3, "ph": "X", "cat": "fee", "dur": 0.32, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655789993.0, "ph": "X", "cat": "fee", "dur": 0.8, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655789994.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789994.32, "ph": "X", "cat": "fee", "dur": 0.08, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655789994.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655789994.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655789994.0, "ph": "X", "cat": "fee", "dur": 0.699, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655789995.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789995.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655789995.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655789995.199, "ph": "X", "cat": "fee", "dur": 0.24, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655789994.9, "ph": "X", "cat": "fee", "dur": 0.7, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655789995.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789996.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655789996.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655789996.199, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655789995.8, "ph": "X", "cat": "fee", "dur": 0.8, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655789996.92, "ph": "X", "cat": "fee", "dur": 0.08, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789997.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655789997.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655789997.199, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655789996.9, "ph": "X", "cat": "fee", "dur": 0.7, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655789997.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789998.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655789998.22, "ph": "X", "cat": "fee", "dur": 0.08, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655789997.999, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655789997.8, "ph": "X", "cat": "fee", "dur": 0.699, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655789998.72, "ph": "X", "cat": "fee", "dur": 0.08, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655789999.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655789999.14, "ph": "X", "cat": "fee", "dur": 0.06, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655789998.999, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655789998.7, "ph": "X", "cat": "fee", "dur": 0.7, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655789991.2, "ph": "X", "cat": "fee", "dur": 8.299, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py:148)"}, {"pid": 19656, "tid": 21652, "ts": 64655789999.8, "ph": "X", "cat": "fee", "dur": 0.199, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655789989.4, "ph": "X", "cat": "fee", "dur": 10.699, "name": "__next__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py:145)"}, {"pid": 19656, "tid": 21652, "ts": 64655789989.099, "ph": "X", "cat": "fee", "dur": 11.3, "name": "builtins.next"}, {"pid": 19656, "tid": 21652, "ts": 64655790001.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655790001.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655790002.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655790002.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790001.9, "ph": "X", "cat": "fee", "dur": 0.6, "name": "splitdrive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:124)"}, {"pid": 19656, "tid": 21652, "ts": 64655790003.299, "ph": "X", "cat": "fee", "dur": 0.02, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655790003.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790003.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655790003.799, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655790004.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.find"}, {"pid": 19656, "tid": 21652, "ts": 64655790005.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.find"}, {"pid": 19656, "tid": 21652, "ts": 64655790003.2, "ph": "X", "cat": "fee", "dur": 2.399, "name": "splitdrive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:124)"}, {"pid": 19656, "tid": 21652, "ts": 64655790000.999, "ph": "X", "cat": "fee", "dur": 5.2, "name": "join (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:77)"}, {"pid": 19656, "tid": 21652, "ts": 64655790006.8, "ph": "X", "cat": "fee", "dur": 9.1, "name": "nt.lstat"}, {"pid": 19656, "tid": 21652, "ts": 64655790006.599, "ph": "X", "cat": "fee", "dur": 10.0, "name": "_exists (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py:76)"}, {"pid": 19656, "tid": 21652, "ts": 64655789987.7, "ph": "X", "cat": "fee", "dur": 29.2, "name": "mktemp (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py:375)"}, {"pid": 19656, "tid": 21652, "ts": 64655789985.7, "ph": "X", "cat": "fee", "dur": 31.4, "name": "arbitrary_address (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:69)"}, {"pid": 19656, "tid": 21652, "ts": 64655790018.4, "ph": "X", "cat": "fee", "dur": 8.7, "name": "_winapi.CreateNamedPipe"}, {"pid": 19656, "tid": 21652, "ts": 64655790027.6, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_winapi.CreateFile"}, {"pid": 19656, "tid": 21652, "ts": 64655790032.199, "ph": "X", "cat": "fee", "dur": 1.4, "name": "_winapi.SetNamedPipeHandleState"}, {"pid": 19656, "tid": 21652, "ts": 64655790033.9, "ph": "X", "cat": "fee", "dur": 2.7, "name": "_winapi.ConnectNamedPipe"}, {"pid": 19656, "tid": 21652, "ts": 64655790036.8, "ph": "X", "cat": "fee", "dur": 0.799, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 21652, "ts": 64655790038.6, "ph": "X", "cat": "fee", "dur": 0.699, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:122)"}, {"pid": 19656, "tid": 21652, "ts": 64655790040.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:122)"}, {"pid": 19656, "tid": 21652, "ts": 64655789985.4, "ph": "X", "cat": "fee", "dur": 56.0, "name": "Pipe (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:540)"}, {"pid": 19656, "tid": 21652, "ts": 64655790044.4, "ph": "X", "cat": "fee", "dur": 0.299, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655790044.099, "ph": "X", "cat": "fee", "dur": 0.9, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655790046.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__init__ (<frozen importlib._bootstrap>:152)"}, {"pid": 19656, "tid": 21652, "ts": 64655790047.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_imp.acquire_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655790049.4, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_thread.allocate_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655790050.699, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_thread.allocate_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655790049.199, "ph": "X", "cat": "fee", "dur": 2.2, "name": "__init__ (<frozen importlib._bootstrap>:58)"}, {"pid": 19656, "tid": 21652, "ts": 64655790052.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_imp.release_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655790047.6, "ph": "X", "cat": "fee", "dur": 5.02, "name": "_get_module_lock (<frozen importlib._bootstrap>:166)"}, {"pid": 19656, "tid": 21652, "ts": 64655790053.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.get_ident"}, {"pid": 19656, "tid": 21652, "ts": 64655790054.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655790052.999, "ph": "X", "cat": "fee", "dur": 2.0, "name": "acquire (<frozen importlib._bootstrap>:87)"}, {"pid": 19656, "tid": 21652, "ts": 64655790047.5, "ph": "X", "cat": "fee", "dur": 7.6, "name": "__enter__ (<frozen importlib._bootstrap>:156)"}, {"pid": 19656, "tid": 21652, "ts": 64655790055.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "dict.get"}, {"pid": 19656, "tid": 21652, "ts": 64655790055.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655790057.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.acquire_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655790057.799, "ph": "X", "cat": "fee", "dur": 0.22, "name": "__enter__ (<frozen importlib._bootstrap>:874)"}, {"pid": 19656, "tid": 21652, "ts": 64655790058.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "find_spec (<frozen importlib._bootstrap>:736)"}, {"pid": 19656, "tid": 21652, "ts": 64655790058.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.release_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655790058.799, "ph": "X", "cat": "fee", "dur": 0.22, "name": "__exit__ (<frozen importlib._bootstrap>:878)"}, {"pid": 19656, "tid": 21652, "ts": 64655790059.52, "ph": "X", "cat": "fee", "dur": 0.08, "name": "_imp.acquire_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655790059.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__enter__ (<frozen importlib._bootstrap>:874)"}, {"pid": 19656, "tid": 21652, "ts": 64655790060.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_imp.is_frozen"}, {"pid": 19656, "tid": 21652, "ts": 64655790059.9, "ph": "X", "cat": "fee", "dur": 0.419, "name": "find_spec (<frozen importlib._bootstrap>:811)"}, {"pid": 19656, "tid": 21652, "ts": 64655790060.599, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_imp.release_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655790060.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__exit__ (<frozen importlib._bootstrap>:878)"}, {"pid": 19656, "tid": 21652, "ts": 64655790061.02, "ph": "X", "cat": "fee", "dur": 0.079, "name": "_imp.acquire_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655790061.0, "ph": "X", "cat": "fee", "dur": 0.119, "name": "__enter__ (<frozen importlib._bootstrap>:874)"}, {"pid": 19656, "tid": 21652, "ts": 64655790062.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655790062.599, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_path_importer_cache (<frozen importlib._bootstrap_external>:1337)"}, {"pid": 19656, "tid": 21652, "ts": 64655790063.099, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 21652, "ts": 64655790063.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655790064.3, "ph": "X", "cat": "fee", "dur": 28.3, "name": "nt.stat"}, {"pid": 19656, "tid": 21652, "ts": 64655790064.2, "ph": "X", "cat": "fee", "dur": 28.599, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 19656, "tid": 21652, "ts": 64655790094.1, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_relax_case (<frozen importlib._bootstrap_external>:64)"}, {"pid": 19656, "tid": 21652, "ts": 64655790095.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790097.7, "ph": "X", "cat": "fee", "dur": 0.399, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790098.3, "ph": "X", "cat": "fee", "dur": 0.299, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790098.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655790099.9, "ph": "X", "cat": "fee", "dur": 0.199, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790100.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790100.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790100.7, "ph": "X", "cat": "fee", "dur": 0.199, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655790101.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655790101.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655790101.3, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 19656, "tid": 21652, "ts": 64655790102.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790102.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655790095.5, "ph": "X", "cat": "fee", "dur": 7.399, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 19656, "tid": 21652, "ts": 64655790103.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655790104.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790105.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790105.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790106.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655790106.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790107.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790107.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790107.499, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655790107.999, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655790108.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655790107.9, "ph": "X", "cat": "fee", "dur": 0.4, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 19656, "tid": 21652, "ts": 64655790108.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790108.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655790104.5, "ph": "X", "cat": "fee", "dur": 4.399, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 19656, "tid": 21652, "ts": 64655790109.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655790109.999, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790110.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790110.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790111.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655790111.799, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790112.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790112.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790112.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655790112.799, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655790112.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655790112.7, "ph": "X", "cat": "fee", "dur": 0.4, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 19656, "tid": 21652, "ts": 64655790113.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790113.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655790109.9, "ph": "X", "cat": "fee", "dur": 3.7, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 19656, "tid": 21652, "ts": 64655790113.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655790115.2, "ph": "X", "cat": "fee", "dur": 25.0, "name": "nt.stat"}, {"pid": 19656, "tid": 21652, "ts": 64655790115.099, "ph": "X", "cat": "fee", "dur": 25.3, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 19656, "tid": 21652, "ts": 64655790114.9, "ph": "X", "cat": "fee", "dur": 26.299, "name": "_path_is_mode_type (<frozen importlib._bootstrap_external>:145)"}, {"pid": 19656, "tid": 21652, "ts": 64655790114.8, "ph": "X", "cat": "fee", "dur": 26.7, "name": "_path_isfile (<frozen importlib._bootstrap_external>:154)"}, {"pid": 19656, "tid": 21652, "ts": 64655790142.4, "ph": "X", "cat": "fee", "dur": 0.299, "name": "__init__ (<frozen importlib._bootstrap_external>:1006)"}, {"pid": 19656, "tid": 21652, "ts": 64655790143.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655790144.3, "ph": "X", "cat": "fee", "dur": 0.599, "name": "__init__ (<frozen importlib._bootstrap>:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655790143.1, "ph": "X", "cat": "fee", "dur": 2.5, "name": "spec_from_file_location (<frozen importlib._bootstrap_external>:696)"}, {"pid": 19656, "tid": 21652, "ts": 64655790142.0, "ph": "X", "cat": "fee", "dur": 3.8, "name": "_get_spec (<frozen importlib._bootstrap_external>:1500)"}, {"pid": 19656, "tid": 21652, "ts": 64655790063.6, "ph": "X", "cat": "fee", "dur": 82.399, "name": "find_spec (<frozen importlib._bootstrap_external>:1505)"}, {"pid": 19656, "tid": 21652, "ts": 64655790061.7, "ph": "X", "cat": "fee", "dur": 84.799, "name": "_get_spec (<frozen importlib._bootstrap_external>:1374)"}, {"pid": 19656, "tid": 21652, "ts": 64655790061.4, "ph": "X", "cat": "fee", "dur": 85.4, "name": "find_spec (<frozen importlib._bootstrap_external>:1406)"}, {"pid": 19656, "tid": 21652, "ts": 64655790147.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_imp.release_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655790147.2, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__exit__ (<frozen importlib._bootstrap>:878)"}, {"pid": 19656, "tid": 21652, "ts": 64655790056.9, "ph": "X", "cat": "fee", "dur": 91.2, "name": "_find_spec (<frozen importlib._bootstrap>:901)"}, {"pid": 19656, "tid": 21652, "ts": 64655790148.6, "ph": "X", "cat": "fee", "dur": 0.299, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 21652, "ts": 64655790149.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 21652, "ts": 64655790149.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "create_module (<frozen importlib._bootstrap_external>:841)"}, {"pid": 19656, "tid": 21652, "ts": 64655790149.799, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_new_module (<frozen importlib._bootstrap>:35)"}, {"pid": 19656, "tid": 21652, "ts": 64655790151.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655790151.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655790151.599, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655790152.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655790151.8, "ph": "X", "cat": "fee", "dur": 1.0, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655790153.2, "ph": "X", "cat": "fee", "dur": 1.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655790154.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "has_location (<frozen importlib._bootstrap>:406)"}, {"pid": 19656, "tid": 21652, "ts": 64655790154.9, "ph": "X", "cat": "fee", "dur": 0.699, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655790155.899, "ph": "X", "cat": "fee", "dur": 0.6, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655790157.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790158.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655790159.699, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rfind"}, {"pid": 19656, "tid": 21652, "ts": 64655790159.5, "ph": "X", "cat": "fee", "dur": 0.599, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 19656, "tid": 21652, "ts": 64655790160.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rfind"}, {"pid": 19656, "tid": 21652, "ts": 64655790160.12, "ph": "X", "cat": "fee", "dur": 0.38, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 19656, "tid": 21652, "ts": 64655790160.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 19656, "tid": 21652, "ts": 64655790159.1, "ph": "X", "cat": "fee", "dur": 1.9, "name": "builtins.max"}, {"pid": 19656, "tid": 21652, "ts": 64655790158.5, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_path_split (<frozen importlib._bootstrap_external>:127)"}, {"pid": 19656, "tid": 21652, "ts": 64655790161.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655790162.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655790164.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790165.8, "ph": "X", "cat": "fee", "dur": 0.199, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790166.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790166.299, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655790167.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790167.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790167.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790167.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655790168.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790168.319, "ph": "X", "cat": "fee", "dur": 0.18, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790168.52, "ph": "X", "cat": "fee", "dur": 0.08, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790168.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655790169.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655790169.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655790169.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655790169.1, "ph": "X", "cat": "fee", "dur": 0.699, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 19656, "tid": 21652, "ts": 64655790170.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790170.099, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655790164.1, "ph": "X", "cat": "fee", "dur": 6.3, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 19656, "tid": 21652, "ts": 64655790158.1, "ph": "X", "cat": "fee", "dur": 12.7, "name": "cache_from_source (<frozen importlib._bootstrap_external>:361)"}, {"pid": 19656, "tid": 21652, "ts": 64655790157.1, "ph": "X", "cat": "fee", "dur": 13.999, "name": "_get_cached (<frozen importlib._bootstrap_external>:491)"}, {"pid": 19656, "tid": 21652, "ts": 64655790156.7, "ph": "X", "cat": "fee", "dur": 14.7, "name": "cached (<frozen importlib._bootstrap>:385)"}, {"pid": 19656, "tid": 21652, "ts": 64655790171.599, "ph": "X", "cat": "fee", "dur": 0.2, "name": "cached (<frozen importlib._bootstrap>:385)"}, {"pid": 19656, "tid": 21652, "ts": 64655790150.799, "ph": "X", "cat": "fee", "dur": 21.1, "name": "_init_module_attrs (<frozen importlib._bootstrap>:486)"}, {"pid": 19656, "tid": 21652, "ts": 64655790149.0, "ph": "X", "cat": "fee", "dur": 23.099, "name": "module_from_spec (<frozen importlib._bootstrap>:558)"}, {"pid": 19656, "tid": 21652, "ts": 64655790173.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "get_filename (<frozen importlib._bootstrap_external>:1031)"}, {"pid": 19656, "tid": 21652, "ts": 64655790173.3, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_check_name_wrapper (<frozen importlib._bootstrap_external>:523)"}, {"pid": 19656, "tid": 21652, "ts": 64655790174.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655790175.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rfind"}, {"pid": 19656, "tid": 21652, "ts": 64655790175.399, "ph": "X", "cat": "fee", "dur": 0.4, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 19656, "tid": 21652, "ts": 64655790176.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rfind"}, {"pid": 19656, "tid": 21652, "ts": 64655790175.899, "ph": "X", "cat": "fee", "dur": 0.3, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 19656, "tid": 21652, "ts": 64655790176.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 19656, "tid": 21652, "ts": 64655790175.2, "ph": "X", "cat": "fee", "dur": 1.299, "name": "builtins.max"}, {"pid": 19656, "tid": 21652, "ts": 64655790174.899, "ph": "X", "cat": "fee", "dur": 1.9, "name": "_path_split (<frozen importlib._bootstrap_external>:127)"}, {"pid": 19656, "tid": 21652, "ts": 64655790177.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655790177.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655790178.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790179.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790179.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790180.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655790180.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790180.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790181.019, "ph": "X", "cat": "fee", "dur": 0.08, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790181.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655790181.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790181.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790182.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790182.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655790182.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655790182.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655790182.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655790182.6, "ph": "X", "cat": "fee", "dur": 0.52, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 19656, "tid": 21652, "ts": 64655790183.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790183.499, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655790178.5, "ph": "X", "cat": "fee", "dur": 5.199, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 19656, "tid": 21652, "ts": 64655790174.5, "ph": "X", "cat": "fee", "dur": 9.4, "name": "cache_from_source (<frozen importlib._bootstrap_external>:361)"}, {"pid": 19656, "tid": 21652, "ts": 64655790184.6, "ph": "X", "cat": "fee", "dur": 25.099, "name": "nt.stat"}, {"pid": 19656, "tid": 21652, "ts": 64655790184.5, "ph": "X", "cat": "fee", "dur": 25.399, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 19656, "tid": 21652, "ts": 64655790184.4, "ph": "X", "cat": "fee", "dur": 26.1, "name": "path_stats (<frozen importlib._bootstrap_external>:1077)"}, {"pid": 19656, "tid": 21652, "ts": 64655790212.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655790212.7, "ph": "X", "cat": "fee", "dur": 111.599, "name": "io.open_code"}, {"pid": 19656, "tid": 21652, "ts": 64655790325.4, "ph": "X", "cat": "fee", "dur": 23.8, "name": "_io.BufferedReader.read"}, {"pid": 19656, "tid": 21652, "ts": 64655790349.5, "ph": "X", "cat": "fee", "dur": 7.3, "name": "_io.BufferedReader.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655790211.8, "ph": "X", "cat": "fee", "dur": 145.3, "name": "get_data (<frozen importlib._bootstrap_external>:1036)"}, {"pid": 19656, "tid": 21652, "ts": 64655790360.199, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790360.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790361.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "type.from_bytes"}, {"pid": 19656, "tid": 21652, "ts": 64655790360.8, "ph": "X", "cat": "fee", "dur": 0.899, "name": "_unpack_uint32 (<frozen importlib._bootstrap_external>:79)"}, {"pid": 19656, "tid": 21652, "ts": 64655790359.399, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_classify_pyc (<frozen importlib._bootstrap_external>:560)"}, {"pid": 19656, "tid": 21652, "ts": 64655790364.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790364.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "type.from_bytes"}, {"pid": 19656, "tid": 21652, "ts": 64655790363.999, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_unpack_uint32 (<frozen importlib._bootstrap_external>:79)"}, {"pid": 19656, "tid": 21652, "ts": 64655790364.92, "ph": "X", "cat": "fee", "dur": 0.079, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790365.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "type.from_bytes"}, {"pid": 19656, "tid": 21652, "ts": 64655790364.9, "ph": "X", "cat": "fee", "dur": 0.32, "name": "_unpack_uint32 (<frozen importlib._bootstrap_external>:79)"}, {"pid": 19656, "tid": 21652, "ts": 64655790363.9, "ph": "X", "cat": "fee", "dur": 1.5, "name": "_validate_timestamp_pyc (<frozen importlib._bootstrap_external>:593)"}, {"pid": 19656, "tid": 21652, "ts": 64655790366.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655790366.999, "ph": "X", "cat": "fee", "dur": 51.1, "name": "marshal.loads"}, {"pid": 19656, "tid": 21652, "ts": 64655790418.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655790418.999, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655790419.6, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_imp._fix_co_filename"}, {"pid": 19656, "tid": 21652, "ts": 64655790366.8, "ph": "X", "cat": "fee", "dur": 54.0, "name": "_compile_bytecode (<frozen importlib._bootstrap_external>:645)"}, {"pid": 19656, "tid": 21652, "ts": 64655790173.0, "ph": "X", "cat": "fee", "dur": 247.999, "name": "get_code (<frozen importlib._bootstrap_external>:916)"}, {"pid": 19656, "tid": 21652, "ts": 64655790426.8, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655790426.5, "ph": "X", "cat": "fee", "dur": 1.0, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655790428.599, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655790428.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 21652, "ts": 64655790428.3, "ph": "X", "cat": "fee", "dur": 0.799, "name": "_handle_fromlist (<frozen importlib._bootstrap>:1033)"}, {"pid": 19656, "tid": 21652, "ts": 64655790429.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655790429.6, "ph": "X", "cat": "fee", "dur": 0.299, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655790430.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655790430.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 21652, "ts": 64655790430.2, "ph": "X", "cat": "fee", "dur": 0.599, "name": "_handle_fromlist (<frozen importlib._bootstrap>:1033)"}, {"pid": 19656, "tid": 21652, "ts": 64655790431.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655790431.1, "ph": "X", "cat": "fee", "dur": 0.299, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655790431.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655790431.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 21652, "ts": 64655790431.6, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_handle_fromlist (<frozen importlib._bootstrap>:1033)"}, {"pid": 19656, "tid": 21652, "ts": 64655790436.8, "ph": "X", "cat": "fee", "dur": 3.199, "name": "SemLock (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:46)"}, {"pid": 19656, "tid": 21652, "ts": 64655790436.199, "ph": "X", "cat": "fee", "dur": 63.6, "name": "builtins.__build_class__"}, {"pid": 19656, "tid": 21652, "ts": 64655790501.9, "ph": "X", "cat": "fee", "dur": 0.499, "name": "Semaphore (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:123)"}, {"pid": 19656, "tid": 21652, "ts": 64655790500.4, "ph": "X", "cat": "fee", "dur": 9.1, "name": "builtins.__build_class__"}, {"pid": 19656, "tid": 21652, "ts": 64655790510.2, "ph": "X", "cat": "fee", "dur": 0.299, "name": "BoundedSemaphore (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:142)"}, {"pid": 19656, "tid": 21652, "ts": 64655790509.8, "ph": "X", "cat": "fee", "dur": 9.299, "name": "builtins.__build_class__"}, {"pid": 19656, "tid": 21652, "ts": 64655790519.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "Lock (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:159)"}, {"pid": 19656, "tid": 21652, "ts": 64655790519.3, "ph": "X", "cat": "fee", "dur": 7.2, "name": "builtins.__build_class__"}, {"pid": 19656, "tid": 21652, "ts": 64655790527.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "RLock (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:184)"}, {"pid": 19656, "tid": 21652, "ts": 64655790526.8, "ph": "X", "cat": "fee", "dur": 5.7, "name": "builtins.__build_class__"}, {"pid": 19656, "tid": 21652, "ts": 64655790533.1, "ph": "X", "cat": "fee", "dur": 1.099, "name": "Condition (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:210)"}, {"pid": 19656, "tid": 21652, "ts": 64655790532.799, "ph": "X", "cat": "fee", "dur": 8.2, "name": "builtins.__build_class__"}, {"pid": 19656, "tid": 21652, "ts": 64655790541.5, "ph": "X", "cat": "fee", "dur": 0.6, "name": "Event (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:321)"}, {"pid": 19656, "tid": 21652, "ts": 64655790541.2, "ph": "X", "cat": "fee", "dur": 8.1, "name": "builtins.__build_class__"}, {"pid": 19656, "tid": 21652, "ts": 64655790553.0, "ph": "X", "cat": "fee", "dur": 0.4, "name": "property.setter"}, {"pid": 19656, "tid": 21652, "ts": 64655790554.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "property.setter"}, {"pid": 19656, "tid": 21652, "ts": 64655790550.5, "ph": "X", "cat": "fee", "dur": 3.8, "name": "Barrier (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:360)"}, {"pid": 19656, "tid": 21652, "ts": 64655790550.0, "ph": "X", "cat": "fee", "dur": 10.899, "name": "builtins.__build_class__"}, {"pid": 19656, "tid": 21652, "ts": 64655790423.299, "ph": "X", "cat": "fee", "dur": 137.7, "name": "<module> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:10)"}, {"pid": 19656, "tid": 21652, "ts": 64655790422.6, "ph": "X", "cat": "fee", "dur": 138.599, "name": "builtins.exec"}, {"pid": 19656, "tid": 21652, "ts": 64655790422.4, "ph": "X", "cat": "fee", "dur": 138.9, "name": "_call_with_frames_removed (<frozen importlib._bootstrap>:220)"}, {"pid": 19656, "tid": 21652, "ts": 64655790172.8, "ph": "X", "cat": "fee", "dur": 388.899, "name": "exec_module (<frozen importlib._bootstrap_external>:844)"}, {"pid": 19656, "tid": 21652, "ts": 64655790563.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "dict.pop"}, {"pid": 19656, "tid": 21652, "ts": 64655790564.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655790148.4, "ph": "X", "cat": "fee", "dur": 416.7, "name": "_load_unlocked (<frozen importlib._bootstrap>:659)"}, {"pid": 19656, "tid": 21652, "ts": 64655790565.8, "ph": "X", "cat": "fee", "dur": 0.199, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655790566.4, "ph": "X", "cat": "fee", "dur": 0.599, "name": "builtins.setattr"}, {"pid": 19656, "tid": 21652, "ts": 64655790055.8, "ph": "X", "cat": "fee", "dur": 511.299, "name": "_find_and_load_unlocked (<frozen importlib._bootstrap>:967)"}, {"pid": 19656, "tid": 21652, "ts": 64655790568.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.get_ident"}, {"pid": 19656, "tid": 21652, "ts": 64655790569.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655790567.9, "ph": "X", "cat": "fee", "dur": 2.1, "name": "release (<frozen importlib._bootstrap>:112)"}, {"pid": 19656, "tid": 21652, "ts": 64655790567.6, "ph": "X", "cat": "fee", "dur": 2.5, "name": "__exit__ (<frozen importlib._bootstrap>:160)"}, {"pid": 19656, "tid": 21652, "ts": 64655790570.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.acquire_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655790571.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.get"}, {"pid": 19656, "tid": 21652, "ts": 64655790571.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_imp.release_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655790570.6, "ph": "X", "cat": "fee", "dur": 1.219, "name": "cb (<frozen importlib._bootstrap>:185)"}, {"pid": 19656, "tid": 21652, "ts": 64655790046.399, "ph": "X", "cat": "fee", "dur": 527.4, "name": "_find_and_load (<frozen importlib._bootstrap>:1002)"}, {"pid": 19656, "tid": 21652, "ts": 64655790576.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "get_context (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:187)"}, {"pid": 19656, "tid": 21652, "ts": 64655790578.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "get_start_method (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:197)"}, {"pid": 19656, "tid": 21652, "ts": 64655790580.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "current_process (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:37)"}, {"pid": 19656, "tid": 21652, "ts": 64655790583.8, "ph": "X", "cat": "fee", "dur": 0.199, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655790584.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655790591.7, "ph": "X", "cat": "fee", "dur": 0.399, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655790592.599, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655790593.3, "ph": "X", "cat": "fee", "dur": 6.7, "name": "Random.seed"}, {"pid": 19656, "tid": 21652, "ts": 64655790591.099, "ph": "X", "cat": "fee", "dur": 9.3, "name": "seed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:126)"}, {"pid": 19656, "tid": 21652, "ts": 64655790590.5, "ph": "X", "cat": "fee", "dur": 10.199, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:117)"}, {"pid": 19656, "tid": 21652, "ts": 64655790583.499, "ph": "X", "cat": "fee", "dur": 17.6, "name": "rng (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py:134)"}, {"pid": 19656, "tid": 21652, "ts": 64655790602.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790603.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655790603.4, "ph": "X", "cat": "fee", "dur": 0.599, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790604.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790602.9, "ph": "X", "cat": "fee", "dur": 1.4, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655790602.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655790605.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790605.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655790605.52, "ph": "X", "cat": "fee", "dur": 0.08, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790605.299, "ph": "X", "cat": "fee", "dur": 0.32, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655790605.0, "ph": "X", "cat": "fee", "dur": 0.799, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655790606.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790606.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655790606.62, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790606.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655790606.0, "ph": "X", "cat": "fee", "dur": 0.799, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655790607.12, "ph": "X", "cat": "fee", "dur": 0.079, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790607.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655790607.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790607.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655790607.1, "ph": "X", "cat": "fee", "dur": 0.699, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655790608.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790608.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655790608.44, "ph": "X", "cat": "fee", "dur": 0.06, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790608.2, "ph": "X", "cat": "fee", "dur": 0.32, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655790608.0, "ph": "X", "cat": "fee", "dur": 0.599, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655790609.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790609.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655790609.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790609.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655790608.9, "ph": "X", "cat": "fee", "dur": 0.699, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655790609.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790610.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655790610.24, "ph": "X", "cat": "fee", "dur": 0.06, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790610.099, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655790609.8, "ph": "X", "cat": "fee", "dur": 0.7, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655790610.72, "ph": "X", "cat": "fee", "dur": 0.08, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790611.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655790611.099, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790610.9, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655790610.7, "ph": "X", "cat": "fee", "dur": 0.6, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655790601.999, "ph": "X", "cat": "fee", "dur": 9.4, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py:148)"}, {"pid": 19656, "tid": 21652, "ts": 64655790611.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655790583.1, "ph": "X", "cat": "fee", "dur": 28.999, "name": "__next__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py:145)"}, {"pid": 19656, "tid": 21652, "ts": 64655790582.6, "ph": "X", "cat": "fee", "dur": 29.799, "name": "builtins.next"}, {"pid": 19656, "tid": 21652, "ts": 64655790580.1, "ph": "X", "cat": "fee", "dur": 32.9, "name": "_make_name (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:114)"}, {"pid": 19656, "tid": 21652, "ts": 64655790619.7, "ph": "X", "cat": "fee", "dur": 0.299, "name": "debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:48)"}, {"pid": 19656, "tid": 21652, "ts": 64655790620.6, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_make_methods (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:90)"}, {"pid": 19656, "tid": 21652, "ts": 64655790578.0, "ph": "X", "cat": "fee", "dur": 43.9, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:50)"}, {"pid": 19656, "tid": 21652, "ts": 64655790577.2, "ph": "X", "cat": "fee", "dur": 44.899, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:161)"}, {"pid": 19656, "tid": 21652, "ts": 64655790043.599, "ph": "X", "cat": "fee", "dur": 578.9, "name": "Lock (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:65)"}, {"pid": 19656, "tid": 21652, "ts": 64655790623.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655790624.799, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655790624.5, "ph": "X", "cat": "fee", "dur": 0.7, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655790627.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "get_context (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:187)"}, {"pid": 19656, "tid": 21652, "ts": 64655790628.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "get_start_method (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:197)"}, {"pid": 19656, "tid": 21652, "ts": 64655790630.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "current_process (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:37)"}, {"pid": 19656, "tid": 21652, "ts": 64655790631.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655790631.7, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655790631.399, "ph": "X", "cat": "fee", "dur": 0.8, "name": "rng (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py:134)"}, {"pid": 19656, "tid": 21652, "ts": 64655790633.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790633.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655790633.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790634.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790633.6, "ph": "X", "cat": "fee", "dur": 0.599, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655790633.2, "ph": "X", "cat": "fee", "dur": 1.199, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655790634.699, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790635.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655790635.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790635.199, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790634.9, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655790634.6, "ph": "X", "cat": "fee", "dur": 0.8, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655790635.699, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790635.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655790636.02, "ph": "X", "cat": "fee", "dur": 0.079, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790635.8, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655790635.6, "ph": "X", "cat": "fee", "dur": 0.7, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655790636.52, "ph": "X", "cat": "fee", "dur": 0.079, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790636.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655790636.92, "ph": "X", "cat": "fee", "dur": 0.08, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790636.699, "ph": "X", "cat": "fee", "dur": 0.32, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655790636.5, "ph": "X", "cat": "fee", "dur": 0.699, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655790637.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790637.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655790637.84, "ph": "X", "cat": "fee", "dur": 0.059, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790637.699, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655790637.4, "ph": "X", "cat": "fee", "dur": 0.619, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655790638.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790638.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655790638.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790638.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790638.6, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655790638.3, "ph": "X", "cat": "fee", "dur": 0.799, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655790639.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790639.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655790639.74, "ph": "X", "cat": "fee", "dur": 0.06, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790639.6, "ph": "X", "cat": "fee", "dur": 0.22, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655790639.3, "ph": "X", "cat": "fee", "dur": 0.599, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655790640.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790640.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655790640.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790640.3, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655790640.1, "ph": "X", "cat": "fee", "dur": 0.7, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655790632.899, "ph": "X", "cat": "fee", "dur": 8.0, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py:148)"}, {"pid": 19656, "tid": 21652, "ts": 64655790641.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655790631.0, "ph": "X", "cat": "fee", "dur": 10.5, "name": "__next__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py:145)"}, {"pid": 19656, "tid": 21652, "ts": 64655790630.7, "ph": "X", "cat": "fee", "dur": 10.999, "name": "builtins.next"}, {"pid": 19656, "tid": 21652, "ts": 64655790629.8, "ph": "X", "cat": "fee", "dur": 12.2, "name": "_make_name (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:114)"}, {"pid": 19656, "tid": 21652, "ts": 64655790644.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:48)"}, {"pid": 19656, "tid": 21652, "ts": 64655790645.0, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_make_methods (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:90)"}, {"pid": 19656, "tid": 21652, "ts": 64655790628.4, "ph": "X", "cat": "fee", "dur": 17.5, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:50)"}, {"pid": 19656, "tid": 21652, "ts": 64655790628.0, "ph": "X", "cat": "fee", "dur": 18.0, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:144)"}, {"pid": 19656, "tid": 21652, "ts": 64655790624.1, "ph": "X", "cat": "fee", "dur": 22.199, "name": "BoundedSemaphore (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:85)"}, {"pid": 19656, "tid": 21652, "ts": 64655790648.0, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_thread.allocate_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655790649.2, "ph": "X", "cat": "fee", "dur": 3.0, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:228)"}, {"pid": 19656, "tid": 21652, "ts": 64655790647.7, "ph": "X", "cat": "fee", "dur": 6.8, "name": "_reset (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:71)"}, {"pid": 19656, "tid": 21652, "ts": 64655789984.7, "ph": "X", "cat": "fee", "dur": 670.1, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:37)"}, {"pid": 19656, "tid": 21652, "ts": 64655789983.2, "ph": "X", "cat": "fee", "dur": 671.9, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:160)"}, {"pid": 19656, "tid": 21652, "ts": 64655790658.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655790657.999, "ph": "X", "cat": "fee", "dur": 0.6, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655790660.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "get_context (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:187)"}, {"pid": 19656, "tid": 21652, "ts": 64655790662.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655790662.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.next"}, {"pid": 19656, "tid": 21652, "ts": 64655790663.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_get_candidate_names (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py:225)"}, {"pid": 19656, "tid": 21652, "ts": 64655790665.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655790665.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655790665.3, "ph": "X", "cat": "fee", "dur": 0.5, "name": "rng (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py:134)"}, {"pid": 19656, "tid": 21652, "ts": 64655790666.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790667.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655790667.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790667.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790667.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790667.2, "ph": "X", "cat": "fee", "dur": 0.899, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655790666.8, "ph": "X", "cat": "fee", "dur": 1.599, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655790668.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790669.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655790669.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790669.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655790668.7, "ph": "X", "cat": "fee", "dur": 0.699, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655790669.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790670.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655790670.04, "ph": "X", "cat": "fee", "dur": 0.06, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790670.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790670.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790669.899, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655790669.6, "ph": "X", "cat": "fee", "dur": 0.9, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655790670.82, "ph": "X", "cat": "fee", "dur": 0.08, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790671.199, "ph": "X", "cat": "fee", "dur": 0.02, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655790671.239, "ph": "X", "cat": "fee", "dur": 0.06, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790671.0, "ph": "X", "cat": "fee", "dur": 0.319, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655790670.8, "ph": "X", "cat": "fee", "dur": 0.6, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655790671.719, "ph": "X", "cat": "fee", "dur": 0.08, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790672.199, "ph": "X", "cat": "fee", "dur": 0.02, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655790672.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790672.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790672.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790672.1, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655790671.699, "ph": "X", "cat": "fee", "dur": 1.0, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655790673.02, "ph": "X", "cat": "fee", "dur": 0.079, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790673.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655790673.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790673.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655790673.0, "ph": "X", "cat": "fee", "dur": 0.699, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655790673.92, "ph": "X", "cat": "fee", "dur": 0.08, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790674.199, "ph": "X", "cat": "fee", "dur": 0.02, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655790674.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790674.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655790673.9, "ph": "X", "cat": "fee", "dur": 0.599, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655790674.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790675.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655790675.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790674.999, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655790674.7, "ph": "X", "cat": "fee", "dur": 0.62, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655790666.5, "ph": "X", "cat": "fee", "dur": 8.999, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py:148)"}, {"pid": 19656, "tid": 21652, "ts": 64655790675.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655790665.0, "ph": "X", "cat": "fee", "dur": 10.999, "name": "__next__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py:145)"}, {"pid": 19656, "tid": 21652, "ts": 64655790664.7, "ph": "X", "cat": "fee", "dur": 11.5, "name": "builtins.next"}, {"pid": 19656, "tid": 21652, "ts": 64655790677.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655790677.499, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655790678.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655790678.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790678.1, "ph": "X", "cat": "fee", "dur": 0.699, "name": "splitdrive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:124)"}, {"pid": 19656, "tid": 21652, "ts": 64655790679.72, "ph": "X", "cat": "fee", "dur": 0.079, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655790679.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790680.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655790680.299, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655790681.5, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.find"}, {"pid": 19656, "tid": 21652, "ts": 64655790682.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.find"}, {"pid": 19656, "tid": 21652, "ts": 64655790679.7, "ph": "X", "cat": "fee", "dur": 3.1, "name": "splitdrive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:124)"}, {"pid": 19656, "tid": 21652, "ts": 64655790677.1, "ph": "X", "cat": "fee", "dur": 6.499, "name": "join (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:77)"}, {"pid": 19656, "tid": 21652, "ts": 64655790684.2, "ph": "X", "cat": "fee", "dur": 12.9, "name": "nt.lstat"}, {"pid": 19656, "tid": 21652, "ts": 64655790684.099, "ph": "X", "cat": "fee", "dur": 13.8, "name": "_exists (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py:76)"}, {"pid": 19656, "tid": 21652, "ts": 64655790663.5, "ph": "X", "cat": "fee", "dur": 34.7, "name": "mktemp (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py:375)"}, {"pid": 19656, "tid": 21652, "ts": 64655790661.7, "ph": "X", "cat": "fee", "dur": 36.8, "name": "arbitrary_address (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:69)"}, {"pid": 19656, "tid": 21652, "ts": 64655790699.799, "ph": "X", "cat": "fee", "dur": 11.1, "name": "_winapi.CreateNamedPipe"}, {"pid": 19656, "tid": 21652, "ts": 64655790711.499, "ph": "X", "cat": "fee", "dur": 4.8, "name": "_winapi.CreateFile"}, {"pid": 19656, "tid": 21652, "ts": 64655790716.799, "ph": "X", "cat": "fee", "dur": 1.9, "name": "_winapi.SetNamedPipeHandleState"}, {"pid": 19656, "tid": 21652, "ts": 64655790718.9, "ph": "X", "cat": "fee", "dur": 3.199, "name": "_winapi.ConnectNamedPipe"}, {"pid": 19656, "tid": 21652, "ts": 64655790722.5, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 21652, "ts": 64655790724.7, "ph": "X", "cat": "fee", "dur": 0.899, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:122)"}, {"pid": 19656, "tid": 21652, "ts": 64655790726.199, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:122)"}, {"pid": 19656, "tid": 21652, "ts": 64655790661.5, "ph": "X", "cat": "fee", "dur": 65.1, "name": "Pipe (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:540)"}, {"pid": 19656, "tid": 21652, "ts": 64655790729.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655790728.8, "ph": "X", "cat": "fee", "dur": 0.8, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655790731.499, "ph": "X", "cat": "fee", "dur": 0.1, "name": "get_context (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:187)"}, {"pid": 19656, "tid": 21652, "ts": 64655790732.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "get_start_method (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:197)"}, {"pid": 19656, "tid": 21652, "ts": 64655790734.6, "ph": "X", "cat": "fee", "dur": 0.199, "name": "current_process (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:37)"}, {"pid": 19656, "tid": 21652, "ts": 64655790736.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655790736.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655790735.799, "ph": "X", "cat": "fee", "dur": 0.7, "name": "rng (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py:134)"}, {"pid": 19656, "tid": 21652, "ts": 64655790737.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790738.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655790738.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790738.599, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790738.099, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655790737.5, "ph": "X", "cat": "fee", "dur": 1.4, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655790739.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790739.599, "ph": "X", "cat": "fee", "dur": 0.02, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655790739.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790739.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790739.5, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655790739.2, "ph": "X", "cat": "fee", "dur": 0.8, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655790740.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790740.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655790740.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790740.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790740.5, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655790740.2, "ph": "X", "cat": "fee", "dur": 0.799, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655790741.32, "ph": "X", "cat": "fee", "dur": 0.079, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790741.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655790741.74, "ph": "X", "cat": "fee", "dur": 0.059, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790741.82, "ph": "X", "cat": "fee", "dur": 0.079, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790741.6, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655790741.3, "ph": "X", "cat": "fee", "dur": 0.8, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655790742.399, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790742.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655790742.74, "ph": "X", "cat": "fee", "dur": 0.059, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790742.899, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790742.6, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655790742.3, "ph": "X", "cat": "fee", "dur": 0.8, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655790743.419, "ph": "X", "cat": "fee", "dur": 0.08, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790743.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655790743.84, "ph": "X", "cat": "fee", "dur": 0.06, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790743.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655790743.399, "ph": "X", "cat": "fee", "dur": 0.7, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655790748.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790748.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655790748.499, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790748.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790748.3, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655790747.999, "ph": "X", "cat": "fee", "dur": 0.8, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655790749.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790749.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "int.bit_length"}, {"pid": 19656, "tid": 21652, "ts": 64655790749.499, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790749.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Random.getrandbits"}, {"pid": 19656, "tid": 21652, "ts": 64655790749.3, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)"}, {"pid": 19656, "tid": 21652, "ts": 64655790748.999, "ph": "X", "cat": "fee", "dur": 0.72, "name": "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)"}, {"pid": 19656, "tid": 21652, "ts": 64655790737.2, "ph": "X", "cat": "fee", "dur": 12.7, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py:148)"}, {"pid": 19656, "tid": 21652, "ts": 64655790750.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655790735.5, "ph": "X", "cat": "fee", "dur": 14.999, "name": "__next__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py:145)"}, {"pid": 19656, "tid": 21652, "ts": 64655790735.1, "ph": "X", "cat": "fee", "dur": 15.599, "name": "builtins.next"}, {"pid": 19656, "tid": 21652, "ts": 64655790734.2, "ph": "X", "cat": "fee", "dur": 17.099, "name": "_make_name (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:114)"}, {"pid": 19656, "tid": 21652, "ts": 64655790754.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:48)"}, {"pid": 19656, "tid": 21652, "ts": 64655790754.4, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_make_methods (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:90)"}, {"pid": 19656, "tid": 21652, "ts": 64655790732.6, "ph": "X", "cat": "fee", "dur": 22.499, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:50)"}, {"pid": 19656, "tid": 21652, "ts": 64655790732.2, "ph": "X", "cat": "fee", "dur": 23.1, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:161)"}, {"pid": 19656, "tid": 21652, "ts": 64655790728.3, "ph": "X", "cat": "fee", "dur": 27.299, "name": "Lock (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:65)"}, {"pid": 19656, "tid": 21652, "ts": 64655790661.1, "ph": "X", "cat": "fee", "dur": 95.399, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:340)"}, {"pid": 19656, "tid": 21652, "ts": 64655790657.6, "ph": "X", "cat": "fee", "dur": 99.1, "name": "SimpleQueue (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:110)"}, {"pid": 19656, "tid": 21652, "ts": 64655790758.899, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_init (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:206)"}, {"pid": 19656, "tid": 21652, "ts": 64655790759.8, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_thread.allocate_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655790761.2, "ph": "X", "cat": "fee", "dur": 2.3, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:228)"}, {"pid": 19656, "tid": 21652, "ts": 64655790764.1, "ph": "X", "cat": "fee", "dur": 1.4, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:228)"}, {"pid": 19656, "tid": 21652, "ts": 64655790765.999, "ph": "X", "cat": "fee", "dur": 1.3, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:228)"}, {"pid": 19656, "tid": 21652, "ts": 64655790758.2, "ph": "X", "cat": "fee", "dur": 9.7, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:34)"}, {"pid": 19656, "tid": 21652, "ts": 64655789863.399, "ph": "X", "cat": "fee", "dur": 904.9, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:573)"}, {"pid": 19656, "tid": 21652, "ts": 64655790769.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:632)"}, {"pid": 19656, "tid": 21652, "ts": 64655790776.5, "ph": "X", "cat": "fee", "dur": 2.0, "name": "_get_chunks (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:183)"}, {"pid": 19656, "tid": 21652, "ts": 64655790782.3, "ph": "X", "cat": "fee", "dur": 1.1, "name": "RLock (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:82)"}, {"pid": 19656, "tid": 21652, "ts": 64655790781.8, "ph": "X", "cat": "fee", "dur": 3.5, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:228)"}, {"pid": 19656, "tid": 21652, "ts": 64655790781.3, "ph": "X", "cat": "fee", "dur": 5.3, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:317)"}, {"pid": 19656, "tid": 21652, "ts": 64655790787.3, "ph": "X", "cat": "fee", "dur": 0.599, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:138)"}, {"pid": 19656, "tid": 21652, "ts": 64655790790.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 21652, "ts": 64655790789.799, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 21652, "ts": 64655790791.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "collections.deque.append"}, {"pid": 19656, "tid": 21652, "ts": 64655790790.799, "ph": "X", "cat": "fee", "dur": 0.9, "name": "_put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:213)"}, {"pid": 19656, "tid": 21652, "ts": 64655790793.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 21652, "ts": 64655790792.9, "ph": "X", "cat": "fee", "dur": 0.699, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 21652, "ts": 64655790792.5, "ph": "X", "cat": "fee", "dur": 2.3, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655790795.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655790795.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 21652, "ts": 64655790789.1, "ph": "X", "cat": "fee", "dur": 6.899, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:122)"}, {"pid": 19656, "tid": 21652, "ts": 64655790797.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655790798.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 19656, "tid": 21652, "ts": 64655790799.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790800.8, "ph": "X", "cat": "fee", "dur": 8.7, "name": "_winapi.WriteFile"}, {"pid": 19656, "tid": 21652, "ts": 64655790810.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 21652, "ts": 64655790810.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790800.4, "ph": "X", "cat": "fee", "dur": 10.6, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 19656, "tid": 21652, "ts": 64655790797.3, "ph": "X", "cat": "fee", "dur": 15.4, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 19656, "tid": 21652, "ts": 64655790796.8, "ph": "X", "cat": "fee", "dur": 16.2, "name": "wakeup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:77)"}, {"pid": 19656, "tid": 21652, "ts": 64655790815.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 21652, "ts": 64655790815.6, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 21652, "ts": 64655790816.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655790816.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 21652, "ts": 64655790815.1, "ph": "X", "cat": "fee", "dur": 1.9, "name": "acquire (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:404)"}, {"pid": 19656, "tid": 21652, "ts": 64655790817.199, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790819.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.next"}, {"pid": 19656, "tid": 21652, "ts": 64655790820.999, "ph": "X", "cat": "fee", "dur": 0.2, "name": "dict.copy"}, {"pid": 19656, "tid": 21652, "ts": 64655790821.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655790823.3, "ph": "X", "cat": "fee", "dur": 0.299, "name": "name (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:189)"}, {"pid": 19656, "tid": 21652, "ts": 64655790827.2, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:94)"}, {"pid": 19656, "tid": 21652, "ts": 64655790828.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:94)"}, {"pid": 19656, "tid": 21652, "ts": 64655790826.7, "ph": "X", "cat": "fee", "dur": 1.899, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655790830.9, "ph": "X", "cat": "fee", "dur": 0.199, "name": "set.add"}, {"pid": 19656, "tid": 21652, "ts": 64655790829.9, "ph": "X", "cat": "fee", "dur": 1.299, "name": "add (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_weakrefset.py:86)"}, {"pid": 19656, "tid": 21652, "ts": 64655790819.3, "ph": "X", "cat": "fee", "dur": 12.0, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:80)"}, {"pid": 19656, "tid": 21652, "ts": 64655790832.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 21652, "ts": 64655790833.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655790833.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "dict.get"}, {"pid": 19656, "tid": 21652, "ts": 64655790834.1, "ph": "X", "cat": "fee", "dur": 0.9, "name": "_cleanup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:61)"}, {"pid": 19656, "tid": 21652, "ts": 64655790838.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655790838.6, "ph": "X", "cat": "fee", "dur": 0.7, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655790840.999, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__init__ (<frozen importlib._bootstrap>:152)"}, {"pid": 19656, "tid": 21652, "ts": 64655790841.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_imp.acquire_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655790843.2, "ph": "X", "cat": "fee", "dur": 1.099, "name": "_thread.allocate_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655790844.5, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_thread.allocate_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655790843.1, "ph": "X", "cat": "fee", "dur": 2.199, "name": "__init__ (<frozen importlib._bootstrap>:58)"}, {"pid": 19656, "tid": 21652, "ts": 64655790846.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.release_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655790841.7, "ph": "X", "cat": "fee", "dur": 4.7, "name": "_get_module_lock (<frozen importlib._bootstrap>:166)"}, {"pid": 19656, "tid": 21652, "ts": 64655790846.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.get_ident"}, {"pid": 19656, "tid": 21652, "ts": 64655790847.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655790846.8, "ph": "X", "cat": "fee", "dur": 1.5, "name": "acquire (<frozen importlib._bootstrap>:87)"}, {"pid": 19656, "tid": 21652, "ts": 64655790841.499, "ph": "X", "cat": "fee", "dur": 6.9, "name": "__enter__ (<frozen importlib._bootstrap>:156)"}, {"pid": 19656, "tid": 21652, "ts": 64655790848.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.get"}, {"pid": 19656, "tid": 21652, "ts": 64655790849.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655790851.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_imp.acquire_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655790851.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__enter__ (<frozen importlib._bootstrap>:874)"}, {"pid": 19656, "tid": 21652, "ts": 64655790851.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "find_spec (<frozen importlib._bootstrap>:736)"}, {"pid": 19656, "tid": 21652, "ts": 64655790852.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_imp.release_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655790852.1, "ph": "X", "cat": "fee", "dur": 0.22, "name": "__exit__ (<frozen importlib._bootstrap>:878)"}, {"pid": 19656, "tid": 21652, "ts": 64655790852.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_imp.acquire_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655790852.7, "ph": "X", "cat": "fee", "dur": 0.199, "name": "__enter__ (<frozen importlib._bootstrap>:874)"}, {"pid": 19656, "tid": 21652, "ts": 64655790853.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_imp.is_frozen"}, {"pid": 19656, "tid": 21652, "ts": 64655790853.1, "ph": "X", "cat": "fee", "dur": 0.42, "name": "find_spec (<frozen importlib._bootstrap>:811)"}, {"pid": 19656, "tid": 21652, "ts": 64655790853.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_imp.release_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655790853.699, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__exit__ (<frozen importlib._bootstrap>:878)"}, {"pid": 19656, "tid": 21652, "ts": 64655790854.219, "ph": "X", "cat": "fee", "dur": 0.08, "name": "_imp.acquire_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655790854.199, "ph": "X", "cat": "fee", "dur": 0.12, "name": "__enter__ (<frozen importlib._bootstrap>:874)"}, {"pid": 19656, "tid": 21652, "ts": 64655790855.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655790855.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_path_importer_cache (<frozen importlib._bootstrap_external>:1337)"}, {"pid": 19656, "tid": 21652, "ts": 64655790856.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 21652, "ts": 64655790856.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655790857.6, "ph": "X", "cat": "fee", "dur": 30.7, "name": "nt.stat"}, {"pid": 19656, "tid": 21652, "ts": 64655790857.499, "ph": "X", "cat": "fee", "dur": 31.1, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 19656, "tid": 21652, "ts": 64655790889.8, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_relax_case (<frozen importlib._bootstrap_external>:64)"}, {"pid": 19656, "tid": 21652, "ts": 64655790891.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790893.6, "ph": "X", "cat": "fee", "dur": 0.399, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790894.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790894.6, "ph": "X", "cat": "fee", "dur": 1.399, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655790897.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790897.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790897.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790898.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655790898.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655790899.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655790898.7, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 19656, "tid": 21652, "ts": 64655790899.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790899.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655790891.199, "ph": "X", "cat": "fee", "dur": 9.1, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 19656, "tid": 21652, "ts": 64655790901.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655790902.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790903.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790903.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790903.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655790904.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790904.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790904.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790905.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655790905.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655790905.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655790905.3, "ph": "X", "cat": "fee", "dur": 0.4, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 19656, "tid": 21652, "ts": 64655790905.899, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790906.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655790902.099, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 19656, "tid": 21652, "ts": 64655790907.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655790907.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790908.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790908.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790908.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655790909.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790909.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790909.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790910.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655790910.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655790910.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655790910.3, "ph": "X", "cat": "fee", "dur": 0.399, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 19656, "tid": 21652, "ts": 64655790910.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790910.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655790907.5, "ph": "X", "cat": "fee", "dur": 3.6, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 19656, "tid": 21652, "ts": 64655790911.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655790912.4, "ph": "X", "cat": "fee", "dur": 26.8, "name": "nt.stat"}, {"pid": 19656, "tid": 21652, "ts": 64655790912.3, "ph": "X", "cat": "fee", "dur": 27.1, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 19656, "tid": 21652, "ts": 64655790912.1, "ph": "X", "cat": "fee", "dur": 27.999, "name": "_path_is_mode_type (<frozen importlib._bootstrap_external>:145)"}, {"pid": 19656, "tid": 21652, "ts": 64655790911.999, "ph": "X", "cat": "fee", "dur": 28.5, "name": "_path_isfile (<frozen importlib._bootstrap_external>:154)"}, {"pid": 19656, "tid": 21652, "ts": 64655790941.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__init__ (<frozen importlib._bootstrap_external>:1006)"}, {"pid": 19656, "tid": 21652, "ts": 64655790942.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655790943.3, "ph": "X", "cat": "fee", "dur": 0.599, "name": "__init__ (<frozen importlib._bootstrap>:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655790942.1, "ph": "X", "cat": "fee", "dur": 2.5, "name": "spec_from_file_location (<frozen importlib._bootstrap_external>:696)"}, {"pid": 19656, "tid": 21652, "ts": 64655790940.9, "ph": "X", "cat": "fee", "dur": 3.899, "name": "_get_spec (<frozen importlib._bootstrap_external>:1500)"}, {"pid": 19656, "tid": 21652, "ts": 64655790856.8, "ph": "X", "cat": "fee", "dur": 88.2, "name": "find_spec (<frozen importlib._bootstrap_external>:1505)"}, {"pid": 19656, "tid": 21652, "ts": 64655790855.0, "ph": "X", "cat": "fee", "dur": 90.5, "name": "_get_spec (<frozen importlib._bootstrap_external>:1374)"}, {"pid": 19656, "tid": 21652, "ts": 64655790854.699, "ph": "X", "cat": "fee", "dur": 91.1, "name": "find_spec (<frozen importlib._bootstrap_external>:1406)"}, {"pid": 19656, "tid": 21652, "ts": 64655790946.199, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_imp.release_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655790946.1, "ph": "X", "cat": "fee", "dur": 0.32, "name": "__exit__ (<frozen importlib._bootstrap>:878)"}, {"pid": 19656, "tid": 21652, "ts": 64655790850.3, "ph": "X", "cat": "fee", "dur": 96.6, "name": "_find_spec (<frozen importlib._bootstrap>:901)"}, {"pid": 19656, "tid": 21652, "ts": 64655790947.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 21652, "ts": 64655790947.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 21652, "ts": 64655790948.199, "ph": "X", "cat": "fee", "dur": 0.02, "name": "create_module (<frozen importlib._bootstrap_external>:841)"}, {"pid": 19656, "tid": 21652, "ts": 64655790948.5, "ph": "X", "cat": "fee", "dur": 0.699, "name": "_new_module (<frozen importlib._bootstrap>:35)"}, {"pid": 19656, "tid": 21652, "ts": 64655790949.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655790949.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655790950.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655790950.7, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655790950.499, "ph": "X", "cat": "fee", "dur": 0.8, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655790951.7, "ph": "X", "cat": "fee", "dur": 1.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655790953.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "has_location (<frozen importlib._bootstrap>:406)"}, {"pid": 19656, "tid": 21652, "ts": 64655790953.5, "ph": "X", "cat": "fee", "dur": 0.6, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655790954.5, "ph": "X", "cat": "fee", "dur": 0.6, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655790956.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790956.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655790958.3, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.rfind"}, {"pid": 19656, "tid": 21652, "ts": 64655790958.099, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 19656, "tid": 21652, "ts": 64655790959.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.rfind"}, {"pid": 19656, "tid": 21652, "ts": 64655790958.82, "ph": "X", "cat": "fee", "dur": 0.38, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 19656, "tid": 21652, "ts": 64655790959.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 19656, "tid": 21652, "ts": 64655790957.8, "ph": "X", "cat": "fee", "dur": 1.8, "name": "builtins.max"}, {"pid": 19656, "tid": 21652, "ts": 64655790957.2, "ph": "X", "cat": "fee", "dur": 3.199, "name": "_path_split (<frozen importlib._bootstrap_external>:127)"}, {"pid": 19656, "tid": 21652, "ts": 64655790960.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655790961.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655790963.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790964.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790964.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790965.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655790965.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790966.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790966.199, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790966.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655790966.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790967.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790967.22, "ph": "X", "cat": "fee", "dur": 0.18, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790967.499, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655790967.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655790968.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655790968.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655790967.9, "ph": "X", "cat": "fee", "dur": 0.599, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 19656, "tid": 21652, "ts": 64655790968.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790968.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655790962.8, "ph": "X", "cat": "fee", "dur": 6.4, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 19656, "tid": 21652, "ts": 64655790956.599, "ph": "X", "cat": "fee", "dur": 12.8, "name": "cache_from_source (<frozen importlib._bootstrap_external>:361)"}, {"pid": 19656, "tid": 21652, "ts": 64655790955.7, "ph": "X", "cat": "fee", "dur": 14.0, "name": "_get_cached (<frozen importlib._bootstrap_external>:491)"}, {"pid": 19656, "tid": 21652, "ts": 64655790955.299, "ph": "X", "cat": "fee", "dur": 14.7, "name": "cached (<frozen importlib._bootstrap>:385)"}, {"pid": 19656, "tid": 21652, "ts": 64655790970.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "cached (<frozen importlib._bootstrap>:385)"}, {"pid": 19656, "tid": 21652, "ts": 64655790949.4, "ph": "X", "cat": "fee", "dur": 21.099, "name": "_init_module_attrs (<frozen importlib._bootstrap>:486)"}, {"pid": 19656, "tid": 21652, "ts": 64655790947.8, "ph": "X", "cat": "fee", "dur": 22.9, "name": "module_from_spec (<frozen importlib._bootstrap>:558)"}, {"pid": 19656, "tid": 21652, "ts": 64655790972.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "get_filename (<frozen importlib._bootstrap_external>:1031)"}, {"pid": 19656, "tid": 21652, "ts": 64655790972.0, "ph": "X", "cat": "fee", "dur": 0.799, "name": "_check_name_wrapper (<frozen importlib._bootstrap_external>:523)"}, {"pid": 19656, "tid": 21652, "ts": 64655790973.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655790974.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rfind"}, {"pid": 19656, "tid": 21652, "ts": 64655790973.9, "ph": "X", "cat": "fee", "dur": 0.4, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 19656, "tid": 21652, "ts": 64655790974.4, "ph": "X", "cat": "fee", "dur": 0.199, "name": "str.rfind"}, {"pid": 19656, "tid": 21652, "ts": 64655790974.32, "ph": "X", "cat": "fee", "dur": 0.299, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 19656, "tid": 21652, "ts": 64655790974.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "<genexpr> (<frozen importlib._bootstrap_external>:129)"}, {"pid": 19656, "tid": 21652, "ts": 64655790973.799, "ph": "X", "cat": "fee", "dur": 1.1, "name": "builtins.max"}, {"pid": 19656, "tid": 21652, "ts": 64655790973.4, "ph": "X", "cat": "fee", "dur": 2.0, "name": "_path_split (<frozen importlib._bootstrap_external>:127)"}, {"pid": 19656, "tid": 21652, "ts": 64655790975.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655790976.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655790977.22, "ph": "X", "cat": "fee", "dur": 0.08, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790978.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790978.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790978.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655790979.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790979.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790979.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790980.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655790980.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790980.62, "ph": "X", "cat": "fee", "dur": 0.18, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790980.82, "ph": "X", "cat": "fee", "dur": 0.079, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655790981.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655790981.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655790981.699, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655790981.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655790981.399, "ph": "X", "cat": "fee", "dur": 0.6, "name": "<listcomp> (<frozen importlib._bootstrap_external>:114)"}, {"pid": 19656, "tid": 21652, "ts": 64655790982.199, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655790982.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655790977.2, "ph": "X", "cat": "fee", "dur": 5.3, "name": "_path_join (<frozen importlib._bootstrap_external>:91)"}, {"pid": 19656, "tid": 21652, "ts": 64655790973.1, "ph": "X", "cat": "fee", "dur": 9.599, "name": "cache_from_source (<frozen importlib._bootstrap_external>:361)"}, {"pid": 19656, "tid": 21652, "ts": 64655790983.5, "ph": "X", "cat": "fee", "dur": 25.299, "name": "nt.stat"}, {"pid": 19656, "tid": 21652, "ts": 64655790983.3, "ph": "X", "cat": "fee", "dur": 25.7, "name": "_path_stat (<frozen importlib._bootstrap_external>:135)"}, {"pid": 19656, "tid": 21652, "ts": 64655790983.199, "ph": "X", "cat": "fee", "dur": 26.4, "name": "path_stats (<frozen importlib._bootstrap_external>:1077)"}, {"pid": 19656, "tid": 21652, "ts": 64655791011.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655791012.0, "ph": "X", "cat": "fee", "dur": 117.0, "name": "io.open_code"}, {"pid": 19656, "tid": 21652, "ts": 64655791130.1, "ph": "X", "cat": "fee", "dur": 22.8, "name": "_io.BufferedReader.read"}, {"pid": 19656, "tid": 21652, "ts": 64655791153.2, "ph": "X", "cat": "fee", "dur": 7.2, "name": "_io.BufferedReader.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655791010.9, "ph": "X", "cat": "fee", "dur": 149.699, "name": "get_data (<frozen importlib._bootstrap_external>:1036)"}, {"pid": 19656, "tid": 21652, "ts": 64655791163.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655791164.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655791164.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "type.from_bytes"}, {"pid": 19656, "tid": 21652, "ts": 64655791164.1, "ph": "X", "cat": "fee", "dur": 0.92, "name": "_unpack_uint32 (<frozen importlib._bootstrap_external>:79)"}, {"pid": 19656, "tid": 21652, "ts": 64655791162.899, "ph": "X", "cat": "fee", "dur": 2.6, "name": "_classify_pyc (<frozen importlib._bootstrap_external>:560)"}, {"pid": 19656, "tid": 21652, "ts": 64655791167.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655791167.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "type.from_bytes"}, {"pid": 19656, "tid": 21652, "ts": 64655791167.199, "ph": "X", "cat": "fee", "dur": 0.42, "name": "_unpack_uint32 (<frozen importlib._bootstrap_external>:79)"}, {"pid": 19656, "tid": 21652, "ts": 64655791168.12, "ph": "X", "cat": "fee", "dur": 0.08, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655791168.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "type.from_bytes"}, {"pid": 19656, "tid": 21652, "ts": 64655791168.1, "ph": "X", "cat": "fee", "dur": 0.32, "name": "_unpack_uint32 (<frozen importlib._bootstrap_external>:79)"}, {"pid": 19656, "tid": 21652, "ts": 64655791167.0, "ph": "X", "cat": "fee", "dur": 1.599, "name": "_validate_timestamp_pyc (<frozen importlib._bootstrap_external>:593)"}, {"pid": 19656, "tid": 21652, "ts": 64655791169.2, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655791170.3, "ph": "X", "cat": "fee", "dur": 26.399, "name": "marshal.loads"}, {"pid": 19656, "tid": 21652, "ts": 64655791197.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655791197.7, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655791198.2, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_imp._fix_co_filename"}, {"pid": 19656, "tid": 21652, "ts": 64655791170.1, "ph": "X", "cat": "fee", "dur": 28.6, "name": "_compile_bytecode (<frozen importlib._bootstrap_external>:645)"}, {"pid": 19656, "tid": 21652, "ts": 64655790971.7, "ph": "X", "cat": "fee", "dur": 227.199, "name": "get_code (<frozen importlib._bootstrap_external>:916)"}, {"pid": 19656, "tid": 21652, "ts": 64655791204.9, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655791204.7, "ph": "X", "cat": "fee", "dur": 0.9, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655791208.1, "ph": "X", "cat": "fee", "dur": 0.199, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655791207.999, "ph": "X", "cat": "fee", "dur": 0.4, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655791209.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655791209.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 21652, "ts": 64655791208.9, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_handle_fromlist (<frozen importlib._bootstrap>:1033)"}, {"pid": 19656, "tid": 21652, "ts": 64655791210.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655791210.1, "ph": "X", "cat": "fee", "dur": 0.299, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655791210.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655791210.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 21652, "ts": 64655791210.6, "ph": "X", "cat": "fee", "dur": 0.419, "name": "_handle_fromlist (<frozen importlib._bootstrap>:1033)"}, {"pid": 19656, "tid": 21652, "ts": 64655791211.7, "ph": "X", "cat": "fee", "dur": 1.0, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655791212.9, "ph": "X", "cat": "fee", "dur": 0.199, "name": "str.lower"}, {"pid": 19656, "tid": 21652, "ts": 64655791213.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.endswith"}, {"pid": 19656, "tid": 21652, "ts": 64655791214.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_path_eq (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:22)"}, {"pid": 19656, "tid": 21652, "ts": 64655791215.899, "ph": "X", "cat": "fee", "dur": 1.1, "name": "Popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:38)"}, {"pid": 19656, "tid": 21652, "ts": 64655791215.3, "ph": "X", "cat": "fee", "dur": 9.8, "name": "builtins.__build_class__"}, {"pid": 19656, "tid": 21652, "ts": 64655791201.3, "ph": "X", "cat": "fee", "dur": 24.1, "name": "<module> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:1)"}, {"pid": 19656, "tid": 21652, "ts": 64655791200.7, "ph": "X", "cat": "fee", "dur": 24.899, "name": "builtins.exec"}, {"pid": 19656, "tid": 21652, "ts": 64655791200.399, "ph": "X", "cat": "fee", "dur": 25.4, "name": "_call_with_frames_removed (<frozen importlib._bootstrap>:220)"}, {"pid": 19656, "tid": 21652, "ts": 64655790971.5, "ph": "X", "cat": "fee", "dur": 254.499, "name": "exec_module (<frozen importlib._bootstrap_external>:844)"}, {"pid": 19656, "tid": 21652, "ts": 64655791226.799, "ph": "X", "cat": "fee", "dur": 0.3, "name": "dict.pop"}, {"pid": 19656, "tid": 21652, "ts": 64655791227.6, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_verbose_message (<frozen importlib._bootstrap>:231)"}, {"pid": 19656, "tid": 21652, "ts": 64655790947.199, "ph": "X", "cat": "fee", "dur": 281.0, "name": "_load_unlocked (<frozen importlib._bootstrap>:659)"}, {"pid": 19656, "tid": 21652, "ts": 64655791228.799, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655791229.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "builtins.setattr"}, {"pid": 19656, "tid": 21652, "ts": 64655790849.099, "ph": "X", "cat": "fee", "dur": 380.7, "name": "_find_and_load_unlocked (<frozen importlib._bootstrap>:967)"}, {"pid": 19656, "tid": 21652, "ts": 64655791230.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.get_ident"}, {"pid": 19656, "tid": 21652, "ts": 64655791232.099, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655791230.5, "ph": "X", "cat": "fee", "dur": 1.9, "name": "release (<frozen importlib._bootstrap>:112)"}, {"pid": 19656, "tid": 21652, "ts": 64655791230.3, "ph": "X", "cat": "fee", "dur": 2.2, "name": "__exit__ (<frozen importlib._bootstrap>:160)"}, {"pid": 19656, "tid": 21652, "ts": 64655791233.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.acquire_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655791233.599, "ph": "X", "cat": "fee", "dur": 0.2, "name": "dict.get"}, {"pid": 19656, "tid": 21652, "ts": 64655791234.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_imp.release_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655791233.099, "ph": "X", "cat": "fee", "dur": 1.1, "name": "cb (<frozen importlib._bootstrap>:185)"}, {"pid": 19656, "tid": 21652, "ts": 64655790840.7, "ph": "X", "cat": "fee", "dur": 395.0, "name": "_find_and_load (<frozen importlib._bootstrap>:1002)"}, {"pid": 19656, "tid": 21652, "ts": 64655791239.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "current_process (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:37)"}, {"pid": 19656, "tid": 21652, "ts": 64655791239.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655791239.0, "ph": "X", "cat": "fee", "dur": 1.199, "name": "_check_not_importing_main (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\spawn.py:132)"}, {"pid": 19656, "tid": 21652, "ts": 64655791240.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "current_process (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:37)"}, {"pid": 19656, "tid": 21652, "ts": 64655791241.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "authkey (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:213)"}, {"pid": 19656, "tid": 21652, "ts": 64655791242.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "list.copy"}, {"pid": 19656, "tid": 21652, "ts": 64655791243.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.index"}, {"pid": 19656, "tid": 21652, "ts": 64655791244.3, "ph": "X", "cat": "fee", "dur": 0.699, "name": "nt.getcwd"}, {"pid": 19656, "tid": 21652, "ts": 64655791245.5, "ph": "X", "cat": "fee", "dur": 0.5, "name": "get_start_method (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:249)"}, {"pid": 19656, "tid": 21652, "ts": 64655791246.1, "ph": "X", "cat": "fee", "dur": 0.799, "name": "dict.update"}, {"pid": 19656, "tid": 21652, "ts": 64655791247.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655791247.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655791248.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655791249.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655791249.4, "ph": "X", "cat": "fee", "dur": 0.199, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655791249.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655791250.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655791250.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655791250.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655791251.099, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655791250.3, "ph": "X", "cat": "fee", "dur": 1.9, "name": "splitdrive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:124)"}, {"pid": 19656, "tid": 21652, "ts": 64655791252.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655791252.899, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655791252.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_get_bothseps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:34)"}, {"pid": 19656, "tid": 21652, "ts": 64655791248.599, "ph": "X", "cat": "fee", "dur": 4.6, "name": "isabs (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:61)"}, {"pid": 19656, "tid": 21652, "ts": 64655791253.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655791254.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655791254.2, "ph": "X", "cat": "fee", "dur": 0.199, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655791254.419, "ph": "X", "cat": "fee", "dur": 0.08, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655791254.82, "ph": "X", "cat": "fee", "dur": 0.079, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655791255.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655791255.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655791255.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655791254.8, "ph": "X", "cat": "fee", "dur": 1.1, "name": "splitdrive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:124)"}, {"pid": 19656, "tid": 21652, "ts": 64655791256.0, "ph": "X", "cat": "fee", "dur": 0.199, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655791256.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.lstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655791256.9, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.split"}, {"pid": 19656, "tid": 21652, "ts": 64655791257.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655791258.199, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655791258.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655791258.699, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655791258.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655791259.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655791259.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655791259.499, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655791259.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655791253.7, "ph": "X", "cat": "fee", "dur": 6.399, "name": "normpath (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:450)"}, {"pid": 19656, "tid": 21652, "ts": 64655791238.699, "ph": "X", "cat": "fee", "dur": 21.7, "name": "get_preparation_data (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\spawn.py:150)"}, {"pid": 19656, "tid": 21652, "ts": 64655791260.8, "ph": "X", "cat": "fee", "dur": 15.599, "name": "_winapi.CreatePipe"}, {"pid": 19656, "tid": 21652, "ts": 64655791276.9, "ph": "X", "cat": "fee", "dur": 0.9, "name": "msvcrt.open_osfhandle"}, {"pid": 19656, "tid": 21652, "ts": 64655791278.3, "ph": "X", "cat": "fee", "dur": 0.199, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655791425.499, "ph": "X", "cat": "fee", "dur": 0.4, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655791426.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655791426.6, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655791427.499, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655791427.799, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655791425.1, "ph": "X", "cat": "fee", "dur": 3.699, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655791429.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "get_executable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\spawn.py:45)"}, {"pid": 19656, "tid": 21652, "ts": 64655791430.1, "ph": "X", "cat": "fee", "dur": 8.999, "name": "io.open"}, {"pid": 19656, "tid": 21652, "ts": 64655791440.0, "ph": "X", "cat": "fee", "dur": 1319.199, "name": "_winapi.CreateProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655792760.2, "ph": "X", "cat": "fee", "dur": 1.299, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655792767.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.next"}, {"pid": 19656, "tid": 21652, "ts": 64655792768.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655792765.2, "ph": "X", "cat": "fee", "dur": 4.2, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:186)"}, {"pid": 19656, "tid": 21652, "ts": 64655792770.6, "ph": "X", "cat": "fee", "dur": 1.299, "name": "set_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:354)"}, {"pid": 19656, "tid": 21652, "ts": 64655792785.2, "ph": "X", "cat": "fee", "dur": 0.399, "name": "dict.copy"}, {"pid": 19656, "tid": 21652, "ts": 64655792786.2, "ph": "X", "cat": "fee", "dur": 0.7, "name": "dict.update"}, {"pid": 19656, "tid": 21652, "ts": 64655792779.999, "ph": "X", "cat": "fee", "dur": 7.0, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 19656, "tid": 21652, "ts": 64655792796.4, "ph": "X", "cat": "fee", "dur": 0.599, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655792795.8, "ph": "X", "cat": "fee", "dur": 1.5, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655792800.5, "ph": "X", "cat": "fee", "dur": 0.4, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655792800.4, "ph": "X", "cat": "fee", "dur": 0.6, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655792794.9, "ph": "X", "cat": "fee", "dur": 7.3, "name": "__reduce__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:344)"}, {"pid": 19656, "tid": 21652, "ts": 64655792787.5, "ph": "X", "cat": "fee", "dur": 25.0, "name": "ForkingPickler.dump"}, {"pid": 19656, "tid": 21652, "ts": 64655792778.9, "ph": "X", "cat": "fee", "dur": 36.099, "name": "dump (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:58)"}, {"pid": 19656, "tid": 21652, "ts": 64655792817.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "dict.copy"}, {"pid": 19656, "tid": 21652, "ts": 64655792818.1, "ph": "X", "cat": "fee", "dur": 0.5, "name": "dict.update"}, {"pid": 19656, "tid": 21652, "ts": 64655792816.2, "ph": "X", "cat": "fee", "dur": 2.5, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 19656, "tid": 21652, "ts": 64655792825.399, "ph": "X", "cat": "fee", "dur": 0.5, "name": "mappingproxy.get"}, {"pid": 19656, "tid": 21652, "ts": 64655792826.2, "ph": "X", "cat": "fee", "dur": 0.799, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 21652, "ts": 64655792824.8, "ph": "X", "cat": "fee", "dur": 3.099, "name": "_slotnames (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\copyreg.py:103)"}, {"pid": 19656, "tid": 21652, "ts": 64655792833.3, "ph": "X", "cat": "fee", "dur": 0.199, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655792832.999, "ph": "X", "cat": "fee", "dur": 0.7, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655792835.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655792835.1, "ph": "X", "cat": "fee", "dur": 0.399, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655792832.7, "ph": "X", "cat": "fee", "dur": 3.4, "name": "__reduce__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:344)"}, {"pid": 19656, "tid": 21652, "ts": 64655792844.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655792844.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655792844.2, "ph": "X", "cat": "fee", "dur": 0.699, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655792843.6, "ph": "X", "cat": "fee", "dur": 2.299, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655792849.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655792850.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655792852.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655792851.7, "ph": "X", "cat": "fee", "dur": 0.799, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 21652, "ts": 64655792853.8, "ph": "X", "cat": "fee", "dur": 0.199, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655792854.5, "ph": "X", "cat": "fee", "dur": 3.5, "name": "_winapi.OpenProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655792858.599, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655792858.9, "ph": "X", "cat": "fee", "dur": 1.299, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655792860.7, "ph": "X", "cat": "fee", "dur": 0.699, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655792853.499, "ph": "X", "cat": "fee", "dur": 8.2, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:106)"}, {"pid": 19656, "tid": 21652, "ts": 64655792862.399, "ph": "X", "cat": "fee", "dur": 0.2, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655792862.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655792848.3, "ph": "X", "cat": "fee", "dur": 14.7, "name": "reduce_pipe_connection (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:961)"}, {"pid": 19656, "tid": 21652, "ts": 64655792867.199, "ph": "X", "cat": "fee", "dur": 0.1, "name": "mappingproxy.get"}, {"pid": 19656, "tid": 21652, "ts": 64655792867.6, "ph": "X", "cat": "fee", "dur": 0.599, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 21652, "ts": 64655792866.8, "ph": "X", "cat": "fee", "dur": 1.8, "name": "_slotnames (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\copyreg.py:103)"}, {"pid": 19656, "tid": 21652, "ts": 64655792871.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655792871.999, "ph": "X", "cat": "fee", "dur": 0.02, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655792873.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655792872.7, "ph": "X", "cat": "fee", "dur": 0.5, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 21652, "ts": 64655792873.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655792874.2, "ph": "X", "cat": "fee", "dur": 1.5, "name": "_winapi.OpenProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655792875.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655792876.099, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655792877.099, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655792873.7, "ph": "X", "cat": "fee", "dur": 4.1, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:106)"}, {"pid": 19656, "tid": 21652, "ts": 64655792878.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655792878.599, "ph": "X", "cat": "fee", "dur": 0.02, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655792871.3, "ph": "X", "cat": "fee", "dur": 7.499, "name": "reduce_pipe_connection (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:961)"}, {"pid": 19656, "tid": 21652, "ts": 64655792882.899, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655792882.8, "ph": "X", "cat": "fee", "dur": 0.42, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655792882.6, "ph": "X", "cat": "fee", "dur": 0.7, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655792884.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655792884.3, "ph": "X", "cat": "fee", "dur": 0.22, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655792885.42, "ph": "X", "cat": "fee", "dur": 0.08, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655792885.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655792886.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655792886.999, "ph": "X", "cat": "fee", "dur": 0.9, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655792886.5, "ph": "X", "cat": "fee", "dur": 1.499, "name": "duplicate (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:71)"}, {"pid": 19656, "tid": 21652, "ts": 64655792885.1, "ph": "X", "cat": "fee", "dur": 3.0, "name": "duplicate_for_child (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:97)"}, {"pid": 19656, "tid": 21652, "ts": 64655792882.2, "ph": "X", "cat": "fee", "dur": 6.6, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:100)"}, {"pid": 19656, "tid": 21652, "ts": 64655792893.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655792893.1, "ph": "X", "cat": "fee", "dur": 0.299, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655792892.9, "ph": "X", "cat": "fee", "dur": 0.6, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655792894.02, "ph": "X", "cat": "fee", "dur": 0.18, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655792894.0, "ph": "X", "cat": "fee", "dur": 0.22, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655792894.82, "ph": "X", "cat": "fee", "dur": 0.08, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655792894.8, "ph": "X", "cat": "fee", "dur": 0.12, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655792895.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655792895.7, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655792895.3, "ph": "X", "cat": "fee", "dur": 1.1, "name": "duplicate (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:71)"}, {"pid": 19656, "tid": 21652, "ts": 64655792894.599, "ph": "X", "cat": "fee", "dur": 1.9, "name": "duplicate_for_child (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:97)"}, {"pid": 19656, "tid": 21652, "ts": 64655792892.6, "ph": "X", "cat": "fee", "dur": 4.199, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:100)"}, {"pid": 19656, "tid": 21652, "ts": 64655792900.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655792900.5, "ph": "X", "cat": "fee", "dur": 0.22, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655792900.3, "ph": "X", "cat": "fee", "dur": 0.5, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655792899.899, "ph": "X", "cat": "fee", "dur": 1.3, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:356)"}, {"pid": 19656, "tid": 21652, "ts": 64655792903.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655792903.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655792904.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655792904.199, "ph": "X", "cat": "fee", "dur": 0.4, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 21652, "ts": 64655792905.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655792905.499, "ph": "X", "cat": "fee", "dur": 1.4, "name": "_winapi.OpenProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655792907.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655792907.3, "ph": "X", "cat": "fee", "dur": 0.599, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655792908.2, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655792905.0, "ph": "X", "cat": "fee", "dur": 3.799, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:106)"}, {"pid": 19656, "tid": 21652, "ts": 64655792909.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655792909.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655792902.8, "ph": "X", "cat": "fee", "dur": 6.9, "name": "reduce_pipe_connection (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:961)"}, {"pid": 19656, "tid": 21652, "ts": 64655792911.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655792912.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655792912.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655792912.5, "ph": "X", "cat": "fee", "dur": 0.32, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 21652, "ts": 64655792913.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655792913.599, "ph": "X", "cat": "fee", "dur": 1.2, "name": "_winapi.OpenProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655792915.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655792915.119, "ph": "X", "cat": "fee", "dur": 0.58, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655792915.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655792913.2, "ph": "X", "cat": "fee", "dur": 3.199, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:106)"}, {"pid": 19656, "tid": 21652, "ts": 64655792916.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655792917.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655792911.5, "ph": "X", "cat": "fee", "dur": 5.8, "name": "reduce_pipe_connection (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:961)"}, {"pid": 19656, "tid": 21652, "ts": 64655792919.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655792919.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655792919.399, "ph": "X", "cat": "fee", "dur": 0.7, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655792920.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655792920.5, "ph": "X", "cat": "fee", "dur": 0.199, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655792921.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655792921.199, "ph": "X", "cat": "fee", "dur": 0.2, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655792921.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655792922.199, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655792921.8, "ph": "X", "cat": "fee", "dur": 1.2, "name": "duplicate (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:71)"}, {"pid": 19656, "tid": 21652, "ts": 64655792921.0, "ph": "X", "cat": "fee", "dur": 2.099, "name": "duplicate_for_child (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:97)"}, {"pid": 19656, "tid": 21652, "ts": 64655792919.2, "ph": "X", "cat": "fee", "dur": 4.199, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:100)"}, {"pid": 19656, "tid": 21652, "ts": 64655792818.9, "ph": "X", "cat": "fee", "dur": 107.2, "name": "ForkingPickler.dump"}, {"pid": 19656, "tid": 21652, "ts": 64655792815.7, "ph": "X", "cat": "fee", "dur": 112.3, "name": "dump (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:58)"}, {"pid": 19656, "tid": 21652, "ts": 64655792928.4, "ph": "X", "cat": "fee", "dur": 0.5, "name": "set_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:354)"}, {"pid": 19656, "tid": 21652, "ts": 64655792929.0, "ph": "X", "cat": "fee", "dur": 10.0, "name": "_io.BufferedWriter.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655791238.0, "ph": "X", "cat": "fee", "dur": 1701.199, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:44)"}, {"pid": 19656, "tid": 21652, "ts": 64655790838.1, "ph": "X", "cat": "fee", "dur": 2103.0, "name": "_Popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:324)"}, {"pid": 19656, "tid": 21652, "ts": 64655792944.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "set.add"}, {"pid": 19656, "tid": 21652, "ts": 64655790832.399, "ph": "X", "cat": "fee", "dur": 2112.5, "name": "start (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:110)"}, {"pid": 19656, "tid": 21652, "ts": 64655792946.5, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 21652, "ts": 64655792945.9, "ph": "X", "cat": "fee", "dur": 1.2, "name": "ident (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:234)"}, {"pid": 19656, "tid": 21652, "ts": 64655790813.5, "ph": "X", "cat": "fee", "dur": 2134.0, "name": "_adjust_process_count (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:662)"}, {"pid": 19656, "tid": 21652, "ts": 64655792954.899, "ph": "X", "cat": "fee", "dur": 1.2, "name": "_newname (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:750)"}, {"pid": 19656, "tid": 21652, "ts": 64655792958.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.get_ident"}, {"pid": 19656, "tid": 21652, "ts": 64655792957.8, "ph": "X", "cat": "fee", "dur": 0.8, "name": "current_thread (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:1338)"}, {"pid": 19656, "tid": 21652, "ts": 64655792959.8, "ph": "X", "cat": "fee", "dur": 0.4, "name": "daemon (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:1127)"}, {"pid": 19656, "tid": 21652, "ts": 64655792961.7, "ph": "X", "cat": "fee", "dur": 1.5, "name": "_thread.allocate_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655792963.6, "ph": "X", "cat": "fee", "dur": 3.4, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:228)"}, {"pid": 19656, "tid": 21652, "ts": 64655792961.499, "ph": "X", "cat": "fee", "dur": 6.0, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:521)"}, {"pid": 19656, "tid": 21652, "ts": 64655792969.2, "ph": "X", "cat": "fee", "dur": 1.2, "name": "_make_invoke_excepthook (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:1209)"}, {"pid": 19656, "tid": 21652, "ts": 64655792972.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "set.add"}, {"pid": 19656, "tid": 21652, "ts": 64655792971.5, "ph": "X", "cat": "fee", "dur": 1.3, "name": "add (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_weakrefset.py:86)"}, {"pid": 19656, "tid": 21652, "ts": 64655792953.5, "ph": "X", "cat": "fee", "dur": 19.399, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:795)"}, {"pid": 19656, "tid": 21652, "ts": 64655792949.599, "ph": "X", "cat": "fee", "dur": 23.6, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:268)"}, {"pid": 19656, "tid": 21652, "ts": 64655792974.399, "ph": "X", "cat": "fee", "dur": 0.2, "name": "is_set (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:529)"}, {"pid": 19656, "tid": 21652, "ts": 64655792975.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.RLock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655792976.3, "ph": "X", "cat": "fee", "dur": 23.9, "name": "_thread.start_new_thread"}, {"pid": 19656, "tid": 21652, "ts": 64655793002.299, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 21652, "ts": 64655793002.0, "ph": "X", "cat": "fee", "dur": 0.7, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 21652, "ts": 64655793004.3, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 21652, "ts": 64655793004.099, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 21652, "ts": 64655793004.9, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_thread.allocate_lock"}, {"pid": 19656, "tid": 21652, "ts": 64655793006.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 21652, "ts": 64655793006.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "collections.deque.append"}, {"pid": 19656, "tid": 21652, "ts": 64655793007.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.release"}, {"pid": 19656, "tid": 21652, "ts": 64655793007.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_release_save (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:265)"}, {"pid": 19656, "tid": 17528, "ts": 64655793566.999, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_multiprocessing.SemLock._is_zero"}, {"pid": 19656, "tid": 17528, "ts": 64655793566.2, "ph": "X", "cat": "fee", "dur": 2.099, "name": "full (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:131)"}, {"pid": 19656, "tid": 17528, "ts": 64655793570.6, "ph": "X", "cat": "fee", "dur": 3.799, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64655793570.299, "ph": "X", "cat": "fee", "dur": 4.2, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64655793575.5, "ph": "X", "cat": "fee", "dur": 0.399, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64655793575.2, "ph": "X", "cat": "fee", "dur": 0.719, "name": "_qsize (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:209)"}, {"pid": 19656, "tid": 17528, "ts": 64655793577.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "collections.deque.popleft"}, {"pid": 19656, "tid": 17528, "ts": 64655793576.399, "ph": "X", "cat": "fee", "dur": 0.72, "name": "_get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:217)"}, {"pid": 19656, "tid": 17528, "ts": 64655793578.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64655793578.4, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 17528, "ts": 64655793578.0, "ph": "X", "cat": "fee", "dur": 2.4, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64655793581.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655793581.0, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64655793569.6, "ph": "X", "cat": "fee", "dur": 12.099, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:154)"}, {"pid": 19656, "tid": 17528, "ts": 64655793584.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.RLock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64655793583.9, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64655793585.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.RLock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655793585.1, "ph": "X", "cat": "fee", "dur": 0.32, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64655793583.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "set_running_or_notify_cancel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:486)"}, {"pid": 19656, "tid": 17528, "ts": 64655793587.299, "ph": "X", "cat": "fee", "dur": 0.7, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:151)"}, {"pid": 19656, "tid": 17528, "ts": 64655793589.0, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_multiprocessing.SemLock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64655793590.099, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64655793590.0, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64655793592.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:48)"}, {"pid": 19656, "tid": 17528, "ts": 64655793592.8, "ph": "X", "cat": "fee", "dur": 1.4, "name": "collections.deque.clear"}, {"pid": 19656, "tid": 17528, "ts": 64655793598.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.get_ident"}, {"pid": 19656, "tid": 17528, "ts": 64655793598.5, "ph": "X", "cat": "fee", "dur": 0.399, "name": "current_thread (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:1338)"}, {"pid": 19656, "tid": 17528, "ts": 64655793599.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "daemon (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:1127)"}, {"pid": 19656, "tid": 17528, "ts": 64655793600.999, "ph": "X", "cat": "fee", "dur": 1.6, "name": "_thread.allocate_lock"}, {"pid": 19656, "tid": 17528, "ts": 64655793605.1, "ph": "X", "cat": "fee", "dur": 3.399, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:228)"}, {"pid": 19656, "tid": 17528, "ts": 64655793600.9, "ph": "X", "cat": "fee", "dur": 8.0, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:521)"}, {"pid": 19656, "tid": 17528, "ts": 64655793610.8, "ph": "X", "cat": "fee", "dur": 0.9, "name": "_make_invoke_excepthook (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:1209)"}, {"pid": 19656, "tid": 17528, "ts": 64655793613.2, "ph": "X", "cat": "fee", "dur": 0.299, "name": "set.add"}, {"pid": 19656, "tid": 17528, "ts": 64655793612.399, "ph": "X", "cat": "fee", "dur": 1.2, "name": "add (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_weakrefset.py:86)"}, {"pid": 19656, "tid": 17528, "ts": 64655793597.0, "ph": "X", "cat": "fee", "dur": 16.7, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:795)"}, {"pid": 19656, "tid": 17528, "ts": 64655793615.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "is_set (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:529)"}, {"pid": 19656, "tid": 17528, "ts": 64655793614.8, "ph": "X", "cat": "fee", "dur": 0.8, "name": "daemon (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:1142)"}, {"pid": 19656, "tid": 17528, "ts": 64655793616.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:48)"}, {"pid": 19656, "tid": 17528, "ts": 64655793617.199, "ph": "X", "cat": "fee", "dur": 0.1, "name": "is_set (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:529)"}, {"pid": 19656, "tid": 17528, "ts": 64655793618.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.RLock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655793618.6, "ph": "X", "cat": "fee", "dur": 19.8, "name": "_thread.start_new_thread"}, {"pid": 19656, "tid": 17528, "ts": 64655793640.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64655793639.999, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64655793641.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64655793641.7, "ph": "X", "cat": "fee", "dur": 0.599, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 17528, "ts": 64655793642.5, "ph": "X", "cat": "fee", "dur": 0.9, "name": "_thread.allocate_lock"}, {"pid": 19656, "tid": 17528, "ts": 64655793643.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64655793644.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "collections.deque.append"}, {"pid": 19656, "tid": 17528, "ts": 64655793644.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.release"}, {"pid": 19656, "tid": 17528, "ts": 64655793644.4, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_release_save (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:265)"}, {"pid": 19656, "tid": 21652, "ts": 64655793007.899, "ph": "X", "cat": "fee", "dur": 640.9, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 21652, "ts": 64655793651.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 21652, "ts": 64655793650.5, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_acquire_restore (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:268)"}, {"pid": 19656, "tid": 21652, "ts": 64655793003.6, "ph": "X", "cat": "fee", "dur": 647.999, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:280)"}, {"pid": 19656, "tid": 21652, "ts": 64655793654.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655793653.8, "ph": "X", "cat": "fee", "dur": 0.6, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 21652, "ts": 64655793001.4, "ph": "X", "cat": "fee", "dur": 653.2, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:556)"}, {"pid": 19656, "tid": 21652, "ts": 64655792973.899, "ph": "X", "cat": "fee", "dur": 681.0, "name": "start (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:873)"}, {"pid": 19656, "tid": 21652, "ts": 64655793656.8, "ph": "X", "cat": "fee", "dur": 1.599, "name": "__setitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\weakref.py:428)"}, {"pid": 19656, "tid": 21652, "ts": 64655792948.6, "ph": "X", "cat": "fee", "dur": 709.899, "name": "_start_executor_manager_thread (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:654)"}, {"pid": 19656, "tid": 21652, "ts": 64655793658.799, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655790779.5, "ph": "X", "cat": "fee", "dur": 2879.5, "name": "submit (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:678)"}, {"pid": 19656, "tid": 21652, "ts": 64655793660.2, "ph": "X", "cat": "fee", "dur": 1.8, "name": "_get_chunks (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:183)"}, {"pid": 19656, "tid": 21652, "ts": 64655793666.1, "ph": "X", "cat": "fee", "dur": 1.799, "name": "RLock (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:82)"}, {"pid": 19656, "tid": 21652, "ts": 64655793665.7, "ph": "X", "cat": "fee", "dur": 4.2, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:228)"}, {"pid": 19656, "tid": 21652, "ts": 64655793665.099, "ph": "X", "cat": "fee", "dur": 5.7, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:317)"}, {"pid": 19656, "tid": 21652, "ts": 64655793671.6, "ph": "X", "cat": "fee", "dur": 0.599, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:138)"}, {"pid": 19656, "tid": 21652, "ts": 64655793673.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 21652, "ts": 64655793673.8, "ph": "X", "cat": "fee", "dur": 0.399, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 21652, "ts": 64655793675.499, "ph": "X", "cat": "fee", "dur": 0.1, "name": "collections.deque.append"}, {"pid": 19656, "tid": 21652, "ts": 64655793675.2, "ph": "X", "cat": "fee", "dur": 0.42, "name": "_put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:213)"}, {"pid": 19656, "tid": 21652, "ts": 64655793676.799, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 21652, "ts": 64655793676.7, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 21652, "ts": 64655793676.4, "ph": "X", "cat": "fee", "dur": 1.899, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655793679.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655793678.799, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 21652, "ts": 64655793673.3, "ph": "X", "cat": "fee", "dur": 5.999, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:122)"}, {"pid": 19656, "tid": 21652, "ts": 64655793681.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655793681.9, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 19656, "tid": 21652, "ts": 64655793683.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 5356, "ts": 64655793716.9, "ph": "X", "cat": "fee", "dur": 0.199, "name": "debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:48)"}, {"pid": 19656, "tid": 21652, "ts": 64655793685.399, "ph": "X", "cat": "fee", "dur": 36.5, "name": "_winapi.WriteFile"}, {"pid": 19656, "tid": 21652, "ts": 64655793722.899, "ph": "X", "cat": "fee", "dur": 1.6, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 21652, "ts": 64655793724.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655793684.6, "ph": "X", "cat": "fee", "dur": 40.4, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 19656, "tid": 21652, "ts": 64655793681.0, "ph": "X", "cat": "fee", "dur": 45.1, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 19656, "tid": 21652, "ts": 64655793680.299, "ph": "X", "cat": "fee", "dur": 46.1, "name": "wakeup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:77)"}, {"pid": 19656, "tid": 21652, "ts": 64655793728.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 21652, "ts": 64655793728.4, "ph": "X", "cat": "fee", "dur": 0.52, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 21652, "ts": 64655793729.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655793729.499, "ph": "X", "cat": "fee", "dur": 0.32, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 21652, "ts": 64655793727.6, "ph": "X", "cat": "fee", "dur": 2.399, "name": "acquire (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:404)"}, {"pid": 19656, "tid": 21652, "ts": 64655793730.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655793732.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.next"}, {"pid": 19656, "tid": 21652, "ts": 64655793733.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "dict.copy"}, {"pid": 19656, "tid": 21652, "ts": 64655793734.6, "ph": "X", "cat": "fee", "dur": 0.299, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655793735.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "name (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:189)"}, {"pid": 19656, "tid": 21652, "ts": 64655793739.0, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:94)"}, {"pid": 19656, "tid": 21652, "ts": 64655793740.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:94)"}, {"pid": 19656, "tid": 21652, "ts": 64655793738.4, "ph": "X", "cat": "fee", "dur": 2.199, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655793742.5, "ph": "X", "cat": "fee", "dur": 0.199, "name": "set.add"}, {"pid": 19656, "tid": 21652, "ts": 64655793741.899, "ph": "X", "cat": "fee", "dur": 0.9, "name": "add (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_weakrefset.py:86)"}, {"pid": 19656, "tid": 21652, "ts": 64655793732.5, "ph": "X", "cat": "fee", "dur": 10.4, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:80)"}, {"pid": 19656, "tid": 21652, "ts": 64655793744.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 21652, "ts": 64655793744.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655793744.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.get"}, {"pid": 19656, "tid": 21652, "ts": 64655793748.6, "ph": "X", "cat": "fee", "dur": 0.5, "name": "builtins.max"}, {"pid": 19656, "tid": 21652, "ts": 64655793749.7, "ph": "X", "cat": "fee", "dur": 1.5, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 21652, "ts": 64655793747.6, "ph": "X", "cat": "fee", "dur": 3.9, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 21652, "ts": 64655793746.8, "ph": "X", "cat": "fee", "dur": 4.999, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 21652, "ts": 64655793745.3, "ph": "X", "cat": "fee", "dur": 6.8, "name": "_cleanup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:61)"}, {"pid": 19656, "tid": 21652, "ts": 64655793753.8, "ph": "X", "cat": "fee", "dur": 0.299, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655793753.5, "ph": "X", "cat": "fee", "dur": 0.9, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655793758.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "current_process (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:37)"}, {"pid": 19656, "tid": 21652, "ts": 64655793759.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655793758.3, "ph": "X", "cat": "fee", "dur": 1.3, "name": "_check_not_importing_main (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\spawn.py:132)"}, {"pid": 19656, "tid": 21652, "ts": 64655793760.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "current_process (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:37)"}, {"pid": 19656, "tid": 21652, "ts": 64655793760.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "authkey (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:213)"}, {"pid": 19656, "tid": 21652, "ts": 64655793761.699, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.copy"}, {"pid": 19656, "tid": 21652, "ts": 64655793762.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.index"}, {"pid": 19656, "tid": 21652, "ts": 64655793763.1, "ph": "X", "cat": "fee", "dur": 1.6, "name": "nt.getcwd"}, {"pid": 19656, "tid": 21652, "ts": 64655793765.4, "ph": "X", "cat": "fee", "dur": 0.8, "name": "get_start_method (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:249)"}, {"pid": 19656, "tid": 21652, "ts": 64655793766.3, "ph": "X", "cat": "fee", "dur": 0.899, "name": "dict.update"}, {"pid": 19656, "tid": 21652, "ts": 64655793767.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655793768.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655793769.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655793769.6, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655793770.0, "ph": "X", "cat": "fee", "dur": 0.299, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655793770.5, "ph": "X", "cat": "fee", "dur": 0.799, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655793771.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655793772.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655793772.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655793772.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655793771.7, "ph": "X", "cat": "fee", "dur": 2.3, "name": "splitdrive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:124)"}, {"pid": 19656, "tid": 21652, "ts": 64655793774.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655793774.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655793774.8, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_get_bothseps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:34)"}, {"pid": 19656, "tid": 21652, "ts": 64655793769.0, "ph": "X", "cat": "fee", "dur": 6.3, "name": "isabs (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:61)"}, {"pid": 19656, "tid": 21652, "ts": 64655793776.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655793776.399, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655793776.6, "ph": "X", "cat": "fee", "dur": 0.299, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655793777.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655793777.399, "ph": "X", "cat": "fee", "dur": 0.02, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655793777.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655793777.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655793777.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655793777.3, "ph": "X", "cat": "fee", "dur": 1.2, "name": "splitdrive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:124)"}, {"pid": 19656, "tid": 21652, "ts": 64655793778.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655793779.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.lstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655793779.699, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.split"}, {"pid": 19656, "tid": 21652, "ts": 64655793780.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655793781.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655793781.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655793781.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655793781.699, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655793781.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655793782.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655793782.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655793782.5, "ph": "X", "cat": "fee", "dur": 0.299, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655793776.1, "ph": "X", "cat": "fee", "dur": 6.899, "name": "normpath (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:450)"}, {"pid": 19656, "tid": 21652, "ts": 64655793757.899, "ph": "X", "cat": "fee", "dur": 25.5, "name": "get_preparation_data (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\spawn.py:150)"}, {"pid": 19656, "tid": 17528, "ts": 64655793644.9, "ph": "X", "cat": "fee", "dur": 144.299, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64655793791.7, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64655793791.2, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_acquire_restore (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:268)"}, {"pid": 19656, "tid": 17528, "ts": 64655793641.5, "ph": "X", "cat": "fee", "dur": 151.099, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:280)"}, {"pid": 19656, "tid": 17528, "ts": 64655793796.2, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655793795.8, "ph": "X", "cat": "fee", "dur": 0.7, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64655793639.4, "ph": "X", "cat": "fee", "dur": 157.4, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:556)"}, {"pid": 19656, "tid": 17528, "ts": 64655793617.0, "ph": "X", "cat": "fee", "dur": 180.099, "name": "start (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:873)"}, {"pid": 19656, "tid": 17528, "ts": 64655793798.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:48)"}, {"pid": 19656, "tid": 17528, "ts": 64655793802.3, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 17528, "ts": 64655793804.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.next"}, {"pid": 19656, "tid": 17528, "ts": 64655793805.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "nt.getpid"}, {"pid": 19656, "tid": 17528, "ts": 64655793801.9, "ph": "X", "cat": "fee", "dur": 4.5, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:186)"}, {"pid": 19656, "tid": 17528, "ts": 64655793808.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 17528, "ts": 64655793809.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.next"}, {"pid": 19656, "tid": 17528, "ts": 64655793809.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 19656, "tid": 17528, "ts": 64655793808.299, "ph": "X", "cat": "fee", "dur": 1.8, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:186)"}, {"pid": 19656, "tid": 17528, "ts": 64655793591.099, "ph": "X", "cat": "fee", "dur": 219.3, "name": "_start_thread (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:164)"}, {"pid": 19656, "tid": 17528, "ts": 64655793811.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "collections.deque.append"}, {"pid": 19656, "tid": 17528, "ts": 64655793812.6, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64655793812.3, "ph": "X", "cat": "fee", "dur": 0.9, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 17528, "ts": 64655793811.8, "ph": "X", "cat": "fee", "dur": 2.8, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64655793815.5, "ph": "X", "cat": "fee", "dur": 1.199, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655793815.3, "ph": "X", "cat": "fee", "dur": 1.5, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64655793588.5, "ph": "X", "cat": "fee", "dur": 228.6, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:86)"}, {"pid": 19656, "tid": 17528, "ts": 64655793818.699, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_multiprocessing.SemLock._is_zero"}, {"pid": 19656, "tid": 17528, "ts": 64655793818.0, "ph": "X", "cat": "fee", "dur": 1.699, "name": "full (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:131)"}, {"pid": 19656, "tid": 17528, "ts": 64655793821.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64655793821.3, "ph": "X", "cat": "fee", "dur": 0.599, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64655793822.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64655793822.4, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_qsize (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:209)"}, {"pid": 19656, "tid": 17528, "ts": 64655793823.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "collections.deque.popleft"}, {"pid": 19656, "tid": 17528, "ts": 64655793823.4, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:217)"}, {"pid": 19656, "tid": 17528, "ts": 64655793825.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64655793824.9, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 17528, "ts": 64655793824.6, "ph": "X", "cat": "fee", "dur": 1.599, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64655793826.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655793826.7, "ph": "X", "cat": "fee", "dur": 0.32, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64655793820.7, "ph": "X", "cat": "fee", "dur": 6.5, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:154)"}, {"pid": 19656, "tid": 17528, "ts": 64655793828.8, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_thread.RLock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64655793828.599, "ph": "X", "cat": "fee", "dur": 0.6, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64655793830.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.RLock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655793830.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64655793828.2, "ph": "X", "cat": "fee", "dur": 2.199, "name": "set_running_or_notify_cancel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:486)"}, {"pid": 19656, "tid": 17528, "ts": 64655793831.6, "ph": "X", "cat": "fee", "dur": 0.7, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:151)"}, {"pid": 19656, "tid": 17528, "ts": 64655793833.1, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_multiprocessing.SemLock.acquire"}, {"pid": 19656, "tid": 21652, "ts": 64655793783.8, "ph": "X", "cat": "fee", "dur": 55.099, "name": "_winapi.CreatePipe"}, {"pid": 19656, "tid": 21652, "ts": 64655793843.6, "ph": "X", "cat": "fee", "dur": 1.399, "name": "msvcrt.open_osfhandle"}, {"pid": 19656, "tid": 21652, "ts": 64655793845.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655793909.4, "ph": "X", "cat": "fee", "dur": 0.4, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655793910.0, "ph": "X", "cat": "fee", "dur": 0.299, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655793910.5, "ph": "X", "cat": "fee", "dur": 0.599, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655793911.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655793911.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655793909.0, "ph": "X", "cat": "fee", "dur": 3.399, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655793913.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "get_executable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\spawn.py:45)"}, {"pid": 19656, "tid": 21652, "ts": 64655793913.8, "ph": "X", "cat": "fee", "dur": 11.999, "name": "io.open"}, {"pid": 19656, "tid": 5356, "ts": 64655793718.099, "ph": "X", "cat": "fee", "dur": 220.3, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 5356, "ts": 64655793939.0, "ph": "X", "cat": "fee", "dur": 1.099, "name": "_thread.lock.release"}, {"pid": 19656, "tid": 5356, "ts": 64655793940.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "collections.deque.popleft"}, {"pid": 19656, "tid": 5356, "ts": 64655793951.6, "ph": "X", "cat": "fee", "dur": 0.599, "name": "dict.copy"}, {"pid": 19656, "tid": 5356, "ts": 64655793952.7, "ph": "X", "cat": "fee", "dur": 0.8, "name": "dict.update"}, {"pid": 19656, "tid": 5356, "ts": 64655793947.7, "ph": "X", "cat": "fee", "dur": 5.9, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 19656, "tid": 5356, "ts": 64655793958.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "mappingproxy.get"}, {"pid": 19656, "tid": 5356, "ts": 64655793959.1, "ph": "X", "cat": "fee", "dur": 1.0, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 5356, "ts": 64655793958.0, "ph": "X", "cat": "fee", "dur": 2.6, "name": "_slotnames (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\copyreg.py:103)"}, {"pid": 19656, "tid": 5356, "ts": 64655793966.2, "ph": "X", "cat": "fee", "dur": 1.2, "name": "_reduce_partial (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:223)"}, {"pid": 19656, "tid": 5356, "ts": 64655793954.1, "ph": "X", "cat": "fee", "dur": 21.099, "name": "ForkingPickler.dump"}, {"pid": 19656, "tid": 5356, "ts": 64655793976.7, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_io.BytesIO.getbuffer"}, {"pid": 19656, "tid": 5356, "ts": 64655793942.2, "ph": "X", "cat": "fee", "dur": 34.899, "name": "dumps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:48)"}, {"pid": 19656, "tid": 5356, "ts": 64655793978.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 5356, "ts": 64655793979.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 19656, "tid": 5356, "ts": 64655793980.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64655793834.4, "ph": "X", "cat": "fee", "dur": 154.0, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64655793834.3, "ph": "X", "cat": "fee", "dur": 154.6, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64655793990.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "collections.deque.append"}, {"pid": 19656, "tid": 17528, "ts": 64655793991.9, "ph": "X", "cat": "fee", "dur": 0.699, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64655793991.7, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 17528, "ts": 64655793991.2, "ph": "X", "cat": "fee", "dur": 3.1, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64655793995.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655793995.0, "ph": "X", "cat": "fee", "dur": 0.6, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64655793832.899, "ph": "X", "cat": "fee", "dur": 162.9, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:86)"}, {"pid": 19656, "tid": 17528, "ts": 64655793997.2, "ph": "X", "cat": "fee", "dur": 1.099, "name": "_multiprocessing.SemLock._is_zero"}, {"pid": 19656, "tid": 17528, "ts": 64655793996.8, "ph": "X", "cat": "fee", "dur": 1.599, "name": "full (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:131)"}, {"pid": 19656, "tid": 17528, "ts": 64655794000.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64655793999.9, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64655794001.199, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64655794000.9, "ph": "X", "cat": "fee", "dur": 0.52, "name": "_qsize (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:209)"}, {"pid": 19656, "tid": 17528, "ts": 64655794003.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655794002.9, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64655793999.4, "ph": "X", "cat": "fee", "dur": 4.3, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:154)"}, {"pid": 19656, "tid": 17528, "ts": 64655793565.1, "ph": "X", "cat": "fee", "dur": 440.2, "name": "add_call_item_to_queue (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:343)"}, {"pid": 19656, "tid": 17528, "ts": 64655794010.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "dict.values"}, {"pid": 19656, "tid": 17528, "ts": 64655794013.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655794012.7, "ph": "X", "cat": "fee", "dur": 1.3, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655794011.5, "ph": "X", "cat": "fee", "dur": 2.899, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:376)"}, {"pid": 19656, "tid": 17528, "ts": 64655794019.3, "ph": "X", "cat": "fee", "dur": 0.399, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655794021.3, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655794020.8, "ph": "X", "cat": "fee", "dur": 0.799, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64655794021.8, "ph": "X", "cat": "fee", "dur": 7.699, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64655794030.599, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64655794032.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655794033.399, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655794033.1, "ph": "X", "cat": "fee", "dur": 0.7, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 5356, "ts": 64655793981.9, "ph": "X", "cat": "fee", "dur": 56.799, "name": "_winapi.WriteFile"}, {"pid": 19656, "tid": 5356, "ts": 64655794039.999, "ph": "X", "cat": "fee", "dur": 1.8, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 5356, "ts": 64655794042.3, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.len"}, {"pid": 19656, "tid": 5356, "ts": 64655793981.5, "ph": "X", "cat": "fee", "dur": 61.199, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 19656, "tid": 5356, "ts": 64655793978.0, "ph": "X", "cat": "fee", "dur": 66.299, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 19656, "tid": 5356, "ts": 64655794044.6, "ph": "X", "cat": "fee", "dur": 0.199, "name": "collections.deque.popleft"}, {"pid": 19656, "tid": 5356, "ts": 64655794050.6, "ph": "X", "cat": "fee", "dur": 0.299, "name": "dict.copy"}, {"pid": 19656, "tid": 5356, "ts": 64655794051.3, "ph": "X", "cat": "fee", "dur": 0.599, "name": "dict.update"}, {"pid": 19656, "tid": 5356, "ts": 64655794047.599, "ph": "X", "cat": "fee", "dur": 4.32, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 19656, "tid": 5356, "ts": 64655794059.499, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_reduce_partial (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:223)"}, {"pid": 19656, "tid": 5356, "ts": 64655794052.3, "ph": "X", "cat": "fee", "dur": 14.6, "name": "ForkingPickler.dump"}, {"pid": 19656, "tid": 5356, "ts": 64655794067.8, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_io.BytesIO.getbuffer"}, {"pid": 19656, "tid": 5356, "ts": 64655794046.3, "ph": "X", "cat": "fee", "dur": 22.0, "name": "dumps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:48)"}, {"pid": 19656, "tid": 5356, "ts": 64655794069.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 5356, "ts": 64655794070.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 19656, "tid": 5356, "ts": 64655794070.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64655794034.0, "ph": "X", "cat": "fee", "dur": 44.1, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 5356, "ts": 64655794072.199, "ph": "X", "cat": "fee", "dur": 17.1, "name": "_winapi.WriteFile"}, {"pid": 19656, "tid": 5356, "ts": 64655794090.8, "ph": "X", "cat": "fee", "dur": 2.1, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 5356, "ts": 64655794093.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 19656, "tid": 5356, "ts": 64655794071.9, "ph": "X", "cat": "fee", "dur": 21.9, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 19656, "tid": 5356, "ts": 64655794069.1, "ph": "X", "cat": "fee", "dur": 26.6, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 19656, "tid": 5356, "ts": 64655794096.2, "ph": "X", "cat": "fee", "dur": 5.2, "name": "collections.deque.popleft"}, {"pid": 19656, "tid": 5356, "ts": 64655794103.4, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 5356, "ts": 64655794105.6, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 5356, "ts": 64655794105.3, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 5356, "ts": 64655794106.5, "ph": "X", "cat": "fee", "dur": 1.7, "name": "_thread.allocate_lock"}, {"pid": 19656, "tid": 5356, "ts": 64655794108.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 5356, "ts": 64655794108.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "collections.deque.append"}, {"pid": 19656, "tid": 5356, "ts": 64655794109.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.release"}, {"pid": 19656, "tid": 5356, "ts": 64655794109.3, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_release_save (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:265)"}, {"pid": 19656, "tid": 17528, "ts": 64655794079.5, "ph": "X", "cat": "fee", "dur": 124.499, "name": "sys.getwindowsversion"}, {"pid": 19656, "tid": 17528, "ts": 64655794206.4, "ph": "X", "cat": "fee", "dur": 0.899, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64655794208.0, "ph": "X", "cat": "fee", "dur": 0.6, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 17528, "ts": 64655794209.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "set.add"}, {"pid": 19656, "tid": 17528, "ts": 64655794209.799, "ph": "X", "cat": "fee", "dur": 1.6, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655794216.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.keys"}, {"pid": 19656, "tid": 17528, "ts": 64655794219.699, "ph": "X", "cat": "fee", "dur": 2.4, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64655794217.8, "ph": "X", "cat": "fee", "dur": 4.699, "name": "_exhaustive_wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:810)"}, {"pid": 19656, "tid": 17528, "ts": 64655794225.3, "ph": "X", "cat": "fee", "dur": 8.299, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64655794234.1, "ph": "X", "cat": "fee", "dur": 0.799, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64655794238.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64655794237.4, "ph": "X", "cat": "fee", "dur": 1.299, "name": "set.update"}, {"pid": 19656, "tid": 17528, "ts": 64655794239.6, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:908)"}, {"pid": 19656, "tid": 17528, "ts": 64655794016.8, "ph": "X", "cat": "fee", "dur": 223.9, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:832)"}, {"pid": 19656, "tid": 21652, "ts": 64655793931.499, "ph": "X", "cat": "fee", "dur": 1158.9, "name": "_winapi.CreateProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655795091.4, "ph": "X", "cat": "fee", "dur": 1.099, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655795096.5, "ph": "X", "cat": "fee", "dur": 0.299, "name": "builtins.next"}, {"pid": 19656, "tid": 21652, "ts": 64655795097.199, "ph": "X", "cat": "fee", "dur": 0.2, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655795095.2, "ph": "X", "cat": "fee", "dur": 2.899, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:186)"}, {"pid": 19656, "tid": 21652, "ts": 64655795099.3, "ph": "X", "cat": "fee", "dur": 0.699, "name": "set_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:354)"}, {"pid": 19656, "tid": 21652, "ts": 64655795104.299, "ph": "X", "cat": "fee", "dur": 0.2, "name": "dict.copy"}, {"pid": 19656, "tid": 21652, "ts": 64655795105.0, "ph": "X", "cat": "fee", "dur": 0.7, "name": "dict.update"}, {"pid": 19656, "tid": 21652, "ts": 64655795101.4, "ph": "X", "cat": "fee", "dur": 4.399, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 19656, "tid": 21652, "ts": 64655795110.099, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655795109.5, "ph": "X", "cat": "fee", "dur": 1.2, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655795113.7, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655795113.5, "ph": "X", "cat": "fee", "dur": 0.5, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655795108.7, "ph": "X", "cat": "fee", "dur": 6.2, "name": "__reduce__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:344)"}, {"pid": 19656, "tid": 21652, "ts": 64655795106.1, "ph": "X", "cat": "fee", "dur": 16.399, "name": "ForkingPickler.dump"}, {"pid": 19656, "tid": 21652, "ts": 64655795100.7, "ph": "X", "cat": "fee", "dur": 22.8, "name": "dump (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:58)"}, {"pid": 19656, "tid": 21652, "ts": 64655795125.599, "ph": "X", "cat": "fee", "dur": 0.2, "name": "dict.copy"}, {"pid": 19656, "tid": 21652, "ts": 64655795126.0, "ph": "X", "cat": "fee", "dur": 0.4, "name": "dict.update"}, {"pid": 19656, "tid": 21652, "ts": 64655795124.5, "ph": "X", "cat": "fee", "dur": 2.0, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 19656, "tid": 21652, "ts": 64655795133.199, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655795133.0, "ph": "X", "cat": "fee", "dur": 0.599, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655795135.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655795135.0, "ph": "X", "cat": "fee", "dur": 0.319, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655795132.699, "ph": "X", "cat": "fee", "dur": 3.1, "name": "__reduce__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:344)"}, {"pid": 19656, "tid": 21652, "ts": 64655795142.319, "ph": "X", "cat": "fee", "dur": 0.18, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655795142.299, "ph": "X", "cat": "fee", "dur": 0.22, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655795142.0, "ph": "X", "cat": "fee", "dur": 0.6, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655795141.5, "ph": "X", "cat": "fee", "dur": 2.3, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655795146.099, "ph": "X", "cat": "fee", "dur": 0.3, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655795147.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655795148.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655795148.2, "ph": "X", "cat": "fee", "dur": 0.399, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 21652, "ts": 64655795149.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655795150.1, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_winapi.OpenProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655795153.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655795154.0, "ph": "X", "cat": "fee", "dur": 1.199, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655795155.7, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655795149.2, "ph": "X", "cat": "fee", "dur": 7.299, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:106)"}, {"pid": 19656, "tid": 21652, "ts": 64655795157.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655795157.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655795145.7, "ph": "X", "cat": "fee", "dur": 12.2, "name": "reduce_pipe_connection (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:961)"}, {"pid": 19656, "tid": 21652, "ts": 64655795162.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655795162.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655795163.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655795163.2, "ph": "X", "cat": "fee", "dur": 0.399, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 21652, "ts": 64655795164.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655795164.4, "ph": "X", "cat": "fee", "dur": 1.399, "name": "_winapi.OpenProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655795165.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655795166.1, "ph": "X", "cat": "fee", "dur": 0.9, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655795167.2, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655795164.0, "ph": "X", "cat": "fee", "dur": 3.8, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:106)"}, {"pid": 19656, "tid": 21652, "ts": 64655795168.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655795168.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655795162.2, "ph": "X", "cat": "fee", "dur": 6.4, "name": "reduce_pipe_connection (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:961)"}, {"pid": 19656, "tid": 21652, "ts": 64655795172.0, "ph": "X", "cat": "fee", "dur": 0.299, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655795171.9, "ph": "X", "cat": "fee", "dur": 0.42, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655795171.699, "ph": "X", "cat": "fee", "dur": 0.7, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655795173.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655795173.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655795174.42, "ph": "X", "cat": "fee", "dur": 0.079, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655795174.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655795175.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655795175.7, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655795175.2, "ph": "X", "cat": "fee", "dur": 1.599, "name": "duplicate (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:71)"}, {"pid": 19656, "tid": 21652, "ts": 64655795174.1, "ph": "X", "cat": "fee", "dur": 2.8, "name": "duplicate_for_child (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:97)"}, {"pid": 19656, "tid": 21652, "ts": 64655795171.3, "ph": "X", "cat": "fee", "dur": 6.2, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:100)"}, {"pid": 19656, "tid": 21652, "ts": 64655795181.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655795181.099, "ph": "X", "cat": "fee", "dur": 0.22, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655795180.9, "ph": "X", "cat": "fee", "dur": 0.5, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655795181.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655795181.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655795182.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655795182.5, "ph": "X", "cat": "fee", "dur": 0.22, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655795183.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655795183.4, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655795183.099, "ph": "X", "cat": "fee", "dur": 1.12, "name": "duplicate (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:71)"}, {"pid": 19656, "tid": 21652, "ts": 64655795182.3, "ph": "X", "cat": "fee", "dur": 2.0, "name": "duplicate_for_child (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:97)"}, {"pid": 19656, "tid": 21652, "ts": 64655795180.5, "ph": "X", "cat": "fee", "dur": 4.1, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:100)"}, {"pid": 19656, "tid": 21652, "ts": 64655795188.199, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655795188.1, "ph": "X", "cat": "fee", "dur": 0.22, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655795187.9, "ph": "X", "cat": "fee", "dur": 0.5, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655795187.5, "ph": "X", "cat": "fee", "dur": 1.399, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:356)"}, {"pid": 19656, "tid": 21652, "ts": 64655795190.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655795191.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655795191.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655795191.6, "ph": "X", "cat": "fee", "dur": 0.6, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 21652, "ts": 64655795192.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655795192.999, "ph": "X", "cat": "fee", "dur": 1.4, "name": "_winapi.OpenProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655795194.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655795194.799, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655795195.6, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655795192.6, "ph": "X", "cat": "fee", "dur": 3.5, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:106)"}, {"pid": 19656, "tid": 21652, "ts": 64655795196.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655795196.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655795190.4, "ph": "X", "cat": "fee", "dur": 6.7, "name": "reduce_pipe_connection (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:961)"}, {"pid": 19656, "tid": 21652, "ts": 64655795199.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655795199.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655795199.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655795199.7, "ph": "X", "cat": "fee", "dur": 0.5, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 21652, "ts": 64655795200.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655795200.8, "ph": "X", "cat": "fee", "dur": 1.099, "name": "_winapi.OpenProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655795202.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655795202.22, "ph": "X", "cat": "fee", "dur": 0.679, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655795203.1, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655795200.5, "ph": "X", "cat": "fee", "dur": 3.1, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:106)"}, {"pid": 19656, "tid": 21652, "ts": 64655795204.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655795204.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655795198.8, "ph": "X", "cat": "fee", "dur": 5.7, "name": "reduce_pipe_connection (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:961)"}, {"pid": 19656, "tid": 21652, "ts": 64655795207.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655795207.0, "ph": "X", "cat": "fee", "dur": 0.299, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655795206.8, "ph": "X", "cat": "fee", "dur": 0.52, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655795207.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655795207.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655795208.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655795208.5, "ph": "X", "cat": "fee", "dur": 0.219, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655795209.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655795209.4, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655795209.1, "ph": "X", "cat": "fee", "dur": 1.2, "name": "duplicate (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:71)"}, {"pid": 19656, "tid": 21652, "ts": 64655795208.3, "ph": "X", "cat": "fee", "dur": 2.1, "name": "duplicate_for_child (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:97)"}, {"pid": 19656, "tid": 21652, "ts": 64655795206.5, "ph": "X", "cat": "fee", "dur": 4.199, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:100)"}, {"pid": 19656, "tid": 21652, "ts": 64655795126.8, "ph": "X", "cat": "fee", "dur": 86.499, "name": "ForkingPickler.dump"}, {"pid": 19656, "tid": 21652, "ts": 64655795124.1, "ph": "X", "cat": "fee", "dur": 90.899, "name": "dump (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:58)"}, {"pid": 19656, "tid": 21652, "ts": 64655795215.5, "ph": "X", "cat": "fee", "dur": 0.4, "name": "set_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:354)"}, {"pid": 19656, "tid": 21652, "ts": 64655795216.0, "ph": "X", "cat": "fee", "dur": 11.1, "name": "_io.BufferedWriter.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655793757.3, "ph": "X", "cat": "fee", "dur": 1470.0, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:44)"}, {"pid": 19656, "tid": 21652, "ts": 64655793752.9, "ph": "X", "cat": "fee", "dur": 1476.599, "name": "_Popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:324)"}, {"pid": 19656, "tid": 21652, "ts": 64655795231.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "set.add"}, {"pid": 19656, "tid": 21652, "ts": 64655793743.699, "ph": "X", "cat": "fee", "dur": 1488.2, "name": "start (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:110)"}, {"pid": 19656, "tid": 21652, "ts": 64655795233.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 21652, "ts": 64655795232.7, "ph": "X", "cat": "fee", "dur": 0.9, "name": "ident (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:234)"}, {"pid": 19656, "tid": 21652, "ts": 64655793726.9, "ph": "X", "cat": "fee", "dur": 1507.0, "name": "_adjust_process_count (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:662)"}, {"pid": 19656, "tid": 21652, "ts": 64655795234.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_start_executor_manager_thread (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:654)"}, {"pid": 19656, "tid": 21652, "ts": 64655795234.9, "ph": "X", "cat": "fee", "dur": 1.099, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655793663.3, "ph": "X", "cat": "fee", "dur": 1572.799, "name": "submit (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:678)"}, {"pid": 19656, "tid": 21652, "ts": 64655795236.9, "ph": "X", "cat": "fee", "dur": 1.999, "name": "_get_chunks (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:183)"}, {"pid": 19656, "tid": 17528, "ts": 64655795246.8, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655795247.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64655795248.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:331)"}, {"pid": 19656, "tid": 17528, "ts": 64655795246.6, "ph": "X", "cat": "fee", "dur": 2.32, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:258)"}, {"pid": 19656, "tid": 17528, "ts": 64655795249.799, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655795250.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64655795251.2, "ph": "X", "cat": "fee", "dur": 1.099, "name": "_recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:299)"}, {"pid": 19656, "tid": 17528, "ts": 64655795253.099, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_io.BytesIO.getvalue"}, {"pid": 19656, "tid": 17528, "ts": 64655795249.5, "ph": "X", "cat": "fee", "dur": 4.099, "name": "recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:213)"}, {"pid": 19656, "tid": 17528, "ts": 64655795254.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655795254.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64655795255.2, "ph": "X", "cat": "fee", "dur": 9.5, "name": "_winapi.PeekNamedPipe"}, {"pid": 19656, "tid": 17528, "ts": 64655795268.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655795269.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655795269.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64655795269.799, "ph": "X", "cat": "fee", "dur": 3.4, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64655795273.8, "ph": "X", "cat": "fee", "dur": 65.3, "name": "sys.getwindowsversion"}, {"pid": 19656, "tid": 17528, "ts": 64655795340.6, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64655795341.799, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 17528, "ts": 64655795342.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "set.add"}, {"pid": 19656, "tid": 17528, "ts": 64655795343.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "dict.keys"}, {"pid": 19656, "tid": 17528, "ts": 64655795343.6, "ph": "X", "cat": "fee", "dur": 0.899, "name": "_exhaustive_wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:810)"}, {"pid": 19656, "tid": 17528, "ts": 64655795346.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64655795345.8, "ph": "X", "cat": "fee", "dur": 1.2, "name": "set.update"}, {"pid": 19656, "tid": 17528, "ts": 64655795347.5, "ph": "X", "cat": "fee", "dur": 0.4, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:908)"}, {"pid": 19656, "tid": 17528, "ts": 64655795265.999, "ph": "X", "cat": "fee", "dur": 82.0, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:832)"}, {"pid": 19656, "tid": 17528, "ts": 64655795254.8, "ph": "X", "cat": "fee", "dur": 95.099, "name": "_poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:331)"}, {"pid": 19656, "tid": 17528, "ts": 64655795254.099, "ph": "X", "cat": "fee", "dur": 96.0, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:258)"}, {"pid": 19656, "tid": 17528, "ts": 64655795351.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655795351.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64655795351.9, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:299)"}, {"pid": 19656, "tid": 17528, "ts": 64655795352.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_io.BytesIO.getvalue"}, {"pid": 19656, "tid": 17528, "ts": 64655795350.7, "ph": "X", "cat": "fee", "dur": 2.32, "name": "recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:213)"}, {"pid": 19656, "tid": 17528, "ts": 64655795353.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655795353.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64655795354.4, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_winapi.PeekNamedPipe"}, {"pid": 19656, "tid": 17528, "ts": 64655795361.299, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655795362.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655795361.799, "ph": "X", "cat": "fee", "dur": 0.4, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64655795362.299, "ph": "X", "cat": "fee", "dur": 2.0, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64655795364.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64655795365.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "dict.keys"}, {"pid": 19656, "tid": 17528, "ts": 64655795366.7, "ph": "X", "cat": "fee", "dur": 1.199, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64655795366.099, "ph": "X", "cat": "fee", "dur": 2.2, "name": "_exhaustive_wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:810)"}, {"pid": 19656, "tid": 17528, "ts": 64655795368.8, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64655795372.1, "ph": "X", "cat": "fee", "dur": 0.599, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64655795373.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64655795373.5, "ph": "X", "cat": "fee", "dur": 0.399, "name": "set.update"}, {"pid": 19656, "tid": 17528, "ts": 64655795374.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:908)"}, {"pid": 19656, "tid": 17528, "ts": 64655795359.7, "ph": "X", "cat": "fee", "dur": 14.9, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:832)"}, {"pid": 19656, "tid": 17528, "ts": 64655795354.199, "ph": "X", "cat": "fee", "dur": 21.4, "name": "_poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:331)"}, {"pid": 19656, "tid": 17528, "ts": 64655795353.4, "ph": "X", "cat": "fee", "dur": 22.3, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:258)"}, {"pid": 19656, "tid": 17528, "ts": 64655795245.6, "ph": "X", "cat": "fee", "dur": 130.3, "name": "clear (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:81)"}, {"pid": 19656, "tid": 17528, "ts": 64655795376.1, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655794007.299, "ph": "X", "cat": "fee", "dur": 1370.1, "name": "wait_result_broken_or_wakeup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:366)"}, {"pid": 19656, "tid": 17528, "ts": 64655795378.7, "ph": "X", "cat": "fee", "dur": 1.099, "name": "is_shutting_down (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:420)"}, {"pid": 19656, "tid": 17528, "ts": 64655795381.2, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_multiprocessing.SemLock._is_zero"}, {"pid": 19656, "tid": 17528, "ts": 64655795380.799, "ph": "X", "cat": "fee", "dur": 1.02, "name": "full (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:131)"}, {"pid": 19656, "tid": 17528, "ts": 64655795383.4, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64655795383.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64655795384.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64655795384.0, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_qsize (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:209)"}, {"pid": 19656, "tid": 17528, "ts": 64655795385.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655795385.399, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64655795382.599, "ph": "X", "cat": "fee", "dur": 3.5, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:154)"}, {"pid": 19656, "tid": 17528, "ts": 64655795380.299, "ph": "X", "cat": "fee", "dur": 6.7, "name": "add_call_item_to_queue (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:343)"}, {"pid": 19656, "tid": 17528, "ts": 64655795388.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "dict.values"}, {"pid": 19656, "tid": 17528, "ts": 64655795389.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655795389.3, "ph": "X", "cat": "fee", "dur": 0.6, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655795390.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655795390.199, "ph": "X", "cat": "fee", "dur": 0.5, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655795388.699, "ph": "X", "cat": "fee", "dur": 2.1, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:376)"}, {"pid": 19656, "tid": 17528, "ts": 64655795392.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655795393.499, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655795393.3, "ph": "X", "cat": "fee", "dur": 0.5, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64655795393.9, "ph": "X", "cat": "fee", "dur": 2.5, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64655795396.799, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64655795397.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655795397.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655795397.7, "ph": "X", "cat": "fee", "dur": 0.4, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64655795398.2, "ph": "X", "cat": "fee", "dur": 1.8, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64655795400.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64655795400.7, "ph": "X", "cat": "fee", "dur": 0.8, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655795402.599, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655795403.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "dict.keys"}, {"pid": 19656, "tid": 21652, "ts": 64655795413.3, "ph": "X", "cat": "fee", "dur": 2.499, "name": "RLock (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:82)"}, {"pid": 19656, "tid": 21652, "ts": 64655795412.6, "ph": "X", "cat": "fee", "dur": 5.7, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:228)"}, {"pid": 19656, "tid": 21652, "ts": 64655795411.8, "ph": "X", "cat": "fee", "dur": 7.699, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:317)"}, {"pid": 19656, "tid": 21652, "ts": 64655795420.3, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:138)"}, {"pid": 19656, "tid": 21652, "ts": 64655795423.3, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 21652, "ts": 64655795423.0, "ph": "X", "cat": "fee", "dur": 0.899, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 21652, "ts": 64655795424.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "collections.deque.append"}, {"pid": 19656, "tid": 21652, "ts": 64655795424.6, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:213)"}, {"pid": 19656, "tid": 21652, "ts": 64655795426.4, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 21652, "ts": 64655795426.199, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 21652, "ts": 64655795425.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655795428.8, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655795428.6, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 21652, "ts": 64655795422.3, "ph": "X", "cat": "fee", "dur": 7.0, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:122)"}, {"pid": 19656, "tid": 21652, "ts": 64655795431.3, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655795431.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 19656, "tid": 21652, "ts": 64655795433.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655795434.799, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_winapi.WriteFile"}, {"pid": 19656, "tid": 21652, "ts": 64655795441.2, "ph": "X", "cat": "fee", "dur": 0.699, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 21652, "ts": 64655795442.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655795434.4, "ph": "X", "cat": "fee", "dur": 7.9, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 19656, "tid": 21652, "ts": 64655795430.999, "ph": "X", "cat": "fee", "dur": 12.5, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 19656, "tid": 21652, "ts": 64655795430.3, "ph": "X", "cat": "fee", "dur": 13.499, "name": "wakeup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:77)"}, {"pid": 19656, "tid": 21652, "ts": 64655795445.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 21652, "ts": 64655795445.699, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 21652, "ts": 64655795446.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655795446.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 21652, "ts": 64655795445.1, "ph": "X", "cat": "fee", "dur": 2.1, "name": "acquire (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:404)"}, {"pid": 19656, "tid": 21652, "ts": 64655795447.499, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655795449.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.next"}, {"pid": 19656, "tid": 21652, "ts": 64655795450.799, "ph": "X", "cat": "fee", "dur": 0.3, "name": "dict.copy"}, {"pid": 19656, "tid": 21652, "ts": 64655795451.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655795452.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "name (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:189)"}, {"pid": 19656, "tid": 21652, "ts": 64655795455.599, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:94)"}, {"pid": 19656, "tid": 21652, "ts": 64655795456.599, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:94)"}, {"pid": 19656, "tid": 21652, "ts": 64655795455.099, "ph": "X", "cat": "fee", "dur": 2.1, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655795459.399, "ph": "X", "cat": "fee", "dur": 0.2, "name": "set.add"}, {"pid": 19656, "tid": 21652, "ts": 64655795458.3, "ph": "X", "cat": "fee", "dur": 1.4, "name": "add (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_weakrefset.py:86)"}, {"pid": 19656, "tid": 21652, "ts": 64655795449.6, "ph": "X", "cat": "fee", "dur": 10.2, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:80)"}, {"pid": 19656, "tid": 21652, "ts": 64655795460.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 21652, "ts": 64655795461.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655795461.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.get"}, {"pid": 19656, "tid": 21652, "ts": 64655795464.8, "ph": "X", "cat": "fee", "dur": 0.6, "name": "builtins.max"}, {"pid": 19656, "tid": 21652, "ts": 64655795465.8, "ph": "X", "cat": "fee", "dur": 1.699, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 21652, "ts": 64655795463.9, "ph": "X", "cat": "fee", "dur": 3.9, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 21652, "ts": 64655795463.4, "ph": "X", "cat": "fee", "dur": 4.7, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 21652, "ts": 64655795469.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.max"}, {"pid": 19656, "tid": 21652, "ts": 64655795469.6, "ph": "X", "cat": "fee", "dur": 0.899, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 21652, "ts": 64655795468.9, "ph": "X", "cat": "fee", "dur": 1.8, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 21652, "ts": 64655795468.6, "ph": "X", "cat": "fee", "dur": 2.199, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 21652, "ts": 64655795462.1, "ph": "X", "cat": "fee", "dur": 9.0, "name": "_cleanup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:61)"}, {"pid": 19656, "tid": 21652, "ts": 64655795473.4, "ph": "X", "cat": "fee", "dur": 0.299, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655795472.7, "ph": "X", "cat": "fee", "dur": 1.3, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655795478.7, "ph": "X", "cat": "fee", "dur": 0.299, "name": "current_process (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:37)"}, {"pid": 19656, "tid": 21652, "ts": 64655795479.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655795478.1, "ph": "X", "cat": "fee", "dur": 1.299, "name": "_check_not_importing_main (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\spawn.py:132)"}, {"pid": 19656, "tid": 21652, "ts": 64655795479.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "current_process (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:37)"}, {"pid": 19656, "tid": 21652, "ts": 64655795480.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "authkey (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:213)"}, {"pid": 19656, "tid": 21652, "ts": 64655795481.5, "ph": "X", "cat": "fee", "dur": 0.299, "name": "list.copy"}, {"pid": 19656, "tid": 21652, "ts": 64655795482.0, "ph": "X", "cat": "fee", "dur": 0.199, "name": "list.index"}, {"pid": 19656, "tid": 21652, "ts": 64655795483.1, "ph": "X", "cat": "fee", "dur": 1.5, "name": "nt.getcwd"}, {"pid": 19656, "tid": 21652, "ts": 64655795484.999, "ph": "X", "cat": "fee", "dur": 0.5, "name": "get_start_method (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:249)"}, {"pid": 19656, "tid": 21652, "ts": 64655795485.6, "ph": "X", "cat": "fee", "dur": 0.899, "name": "dict.update"}, {"pid": 19656, "tid": 21652, "ts": 64655795487.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655795487.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655795489.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655795489.299, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655795489.7, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655795490.299, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655795491.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655795491.4, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655795491.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655795492.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655795491.2, "ph": "X", "cat": "fee", "dur": 2.2, "name": "splitdrive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:124)"}, {"pid": 19656, "tid": 21652, "ts": 64655795493.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655795494.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655795494.3, "ph": "X", "cat": "fee", "dur": 0.52, "name": "_get_bothseps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:34)"}, {"pid": 19656, "tid": 21652, "ts": 64655795488.4, "ph": "X", "cat": "fee", "dur": 6.7, "name": "isabs (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:61)"}, {"pid": 19656, "tid": 21652, "ts": 64655795495.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655795495.899, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655795496.1, "ph": "X", "cat": "fee", "dur": 0.299, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655795496.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655795496.899, "ph": "X", "cat": "fee", "dur": 4.1, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655795501.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655795501.8, "ph": "X", "cat": "fee", "dur": 0.299, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655795502.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655795496.8, "ph": "X", "cat": "fee", "dur": 7.199, "name": "splitdrive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:124)"}, {"pid": 19656, "tid": 21652, "ts": 64655795504.6, "ph": "X", "cat": "fee", "dur": 0.399, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655795505.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.lstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655795505.799, "ph": "X", "cat": "fee", "dur": 1.0, "name": "str.split"}, {"pid": 19656, "tid": 21652, "ts": 64655795506.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655795507.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655795507.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655795508.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655795508.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655795508.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655795508.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655795509.099, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655795509.3, "ph": "X", "cat": "fee", "dur": 0.299, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655795495.6, "ph": "X", "cat": "fee", "dur": 14.2, "name": "normpath (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:450)"}, {"pid": 19656, "tid": 21652, "ts": 64655795477.7, "ph": "X", "cat": "fee", "dur": 32.899, "name": "get_preparation_data (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\spawn.py:150)"}, {"pid": 19656, "tid": 17528, "ts": 64655795404.2, "ph": "X", "cat": "fee", "dur": 111.199, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64655795516.2, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64655795517.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64655795518.1, "ph": "X", "cat": "fee", "dur": 1.8, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64655795403.6, "ph": "X", "cat": "fee", "dur": 116.5, "name": "_exhaustive_wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:810)"}, {"pid": 19656, "tid": 21652, "ts": 64655795511.2, "ph": "X", "cat": "fee", "dur": 12.299, "name": "_winapi.CreatePipe"}, {"pid": 19656, "tid": 21652, "ts": 64655795524.2, "ph": "X", "cat": "fee", "dur": 0.9, "name": "msvcrt.open_osfhandle"}, {"pid": 19656, "tid": 21652, "ts": 64655795525.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655795588.8, "ph": "X", "cat": "fee", "dur": 0.4, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655795589.399, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655795589.8, "ph": "X", "cat": "fee", "dur": 0.6, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655795590.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655795590.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655795588.399, "ph": "X", "cat": "fee", "dur": 3.3, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655795592.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "get_executable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\spawn.py:45)"}, {"pid": 19656, "tid": 21652, "ts": 64655795592.8, "ph": "X", "cat": "fee", "dur": 11.1, "name": "io.open"}, {"pid": 19656, "tid": 17528, "ts": 64655795520.999, "ph": "X", "cat": "fee", "dur": 90.7, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64655795612.499, "ph": "X", "cat": "fee", "dur": 1.6, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64655795614.499, "ph": "X", "cat": "fee", "dur": 0.9, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64655795616.0, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64655795617.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "set.add"}, {"pid": 19656, "tid": 17528, "ts": 64655795617.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 17528, "ts": 64655795619.599, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64655795620.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64655795619.2, "ph": "X", "cat": "fee", "dur": 1.2, "name": "set.update"}, {"pid": 19656, "tid": 17528, "ts": 64655795620.8, "ph": "X", "cat": "fee", "dur": 0.6, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:908)"}, {"pid": 19656, "tid": 17528, "ts": 64655795391.9, "ph": "X", "cat": "fee", "dur": 229.6, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:832)"}, {"pid": 19656, "tid": 21652, "ts": 64655795604.899, "ph": "X", "cat": "fee", "dur": 1018.5, "name": "_winapi.CreateProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655796624.2, "ph": "X", "cat": "fee", "dur": 1.2, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655796629.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.next"}, {"pid": 19656, "tid": 21652, "ts": 64655796630.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655796628.099, "ph": "X", "cat": "fee", "dur": 3.2, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:186)"}, {"pid": 19656, "tid": 21652, "ts": 64655796632.1, "ph": "X", "cat": "fee", "dur": 0.7, "name": "set_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:354)"}, {"pid": 19656, "tid": 21652, "ts": 64655796637.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "dict.copy"}, {"pid": 19656, "tid": 21652, "ts": 64655796638.6, "ph": "X", "cat": "fee", "dur": 0.6, "name": "dict.update"}, {"pid": 19656, "tid": 21652, "ts": 64655796634.3, "ph": "X", "cat": "fee", "dur": 4.999, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 19656, "tid": 21652, "ts": 64655796643.599, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655796643.2, "ph": "X", "cat": "fee", "dur": 1.0, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655796647.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655796646.8, "ph": "X", "cat": "fee", "dur": 0.52, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655796642.2, "ph": "X", "cat": "fee", "dur": 6.0, "name": "__reduce__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:344)"}, {"pid": 19656, "tid": 21652, "ts": 64655796639.6, "ph": "X", "cat": "fee", "dur": 16.599, "name": "ForkingPickler.dump"}, {"pid": 19656, "tid": 21652, "ts": 64655796633.699, "ph": "X", "cat": "fee", "dur": 23.4, "name": "dump (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:58)"}, {"pid": 19656, "tid": 21652, "ts": 64655796659.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.copy"}, {"pid": 19656, "tid": 21652, "ts": 64655796660.299, "ph": "X", "cat": "fee", "dur": 0.4, "name": "dict.update"}, {"pid": 19656, "tid": 21652, "ts": 64655796658.299, "ph": "X", "cat": "fee", "dur": 2.5, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 19656, "tid": 21652, "ts": 64655796666.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655796666.3, "ph": "X", "cat": "fee", "dur": 0.599, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655796668.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655796668.2, "ph": "X", "cat": "fee", "dur": 0.399, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655796666.0, "ph": "X", "cat": "fee", "dur": 3.0, "name": "__reduce__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:344)"}, {"pid": 19656, "tid": 21652, "ts": 64655796674.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655796674.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655796674.7, "ph": "X", "cat": "fee", "dur": 0.6, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655796674.3, "ph": "X", "cat": "fee", "dur": 1.899, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655796678.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655796679.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655796680.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655796680.0, "ph": "X", "cat": "fee", "dur": 0.599, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 21652, "ts": 64655796681.4, "ph": "X", "cat": "fee", "dur": 0.199, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655796682.099, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_winapi.OpenProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655796685.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655796686.0, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655796687.5, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655796681.2, "ph": "X", "cat": "fee", "dur": 7.2, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:106)"}, {"pid": 19656, "tid": 21652, "ts": 64655796689.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655796689.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655796678.0, "ph": "X", "cat": "fee", "dur": 11.6, "name": "reduce_pipe_connection (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:961)"}, {"pid": 19656, "tid": 21652, "ts": 64655796694.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655796694.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655796695.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655796695.1, "ph": "X", "cat": "fee", "dur": 0.399, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 21652, "ts": 64655796696.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655796696.6, "ph": "X", "cat": "fee", "dur": 1.199, "name": "_winapi.OpenProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655796698.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655796698.2, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655796699.0, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655796696.1, "ph": "X", "cat": "fee", "dur": 3.499, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:106)"}, {"pid": 19656, "tid": 21652, "ts": 64655796700.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655796700.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655796694.0, "ph": "X", "cat": "fee", "dur": 6.599, "name": "reduce_pipe_connection (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:961)"}, {"pid": 19656, "tid": 21652, "ts": 64655796704.32, "ph": "X", "cat": "fee", "dur": 0.28, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655796704.3, "ph": "X", "cat": "fee", "dur": 0.32, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655796704.0, "ph": "X", "cat": "fee", "dur": 0.8, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655796705.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655796705.3, "ph": "X", "cat": "fee", "dur": 0.22, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655796706.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655796706.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655796707.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655796707.8, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655796707.1, "ph": "X", "cat": "fee", "dur": 1.8, "name": "duplicate (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:71)"}, {"pid": 19656, "tid": 21652, "ts": 64655796706.1, "ph": "X", "cat": "fee", "dur": 2.899, "name": "duplicate_for_child (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:97)"}, {"pid": 19656, "tid": 21652, "ts": 64655796703.7, "ph": "X", "cat": "fee", "dur": 5.999, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:100)"}, {"pid": 19656, "tid": 21652, "ts": 64655796713.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655796713.1, "ph": "X", "cat": "fee", "dur": 0.299, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655796712.9, "ph": "X", "cat": "fee", "dur": 0.6, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655796714.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655796713.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655796714.62, "ph": "X", "cat": "fee", "dur": 0.079, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655796714.6, "ph": "X", "cat": "fee", "dur": 0.119, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655796715.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655796715.5, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655796715.1, "ph": "X", "cat": "fee", "dur": 1.199, "name": "duplicate (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:71)"}, {"pid": 19656, "tid": 21652, "ts": 64655796714.4, "ph": "X", "cat": "fee", "dur": 2.0, "name": "duplicate_for_child (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:97)"}, {"pid": 19656, "tid": 21652, "ts": 64655796712.6, "ph": "X", "cat": "fee", "dur": 4.099, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:100)"}, {"pid": 19656, "tid": 21652, "ts": 64655796720.12, "ph": "X", "cat": "fee", "dur": 0.08, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655796720.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655796719.899, "ph": "X", "cat": "fee", "dur": 0.5, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655796719.6, "ph": "X", "cat": "fee", "dur": 1.1, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:356)"}, {"pid": 19656, "tid": 21652, "ts": 64655796722.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655796723.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655796723.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655796723.4, "ph": "X", "cat": "fee", "dur": 0.5, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 21652, "ts": 64655796724.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655796724.6, "ph": "X", "cat": "fee", "dur": 1.5, "name": "_winapi.OpenProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655796726.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655796726.42, "ph": "X", "cat": "fee", "dur": 0.579, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655796727.3, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655796724.199, "ph": "X", "cat": "fee", "dur": 3.6, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:106)"}, {"pid": 19656, "tid": 21652, "ts": 64655796728.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655796728.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655796722.3, "ph": "X", "cat": "fee", "dur": 6.4, "name": "reduce_pipe_connection (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:961)"}, {"pid": 19656, "tid": 21652, "ts": 64655796730.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655796730.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655796731.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655796731.4, "ph": "X", "cat": "fee", "dur": 0.32, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 21652, "ts": 64655796732.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655796732.4, "ph": "X", "cat": "fee", "dur": 1.2, "name": "_winapi.OpenProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655796733.799, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655796733.9, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655796734.7, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655796732.1, "ph": "X", "cat": "fee", "dur": 3.099, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:106)"}, {"pid": 19656, "tid": 21652, "ts": 64655796735.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655796735.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655796730.4, "ph": "X", "cat": "fee", "dur": 5.699, "name": "reduce_pipe_connection (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:961)"}, {"pid": 19656, "tid": 21652, "ts": 64655796738.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655796738.3, "ph": "X", "cat": "fee", "dur": 0.4, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655796738.1, "ph": "X", "cat": "fee", "dur": 0.7, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655796739.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655796739.2, "ph": "X", "cat": "fee", "dur": 0.199, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655796740.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655796739.899, "ph": "X", "cat": "fee", "dur": 0.22, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655796740.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655796740.8, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655796740.5, "ph": "X", "cat": "fee", "dur": 1.12, "name": "duplicate (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:71)"}, {"pid": 19656, "tid": 21652, "ts": 64655796739.8, "ph": "X", "cat": "fee", "dur": 1.899, "name": "duplicate_for_child (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:97)"}, {"pid": 19656, "tid": 21652, "ts": 64655796737.8, "ph": "X", "cat": "fee", "dur": 4.2, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:100)"}, {"pid": 19656, "tid": 21652, "ts": 64655796661.0, "ph": "X", "cat": "fee", "dur": 83.6, "name": "ForkingPickler.dump"}, {"pid": 19656, "tid": 21652, "ts": 64655796657.9, "ph": "X", "cat": "fee", "dur": 88.3, "name": "dump (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:58)"}, {"pid": 19656, "tid": 21652, "ts": 64655796746.7, "ph": "X", "cat": "fee", "dur": 0.299, "name": "set_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:354)"}, {"pid": 19656, "tid": 21652, "ts": 64655796747.2, "ph": "X", "cat": "fee", "dur": 9.9, "name": "_io.BufferedWriter.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655795477.2, "ph": "X", "cat": "fee", "dur": 1280.099, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:44)"}, {"pid": 19656, "tid": 21652, "ts": 64655795472.1, "ph": "X", "cat": "fee", "dur": 1287.399, "name": "_Popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:324)"}, {"pid": 19656, "tid": 21652, "ts": 64655796761.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "set.add"}, {"pid": 19656, "tid": 21652, "ts": 64655795460.6, "ph": "X", "cat": "fee", "dur": 1301.599, "name": "start (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:110)"}, {"pid": 19656, "tid": 21652, "ts": 64655796763.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 21652, "ts": 64655796762.8, "ph": "X", "cat": "fee", "dur": 0.8, "name": "ident (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:234)"}, {"pid": 19656, "tid": 21652, "ts": 64655795444.3, "ph": "X", "cat": "fee", "dur": 1319.699, "name": "_adjust_process_count (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:662)"}, {"pid": 19656, "tid": 21652, "ts": 64655796764.499, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_start_executor_manager_thread (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:654)"}, {"pid": 19656, "tid": 21652, "ts": 64655796764.7, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655795240.1, "ph": "X", "cat": "fee", "dur": 1525.8, "name": "submit (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:678)"}, {"pid": 19656, "tid": 21652, "ts": 64655796766.9, "ph": "X", "cat": "fee", "dur": 2.0, "name": "_get_chunks (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:183)"}, {"pid": 19656, "tid": 17528, "ts": 64655796776.2, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655796776.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64655796777.399, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:331)"}, {"pid": 19656, "tid": 17528, "ts": 64655796775.899, "ph": "X", "cat": "fee", "dur": 1.8, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:258)"}, {"pid": 19656, "tid": 17528, "ts": 64655796778.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655796778.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64655796779.1, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:299)"}, {"pid": 19656, "tid": 17528, "ts": 64655796780.5, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_io.BytesIO.getvalue"}, {"pid": 19656, "tid": 17528, "ts": 64655796778.1, "ph": "X", "cat": "fee", "dur": 2.8, "name": "recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:213)"}, {"pid": 19656, "tid": 17528, "ts": 64655796781.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655796781.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64655796782.4, "ph": "X", "cat": "fee", "dur": 6.2, "name": "_winapi.PeekNamedPipe"}, {"pid": 19656, "tid": 17528, "ts": 64655796792.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655796793.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655796792.8, "ph": "X", "cat": "fee", "dur": 0.5, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64655796793.399, "ph": "X", "cat": "fee", "dur": 2.6, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64655796796.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64655796797.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "dict.keys"}, {"pid": 19656, "tid": 17528, "ts": 64655796798.8, "ph": "X", "cat": "fee", "dur": 1.199, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64655796798.0, "ph": "X", "cat": "fee", "dur": 2.199, "name": "_exhaustive_wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:810)"}, {"pid": 19656, "tid": 17528, "ts": 64655796800.8, "ph": "X", "cat": "fee", "dur": 2.5, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64655796803.799, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64655796806.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64655796805.7, "ph": "X", "cat": "fee", "dur": 0.8, "name": "set.update"}, {"pid": 19656, "tid": 17528, "ts": 64655796807.0, "ph": "X", "cat": "fee", "dur": 0.299, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:908)"}, {"pid": 19656, "tid": 17528, "ts": 64655796789.8, "ph": "X", "cat": "fee", "dur": 17.6, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:832)"}, {"pid": 19656, "tid": 17528, "ts": 64655796782.1, "ph": "X", "cat": "fee", "dur": 26.9, "name": "_poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:331)"}, {"pid": 19656, "tid": 17528, "ts": 64655796781.3, "ph": "X", "cat": "fee", "dur": 27.9, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:258)"}, {"pid": 19656, "tid": 17528, "ts": 64655796774.8, "ph": "X", "cat": "fee", "dur": 34.6, "name": "clear (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:81)"}, {"pid": 19656, "tid": 17528, "ts": 64655796809.599, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655795387.5, "ph": "X", "cat": "fee", "dur": 1423.3, "name": "wait_result_broken_or_wakeup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:366)"}, {"pid": 19656, "tid": 17528, "ts": 64655796811.7, "ph": "X", "cat": "fee", "dur": 0.699, "name": "is_shutting_down (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:420)"}, {"pid": 19656, "tid": 17528, "ts": 64655796813.8, "ph": "X", "cat": "fee", "dur": 0.599, "name": "_multiprocessing.SemLock._is_zero"}, {"pid": 19656, "tid": 17528, "ts": 64655796813.399, "ph": "X", "cat": "fee", "dur": 1.02, "name": "full (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:131)"}, {"pid": 19656, "tid": 17528, "ts": 64655796816.5, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64655796816.199, "ph": "X", "cat": "fee", "dur": 0.6, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64655796817.4, "ph": "X", "cat": "fee", "dur": 0.299, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64655796817.199, "ph": "X", "cat": "fee", "dur": 0.52, "name": "_qsize (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:209)"}, {"pid": 19656, "tid": 17528, "ts": 64655796818.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "collections.deque.popleft"}, {"pid": 19656, "tid": 17528, "ts": 64655796818.1, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:217)"}, {"pid": 19656, "tid": 17528, "ts": 64655796819.7, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64655796819.499, "ph": "X", "cat": "fee", "dur": 0.52, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 17528, "ts": 64655796819.2, "ph": "X", "cat": "fee", "dur": 1.9, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64655796821.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655796821.7, "ph": "X", "cat": "fee", "dur": 0.42, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64655796815.5, "ph": "X", "cat": "fee", "dur": 6.799, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:154)"}, {"pid": 19656, "tid": 17528, "ts": 64655796823.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.RLock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64655796823.7, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64655796825.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.RLock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655796824.9, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64655796823.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "set_running_or_notify_cancel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:486)"}, {"pid": 19656, "tid": 17528, "ts": 64655796826.8, "ph": "X", "cat": "fee", "dur": 0.7, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:151)"}, {"pid": 19656, "tid": 17528, "ts": 64655796828.4, "ph": "X", "cat": "fee", "dur": 0.599, "name": "_multiprocessing.SemLock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64655796829.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64655796829.399, "ph": "X", "cat": "fee", "dur": 0.32, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64655796830.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "collections.deque.append"}, {"pid": 19656, "tid": 17528, "ts": 64655796831.12, "ph": "X", "cat": "fee", "dur": 0.18, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64655796831.1, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 17528, "ts": 64655796832.1, "ph": "X", "cat": "fee", "dur": 0.799, "name": "_thread.lock.release"}, {"pid": 19656, "tid": 17528, "ts": 64655796833.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "collections.deque.remove"}, {"pid": 19656, "tid": 17528, "ts": 64655796830.899, "ph": "X", "cat": "fee", "dur": 2.6, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64655796834.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655796834.199, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64655796828.0, "ph": "X", "cat": "fee", "dur": 6.699, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:86)"}, {"pid": 19656, "tid": 17528, "ts": 64655796835.199, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_multiprocessing.SemLock._is_zero"}, {"pid": 19656, "tid": 17528, "ts": 64655796835.1, "ph": "X", "cat": "fee", "dur": 0.599, "name": "full (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:131)"}, {"pid": 19656, "tid": 17528, "ts": 64655796836.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64655796836.4, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64655796837.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64655796837.1, "ph": "X", "cat": "fee", "dur": 0.22, "name": "_qsize (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:209)"}, {"pid": 19656, "tid": 17528, "ts": 64655796838.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655796838.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64655796836.199, "ph": "X", "cat": "fee", "dur": 2.4, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:154)"}, {"pid": 19656, "tid": 17528, "ts": 64655796812.899, "ph": "X", "cat": "fee", "dur": 26.6, "name": "add_call_item_to_queue (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:343)"}, {"pid": 19656, "tid": 17528, "ts": 64655796840.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "dict.values"}, {"pid": 19656, "tid": 17528, "ts": 64655796842.1, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655796841.799, "ph": "X", "cat": "fee", "dur": 0.6, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655796843.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655796842.799, "ph": "X", "cat": "fee", "dur": 0.4, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655796843.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655796843.5, "ph": "X", "cat": "fee", "dur": 0.599, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655796841.2, "ph": "X", "cat": "fee", "dur": 3.0, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:376)"}, {"pid": 19656, "tid": 17528, "ts": 64655796846.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655796846.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655796846.5, "ph": "X", "cat": "fee", "dur": 0.5, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64655796847.099, "ph": "X", "cat": "fee", "dur": 3.2, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64655796850.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64655796851.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655796852.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655796851.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64655796852.199, "ph": "X", "cat": "fee", "dur": 2.0, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64655796854.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64655796854.8, "ph": "X", "cat": "fee", "dur": 0.8, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655796856.7, "ph": "X", "cat": "fee", "dur": 0.299, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655796857.3, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655796857.999, "ph": "X", "cat": "fee", "dur": 0.02, "name": "dict.keys"}, {"pid": 19656, "tid": 21652, "ts": 64655796865.7, "ph": "X", "cat": "fee", "dur": 2.6, "name": "RLock (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:82)"}, {"pid": 19656, "tid": 21652, "ts": 64655796865.099, "ph": "X", "cat": "fee", "dur": 5.4, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:228)"}, {"pid": 19656, "tid": 21652, "ts": 64655796864.3, "ph": "X", "cat": "fee", "dur": 7.3, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:317)"}, {"pid": 19656, "tid": 21652, "ts": 64655796872.199, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:138)"}, {"pid": 19656, "tid": 21652, "ts": 64655796874.8, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 21652, "ts": 64655796874.6, "ph": "X", "cat": "fee", "dur": 0.7, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 21652, "ts": 64655796876.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "collections.deque.append"}, {"pid": 19656, "tid": 21652, "ts": 64655796876.2, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:213)"}, {"pid": 19656, "tid": 21652, "ts": 64655796877.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 21652, "ts": 64655796877.5, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 21652, "ts": 64655796877.299, "ph": "X", "cat": "fee", "dur": 1.9, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655796880.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655796879.799, "ph": "X", "cat": "fee", "dur": 0.42, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 21652, "ts": 64655796873.9, "ph": "X", "cat": "fee", "dur": 6.5, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:122)"}, {"pid": 19656, "tid": 21652, "ts": 64655796882.4, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655796883.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 19656, "tid": 21652, "ts": 64655796884.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 5356, "ts": 64655794109.9, "ph": "X", "cat": "fee", "dur": 2781.0, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 5356, "ts": 64655796892.999, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 5356, "ts": 64655796892.6, "ph": "X", "cat": "fee", "dur": 0.899, "name": "_acquire_restore (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:268)"}, {"pid": 19656, "tid": 5356, "ts": 64655794104.8, "ph": "X", "cat": "fee", "dur": 2788.9, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:280)"}, {"pid": 19656, "tid": 5356, "ts": 64655796895.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.release"}, {"pid": 19656, "tid": 5356, "ts": 64655796895.799, "ph": "X", "cat": "fee", "dur": 0.1, "name": "collections.deque.popleft"}, {"pid": 19656, "tid": 5356, "ts": 64655796902.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "dict.copy"}, {"pid": 19656, "tid": 5356, "ts": 64655796903.2, "ph": "X", "cat": "fee", "dur": 0.699, "name": "dict.update"}, {"pid": 19656, "tid": 5356, "ts": 64655796899.0, "ph": "X", "cat": "fee", "dur": 5.0, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 19656, "tid": 5356, "ts": 64655796912.6, "ph": "X", "cat": "fee", "dur": 0.9, "name": "_reduce_partial (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:223)"}, {"pid": 19656, "tid": 5356, "ts": 64655796904.399, "ph": "X", "cat": "fee", "dur": 16.6, "name": "ForkingPickler.dump"}, {"pid": 19656, "tid": 5356, "ts": 64655796922.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_io.BytesIO.getbuffer"}, {"pid": 19656, "tid": 5356, "ts": 64655796897.6, "ph": "X", "cat": "fee", "dur": 25.1, "name": "dumps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:48)"}, {"pid": 19656, "tid": 5356, "ts": 64655796924.2, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 5356, "ts": 64655796924.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 19656, "tid": 5356, "ts": 64655796925.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655796885.8, "ph": "X", "cat": "fee", "dur": 48.499, "name": "_winapi.WriteFile"}, {"pid": 19656, "tid": 21652, "ts": 64655796935.5, "ph": "X", "cat": "fee", "dur": 1.8, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 21652, "ts": 64655796937.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655796885.3, "ph": "X", "cat": "fee", "dur": 52.7, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 19656, "tid": 21652, "ts": 64655796882.0, "ph": "X", "cat": "fee", "dur": 57.8, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 19656, "tid": 21652, "ts": 64655796881.3, "ph": "X", "cat": "fee", "dur": 58.8, "name": "wakeup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:77)"}, {"pid": 19656, "tid": 21652, "ts": 64655796981.199, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 21652, "ts": 64655796980.9, "ph": "X", "cat": "fee", "dur": 0.9, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 21652, "ts": 64655796982.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655796982.3, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 21652, "ts": 64655796941.7, "ph": "X", "cat": "fee", "dur": 41.299, "name": "acquire (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:404)"}, {"pid": 19656, "tid": 21652, "ts": 64655796983.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655796987.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.next"}, {"pid": 19656, "tid": 21652, "ts": 64655796988.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "dict.copy"}, {"pid": 19656, "tid": 21652, "ts": 64655796988.799, "ph": "X", "cat": "fee", "dur": 0.2, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655796989.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "name (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:189)"}, {"pid": 19656, "tid": 21652, "ts": 64655796992.599, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:94)"}, {"pid": 19656, "tid": 21652, "ts": 64655796993.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:94)"}, {"pid": 19656, "tid": 21652, "ts": 64655796992.099, "ph": "X", "cat": "fee", "dur": 2.1, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655796996.899, "ph": "X", "cat": "fee", "dur": 0.2, "name": "set.add"}, {"pid": 19656, "tid": 21652, "ts": 64655796995.7, "ph": "X", "cat": "fee", "dur": 1.5, "name": "add (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_weakrefset.py:86)"}, {"pid": 19656, "tid": 21652, "ts": 64655796986.9, "ph": "X", "cat": "fee", "dur": 10.4, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:80)"}, {"pid": 19656, "tid": 21652, "ts": 64655796998.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 21652, "ts": 64655796998.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655796999.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "dict.get"}, {"pid": 19656, "tid": 21652, "ts": 64655797002.4, "ph": "X", "cat": "fee", "dur": 0.5, "name": "builtins.max"}, {"pid": 19656, "tid": 21652, "ts": 64655797003.3, "ph": "X", "cat": "fee", "dur": 1.8, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 21652, "ts": 64655797001.6, "ph": "X", "cat": "fee", "dur": 3.9, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 21652, "ts": 64655797000.9, "ph": "X", "cat": "fee", "dur": 4.8, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 21652, "ts": 64655797006.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.max"}, {"pid": 19656, "tid": 21652, "ts": 64655797007.0, "ph": "X", "cat": "fee", "dur": 1.2, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 21652, "ts": 64655797006.4, "ph": "X", "cat": "fee", "dur": 6.1, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 21652, "ts": 64655797006.1, "ph": "X", "cat": "fee", "dur": 6.6, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 21652, "ts": 64655797013.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.max"}, {"pid": 19656, "tid": 21652, "ts": 64655797013.8, "ph": "X", "cat": "fee", "dur": 1.2, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 21652, "ts": 64655797013.3, "ph": "X", "cat": "fee", "dur": 1.8, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 21652, "ts": 64655797013.1, "ph": "X", "cat": "fee", "dur": 2.1, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 21652, "ts": 64655796999.6, "ph": "X", "cat": "fee", "dur": 15.9, "name": "_cleanup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:61)"}, {"pid": 19656, "tid": 21652, "ts": 64655797017.0, "ph": "X", "cat": "fee", "dur": 0.299, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655797016.699, "ph": "X", "cat": "fee", "dur": 0.9, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655797021.499, "ph": "X", "cat": "fee", "dur": 0.2, "name": "current_process (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:37)"}, {"pid": 19656, "tid": 21652, "ts": 64655797021.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655797020.999, "ph": "X", "cat": "fee", "dur": 1.12, "name": "_check_not_importing_main (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\spawn.py:132)"}, {"pid": 19656, "tid": 21652, "ts": 64655797022.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "current_process (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:37)"}, {"pid": 19656, "tid": 21652, "ts": 64655797023.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "authkey (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:213)"}, {"pid": 19656, "tid": 21652, "ts": 64655797024.0, "ph": "X", "cat": "fee", "dur": 0.299, "name": "list.copy"}, {"pid": 19656, "tid": 21652, "ts": 64655797024.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.index"}, {"pid": 19656, "tid": 21652, "ts": 64655797025.6, "ph": "X", "cat": "fee", "dur": 1.599, "name": "nt.getcwd"}, {"pid": 19656, "tid": 21652, "ts": 64655797027.5, "ph": "X", "cat": "fee", "dur": 0.5, "name": "get_start_method (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:249)"}, {"pid": 19656, "tid": 21652, "ts": 64655797028.2, "ph": "X", "cat": "fee", "dur": 0.8, "name": "dict.update"}, {"pid": 19656, "tid": 21652, "ts": 64655797029.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655797030.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655797031.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655797031.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655797032.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655797032.3, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655797033.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655797033.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655797033.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655797034.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655797033.1, "ph": "X", "cat": "fee", "dur": 2.2, "name": "splitdrive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:124)"}, {"pid": 19656, "tid": 21652, "ts": 64655797035.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655797036.199, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655797036.1, "ph": "X", "cat": "fee", "dur": 0.22, "name": "_get_bothseps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:34)"}, {"pid": 19656, "tid": 21652, "ts": 64655797030.7, "ph": "X", "cat": "fee", "dur": 5.8, "name": "isabs (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:61)"}, {"pid": 19656, "tid": 21652, "ts": 64655797037.199, "ph": "X", "cat": "fee", "dur": 0.02, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655797037.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655797037.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655797037.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655797038.22, "ph": "X", "cat": "fee", "dur": 0.08, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655797038.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655797038.499, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655797038.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655797038.2, "ph": "X", "cat": "fee", "dur": 1.0, "name": "splitdrive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:124)"}, {"pid": 19656, "tid": 21652, "ts": 64655797039.499, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655797039.999, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.lstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655797040.499, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.split"}, {"pid": 19656, "tid": 21652, "ts": 64655797041.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655797041.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655797042.299, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655797042.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655797042.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655797042.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655797043.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655797043.299, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655797043.5, "ph": "X", "cat": "fee", "dur": 0.299, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655797037.1, "ph": "X", "cat": "fee", "dur": 6.9, "name": "normpath (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:450)"}, {"pid": 19656, "tid": 21652, "ts": 64655797020.6, "ph": "X", "cat": "fee", "dur": 23.8, "name": "get_preparation_data (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\spawn.py:150)"}, {"pid": 19656, "tid": 5356, "ts": 64655796927.4, "ph": "X", "cat": "fee", "dur": 121.8, "name": "_winapi.WriteFile"}, {"pid": 19656, "tid": 5356, "ts": 64655797050.7, "ph": "X", "cat": "fee", "dur": 1.699, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 5356, "ts": 64655797052.9, "ph": "X", "cat": "fee", "dur": 0.299, "name": "builtins.len"}, {"pid": 19656, "tid": 5356, "ts": 64655796927.1, "ph": "X", "cat": "fee", "dur": 126.3, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 19656, "tid": 5356, "ts": 64655796923.8, "ph": "X", "cat": "fee", "dur": 131.7, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 19656, "tid": 5356, "ts": 64655797055.9, "ph": "X", "cat": "fee", "dur": 0.4, "name": "collections.deque.popleft"}, {"pid": 19656, "tid": 5356, "ts": 64655797057.7, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 5356, "ts": 64655797059.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 5356, "ts": 64655797059.6, "ph": "X", "cat": "fee", "dur": 0.699, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 5356, "ts": 64655797060.6, "ph": "X", "cat": "fee", "dur": 1.599, "name": "_thread.allocate_lock"}, {"pid": 19656, "tid": 5356, "ts": 64655797062.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 5356, "ts": 64655797062.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "collections.deque.append"}, {"pid": 19656, "tid": 5356, "ts": 64655797063.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.release"}, {"pid": 19656, "tid": 5356, "ts": 64655797063.299, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_release_save (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:265)"}, {"pid": 19656, "tid": 17528, "ts": 64655796858.799, "ph": "X", "cat": "fee", "dur": 208.5, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64655797068.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64655797068.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64655797069.7, "ph": "X", "cat": "fee", "dur": 2.199, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64655796858.3, "ph": "X", "cat": "fee", "dur": 213.799, "name": "_exhaustive_wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:810)"}, {"pid": 19656, "tid": 21652, "ts": 64655797045.0, "ph": "X", "cat": "fee", "dur": 28.8, "name": "_winapi.CreatePipe"}, {"pid": 19656, "tid": 21652, "ts": 64655797074.6, "ph": "X", "cat": "fee", "dur": 1.5, "name": "msvcrt.open_osfhandle"}, {"pid": 19656, "tid": 21652, "ts": 64655797076.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655797140.5, "ph": "X", "cat": "fee", "dur": 0.5, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655797141.2, "ph": "X", "cat": "fee", "dur": 0.199, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655797141.6, "ph": "X", "cat": "fee", "dur": 0.6, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655797142.399, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655797142.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655797140.2, "ph": "X", "cat": "fee", "dur": 3.399, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655797144.199, "ph": "X", "cat": "fee", "dur": 0.2, "name": "get_executable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\spawn.py:45)"}, {"pid": 19656, "tid": 17528, "ts": 64655797072.9, "ph": "X", "cat": "fee", "dur": 79.6, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64655797153.1, "ph": "X", "cat": "fee", "dur": 1.999, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64655797155.5, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64655797156.7, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64655797158.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "set.add"}, {"pid": 19656, "tid": 17528, "ts": 64655797158.899, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 17528, "ts": 64655797160.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64655797161.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64655797160.3, "ph": "X", "cat": "fee", "dur": 1.5, "name": "set.update"}, {"pid": 19656, "tid": 17528, "ts": 64655797162.199, "ph": "X", "cat": "fee", "dur": 0.6, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:908)"}, {"pid": 19656, "tid": 17528, "ts": 64655796845.099, "ph": "X", "cat": "fee", "dur": 317.9, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:832)"}, {"pid": 19656, "tid": 21652, "ts": 64655797144.699, "ph": "X", "cat": "fee", "dur": 29.6, "name": "io.open"}, {"pid": 19656, "tid": 21652, "ts": 64655797176.0, "ph": "X", "cat": "fee", "dur": 1181.4, "name": "_winapi.CreateProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655798358.4, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655798364.099, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.next"}, {"pid": 19656, "tid": 21652, "ts": 64655798364.7, "ph": "X", "cat": "fee", "dur": 0.399, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655798362.5, "ph": "X", "cat": "fee", "dur": 3.3, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:186)"}, {"pid": 19656, "tid": 21652, "ts": 64655798366.6, "ph": "X", "cat": "fee", "dur": 0.7, "name": "set_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:354)"}, {"pid": 19656, "tid": 21652, "ts": 64655798372.3, "ph": "X", "cat": "fee", "dur": 0.6, "name": "dict.copy"}, {"pid": 19656, "tid": 21652, "ts": 64655798373.3, "ph": "X", "cat": "fee", "dur": 0.699, "name": "dict.update"}, {"pid": 19656, "tid": 21652, "ts": 64655798368.899, "ph": "X", "cat": "fee", "dur": 5.2, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 19656, "tid": 21652, "ts": 64655798378.6, "ph": "X", "cat": "fee", "dur": 0.399, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655798378.2, "ph": "X", "cat": "fee", "dur": 1.099, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655798381.8, "ph": "X", "cat": "fee", "dur": 0.299, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655798381.7, "ph": "X", "cat": "fee", "dur": 0.5, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655798377.4, "ph": "X", "cat": "fee", "dur": 5.8, "name": "__reduce__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:344)"}, {"pid": 19656, "tid": 21652, "ts": 64655798374.4, "ph": "X", "cat": "fee", "dur": 16.599, "name": "ForkingPickler.dump"}, {"pid": 19656, "tid": 21652, "ts": 64655798368.1, "ph": "X", "cat": "fee", "dur": 23.899, "name": "dump (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:58)"}, {"pid": 19656, "tid": 21652, "ts": 64655798394.499, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.copy"}, {"pid": 19656, "tid": 21652, "ts": 64655798394.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "dict.update"}, {"pid": 19656, "tid": 21652, "ts": 64655798392.999, "ph": "X", "cat": "fee", "dur": 2.3, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 19656, "tid": 21652, "ts": 64655798401.7, "ph": "X", "cat": "fee", "dur": 0.199, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655798401.099, "ph": "X", "cat": "fee", "dur": 1.0, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655798403.7, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655798403.6, "ph": "X", "cat": "fee", "dur": 0.4, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655798400.8, "ph": "X", "cat": "fee", "dur": 3.7, "name": "__reduce__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:344)"}, {"pid": 19656, "tid": 21652, "ts": 64655798410.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655798410.7, "ph": "X", "cat": "fee", "dur": 0.299, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655798410.499, "ph": "X", "cat": "fee", "dur": 0.6, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655798409.999, "ph": "X", "cat": "fee", "dur": 2.3, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655798414.6, "ph": "X", "cat": "fee", "dur": 0.199, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655798415.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655798416.4, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655798416.1, "ph": "X", "cat": "fee", "dur": 0.599, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 21652, "ts": 64655798417.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655798417.8, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_winapi.OpenProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655798421.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655798421.8, "ph": "X", "cat": "fee", "dur": 1.099, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655798423.399, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655798417.2, "ph": "X", "cat": "fee", "dur": 7.1, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:106)"}, {"pid": 19656, "tid": 21652, "ts": 64655798425.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655798425.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655798414.299, "ph": "X", "cat": "fee", "dur": 11.3, "name": "reduce_pipe_connection (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:961)"}, {"pid": 19656, "tid": 21652, "ts": 64655798430.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655798430.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655798431.799, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655798431.6, "ph": "X", "cat": "fee", "dur": 0.399, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 21652, "ts": 64655798432.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655798432.799, "ph": "X", "cat": "fee", "dur": 1.3, "name": "_winapi.OpenProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655798434.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655798434.6, "ph": "X", "cat": "fee", "dur": 0.599, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655798435.4, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655798432.4, "ph": "X", "cat": "fee", "dur": 3.4, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:106)"}, {"pid": 19656, "tid": 21652, "ts": 64655798436.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655798436.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655798430.1, "ph": "X", "cat": "fee", "dur": 6.7, "name": "reduce_pipe_connection (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:961)"}, {"pid": 19656, "tid": 21652, "ts": 64655798440.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655798440.2, "ph": "X", "cat": "fee", "dur": 0.419, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655798440.0, "ph": "X", "cat": "fee", "dur": 0.7, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655798441.52, "ph": "X", "cat": "fee", "dur": 0.08, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655798441.5, "ph": "X", "cat": "fee", "dur": 0.12, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655798442.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655798442.5, "ph": "X", "cat": "fee", "dur": 0.219, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655798443.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655798443.8, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655798443.3, "ph": "X", "cat": "fee", "dur": 1.6, "name": "duplicate (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:71)"}, {"pid": 19656, "tid": 21652, "ts": 64655798442.199, "ph": "X", "cat": "fee", "dur": 2.9, "name": "duplicate_for_child (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:97)"}, {"pid": 19656, "tid": 21652, "ts": 64655798439.6, "ph": "X", "cat": "fee", "dur": 6.0, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:100)"}, {"pid": 19656, "tid": 21652, "ts": 64655798449.22, "ph": "X", "cat": "fee", "dur": 0.18, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655798449.2, "ph": "X", "cat": "fee", "dur": 0.22, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655798448.999, "ph": "X", "cat": "fee", "dur": 0.5, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655798450.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655798450.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655798450.799, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655798450.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655798451.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655798451.6, "ph": "X", "cat": "fee", "dur": 0.699, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655798451.299, "ph": "X", "cat": "fee", "dur": 1.1, "name": "duplicate (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:71)"}, {"pid": 19656, "tid": 21652, "ts": 64655798450.5, "ph": "X", "cat": "fee", "dur": 2.0, "name": "duplicate_for_child (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:97)"}, {"pid": 19656, "tid": 21652, "ts": 64655798448.7, "ph": "X", "cat": "fee", "dur": 4.099, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:100)"}, {"pid": 19656, "tid": 21652, "ts": 64655798456.4, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655798456.3, "ph": "X", "cat": "fee", "dur": 0.319, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655798456.099, "ph": "X", "cat": "fee", "dur": 0.6, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655798455.8, "ph": "X", "cat": "fee", "dur": 1.4, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:356)"}, {"pid": 19656, "tid": 21652, "ts": 64655798459.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655798459.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655798460.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655798460.2, "ph": "X", "cat": "fee", "dur": 0.399, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 21652, "ts": 64655798461.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655798461.4, "ph": "X", "cat": "fee", "dur": 1.5, "name": "_winapi.OpenProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655798463.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655798463.42, "ph": "X", "cat": "fee", "dur": 0.68, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655798464.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655798461.0, "ph": "X", "cat": "fee", "dur": 3.899, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:106)"}, {"pid": 19656, "tid": 21652, "ts": 64655798465.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655798465.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655798459.0, "ph": "X", "cat": "fee", "dur": 6.8, "name": "reduce_pipe_connection (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:961)"}, {"pid": 19656, "tid": 21652, "ts": 64655798467.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655798468.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655798468.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655798468.5, "ph": "X", "cat": "fee", "dur": 0.4, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 21652, "ts": 64655798469.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655798469.6, "ph": "X", "cat": "fee", "dur": 1.099, "name": "_winapi.OpenProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655798470.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655798471.0, "ph": "X", "cat": "fee", "dur": 0.599, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655798471.8, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655798469.2, "ph": "X", "cat": "fee", "dur": 9.6, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:106)"}, {"pid": 19656, "tid": 21652, "ts": 64655798481.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655798481.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655798467.499, "ph": "X", "cat": "fee", "dur": 14.8, "name": "reduce_pipe_connection (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:961)"}, {"pid": 19656, "tid": 21652, "ts": 64655798488.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655798488.7, "ph": "X", "cat": "fee", "dur": 0.599, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655798488.4, "ph": "X", "cat": "fee", "dur": 1.0, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655798490.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655798490.2, "ph": "X", "cat": "fee", "dur": 0.22, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655798491.32, "ph": "X", "cat": "fee", "dur": 0.08, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655798491.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655798492.599, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655798493.099, "ph": "X", "cat": "fee", "dur": 1.8, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655798492.3, "ph": "X", "cat": "fee", "dur": 2.7, "name": "duplicate (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:71)"}, {"pid": 19656, "tid": 21652, "ts": 64655798491.099, "ph": "X", "cat": "fee", "dur": 4.1, "name": "duplicate_for_child (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:97)"}, {"pid": 19656, "tid": 21652, "ts": 64655798487.799, "ph": "X", "cat": "fee", "dur": 7.8, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:100)"}, {"pid": 19656, "tid": 21652, "ts": 64655798395.6, "ph": "X", "cat": "fee", "dur": 103.9, "name": "ForkingPickler.dump"}, {"pid": 19656, "tid": 21652, "ts": 64655798392.6, "ph": "X", "cat": "fee", "dur": 109.0, "name": "dump (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:58)"}, {"pid": 19656, "tid": 21652, "ts": 64655798502.1, "ph": "X", "cat": "fee", "dur": 0.399, "name": "set_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:354)"}, {"pid": 19656, "tid": 21652, "ts": 64655798502.7, "ph": "X", "cat": "fee", "dur": 10.699, "name": "_io.BufferedWriter.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655797020.1, "ph": "X", "cat": "fee", "dur": 1493.5, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:44)"}, {"pid": 19656, "tid": 21652, "ts": 64655797016.1, "ph": "X", "cat": "fee", "dur": 1499.7, "name": "_Popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:324)"}, {"pid": 19656, "tid": 21652, "ts": 64655798517.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "set.add"}, {"pid": 19656, "tid": 21652, "ts": 64655796997.9, "ph": "X", "cat": "fee", "dur": 1520.2, "name": "start (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:110)"}, {"pid": 19656, "tid": 21652, "ts": 64655798519.3, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 21652, "ts": 64655798518.999, "ph": "X", "cat": "fee", "dur": 0.9, "name": "ident (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:234)"}, {"pid": 19656, "tid": 21652, "ts": 64655796940.899, "ph": "X", "cat": "fee", "dur": 1579.3, "name": "_adjust_process_count (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:662)"}, {"pid": 19656, "tid": 21652, "ts": 64655798520.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_start_executor_manager_thread (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:654)"}, {"pid": 19656, "tid": 21652, "ts": 64655798521.2, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655796770.0, "ph": "X", "cat": "fee", "dur": 1752.3, "name": "submit (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:678)"}, {"pid": 19656, "tid": 21652, "ts": 64655798523.4, "ph": "X", "cat": "fee", "dur": 2.0, "name": "_get_chunks (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:183)"}, {"pid": 19656, "tid": 17528, "ts": 64655798533.699, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655798534.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64655798534.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:331)"}, {"pid": 19656, "tid": 17528, "ts": 64655798533.3, "ph": "X", "cat": "fee", "dur": 1.899, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:258)"}, {"pid": 19656, "tid": 17528, "ts": 64655798535.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655798536.199, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64655798537.2, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:299)"}, {"pid": 19656, "tid": 17528, "ts": 64655798538.7, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_io.BytesIO.getvalue"}, {"pid": 19656, "tid": 17528, "ts": 64655798535.699, "ph": "X", "cat": "fee", "dur": 3.6, "name": "recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:213)"}, {"pid": 19656, "tid": 17528, "ts": 64655798540.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655798540.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64655798541.0, "ph": "X", "cat": "fee", "dur": 6.7, "name": "_winapi.PeekNamedPipe"}, {"pid": 19656, "tid": 17528, "ts": 64655798551.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655798552.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655798552.1, "ph": "X", "cat": "fee", "dur": 0.5, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64655798552.699, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64655798556.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64655798557.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.keys"}, {"pid": 19656, "tid": 17528, "ts": 64655798558.499, "ph": "X", "cat": "fee", "dur": 1.3, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64655798557.6, "ph": "X", "cat": "fee", "dur": 2.3, "name": "_exhaustive_wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:810)"}, {"pid": 19656, "tid": 17528, "ts": 64655798560.7, "ph": "X", "cat": "fee", "dur": 2.899, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64655798564.0, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64655798566.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64655798566.0, "ph": "X", "cat": "fee", "dur": 0.899, "name": "set.update"}, {"pid": 19656, "tid": 17528, "ts": 64655798567.399, "ph": "X", "cat": "fee", "dur": 0.3, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:908)"}, {"pid": 19656, "tid": 17528, "ts": 64655798548.899, "ph": "X", "cat": "fee", "dur": 19.0, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:832)"}, {"pid": 19656, "tid": 17528, "ts": 64655798540.7, "ph": "X", "cat": "fee", "dur": 28.9, "name": "_poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:331)"}, {"pid": 19656, "tid": 17528, "ts": 64655798539.9, "ph": "X", "cat": "fee", "dur": 29.8, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:258)"}, {"pid": 19656, "tid": 17528, "ts": 64655798532.3, "ph": "X", "cat": "fee", "dur": 37.599, "name": "clear (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:81)"}, {"pid": 19656, "tid": 17528, "ts": 64655798570.1, "ph": "X", "cat": "fee", "dur": 1.099, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655796839.9, "ph": "X", "cat": "fee", "dur": 1731.5, "name": "wait_result_broken_or_wakeup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:366)"}, {"pid": 19656, "tid": 17528, "ts": 64655798572.4, "ph": "X", "cat": "fee", "dur": 0.6, "name": "is_shutting_down (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:420)"}, {"pid": 19656, "tid": 17528, "ts": 64655798574.4, "ph": "X", "cat": "fee", "dur": 0.599, "name": "_multiprocessing.SemLock._is_zero"}, {"pid": 19656, "tid": 17528, "ts": 64655798574.1, "ph": "X", "cat": "fee", "dur": 1.0, "name": "full (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:131)"}, {"pid": 19656, "tid": 17528, "ts": 64655798577.3, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64655798576.999, "ph": "X", "cat": "fee", "dur": 0.6, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64655798578.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64655798578.1, "ph": "X", "cat": "fee", "dur": 0.619, "name": "_qsize (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:209)"}, {"pid": 19656, "tid": 17528, "ts": 64655798579.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "collections.deque.popleft"}, {"pid": 19656, "tid": 17528, "ts": 64655798579.1, "ph": "X", "cat": "fee", "dur": 0.419, "name": "_get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:217)"}, {"pid": 19656, "tid": 17528, "ts": 64655798581.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64655798580.7, "ph": "X", "cat": "fee", "dur": 0.62, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 17528, "ts": 64655798580.5, "ph": "X", "cat": "fee", "dur": 2.0, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64655798583.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655798583.099, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64655798576.3, "ph": "X", "cat": "fee", "dur": 7.399, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:154)"}, {"pid": 19656, "tid": 17528, "ts": 64655798585.899, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.RLock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64655798585.7, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64655798587.2, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_thread.RLock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655798587.0, "ph": "X", "cat": "fee", "dur": 0.419, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64655798585.0, "ph": "X", "cat": "fee", "dur": 2.6, "name": "set_running_or_notify_cancel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:486)"}, {"pid": 19656, "tid": 17528, "ts": 64655798588.699, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:151)"}, {"pid": 19656, "tid": 17528, "ts": 64655798590.1, "ph": "X", "cat": "fee", "dur": 0.599, "name": "_multiprocessing.SemLock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64655798591.199, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64655798591.1, "ph": "X", "cat": "fee", "dur": 0.32, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64655798591.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "collections.deque.append"}, {"pid": 19656, "tid": 17528, "ts": 64655798592.499, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64655798592.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 17528, "ts": 64655798593.4, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_thread.lock.release"}, {"pid": 19656, "tid": 17528, "ts": 64655798594.3, "ph": "X", "cat": "fee", "dur": 0.199, "name": "collections.deque.remove"}, {"pid": 19656, "tid": 17528, "ts": 64655798592.2, "ph": "X", "cat": "fee", "dur": 2.4, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64655798595.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655798595.499, "ph": "X", "cat": "fee", "dur": 0.32, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64655798589.6, "ph": "X", "cat": "fee", "dur": 6.3, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:86)"}, {"pid": 19656, "tid": 17528, "ts": 64655798596.5, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_multiprocessing.SemLock._is_zero"}, {"pid": 19656, "tid": 17528, "ts": 64655798596.4, "ph": "X", "cat": "fee", "dur": 0.6, "name": "full (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:131)"}, {"pid": 19656, "tid": 17528, "ts": 64655798597.799, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64655798597.7, "ph": "X", "cat": "fee", "dur": 0.22, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64655798598.299, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64655798598.1, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_qsize (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:209)"}, {"pid": 19656, "tid": 17528, "ts": 64655798599.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655798599.299, "ph": "X", "cat": "fee", "dur": 0.22, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64655798597.5, "ph": "X", "cat": "fee", "dur": 2.3, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:154)"}, {"pid": 19656, "tid": 17528, "ts": 64655798573.5, "ph": "X", "cat": "fee", "dur": 27.099, "name": "add_call_item_to_queue (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:343)"}, {"pid": 19656, "tid": 17528, "ts": 64655798601.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.values"}, {"pid": 19656, "tid": 17528, "ts": 64655798603.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655798603.1, "ph": "X", "cat": "fee", "dur": 0.7, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655798604.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655798604.1, "ph": "X", "cat": "fee", "dur": 0.4, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655798605.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655798604.8, "ph": "X", "cat": "fee", "dur": 0.4, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655798605.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655798605.399, "ph": "X", "cat": "fee", "dur": 0.4, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655798602.3, "ph": "X", "cat": "fee", "dur": 3.599, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:376)"}, {"pid": 19656, "tid": 17528, "ts": 64655798608.199, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655798609.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655798608.8, "ph": "X", "cat": "fee", "dur": 0.399, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64655798609.3, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64655798612.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64655798613.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655798613.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655798613.6, "ph": "X", "cat": "fee", "dur": 0.4, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64655798614.1, "ph": "X", "cat": "fee", "dur": 1.899, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64655798616.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64655798616.799, "ph": "X", "cat": "fee", "dur": 1.0, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655798618.9, "ph": "X", "cat": "fee", "dur": 0.299, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655798619.599, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655798620.099, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655798620.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "dict.keys"}, {"pid": 19656, "tid": 21652, "ts": 64655798628.4, "ph": "X", "cat": "fee", "dur": 2.099, "name": "RLock (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:82)"}, {"pid": 19656, "tid": 21652, "ts": 64655798627.8, "ph": "X", "cat": "fee", "dur": 4.499, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:228)"}, {"pid": 19656, "tid": 21652, "ts": 64655798627.1, "ph": "X", "cat": "fee", "dur": 6.1, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:317)"}, {"pid": 19656, "tid": 21652, "ts": 64655798633.799, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:138)"}, {"pid": 19656, "tid": 21652, "ts": 64655798636.099, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 21652, "ts": 64655798635.9, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 21652, "ts": 64655798637.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "collections.deque.append"}, {"pid": 19656, "tid": 21652, "ts": 64655798637.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:213)"}, {"pid": 19656, "tid": 21652, "ts": 64655798638.4, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 21652, "ts": 64655798638.3, "ph": "X", "cat": "fee", "dur": 0.52, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 21652, "ts": 64655798638.0, "ph": "X", "cat": "fee", "dur": 1.899, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655798640.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655798640.399, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 21652, "ts": 64655798635.299, "ph": "X", "cat": "fee", "dur": 5.7, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:122)"}, {"pid": 19656, "tid": 21652, "ts": 64655798643.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655798643.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 19656, "tid": 21652, "ts": 64655798644.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 5356, "ts": 64655797063.9, "ph": "X", "cat": "fee", "dur": 1587.399, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 5356, "ts": 64655798652.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 5356, "ts": 64655798652.2, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_acquire_restore (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:268)"}, {"pid": 19656, "tid": 5356, "ts": 64655797058.999, "ph": "X", "cat": "fee", "dur": 1593.8, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:280)"}, {"pid": 19656, "tid": 5356, "ts": 64655798654.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_thread.lock.release"}, {"pid": 19656, "tid": 5356, "ts": 64655798654.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "collections.deque.popleft"}, {"pid": 19656, "tid": 5356, "ts": 64655798660.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "dict.copy"}, {"pid": 19656, "tid": 5356, "ts": 64655798660.7, "ph": "X", "cat": "fee", "dur": 0.599, "name": "dict.update"}, {"pid": 19656, "tid": 5356, "ts": 64655798657.2, "ph": "X", "cat": "fee", "dur": 4.199, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 19656, "tid": 5356, "ts": 64655798669.0, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_reduce_partial (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:223)"}, {"pid": 19656, "tid": 5356, "ts": 64655798661.699, "ph": "X", "cat": "fee", "dur": 15.9, "name": "ForkingPickler.dump"}, {"pid": 19656, "tid": 5356, "ts": 64655798678.899, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_io.BytesIO.getbuffer"}, {"pid": 19656, "tid": 5356, "ts": 64655798656.2, "ph": "X", "cat": "fee", "dur": 23.12, "name": "dumps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:48)"}, {"pid": 19656, "tid": 5356, "ts": 64655798680.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 5356, "ts": 64655798681.199, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 19656, "tid": 5356, "ts": 64655798682.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655798646.199, "ph": "X", "cat": "fee", "dur": 42.4, "name": "_winapi.WriteFile"}, {"pid": 19656, "tid": 21652, "ts": 64655798689.6, "ph": "X", "cat": "fee", "dur": 1.599, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 21652, "ts": 64655798691.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655798645.699, "ph": "X", "cat": "fee", "dur": 46.1, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 19656, "tid": 21652, "ts": 64655798642.6, "ph": "X", "cat": "fee", "dur": 50.4, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 19656, "tid": 21652, "ts": 64655798641.899, "ph": "X", "cat": "fee", "dur": 51.4, "name": "wakeup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:77)"}, {"pid": 19656, "tid": 21652, "ts": 64655798696.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 21652, "ts": 64655798695.7, "ph": "X", "cat": "fee", "dur": 0.599, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 21652, "ts": 64655798697.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655798697.0, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 21652, "ts": 64655798695.1, "ph": "X", "cat": "fee", "dur": 2.5, "name": "acquire (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:404)"}, {"pid": 19656, "tid": 21652, "ts": 64655798697.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655798700.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.next"}, {"pid": 19656, "tid": 21652, "ts": 64655798701.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "dict.copy"}, {"pid": 19656, "tid": 21652, "ts": 64655798701.8, "ph": "X", "cat": "fee", "dur": 0.199, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655798702.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "name (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:189)"}, {"pid": 19656, "tid": 21652, "ts": 64655798705.5, "ph": "X", "cat": "fee", "dur": 0.799, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:94)"}, {"pid": 19656, "tid": 21652, "ts": 64655798706.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:94)"}, {"pid": 19656, "tid": 21652, "ts": 64655798704.999, "ph": "X", "cat": "fee", "dur": 2.0, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655798709.599, "ph": "X", "cat": "fee", "dur": 0.3, "name": "set.add"}, {"pid": 19656, "tid": 21652, "ts": 64655798708.5, "ph": "X", "cat": "fee", "dur": 1.42, "name": "add (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_weakrefset.py:86)"}, {"pid": 19656, "tid": 21652, "ts": 64655798699.9, "ph": "X", "cat": "fee", "dur": 10.1, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:80)"}, {"pid": 19656, "tid": 21652, "ts": 64655798711.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 21652, "ts": 64655798711.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655798711.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "dict.get"}, {"pid": 19656, "tid": 21652, "ts": 64655798715.1, "ph": "X", "cat": "fee", "dur": 0.5, "name": "builtins.max"}, {"pid": 19656, "tid": 21652, "ts": 64655798716.1, "ph": "X", "cat": "fee", "dur": 1.599, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 21652, "ts": 64655798714.2, "ph": "X", "cat": "fee", "dur": 3.999, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 21652, "ts": 64655798713.5, "ph": "X", "cat": "fee", "dur": 4.9, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 21652, "ts": 64655798719.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.max"}, {"pid": 19656, "tid": 21652, "ts": 64655798719.699, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 21652, "ts": 64655798719.1, "ph": "X", "cat": "fee", "dur": 1.8, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 21652, "ts": 64655798718.8, "ph": "X", "cat": "fee", "dur": 2.3, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 21652, "ts": 64655798721.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.max"}, {"pid": 19656, "tid": 21652, "ts": 64655798722.2, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 21652, "ts": 64655798721.7, "ph": "X", "cat": "fee", "dur": 1.7, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 21652, "ts": 64655798721.4, "ph": "X", "cat": "fee", "dur": 2.099, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 21652, "ts": 64655798724.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.max"}, {"pid": 19656, "tid": 21652, "ts": 64655798724.5, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 21652, "ts": 64655798724.1, "ph": "X", "cat": "fee", "dur": 1.5, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 21652, "ts": 64655798723.799, "ph": "X", "cat": "fee", "dur": 1.9, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 21652, "ts": 64655798712.3, "ph": "X", "cat": "fee", "dur": 13.7, "name": "_cleanup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:61)"}, {"pid": 19656, "tid": 21652, "ts": 64655798727.4, "ph": "X", "cat": "fee", "dur": 0.299, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655798727.2, "ph": "X", "cat": "fee", "dur": 0.8, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655798732.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "current_process (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:37)"}, {"pid": 19656, "tid": 21652, "ts": 64655798732.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655798731.3, "ph": "X", "cat": "fee", "dur": 1.3, "name": "_check_not_importing_main (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\spawn.py:132)"}, {"pid": 19656, "tid": 21652, "ts": 64655798733.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "current_process (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:37)"}, {"pid": 19656, "tid": 21652, "ts": 64655798733.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "authkey (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:213)"}, {"pid": 19656, "tid": 21652, "ts": 64655798734.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.copy"}, {"pid": 19656, "tid": 21652, "ts": 64655798735.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.index"}, {"pid": 19656, "tid": 21652, "ts": 64655798736.3, "ph": "X", "cat": "fee", "dur": 1.5, "name": "nt.getcwd"}, {"pid": 19656, "tid": 21652, "ts": 64655798738.199, "ph": "X", "cat": "fee", "dur": 0.4, "name": "get_start_method (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:249)"}, {"pid": 19656, "tid": 21652, "ts": 64655798738.8, "ph": "X", "cat": "fee", "dur": 0.799, "name": "dict.update"}, {"pid": 19656, "tid": 21652, "ts": 64655798740.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655798740.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655798741.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655798742.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655798742.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655798742.799, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655798743.799, "ph": "X", "cat": "fee", "dur": 0.02, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655798744.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655798744.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655798744.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655798743.6, "ph": "X", "cat": "fee", "dur": 2.399, "name": "splitdrive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:124)"}, {"pid": 19656, "tid": 21652, "ts": 64655798746.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655798747.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655798746.8, "ph": "X", "cat": "fee", "dur": 0.52, "name": "_get_bothseps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:34)"}, {"pid": 19656, "tid": 21652, "ts": 64655798741.499, "ph": "X", "cat": "fee", "dur": 6.0, "name": "isabs (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:61)"}, {"pid": 19656, "tid": 21652, "ts": 64655798748.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655798748.42, "ph": "X", "cat": "fee", "dur": 0.079, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655798748.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655798749.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655798749.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655798749.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655798749.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655798750.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655798749.399, "ph": "X", "cat": "fee", "dur": 1.2, "name": "splitdrive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:124)"}, {"pid": 19656, "tid": 21652, "ts": 64655798750.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655798751.399, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.lstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655798751.899, "ph": "X", "cat": "fee", "dur": 0.6, "name": "str.split"}, {"pid": 19656, "tid": 21652, "ts": 64655798752.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655798753.199, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655798753.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655798753.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655798754.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655798754.199, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655798754.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655798754.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655798754.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655798748.2, "ph": "X", "cat": "fee", "dur": 6.999, "name": "normpath (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:450)"}, {"pid": 19656, "tid": 21652, "ts": 64655798731.0, "ph": "X", "cat": "fee", "dur": 24.699, "name": "get_preparation_data (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\spawn.py:150)"}, {"pid": 19656, "tid": 17528, "ts": 64655798622.0, "ph": "X", "cat": "fee", "dur": 137.4, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64655798759.999, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64655798760.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64655798761.5, "ph": "X", "cat": "fee", "dur": 2.4, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64655798621.3, "ph": "X", "cat": "fee", "dur": 142.9, "name": "_exhaustive_wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:810)"}, {"pid": 19656, "tid": 5356, "ts": 64655798683.7, "ph": "X", "cat": "fee", "dur": 85.199, "name": "_winapi.WriteFile"}, {"pid": 19656, "tid": 5356, "ts": 64655798770.3, "ph": "X", "cat": "fee", "dur": 1.899, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 5356, "ts": 64655798772.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 19656, "tid": 5356, "ts": 64655798683.3, "ph": "X", "cat": "fee", "dur": 89.899, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 19656, "tid": 5356, "ts": 64655798680.3, "ph": "X", "cat": "fee", "dur": 94.699, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 19656, "tid": 5356, "ts": 64655798775.4, "ph": "X", "cat": "fee", "dur": 0.4, "name": "collections.deque.popleft"}, {"pid": 19656, "tid": 5356, "ts": 64655798777.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 5356, "ts": 64655798779.0, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 5356, "ts": 64655798778.7, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 5356, "ts": 64655798779.6, "ph": "X", "cat": "fee", "dur": 1.599, "name": "_thread.allocate_lock"}, {"pid": 19656, "tid": 5356, "ts": 64655798781.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 5356, "ts": 64655798781.799, "ph": "X", "cat": "fee", "dur": 0.1, "name": "collections.deque.append"}, {"pid": 19656, "tid": 5356, "ts": 64655798782.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.release"}, {"pid": 19656, "tid": 5356, "ts": 64655798782.3, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_release_save (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:265)"}, {"pid": 19656, "tid": 21652, "ts": 64655798756.199, "ph": "X", "cat": "fee", "dur": 30.1, "name": "_winapi.CreatePipe"}, {"pid": 19656, "tid": 21652, "ts": 64655798787.1, "ph": "X", "cat": "fee", "dur": 1.299, "name": "msvcrt.open_osfhandle"}, {"pid": 19656, "tid": 21652, "ts": 64655798788.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655798849.4, "ph": "X", "cat": "fee", "dur": 0.4, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655798850.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655798850.499, "ph": "X", "cat": "fee", "dur": 0.5, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655798851.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655798851.499, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655798849.1, "ph": "X", "cat": "fee", "dur": 3.3, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655798853.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "get_executable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\spawn.py:45)"}, {"pid": 19656, "tid": 21652, "ts": 64655798853.5, "ph": "X", "cat": "fee", "dur": 11.4, "name": "io.open"}, {"pid": 19656, "tid": 17528, "ts": 64655798764.9, "ph": "X", "cat": "fee", "dur": 108.2, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64655798874.0, "ph": "X", "cat": "fee", "dur": 1.5, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64655798876.0, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64655798877.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64655798878.899, "ph": "X", "cat": "fee", "dur": 0.2, "name": "set.add"}, {"pid": 19656, "tid": 17528, "ts": 64655798879.3, "ph": "X", "cat": "fee", "dur": 0.4, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 17528, "ts": 64655798881.699, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64655798882.199, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64655798881.0, "ph": "X", "cat": "fee", "dur": 1.699, "name": "set.update"}, {"pid": 19656, "tid": 17528, "ts": 64655798883.199, "ph": "X", "cat": "fee", "dur": 0.6, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:908)"}, {"pid": 19656, "tid": 17528, "ts": 64655798607.199, "ph": "X", "cat": "fee", "dur": 276.8, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:832)"}, {"pid": 19656, "tid": 21652, "ts": 64655798866.1, "ph": "X", "cat": "fee", "dur": 1160.499, "name": "_winapi.CreateProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655800027.599, "ph": "X", "cat": "fee", "dur": 1.4, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655800034.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.next"}, {"pid": 19656, "tid": 21652, "ts": 64655800035.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655800032.2, "ph": "X", "cat": "fee", "dur": 4.3, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:186)"}, {"pid": 19656, "tid": 21652, "ts": 64655800037.4, "ph": "X", "cat": "fee", "dur": 0.7, "name": "set_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:354)"}, {"pid": 19656, "tid": 21652, "ts": 64655800043.4, "ph": "X", "cat": "fee", "dur": 0.699, "name": "dict.copy"}, {"pid": 19656, "tid": 21652, "ts": 64655800044.599, "ph": "X", "cat": "fee", "dur": 0.6, "name": "dict.update"}, {"pid": 19656, "tid": 21652, "ts": 64655800039.9, "ph": "X", "cat": "fee", "dur": 5.5, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 19656, "tid": 21652, "ts": 64655800049.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655800049.3, "ph": "X", "cat": "fee", "dur": 1.099, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655800053.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655800053.199, "ph": "X", "cat": "fee", "dur": 0.5, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655800048.5, "ph": "X", "cat": "fee", "dur": 6.0, "name": "__reduce__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:344)"}, {"pid": 19656, "tid": 21652, "ts": 64655800045.599, "ph": "X", "cat": "fee", "dur": 17.3, "name": "ForkingPickler.dump"}, {"pid": 19656, "tid": 21652, "ts": 64655800038.999, "ph": "X", "cat": "fee", "dur": 24.9, "name": "dump (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:58)"}, {"pid": 19656, "tid": 21652, "ts": 64655800066.3, "ph": "X", "cat": "fee", "dur": 0.4, "name": "dict.copy"}, {"pid": 19656, "tid": 21652, "ts": 64655800067.0, "ph": "X", "cat": "fee", "dur": 0.399, "name": "dict.update"}, {"pid": 19656, "tid": 21652, "ts": 64655800064.8, "ph": "X", "cat": "fee", "dur": 2.7, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 19656, "tid": 21652, "ts": 64655800073.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655800073.4, "ph": "X", "cat": "fee", "dur": 0.599, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655800075.499, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655800075.3, "ph": "X", "cat": "fee", "dur": 0.399, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655800073.1, "ph": "X", "cat": "fee", "dur": 3.0, "name": "__reduce__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:344)"}, {"pid": 19656, "tid": 21652, "ts": 64655800082.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655800082.4, "ph": "X", "cat": "fee", "dur": 0.219, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655800082.2, "ph": "X", "cat": "fee", "dur": 0.6, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655800081.7, "ph": "X", "cat": "fee", "dur": 2.3, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655800086.2, "ph": "X", "cat": "fee", "dur": 0.199, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655800087.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655800088.199, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655800087.9, "ph": "X", "cat": "fee", "dur": 0.5, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 21652, "ts": 64655800089.199, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655800089.8, "ph": "X", "cat": "fee", "dur": 3.5, "name": "_winapi.OpenProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655800093.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655800093.9, "ph": "X", "cat": "fee", "dur": 1.099, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655800095.5, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655800089.0, "ph": "X", "cat": "fee", "dur": 7.399, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:106)"}, {"pid": 19656, "tid": 21652, "ts": 64655800097.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655800097.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655800085.8, "ph": "X", "cat": "fee", "dur": 11.8, "name": "reduce_pipe_connection (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:961)"}, {"pid": 19656, "tid": 21652, "ts": 64655800102.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655800103.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655800103.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655800103.7, "ph": "X", "cat": "fee", "dur": 0.399, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 21652, "ts": 64655800104.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655800105.2, "ph": "X", "cat": "fee", "dur": 1.399, "name": "_winapi.OpenProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655800106.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655800107.0, "ph": "X", "cat": "fee", "dur": 0.599, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655800107.8, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655800104.8, "ph": "X", "cat": "fee", "dur": 3.6, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:106)"}, {"pid": 19656, "tid": 21652, "ts": 64655800108.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655800109.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655800102.5, "ph": "X", "cat": "fee", "dur": 6.8, "name": "reduce_pipe_connection (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:961)"}, {"pid": 19656, "tid": 21652, "ts": 64655800112.499, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655800112.4, "ph": "X", "cat": "fee", "dur": 0.5, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655800112.2, "ph": "X", "cat": "fee", "dur": 0.799, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655800113.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655800113.6, "ph": "X", "cat": "fee", "dur": 0.219, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655800115.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655800115.299, "ph": "X", "cat": "fee", "dur": 0.2, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655800116.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655800116.799, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655800116.299, "ph": "X", "cat": "fee", "dur": 1.7, "name": "duplicate (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:71)"}, {"pid": 19656, "tid": 21652, "ts": 64655800115.0, "ph": "X", "cat": "fee", "dur": 3.099, "name": "duplicate_for_child (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:97)"}, {"pid": 19656, "tid": 21652, "ts": 64655800111.9, "ph": "X", "cat": "fee", "dur": 6.699, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:100)"}, {"pid": 19656, "tid": 21652, "ts": 64655800122.399, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655800122.3, "ph": "X", "cat": "fee", "dur": 0.32, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655800122.1, "ph": "X", "cat": "fee", "dur": 0.6, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655800123.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655800123.1, "ph": "X", "cat": "fee", "dur": 0.22, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655800123.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655800123.8, "ph": "X", "cat": "fee", "dur": 0.22, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655800124.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655800124.699, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655800124.3, "ph": "X", "cat": "fee", "dur": 1.2, "name": "duplicate (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:71)"}, {"pid": 19656, "tid": 21652, "ts": 64655800123.6, "ph": "X", "cat": "fee", "dur": 2.0, "name": "duplicate_for_child (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:97)"}, {"pid": 19656, "tid": 21652, "ts": 64655800121.8, "ph": "X", "cat": "fee", "dur": 4.1, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:100)"}, {"pid": 19656, "tid": 21652, "ts": 64655800129.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655800129.3, "ph": "X", "cat": "fee", "dur": 0.299, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655800129.1, "ph": "X", "cat": "fee", "dur": 0.52, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655800128.8, "ph": "X", "cat": "fee", "dur": 1.299, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:356)"}, {"pid": 19656, "tid": 21652, "ts": 64655800132.1, "ph": "X", "cat": "fee", "dur": 0.199, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655800132.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655800133.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655800133.1, "ph": "X", "cat": "fee", "dur": 0.399, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 21652, "ts": 64655800134.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655800134.299, "ph": "X", "cat": "fee", "dur": 1.5, "name": "_winapi.OpenProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655800136.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655800136.22, "ph": "X", "cat": "fee", "dur": 0.58, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655800137.0, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655800133.9, "ph": "X", "cat": "fee", "dur": 3.699, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:106)"}, {"pid": 19656, "tid": 21652, "ts": 64655800138.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655800138.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655800131.9, "ph": "X", "cat": "fee", "dur": 6.6, "name": "reduce_pipe_connection (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:961)"}, {"pid": 19656, "tid": 21652, "ts": 64655800140.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655800140.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655800141.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655800141.1, "ph": "X", "cat": "fee", "dur": 0.299, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 21652, "ts": 64655800141.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655800142.1, "ph": "X", "cat": "fee", "dur": 1.2, "name": "_winapi.OpenProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655800143.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655800143.52, "ph": "X", "cat": "fee", "dur": 0.679, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655800144.3, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655800141.7, "ph": "X", "cat": "fee", "dur": 3.199, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:106)"}, {"pid": 19656, "tid": 21652, "ts": 64655800145.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655800145.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655800140.2, "ph": "X", "cat": "fee", "dur": 5.699, "name": "reduce_pipe_connection (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:961)"}, {"pid": 19656, "tid": 21652, "ts": 64655800148.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655800148.1, "ph": "X", "cat": "fee", "dur": 0.399, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655800147.9, "ph": "X", "cat": "fee", "dur": 0.7, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655800149.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655800148.999, "ph": "X", "cat": "fee", "dur": 0.22, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655800149.82, "ph": "X", "cat": "fee", "dur": 0.079, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655800149.8, "ph": "X", "cat": "fee", "dur": 0.199, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655800150.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655800150.799, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655800150.299, "ph": "X", "cat": "fee", "dur": 1.7, "name": "duplicate (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:71)"}, {"pid": 19656, "tid": 21652, "ts": 64655800149.6, "ph": "X", "cat": "fee", "dur": 2.5, "name": "duplicate_for_child (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:97)"}, {"pid": 19656, "tid": 21652, "ts": 64655800147.6, "ph": "X", "cat": "fee", "dur": 4.8, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:100)"}, {"pid": 19656, "tid": 21652, "ts": 64655800067.7, "ph": "X", "cat": "fee", "dur": 87.399, "name": "ForkingPickler.dump"}, {"pid": 19656, "tid": 21652, "ts": 64655800064.5, "ph": "X", "cat": "fee", "dur": 92.4, "name": "dump (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:58)"}, {"pid": 19656, "tid": 21652, "ts": 64655800157.399, "ph": "X", "cat": "fee", "dur": 0.3, "name": "set_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:354)"}, {"pid": 19656, "tid": 21652, "ts": 64655800157.8, "ph": "X", "cat": "fee", "dur": 11.4, "name": "_io.BufferedWriter.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655798730.5, "ph": "X", "cat": "fee", "dur": 1438.9, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:44)"}, {"pid": 19656, "tid": 21652, "ts": 64655798726.6, "ph": "X", "cat": "fee", "dur": 1445.099, "name": "_Popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:324)"}, {"pid": 19656, "tid": 21652, "ts": 64655800173.8, "ph": "X", "cat": "fee", "dur": 0.299, "name": "set.add"}, {"pid": 19656, "tid": 21652, "ts": 64655798710.7, "ph": "X", "cat": "fee", "dur": 1463.5, "name": "start (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:110)"}, {"pid": 19656, "tid": 21652, "ts": 64655800175.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 21652, "ts": 64655800175.0, "ph": "X", "cat": "fee", "dur": 0.899, "name": "ident (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:234)"}, {"pid": 19656, "tid": 21652, "ts": 64655798693.9, "ph": "X", "cat": "fee", "dur": 1482.599, "name": "_adjust_process_count (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:662)"}, {"pid": 19656, "tid": 21652, "ts": 64655800177.2, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_start_executor_manager_thread (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:654)"}, {"pid": 19656, "tid": 21652, "ts": 64655800177.6, "ph": "X", "cat": "fee", "dur": 1.2, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655798526.8, "ph": "X", "cat": "fee", "dur": 1652.2, "name": "submit (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:678)"}, {"pid": 19656, "tid": 21652, "ts": 64655800180.199, "ph": "X", "cat": "fee", "dur": 1.8, "name": "_get_chunks (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:183)"}, {"pid": 19656, "tid": 17528, "ts": 64655800189.6, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655800190.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64655800190.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:331)"}, {"pid": 19656, "tid": 17528, "ts": 64655800189.299, "ph": "X", "cat": "fee", "dur": 1.8, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:258)"}, {"pid": 19656, "tid": 17528, "ts": 64655800191.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655800192.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64655800193.099, "ph": "X", "cat": "fee", "dur": 1.2, "name": "_recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:299)"}, {"pid": 19656, "tid": 17528, "ts": 64655800194.7, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_io.BytesIO.getvalue"}, {"pid": 19656, "tid": 17528, "ts": 64655800191.599, "ph": "X", "cat": "fee", "dur": 3.6, "name": "recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:213)"}, {"pid": 19656, "tid": 17528, "ts": 64655800195.899, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655800196.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64655800196.8, "ph": "X", "cat": "fee", "dur": 7.0, "name": "_winapi.PeekNamedPipe"}, {"pid": 19656, "tid": 17528, "ts": 64655800207.4, "ph": "X", "cat": "fee", "dur": 0.399, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655800208.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655800208.2, "ph": "X", "cat": "fee", "dur": 0.6, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64655800208.9, "ph": "X", "cat": "fee", "dur": 2.699, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64655800212.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64655800213.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.keys"}, {"pid": 19656, "tid": 17528, "ts": 64655800215.1, "ph": "X", "cat": "fee", "dur": 1.5, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64655800214.1, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_exhaustive_wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:810)"}, {"pid": 19656, "tid": 17528, "ts": 64655800217.699, "ph": "X", "cat": "fee", "dur": 2.6, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64655800220.8, "ph": "X", "cat": "fee", "dur": 0.699, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64655800223.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64655800222.7, "ph": "X", "cat": "fee", "dur": 0.9, "name": "set.update"}, {"pid": 19656, "tid": 17528, "ts": 64655800224.1, "ph": "X", "cat": "fee", "dur": 0.299, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:908)"}, {"pid": 19656, "tid": 17528, "ts": 64655800205.2, "ph": "X", "cat": "fee", "dur": 19.4, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:832)"}, {"pid": 19656, "tid": 17528, "ts": 64655800196.399, "ph": "X", "cat": "fee", "dur": 29.8, "name": "_poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:331)"}, {"pid": 19656, "tid": 17528, "ts": 64655800195.7, "ph": "X", "cat": "fee", "dur": 30.599, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:258)"}, {"pid": 19656, "tid": 17528, "ts": 64655800188.299, "ph": "X", "cat": "fee", "dur": 38.2, "name": "clear (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:81)"}, {"pid": 19656, "tid": 17528, "ts": 64655800226.8, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655798601.099, "ph": "X", "cat": "fee", "dur": 1626.9, "name": "wait_result_broken_or_wakeup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:366)"}, {"pid": 19656, "tid": 17528, "ts": 64655800229.0, "ph": "X", "cat": "fee", "dur": 0.8, "name": "is_shutting_down (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:420)"}, {"pid": 19656, "tid": 17528, "ts": 64655800231.8, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_multiprocessing.SemLock._is_zero"}, {"pid": 19656, "tid": 17528, "ts": 64655800231.3, "ph": "X", "cat": "fee", "dur": 1.3, "name": "full (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:131)"}, {"pid": 19656, "tid": 17528, "ts": 64655800234.699, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64655800234.3, "ph": "X", "cat": "fee", "dur": 0.7, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64655800235.699, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64655800235.4, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_qsize (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:209)"}, {"pid": 19656, "tid": 17528, "ts": 64655800237.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "collections.deque.popleft"}, {"pid": 19656, "tid": 17528, "ts": 64655800236.4, "ph": "X", "cat": "fee", "dur": 0.72, "name": "_get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:217)"}, {"pid": 19656, "tid": 17528, "ts": 64655800238.499, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64655800238.3, "ph": "X", "cat": "fee", "dur": 0.52, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 17528, "ts": 64655800237.999, "ph": "X", "cat": "fee", "dur": 2.5, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64655800241.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655800241.1, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64655800233.5, "ph": "X", "cat": "fee", "dur": 8.2, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:154)"}, {"pid": 19656, "tid": 17528, "ts": 64655800243.6, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_thread.RLock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64655800243.4, "ph": "X", "cat": "fee", "dur": 0.52, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64655800245.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.RLock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655800244.7, "ph": "X", "cat": "fee", "dur": 0.52, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64655800243.0, "ph": "X", "cat": "fee", "dur": 2.4, "name": "set_running_or_notify_cancel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:486)"}, {"pid": 19656, "tid": 17528, "ts": 64655800247.0, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:151)"}, {"pid": 19656, "tid": 17528, "ts": 64655800248.599, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_multiprocessing.SemLock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64655800249.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64655800249.5, "ph": "X", "cat": "fee", "dur": 0.32, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64655800250.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "collections.deque.append"}, {"pid": 19656, "tid": 17528, "ts": 64655800250.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64655800250.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 17528, "ts": 64655800251.899, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_thread.lock.release"}, {"pid": 19656, "tid": 17528, "ts": 64655800252.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "collections.deque.remove"}, {"pid": 19656, "tid": 17528, "ts": 64655800250.6, "ph": "X", "cat": "fee", "dur": 2.5, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64655800254.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655800254.0, "ph": "X", "cat": "fee", "dur": 0.219, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64655800248.0, "ph": "X", "cat": "fee", "dur": 6.4, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:86)"}, {"pid": 19656, "tid": 17528, "ts": 64655800254.9, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_multiprocessing.SemLock._is_zero"}, {"pid": 19656, "tid": 17528, "ts": 64655800254.8, "ph": "X", "cat": "fee", "dur": 0.8, "name": "full (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:131)"}, {"pid": 19656, "tid": 17528, "ts": 64655800256.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64655800256.3, "ph": "X", "cat": "fee", "dur": 0.299, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64655800256.999, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64655800256.8, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_qsize (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:209)"}, {"pid": 19656, "tid": 17528, "ts": 64655800258.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655800257.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64655800256.1, "ph": "X", "cat": "fee", "dur": 2.3, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:154)"}, {"pid": 19656, "tid": 17528, "ts": 64655800230.3, "ph": "X", "cat": "fee", "dur": 29.1, "name": "add_call_item_to_queue (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:343)"}, {"pid": 19656, "tid": 17528, "ts": 64655800260.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "dict.values"}, {"pid": 19656, "tid": 17528, "ts": 64655800262.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655800261.799, "ph": "X", "cat": "fee", "dur": 0.6, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655800262.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655800262.7, "ph": "X", "cat": "fee", "dur": 0.4, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655800263.599, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655800263.299, "ph": "X", "cat": "fee", "dur": 0.4, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655800264.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655800264.0, "ph": "X", "cat": "fee", "dur": 0.4, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655800264.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655800264.599, "ph": "X", "cat": "fee", "dur": 0.3, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655800261.0, "ph": "X", "cat": "fee", "dur": 4.099, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:376)"}, {"pid": 19656, "tid": 17528, "ts": 64655800269.2, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655800270.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655800269.8, "ph": "X", "cat": "fee", "dur": 0.5, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64655800270.399, "ph": "X", "cat": "fee", "dur": 2.9, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64655800273.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64655800274.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655800275.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655800274.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64655800275.3, "ph": "X", "cat": "fee", "dur": 2.199, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64655800277.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64655800278.2, "ph": "X", "cat": "fee", "dur": 0.8, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655800280.1, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655800280.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655800281.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655800281.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655800282.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "dict.keys"}, {"pid": 19656, "tid": 21652, "ts": 64655800290.0, "ph": "X", "cat": "fee", "dur": 2.299, "name": "RLock (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:82)"}, {"pid": 19656, "tid": 21652, "ts": 64655800289.4, "ph": "X", "cat": "fee", "dur": 5.3, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:228)"}, {"pid": 19656, "tid": 21652, "ts": 64655800288.6, "ph": "X", "cat": "fee", "dur": 7.2, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:317)"}, {"pid": 19656, "tid": 21652, "ts": 64655800296.5, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:138)"}, {"pid": 19656, "tid": 21652, "ts": 64655800298.799, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 21652, "ts": 64655800298.6, "ph": "X", "cat": "fee", "dur": 0.699, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 21652, "ts": 64655800300.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "collections.deque.append"}, {"pid": 19656, "tid": 21652, "ts": 64655800300.099, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:213)"}, {"pid": 19656, "tid": 21652, "ts": 64655800301.599, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 21652, "ts": 64655800301.5, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 21652, "ts": 64655800301.2, "ph": "X", "cat": "fee", "dur": 5.8, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655800307.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655800307.5, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 21652, "ts": 64655800298.0, "ph": "X", "cat": "fee", "dur": 10.199, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:122)"}, {"pid": 19656, "tid": 21652, "ts": 64655800310.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655800310.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 19656, "tid": 21652, "ts": 64655800311.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 5356, "ts": 64655798782.9, "ph": "X", "cat": "fee", "dur": 1536.099, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 5356, "ts": 64655800320.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 5356, "ts": 64655800320.4, "ph": "X", "cat": "fee", "dur": 0.599, "name": "_acquire_restore (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:268)"}, {"pid": 19656, "tid": 5356, "ts": 64655798778.2, "ph": "X", "cat": "fee", "dur": 1542.899, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:280)"}, {"pid": 19656, "tid": 5356, "ts": 64655800323.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_thread.lock.release"}, {"pid": 19656, "tid": 5356, "ts": 64655800323.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "collections.deque.popleft"}, {"pid": 19656, "tid": 5356, "ts": 64655800329.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "dict.copy"}, {"pid": 19656, "tid": 5356, "ts": 64655800329.8, "ph": "X", "cat": "fee", "dur": 0.5, "name": "dict.update"}, {"pid": 19656, "tid": 5356, "ts": 64655800326.199, "ph": "X", "cat": "fee", "dur": 4.3, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 19656, "tid": 5356, "ts": 64655800338.2, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_reduce_partial (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:223)"}, {"pid": 19656, "tid": 5356, "ts": 64655800330.8, "ph": "X", "cat": "fee", "dur": 15.299, "name": "ForkingPickler.dump"}, {"pid": 19656, "tid": 5356, "ts": 64655800347.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_io.BytesIO.getbuffer"}, {"pid": 19656, "tid": 5356, "ts": 64655800325.1, "ph": "X", "cat": "fee", "dur": 22.7, "name": "dumps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:48)"}, {"pid": 19656, "tid": 5356, "ts": 64655800348.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 5356, "ts": 64655800349.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 19656, "tid": 5356, "ts": 64655800350.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655800313.499, "ph": "X", "cat": "fee", "dur": 43.2, "name": "_winapi.WriteFile"}, {"pid": 19656, "tid": 21652, "ts": 64655800357.599, "ph": "X", "cat": "fee", "dur": 1.5, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 21652, "ts": 64655800359.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655800312.999, "ph": "X", "cat": "fee", "dur": 46.62, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 19656, "tid": 21652, "ts": 64655800309.8, "ph": "X", "cat": "fee", "dur": 51.3, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 19656, "tid": 21652, "ts": 64655800309.199, "ph": "X", "cat": "fee", "dur": 52.1, "name": "wakeup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:77)"}, {"pid": 19656, "tid": 21652, "ts": 64655800364.0, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 21652, "ts": 64655800363.699, "ph": "X", "cat": "fee", "dur": 0.7, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 21652, "ts": 64655800365.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655800364.9, "ph": "X", "cat": "fee", "dur": 0.299, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 21652, "ts": 64655800363.0, "ph": "X", "cat": "fee", "dur": 2.399, "name": "acquire (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:404)"}, {"pid": 19656, "tid": 21652, "ts": 64655800365.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655800368.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.next"}, {"pid": 19656, "tid": 21652, "ts": 64655800371.0, "ph": "X", "cat": "fee", "dur": 0.6, "name": "dict.copy"}, {"pid": 19656, "tid": 21652, "ts": 64655800372.0, "ph": "X", "cat": "fee", "dur": 0.299, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655800372.799, "ph": "X", "cat": "fee", "dur": 0.2, "name": "name (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:189)"}, {"pid": 19656, "tid": 21652, "ts": 64655800375.8, "ph": "X", "cat": "fee", "dur": 0.9, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:94)"}, {"pid": 19656, "tid": 21652, "ts": 64655800376.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:94)"}, {"pid": 19656, "tid": 21652, "ts": 64655800375.2, "ph": "X", "cat": "fee", "dur": 2.199, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655800380.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "set.add"}, {"pid": 19656, "tid": 21652, "ts": 64655800378.6, "ph": "X", "cat": "fee", "dur": 1.8, "name": "add (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_weakrefset.py:86)"}, {"pid": 19656, "tid": 21652, "ts": 64655800367.8, "ph": "X", "cat": "fee", "dur": 12.7, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:80)"}, {"pid": 19656, "tid": 21652, "ts": 64655800381.5, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 21652, "ts": 64655800382.199, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655800382.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "dict.get"}, {"pid": 19656, "tid": 21652, "ts": 64655800385.9, "ph": "X", "cat": "fee", "dur": 0.5, "name": "builtins.max"}, {"pid": 19656, "tid": 21652, "ts": 64655800386.8, "ph": "X", "cat": "fee", "dur": 1.599, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 21652, "ts": 64655800384.9, "ph": "X", "cat": "fee", "dur": 3.8, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 21652, "ts": 64655800384.3, "ph": "X", "cat": "fee", "dur": 4.699, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 21652, "ts": 64655800390.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.max"}, {"pid": 19656, "tid": 21652, "ts": 64655800390.4, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 21652, "ts": 64655800389.7, "ph": "X", "cat": "fee", "dur": 1.8, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 21652, "ts": 64655800389.4, "ph": "X", "cat": "fee", "dur": 2.3, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 21652, "ts": 64655800392.4, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.max"}, {"pid": 19656, "tid": 21652, "ts": 64655800392.7, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 21652, "ts": 64655800392.2, "ph": "X", "cat": "fee", "dur": 1.7, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 21652, "ts": 64655800392.0, "ph": "X", "cat": "fee", "dur": 2.0, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 21652, "ts": 64655800394.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.max"}, {"pid": 19656, "tid": 5356, "ts": 64655800351.799, "ph": "X", "cat": "fee", "dur": 44.7, "name": "_winapi.WriteFile"}, {"pid": 19656, "tid": 5356, "ts": 64655800397.3, "ph": "X", "cat": "fee", "dur": 1.6, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 5356, "ts": 64655800399.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 5356, "ts": 64655800351.4, "ph": "X", "cat": "fee", "dur": 48.1, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 19656, "tid": 5356, "ts": 64655800348.7, "ph": "X", "cat": "fee", "dur": 51.999, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 19656, "tid": 5356, "ts": 64655800401.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "collections.deque.popleft"}, {"pid": 19656, "tid": 5356, "ts": 64655800402.199, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 5356, "ts": 64655800403.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 5356, "ts": 64655800403.499, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 5356, "ts": 64655800404.2, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_thread.allocate_lock"}, {"pid": 19656, "tid": 5356, "ts": 64655800405.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 5356, "ts": 64655800405.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "collections.deque.append"}, {"pid": 19656, "tid": 5356, "ts": 64655800406.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.release"}, {"pid": 19656, "tid": 5356, "ts": 64655800406.1, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_release_save (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:265)"}, {"pid": 19656, "tid": 17528, "ts": 64655800283.5, "ph": "X", "cat": "fee", "dur": 126.1, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64655800410.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64655800411.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64655800411.8, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64655800282.8, "ph": "X", "cat": "fee", "dur": 132.0, "name": "_exhaustive_wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:810)"}, {"pid": 19656, "tid": 21652, "ts": 64655800395.1, "ph": "X", "cat": "fee", "dur": 23.8, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 21652, "ts": 64655800394.599, "ph": "X", "cat": "fee", "dur": 24.9, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 21652, "ts": 64655800394.4, "ph": "X", "cat": "fee", "dur": 25.499, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 21652, "ts": 64655800421.9, "ph": "X", "cat": "fee", "dur": 0.5, "name": "builtins.max"}, {"pid": 19656, "tid": 21652, "ts": 64655800422.7, "ph": "X", "cat": "fee", "dur": 1.5, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 21652, "ts": 64655800420.999, "ph": "X", "cat": "fee", "dur": 3.4, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 21652, "ts": 64655800420.6, "ph": "X", "cat": "fee", "dur": 4.1, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 21652, "ts": 64655800383.0, "ph": "X", "cat": "fee", "dur": 41.999, "name": "_cleanup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:61)"}, {"pid": 19656, "tid": 21652, "ts": 64655800427.1, "ph": "X", "cat": "fee", "dur": 0.399, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655800426.799, "ph": "X", "cat": "fee", "dur": 0.9, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655800432.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "current_process (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:37)"}, {"pid": 19656, "tid": 21652, "ts": 64655800432.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655800431.4, "ph": "X", "cat": "fee", "dur": 1.119, "name": "_check_not_importing_main (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\spawn.py:132)"}, {"pid": 19656, "tid": 21652, "ts": 64655800433.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "current_process (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:37)"}, {"pid": 19656, "tid": 21652, "ts": 64655800433.7, "ph": "X", "cat": "fee", "dur": 0.299, "name": "authkey (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:213)"}, {"pid": 19656, "tid": 21652, "ts": 64655800435.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "list.copy"}, {"pid": 19656, "tid": 21652, "ts": 64655800435.5, "ph": "X", "cat": "fee", "dur": 0.199, "name": "list.index"}, {"pid": 19656, "tid": 21652, "ts": 64655800436.699, "ph": "X", "cat": "fee", "dur": 1.5, "name": "nt.getcwd"}, {"pid": 19656, "tid": 21652, "ts": 64655800438.699, "ph": "X", "cat": "fee", "dur": 0.4, "name": "get_start_method (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:249)"}, {"pid": 19656, "tid": 21652, "ts": 64655800439.2, "ph": "X", "cat": "fee", "dur": 0.9, "name": "dict.update"}, {"pid": 19656, "tid": 21652, "ts": 64655800440.499, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655800440.999, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655800442.499, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655800442.799, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655800443.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655800443.799, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655800444.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655800444.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655800445.299, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655800445.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655800444.5, "ph": "X", "cat": "fee", "dur": 2.3, "name": "splitdrive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:124)"}, {"pid": 19656, "tid": 21652, "ts": 64655800447.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655800447.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655800447.8, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_get_bothseps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:34)"}, {"pid": 19656, "tid": 21652, "ts": 64655800442.3, "ph": "X", "cat": "fee", "dur": 5.999, "name": "isabs (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:61)"}, {"pid": 19656, "tid": 21652, "ts": 64655800449.099, "ph": "X", "cat": "fee", "dur": 0.02, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655800449.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655800449.7, "ph": "X", "cat": "fee", "dur": 0.199, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655800450.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655800450.399, "ph": "X", "cat": "fee", "dur": 0.02, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655800450.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655800450.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655800450.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655800450.3, "ph": "X", "cat": "fee", "dur": 1.0, "name": "splitdrive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:124)"}, {"pid": 19656, "tid": 21652, "ts": 64655800451.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655800452.1, "ph": "X", "cat": "fee", "dur": 0.299, "name": "str.lstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655800452.6, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.split"}, {"pid": 19656, "tid": 21652, "ts": 64655800453.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655800453.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655800454.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655800454.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655800454.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655800454.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655800455.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655800455.199, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655800455.4, "ph": "X", "cat": "fee", "dur": 0.299, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655800448.9, "ph": "X", "cat": "fee", "dur": 6.999, "name": "normpath (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:450)"}, {"pid": 19656, "tid": 21652, "ts": 64655800431.0, "ph": "X", "cat": "fee", "dur": 25.3, "name": "get_preparation_data (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\spawn.py:150)"}, {"pid": 19656, "tid": 17528, "ts": 64655800415.5, "ph": "X", "cat": "fee", "dur": 44.7, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64655800460.8, "ph": "X", "cat": "fee", "dur": 1.199, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64655800462.6, "ph": "X", "cat": "fee", "dur": 0.699, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64655800463.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64655800464.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "set.add"}, {"pid": 19656, "tid": 17528, "ts": 64655800465.3, "ph": "X", "cat": "fee", "dur": 0.299, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 17528, "ts": 64655800467.099, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64655800467.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64655800466.7, "ph": "X", "cat": "fee", "dur": 1.2, "name": "set.update"}, {"pid": 19656, "tid": 17528, "ts": 64655800468.3, "ph": "X", "cat": "fee", "dur": 0.599, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:908)"}, {"pid": 19656, "tid": 17528, "ts": 64655800268.1, "ph": "X", "cat": "fee", "dur": 201.0, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:832)"}, {"pid": 19656, "tid": 21652, "ts": 64655800456.8, "ph": "X", "cat": "fee", "dur": 18.8, "name": "_winapi.CreatePipe"}, {"pid": 19656, "tid": 21652, "ts": 64655800476.3, "ph": "X", "cat": "fee", "dur": 1.399, "name": "msvcrt.open_osfhandle"}, {"pid": 19656, "tid": 21652, "ts": 64655800478.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655800540.599, "ph": "X", "cat": "fee", "dur": 0.4, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655800541.2, "ph": "X", "cat": "fee", "dur": 0.199, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655800541.6, "ph": "X", "cat": "fee", "dur": 0.5, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655800542.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655800542.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655800540.2, "ph": "X", "cat": "fee", "dur": 3.199, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655800544.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "get_executable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\spawn.py:45)"}, {"pid": 19656, "tid": 21652, "ts": 64655800544.5, "ph": "X", "cat": "fee", "dur": 9.2, "name": "io.open"}, {"pid": 19656, "tid": 21652, "ts": 64655800554.799, "ph": "X", "cat": "fee", "dur": 1209.4, "name": "_winapi.CreateProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655801765.2, "ph": "X", "cat": "fee", "dur": 1.199, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655801771.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.next"}, {"pid": 19656, "tid": 21652, "ts": 64655801772.0, "ph": "X", "cat": "fee", "dur": 0.299, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655801769.5, "ph": "X", "cat": "fee", "dur": 3.5, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:186)"}, {"pid": 19656, "tid": 21652, "ts": 64655801773.8, "ph": "X", "cat": "fee", "dur": 0.799, "name": "set_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:354)"}, {"pid": 19656, "tid": 21652, "ts": 64655801780.1, "ph": "X", "cat": "fee", "dur": 0.299, "name": "dict.copy"}, {"pid": 19656, "tid": 21652, "ts": 64655801780.9, "ph": "X", "cat": "fee", "dur": 0.699, "name": "dict.update"}, {"pid": 19656, "tid": 21652, "ts": 64655801776.4, "ph": "X", "cat": "fee", "dur": 5.3, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 19656, "tid": 21652, "ts": 64655801786.2, "ph": "X", "cat": "fee", "dur": 0.299, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655801785.8, "ph": "X", "cat": "fee", "dur": 1.0, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655801789.9, "ph": "X", "cat": "fee", "dur": 0.299, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655801789.6, "ph": "X", "cat": "fee", "dur": 0.619, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655801785.1, "ph": "X", "cat": "fee", "dur": 6.099, "name": "__reduce__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:344)"}, {"pid": 19656, "tid": 21652, "ts": 64655801782.0, "ph": "X", "cat": "fee", "dur": 16.799, "name": "ForkingPickler.dump"}, {"pid": 19656, "tid": 21652, "ts": 64655801775.3, "ph": "X", "cat": "fee", "dur": 24.6, "name": "dump (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:58)"}, {"pid": 19656, "tid": 21652, "ts": 64655801802.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.copy"}, {"pid": 19656, "tid": 21652, "ts": 64655801802.599, "ph": "X", "cat": "fee", "dur": 0.4, "name": "dict.update"}, {"pid": 19656, "tid": 21652, "ts": 64655801800.8, "ph": "X", "cat": "fee", "dur": 2.3, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 19656, "tid": 21652, "ts": 64655801809.699, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655801809.4, "ph": "X", "cat": "fee", "dur": 0.6, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655801811.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655801811.3, "ph": "X", "cat": "fee", "dur": 0.299, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655801809.1, "ph": "X", "cat": "fee", "dur": 2.899, "name": "__reduce__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:344)"}, {"pid": 19656, "tid": 21652, "ts": 64655801818.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655801818.599, "ph": "X", "cat": "fee", "dur": 0.22, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655801818.3, "ph": "X", "cat": "fee", "dur": 0.799, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655801817.8, "ph": "X", "cat": "fee", "dur": 2.7, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655801822.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655801823.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655801824.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655801824.3, "ph": "X", "cat": "fee", "dur": 0.599, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 21652, "ts": 64655801825.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655801826.3, "ph": "X", "cat": "fee", "dur": 3.199, "name": "_winapi.OpenProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655801829.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655801830.2, "ph": "X", "cat": "fee", "dur": 1.2, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655801831.8, "ph": "X", "cat": "fee", "dur": 0.599, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655801825.6, "ph": "X", "cat": "fee", "dur": 7.1, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:106)"}, {"pid": 19656, "tid": 21652, "ts": 64655801833.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655801833.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655801822.3, "ph": "X", "cat": "fee", "dur": 11.6, "name": "reduce_pipe_connection (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:961)"}, {"pid": 19656, "tid": 21652, "ts": 64655801838.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655801838.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655801839.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655801839.3, "ph": "X", "cat": "fee", "dur": 0.5, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 21652, "ts": 64655801840.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655801840.6, "ph": "X", "cat": "fee", "dur": 1.4, "name": "_winapi.OpenProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655801842.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655801842.32, "ph": "X", "cat": "fee", "dur": 0.68, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655801843.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655801840.2, "ph": "X", "cat": "fee", "dur": 3.499, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:106)"}, {"pid": 19656, "tid": 21652, "ts": 64655801844.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655801844.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655801838.2, "ph": "X", "cat": "fee", "dur": 6.6, "name": "reduce_pipe_connection (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:961)"}, {"pid": 19656, "tid": 21652, "ts": 64655801848.2, "ph": "X", "cat": "fee", "dur": 0.299, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655801848.1, "ph": "X", "cat": "fee", "dur": 0.5, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655801847.8, "ph": "X", "cat": "fee", "dur": 0.899, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655801849.32, "ph": "X", "cat": "fee", "dur": 0.079, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655801849.3, "ph": "X", "cat": "fee", "dur": 0.199, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655801850.32, "ph": "X", "cat": "fee", "dur": 0.079, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655801850.3, "ph": "X", "cat": "fee", "dur": 0.119, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655801851.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655801851.5, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655801851.0, "ph": "X", "cat": "fee", "dur": 1.6, "name": "duplicate (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:71)"}, {"pid": 19656, "tid": 21652, "ts": 64655801849.999, "ph": "X", "cat": "fee", "dur": 2.7, "name": "duplicate_for_child (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:97)"}, {"pid": 19656, "tid": 21652, "ts": 64655801847.499, "ph": "X", "cat": "fee", "dur": 5.8, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:100)"}, {"pid": 19656, "tid": 21652, "ts": 64655801856.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655801856.8, "ph": "X", "cat": "fee", "dur": 0.299, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655801856.599, "ph": "X", "cat": "fee", "dur": 0.6, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655801857.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655801857.599, "ph": "X", "cat": "fee", "dur": 0.22, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655801858.419, "ph": "X", "cat": "fee", "dur": 0.08, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655801858.399, "ph": "X", "cat": "fee", "dur": 0.2, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655801859.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655801859.5, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655801859.1, "ph": "X", "cat": "fee", "dur": 1.22, "name": "duplicate (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:71)"}, {"pid": 19656, "tid": 21652, "ts": 64655801858.2, "ph": "X", "cat": "fee", "dur": 2.199, "name": "duplicate_for_child (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:97)"}, {"pid": 19656, "tid": 21652, "ts": 64655801856.3, "ph": "X", "cat": "fee", "dur": 4.4, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:100)"}, {"pid": 19656, "tid": 21652, "ts": 64655801864.42, "ph": "X", "cat": "fee", "dur": 0.18, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655801864.4, "ph": "X", "cat": "fee", "dur": 0.22, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655801864.199, "ph": "X", "cat": "fee", "dur": 0.5, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655801863.8, "ph": "X", "cat": "fee", "dur": 1.3, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:356)"}, {"pid": 19656, "tid": 21652, "ts": 64655801867.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655801867.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655801868.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655801868.1, "ph": "X", "cat": "fee", "dur": 0.399, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 21652, "ts": 64655801869.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655801869.299, "ph": "X", "cat": "fee", "dur": 1.4, "name": "_winapi.OpenProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655801870.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655801871.1, "ph": "X", "cat": "fee", "dur": 0.599, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655801871.9, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655801868.799, "ph": "X", "cat": "fee", "dur": 3.6, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:106)"}, {"pid": 19656, "tid": 21652, "ts": 64655801872.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655801873.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655801866.9, "ph": "X", "cat": "fee", "dur": 6.5, "name": "reduce_pipe_connection (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:961)"}, {"pid": 19656, "tid": 21652, "ts": 64655801875.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655801875.599, "ph": "X", "cat": "fee", "dur": 0.02, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655801876.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655801876.099, "ph": "X", "cat": "fee", "dur": 0.3, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 21652, "ts": 64655801876.899, "ph": "X", "cat": "fee", "dur": 0.02, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655801877.1, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_winapi.OpenProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655801878.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655801878.52, "ph": "X", "cat": "fee", "dur": 0.68, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655801879.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655801876.7, "ph": "X", "cat": "fee", "dur": 3.099, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:106)"}, {"pid": 19656, "tid": 21652, "ts": 64655801880.199, "ph": "X", "cat": "fee", "dur": 0.02, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655801880.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655801875.099, "ph": "X", "cat": "fee", "dur": 5.5, "name": "reduce_pipe_connection (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:961)"}, {"pid": 19656, "tid": 21652, "ts": 64655801882.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655801882.8, "ph": "X", "cat": "fee", "dur": 0.32, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655801882.6, "ph": "X", "cat": "fee", "dur": 0.599, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655801883.72, "ph": "X", "cat": "fee", "dur": 0.08, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655801883.7, "ph": "X", "cat": "fee", "dur": 0.12, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655801884.42, "ph": "X", "cat": "fee", "dur": 0.079, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655801884.4, "ph": "X", "cat": "fee", "dur": 0.119, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655801885.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655801885.3, "ph": "X", "cat": "fee", "dur": 0.899, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655801884.999, "ph": "X", "cat": "fee", "dur": 1.22, "name": "duplicate (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:71)"}, {"pid": 19656, "tid": 21652, "ts": 64655801884.1, "ph": "X", "cat": "fee", "dur": 2.2, "name": "duplicate_for_child (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:97)"}, {"pid": 19656, "tid": 21652, "ts": 64655801882.4, "ph": "X", "cat": "fee", "dur": 4.4, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:100)"}, {"pid": 19656, "tid": 21652, "ts": 64655801803.3, "ph": "X", "cat": "fee", "dur": 86.1, "name": "ForkingPickler.dump"}, {"pid": 19656, "tid": 21652, "ts": 64655801800.5, "ph": "X", "cat": "fee", "dur": 90.599, "name": "dump (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:58)"}, {"pid": 19656, "tid": 21652, "ts": 64655801891.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "set_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:354)"}, {"pid": 19656, "tid": 21652, "ts": 64655801892.0, "ph": "X", "cat": "fee", "dur": 10.499, "name": "_io.BufferedWriter.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655800430.3, "ph": "X", "cat": "fee", "dur": 1472.4, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:44)"}, {"pid": 19656, "tid": 21652, "ts": 64655800425.799, "ph": "X", "cat": "fee", "dur": 1478.8, "name": "_Popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:324)"}, {"pid": 19656, "tid": 21652, "ts": 64655801907.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "set.add"}, {"pid": 19656, "tid": 21652, "ts": 64655800381.199, "ph": "X", "cat": "fee", "dur": 1526.0, "name": "start (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:110)"}, {"pid": 19656, "tid": 21652, "ts": 64655801908.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 21652, "ts": 64655801908.299, "ph": "X", "cat": "fee", "dur": 0.8, "name": "ident (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:234)"}, {"pid": 19656, "tid": 21652, "ts": 64655800362.1, "ph": "X", "cat": "fee", "dur": 1547.499, "name": "_adjust_process_count (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:662)"}, {"pid": 19656, "tid": 21652, "ts": 64655801910.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_start_executor_manager_thread (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:654)"}, {"pid": 19656, "tid": 21652, "ts": 64655801910.5, "ph": "X", "cat": "fee", "dur": 1.2, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655800183.2, "ph": "X", "cat": "fee", "dur": 1728.6, "name": "submit (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:678)"}, {"pid": 19656, "tid": 21652, "ts": 64655801912.8, "ph": "X", "cat": "fee", "dur": 1.9, "name": "_get_chunks (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:183)"}, {"pid": 19656, "tid": 17528, "ts": 64655801922.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655801923.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64655801924.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:331)"}, {"pid": 19656, "tid": 17528, "ts": 64655801922.3, "ph": "X", "cat": "fee", "dur": 1.999, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:258)"}, {"pid": 19656, "tid": 17528, "ts": 64655801925.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655801925.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64655801926.0, "ph": "X", "cat": "fee", "dur": 1.4, "name": "_recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:299)"}, {"pid": 19656, "tid": 17528, "ts": 64655801927.8, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_io.BytesIO.getvalue"}, {"pid": 19656, "tid": 17528, "ts": 64655801924.9, "ph": "X", "cat": "fee", "dur": 3.4, "name": "recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:213)"}, {"pid": 19656, "tid": 17528, "ts": 64655801929.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655801929.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64655801929.9, "ph": "X", "cat": "fee", "dur": 7.699, "name": "_winapi.PeekNamedPipe"}, {"pid": 19656, "tid": 17528, "ts": 64655801941.499, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655801942.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655801942.2, "ph": "X", "cat": "fee", "dur": 0.599, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64655801943.0, "ph": "X", "cat": "fee", "dur": 8.3, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64655801952.399, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64655801953.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "dict.keys"}, {"pid": 19656, "tid": 17528, "ts": 64655801955.5, "ph": "X", "cat": "fee", "dur": 1.499, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64655801954.4, "ph": "X", "cat": "fee", "dur": 2.9, "name": "_exhaustive_wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:810)"}, {"pid": 19656, "tid": 17528, "ts": 64655801958.1, "ph": "X", "cat": "fee", "dur": 2.6, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64655801961.2, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64655801963.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64655801963.2, "ph": "X", "cat": "fee", "dur": 0.899, "name": "set.update"}, {"pid": 19656, "tid": 17528, "ts": 64655801964.599, "ph": "X", "cat": "fee", "dur": 0.3, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:908)"}, {"pid": 19656, "tid": 17528, "ts": 64655801938.9, "ph": "X", "cat": "fee", "dur": 26.1, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:832)"}, {"pid": 19656, "tid": 17528, "ts": 64655801929.5, "ph": "X", "cat": "fee", "dur": 37.4, "name": "_poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:331)"}, {"pid": 19656, "tid": 17528, "ts": 64655801928.8, "ph": "X", "cat": "fee", "dur": 38.299, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:258)"}, {"pid": 19656, "tid": 17528, "ts": 64655801921.4, "ph": "X", "cat": "fee", "dur": 46.0, "name": "clear (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:81)"}, {"pid": 19656, "tid": 17528, "ts": 64655801967.7, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655800259.7, "ph": "X", "cat": "fee", "dur": 1709.199, "name": "wait_result_broken_or_wakeup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:366)"}, {"pid": 19656, "tid": 17528, "ts": 64655801970.2, "ph": "X", "cat": "fee", "dur": 1.099, "name": "is_shutting_down (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:420)"}, {"pid": 19656, "tid": 17528, "ts": 64655801972.8, "ph": "X", "cat": "fee", "dur": 0.899, "name": "_multiprocessing.SemLock._is_zero"}, {"pid": 19656, "tid": 17528, "ts": 64655801972.4, "ph": "X", "cat": "fee", "dur": 1.319, "name": "full (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:131)"}, {"pid": 19656, "tid": 17528, "ts": 64655801975.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64655801975.4, "ph": "X", "cat": "fee", "dur": 0.599, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64655801976.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64655801976.6, "ph": "X", "cat": "fee", "dur": 0.62, "name": "_qsize (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:209)"}, {"pid": 19656, "tid": 17528, "ts": 64655801977.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "collections.deque.popleft"}, {"pid": 19656, "tid": 17528, "ts": 64655801977.6, "ph": "X", "cat": "fee", "dur": 0.419, "name": "_get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:217)"}, {"pid": 19656, "tid": 17528, "ts": 64655801979.6, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64655801979.4, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 17528, "ts": 64655801979.1, "ph": "X", "cat": "fee", "dur": 2.199, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64655801982.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655801981.799, "ph": "X", "cat": "fee", "dur": 0.42, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64655801974.699, "ph": "X", "cat": "fee", "dur": 7.7, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:154)"}, {"pid": 19656, "tid": 17528, "ts": 64655801984.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.RLock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64655801983.9, "ph": "X", "cat": "fee", "dur": 0.399, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64655801985.4, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_thread.RLock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655801985.099, "ph": "X", "cat": "fee", "dur": 0.6, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64655801983.5, "ph": "X", "cat": "fee", "dur": 2.3, "name": "set_running_or_notify_cancel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:486)"}, {"pid": 19656, "tid": 17528, "ts": 64655801987.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:151)"}, {"pid": 19656, "tid": 17528, "ts": 64655801988.7, "ph": "X", "cat": "fee", "dur": 0.599, "name": "_multiprocessing.SemLock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64655801989.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64655801989.699, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64655801990.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "collections.deque.append"}, {"pid": 19656, "tid": 17528, "ts": 64655801991.0, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64655801990.9, "ph": "X", "cat": "fee", "dur": 0.319, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 17528, "ts": 64655801991.9, "ph": "X", "cat": "fee", "dur": 0.9, "name": "_thread.lock.release"}, {"pid": 19656, "tid": 17528, "ts": 64655801993.0, "ph": "X", "cat": "fee", "dur": 0.199, "name": "collections.deque.remove"}, {"pid": 19656, "tid": 17528, "ts": 64655801990.699, "ph": "X", "cat": "fee", "dur": 2.6, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64655801994.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655801994.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64655801988.2, "ph": "X", "cat": "fee", "dur": 6.6, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:86)"}, {"pid": 19656, "tid": 17528, "ts": 64655801995.4, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_multiprocessing.SemLock._is_zero"}, {"pid": 19656, "tid": 17528, "ts": 64655801995.3, "ph": "X", "cat": "fee", "dur": 0.52, "name": "full (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:131)"}, {"pid": 19656, "tid": 17528, "ts": 64655801996.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64655801996.499, "ph": "X", "cat": "fee", "dur": 0.22, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64655801997.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64655801997.0, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_qsize (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:209)"}, {"pid": 19656, "tid": 17528, "ts": 64655801998.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655801998.2, "ph": "X", "cat": "fee", "dur": 0.24, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64655801996.3, "ph": "X", "cat": "fee", "dur": 2.399, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:154)"}, {"pid": 19656, "tid": 17528, "ts": 64655801971.8, "ph": "X", "cat": "fee", "dur": 27.7, "name": "add_call_item_to_queue (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:343)"}, {"pid": 19656, "tid": 17528, "ts": 64655802000.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.values"}, {"pid": 19656, "tid": 17528, "ts": 64655802002.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655802002.2, "ph": "X", "cat": "fee", "dur": 0.6, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655802003.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655802003.3, "ph": "X", "cat": "fee", "dur": 0.4, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655802004.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655802004.0, "ph": "X", "cat": "fee", "dur": 0.399, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655802004.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655802004.7, "ph": "X", "cat": "fee", "dur": 0.399, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655802005.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655802005.3, "ph": "X", "cat": "fee", "dur": 0.4, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655802006.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655802005.899, "ph": "X", "cat": "fee", "dur": 0.4, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655802001.3, "ph": "X", "cat": "fee", "dur": 5.099, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:376)"}, {"pid": 19656, "tid": 17528, "ts": 64655802008.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655802009.699, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655802009.3, "ph": "X", "cat": "fee", "dur": 0.62, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64655802010.1, "ph": "X", "cat": "fee", "dur": 3.5, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64655802014.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64655802014.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655802015.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655802015.1, "ph": "X", "cat": "fee", "dur": 0.399, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64655802015.6, "ph": "X", "cat": "fee", "dur": 2.099, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64655802018.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64655802018.4, "ph": "X", "cat": "fee", "dur": 0.699, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655802020.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655802020.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655802021.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655802022.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655802022.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655802023.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.keys"}, {"pid": 19656, "tid": 21652, "ts": 64655802031.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "RLock (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:82)"}, {"pid": 19656, "tid": 21652, "ts": 64655802031.2, "ph": "X", "cat": "fee", "dur": 5.2, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:228)"}, {"pid": 19656, "tid": 21652, "ts": 64655802030.1, "ph": "X", "cat": "fee", "dur": 9.3, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:317)"}, {"pid": 19656, "tid": 21652, "ts": 64655802040.0, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:138)"}, {"pid": 19656, "tid": 21652, "ts": 64655802042.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 21652, "ts": 64655802042.3, "ph": "X", "cat": "fee", "dur": 0.7, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 21652, "ts": 64655802043.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "collections.deque.append"}, {"pid": 19656, "tid": 21652, "ts": 64655802043.6, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:213)"}, {"pid": 19656, "tid": 21652, "ts": 64655802045.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 21652, "ts": 64655802045.1, "ph": "X", "cat": "fee", "dur": 0.599, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 21652, "ts": 64655802044.9, "ph": "X", "cat": "fee", "dur": 1.799, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655802047.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655802047.199, "ph": "X", "cat": "fee", "dur": 0.42, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 21652, "ts": 64655802041.7, "ph": "X", "cat": "fee", "dur": 6.099, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:122)"}, {"pid": 19656, "tid": 21652, "ts": 64655802049.8, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655802050.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 19656, "tid": 21652, "ts": 64655802051.499, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 5356, "ts": 64655800406.7, "ph": "X", "cat": "fee", "dur": 1651.899, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 5356, "ts": 64655802060.399, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 5356, "ts": 64655802060.0, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_acquire_restore (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:268)"}, {"pid": 19656, "tid": 5356, "ts": 64655800403.1, "ph": "X", "cat": "fee", "dur": 1658.2, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:280)"}, {"pid": 19656, "tid": 5356, "ts": 64655802063.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.release"}, {"pid": 19656, "tid": 5356, "ts": 64655802063.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "collections.deque.popleft"}, {"pid": 19656, "tid": 5356, "ts": 64655802069.3, "ph": "X", "cat": "fee", "dur": 0.199, "name": "dict.copy"}, {"pid": 19656, "tid": 5356, "ts": 64655802069.9, "ph": "X", "cat": "fee", "dur": 0.8, "name": "dict.update"}, {"pid": 19656, "tid": 5356, "ts": 64655802066.3, "ph": "X", "cat": "fee", "dur": 4.419, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 19656, "tid": 5356, "ts": 64655802078.399, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_reduce_partial (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:223)"}, {"pid": 19656, "tid": 5356, "ts": 64655802071.1, "ph": "X", "cat": "fee", "dur": 15.099, "name": "ForkingPickler.dump"}, {"pid": 19656, "tid": 5356, "ts": 64655802087.499, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_io.BytesIO.getbuffer"}, {"pid": 19656, "tid": 5356, "ts": 64655802065.0, "ph": "X", "cat": "fee", "dur": 22.999, "name": "dumps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:48)"}, {"pid": 19656, "tid": 5356, "ts": 64655802089.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 5356, "ts": 64655802089.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 19656, "tid": 5356, "ts": 64655802090.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655802053.0, "ph": "X", "cat": "fee", "dur": 46.4, "name": "_winapi.WriteFile"}, {"pid": 19656, "tid": 21652, "ts": 64655802100.699, "ph": "X", "cat": "fee", "dur": 1.6, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 21652, "ts": 64655802102.699, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655802052.7, "ph": "X", "cat": "fee", "dur": 50.299, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 19656, "tid": 21652, "ts": 64655802049.499, "ph": "X", "cat": "fee", "dur": 54.8, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 19656, "tid": 21652, "ts": 64655802048.8, "ph": "X", "cat": "fee", "dur": 55.899, "name": "wakeup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:77)"}, {"pid": 19656, "tid": 21652, "ts": 64655802107.4, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 21652, "ts": 64655802107.1, "ph": "X", "cat": "fee", "dur": 0.719, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 21652, "ts": 64655802108.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655802108.5, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 21652, "ts": 64655802106.4, "ph": "X", "cat": "fee", "dur": 2.7, "name": "acquire (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:404)"}, {"pid": 19656, "tid": 21652, "ts": 64655802109.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655802112.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.next"}, {"pid": 19656, "tid": 21652, "ts": 64655802112.9, "ph": "X", "cat": "fee", "dur": 0.299, "name": "dict.copy"}, {"pid": 19656, "tid": 21652, "ts": 64655802113.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655802114.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "name (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:189)"}, {"pid": 19656, "tid": 21652, "ts": 64655802117.2, "ph": "X", "cat": "fee", "dur": 0.699, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:94)"}, {"pid": 19656, "tid": 21652, "ts": 64655802118.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:94)"}, {"pid": 19656, "tid": 21652, "ts": 64655802116.6, "ph": "X", "cat": "fee", "dur": 2.0, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655802121.0, "ph": "X", "cat": "fee", "dur": 0.199, "name": "set.add"}, {"pid": 19656, "tid": 21652, "ts": 64655802119.8, "ph": "X", "cat": "fee", "dur": 1.5, "name": "add (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_weakrefset.py:86)"}, {"pid": 19656, "tid": 21652, "ts": 64655802111.8, "ph": "X", "cat": "fee", "dur": 9.6, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:80)"}, {"pid": 19656, "tid": 21652, "ts": 64655802122.3, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 21652, "ts": 64655802122.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655802123.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "dict.get"}, {"pid": 19656, "tid": 21652, "ts": 64655802126.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.max"}, {"pid": 19656, "tid": 21652, "ts": 64655802127.1, "ph": "X", "cat": "fee", "dur": 1.599, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 21652, "ts": 64655802125.4, "ph": "X", "cat": "fee", "dur": 3.699, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 21652, "ts": 64655802124.9, "ph": "X", "cat": "fee", "dur": 4.4, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 21652, "ts": 64655802130.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.max"}, {"pid": 19656, "tid": 21652, "ts": 64655802130.599, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 21652, "ts": 64655802130.099, "ph": "X", "cat": "fee", "dur": 1.6, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 21652, "ts": 64655802129.8, "ph": "X", "cat": "fee", "dur": 2.299, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 21652, "ts": 64655802132.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.max"}, {"pid": 19656, "tid": 21652, "ts": 64655802133.1, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 21652, "ts": 64655802132.6, "ph": "X", "cat": "fee", "dur": 1.6, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 21652, "ts": 64655802132.399, "ph": "X", "cat": "fee", "dur": 1.9, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 21652, "ts": 64655802135.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.max"}, {"pid": 19656, "tid": 21652, "ts": 64655802135.399, "ph": "X", "cat": "fee", "dur": 0.9, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 21652, "ts": 64655802134.899, "ph": "X", "cat": "fee", "dur": 1.5, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 21652, "ts": 64655802134.7, "ph": "X", "cat": "fee", "dur": 1.899, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 21652, "ts": 64655802137.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.max"}, {"pid": 19656, "tid": 21652, "ts": 64655802137.699, "ph": "X", "cat": "fee", "dur": 0.9, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 21652, "ts": 64655802137.1, "ph": "X", "cat": "fee", "dur": 1.599, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 21652, "ts": 64655802136.9, "ph": "X", "cat": "fee", "dur": 2.0, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 21652, "ts": 64655802139.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.max"}, {"pid": 19656, "tid": 21652, "ts": 64655802139.999, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 21652, "ts": 64655802139.499, "ph": "X", "cat": "fee", "dur": 1.5, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 21652, "ts": 64655802139.199, "ph": "X", "cat": "fee", "dur": 1.9, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 21652, "ts": 64655802123.7, "ph": "X", "cat": "fee", "dur": 17.6, "name": "_cleanup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:61)"}, {"pid": 19656, "tid": 21652, "ts": 64655802143.2, "ph": "X", "cat": "fee", "dur": 0.4, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655802142.999, "ph": "X", "cat": "fee", "dur": 0.9, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655802148.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "current_process (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:37)"}, {"pid": 19656, "tid": 21652, "ts": 64655802148.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655802147.599, "ph": "X", "cat": "fee", "dur": 1.4, "name": "_check_not_importing_main (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\spawn.py:132)"}, {"pid": 19656, "tid": 21652, "ts": 64655802149.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "current_process (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:37)"}, {"pid": 19656, "tid": 21652, "ts": 64655802150.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "authkey (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:213)"}, {"pid": 19656, "tid": 21652, "ts": 64655802151.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "list.copy"}, {"pid": 19656, "tid": 21652, "ts": 64655802152.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.index"}, {"pid": 19656, "tid": 21652, "ts": 64655802153.1, "ph": "X", "cat": "fee", "dur": 1.5, "name": "nt.getcwd"}, {"pid": 19656, "tid": 21652, "ts": 64655802155.1, "ph": "X", "cat": "fee", "dur": 0.4, "name": "get_start_method (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:249)"}, {"pid": 19656, "tid": 21652, "ts": 64655802155.8, "ph": "X", "cat": "fee", "dur": 1.2, "name": "dict.update"}, {"pid": 19656, "tid": 21652, "ts": 64655802157.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655802157.999, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655802159.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655802159.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655802160.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655802160.499, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655802161.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655802161.6, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655802162.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655802162.299, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655802161.2, "ph": "X", "cat": "fee", "dur": 2.5, "name": "splitdrive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:124)"}, {"pid": 19656, "tid": 21652, "ts": 64655802164.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655802164.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655802164.5, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_get_bothseps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:34)"}, {"pid": 19656, "tid": 21652, "ts": 64655802158.999, "ph": "X", "cat": "fee", "dur": 6.0, "name": "isabs (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:61)"}, {"pid": 19656, "tid": 21652, "ts": 64655802165.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655802166.099, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655802166.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655802166.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655802167.099, "ph": "X", "cat": "fee", "dur": 0.02, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655802167.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655802167.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655802167.599, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655802167.0, "ph": "X", "cat": "fee", "dur": 1.099, "name": "splitdrive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:124)"}, {"pid": 19656, "tid": 21652, "ts": 64655802168.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655802168.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.lstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655802169.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.split"}, {"pid": 19656, "tid": 21652, "ts": 64655802169.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655802170.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655802170.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655802171.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655802171.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655802171.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655802171.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655802171.899, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655802172.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655802165.8, "ph": "X", "cat": "fee", "dur": 6.7, "name": "normpath (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:450)"}, {"pid": 19656, "tid": 21652, "ts": 64655802147.099, "ph": "X", "cat": "fee", "dur": 25.8, "name": "get_preparation_data (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\spawn.py:150)"}, {"pid": 19656, "tid": 17528, "ts": 64655802024.0, "ph": "X", "cat": "fee", "dur": 154.499, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64655802179.499, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64655802180.6, "ph": "X", "cat": "fee", "dur": 0.199, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64655802182.0, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64655802023.399, "ph": "X", "cat": "fee", "dur": 163.0, "name": "_exhaustive_wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:810)"}, {"pid": 19656, "tid": 21652, "ts": 64655802173.699, "ph": "X", "cat": "fee", "dur": 17.2, "name": "_winapi.CreatePipe"}, {"pid": 19656, "tid": 21652, "ts": 64655802191.8, "ph": "X", "cat": "fee", "dur": 1.2, "name": "msvcrt.open_osfhandle"}, {"pid": 19656, "tid": 21652, "ts": 64655802193.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655802256.4, "ph": "X", "cat": "fee", "dur": 0.5, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655802257.099, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655802257.5, "ph": "X", "cat": "fee", "dur": 0.599, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655802258.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655802258.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655802256.1, "ph": "X", "cat": "fee", "dur": 3.599, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655802260.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "get_executable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\spawn.py:45)"}, {"pid": 19656, "tid": 21652, "ts": 64655802260.899, "ph": "X", "cat": "fee", "dur": 11.0, "name": "io.open"}, {"pid": 19656, "tid": 17528, "ts": 64655802187.5, "ph": "X", "cat": "fee", "dur": 92.8, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64655802281.0, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 5356, "ts": 64655802092.3, "ph": "X", "cat": "fee", "dur": 194.9, "name": "_winapi.WriteFile"}, {"pid": 19656, "tid": 5356, "ts": 64655802288.8, "ph": "X", "cat": "fee", "dur": 2.199, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 5356, "ts": 64655802291.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 19656, "tid": 5356, "ts": 64655802091.9, "ph": "X", "cat": "fee", "dur": 200.299, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 19656, "tid": 5356, "ts": 64655802088.799, "ph": "X", "cat": "fee", "dur": 205.4, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 19656, "tid": 5356, "ts": 64655802294.8, "ph": "X", "cat": "fee", "dur": 0.5, "name": "collections.deque.popleft"}, {"pid": 19656, "tid": 5356, "ts": 64655802297.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 5356, "ts": 64655802300.3, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 5356, "ts": 64655802299.899, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 5356, "ts": 64655802301.199, "ph": "X", "cat": "fee", "dur": 2.1, "name": "_thread.allocate_lock"}, {"pid": 19656, "tid": 5356, "ts": 64655802303.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 5356, "ts": 64655802304.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "collections.deque.append"}, {"pid": 19656, "tid": 5356, "ts": 64655802305.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.release"}, {"pid": 19656, "tid": 5356, "ts": 64655802304.8, "ph": "X", "cat": "fee", "dur": 0.599, "name": "_release_save (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:265)"}, {"pid": 19656, "tid": 17528, "ts": 64655802284.4, "ph": "X", "cat": "fee", "dur": 25.3, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64655802311.1, "ph": "X", "cat": "fee", "dur": 0.499, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64655802312.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "set.add"}, {"pid": 19656, "tid": 17528, "ts": 64655802313.4, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 17528, "ts": 64655802315.7, "ph": "X", "cat": "fee", "dur": 0.299, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64655802316.399, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64655802315.0, "ph": "X", "cat": "fee", "dur": 2.0, "name": "set.update"}, {"pid": 19656, "tid": 17528, "ts": 64655802317.7, "ph": "X", "cat": "fee", "dur": 0.999, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:908)"}, {"pid": 19656, "tid": 17528, "ts": 64655802007.399, "ph": "X", "cat": "fee", "dur": 311.6, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:832)"}, {"pid": 19656, "tid": 21652, "ts": 64655802273.0, "ph": "X", "cat": "fee", "dur": 1239.3, "name": "_winapi.CreateProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655803513.6, "ph": "X", "cat": "fee", "dur": 1.199, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655803520.099, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.next"}, {"pid": 19656, "tid": 21652, "ts": 64655803521.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655803518.2, "ph": "X", "cat": "fee", "dur": 3.8, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:186)"}, {"pid": 19656, "tid": 21652, "ts": 64655803523.1, "ph": "X", "cat": "fee", "dur": 1.0, "name": "set_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:354)"}, {"pid": 19656, "tid": 21652, "ts": 64655803529.2, "ph": "X", "cat": "fee", "dur": 0.4, "name": "dict.copy"}, {"pid": 19656, "tid": 21652, "ts": 64655803530.1, "ph": "X", "cat": "fee", "dur": 0.6, "name": "dict.update"}, {"pid": 19656, "tid": 21652, "ts": 64655803525.699, "ph": "X", "cat": "fee", "dur": 5.2, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 19656, "tid": 21652, "ts": 64655803535.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655803534.799, "ph": "X", "cat": "fee", "dur": 1.2, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655803538.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655803538.599, "ph": "X", "cat": "fee", "dur": 0.5, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655803534.1, "ph": "X", "cat": "fee", "dur": 5.999, "name": "__reduce__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:344)"}, {"pid": 19656, "tid": 21652, "ts": 64655803531.2, "ph": "X", "cat": "fee", "dur": 17.299, "name": "ForkingPickler.dump"}, {"pid": 19656, "tid": 21652, "ts": 64655803524.8, "ph": "X", "cat": "fee", "dur": 24.699, "name": "dump (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:58)"}, {"pid": 19656, "tid": 21652, "ts": 64655803551.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.copy"}, {"pid": 19656, "tid": 21652, "ts": 64655803552.2, "ph": "X", "cat": "fee", "dur": 0.4, "name": "dict.update"}, {"pid": 19656, "tid": 21652, "ts": 64655803550.6, "ph": "X", "cat": "fee", "dur": 2.1, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 19656, "tid": 21652, "ts": 64655803559.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655803559.1, "ph": "X", "cat": "fee", "dur": 0.6, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655803561.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655803561.0, "ph": "X", "cat": "fee", "dur": 0.32, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655803558.8, "ph": "X", "cat": "fee", "dur": 3.3, "name": "__reduce__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:344)"}, {"pid": 19656, "tid": 21652, "ts": 64655803568.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655803568.8, "ph": "X", "cat": "fee", "dur": 0.199, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655803568.499, "ph": "X", "cat": "fee", "dur": 0.6, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655803568.1, "ph": "X", "cat": "fee", "dur": 2.4, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655803572.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655803573.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655803575.099, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655803574.8, "ph": "X", "cat": "fee", "dur": 1.2, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 21652, "ts": 64655803576.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655803577.399, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_winapi.OpenProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655803581.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655803581.4, "ph": "X", "cat": "fee", "dur": 1.2, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655803583.199, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655803576.599, "ph": "X", "cat": "fee", "dur": 7.4, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:106)"}, {"pid": 19656, "tid": 21652, "ts": 64655803584.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655803584.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655803572.299, "ph": "X", "cat": "fee", "dur": 12.9, "name": "reduce_pipe_connection (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:961)"}, {"pid": 19656, "tid": 21652, "ts": 64655803589.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655803590.299, "ph": "X", "cat": "fee", "dur": 0.02, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655803591.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655803590.9, "ph": "X", "cat": "fee", "dur": 0.399, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 21652, "ts": 64655803592.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655803592.2, "ph": "X", "cat": "fee", "dur": 1.5, "name": "_winapi.OpenProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655803593.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655803594.0, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655803595.0, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655803591.8, "ph": "X", "cat": "fee", "dur": 3.7, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:106)"}, {"pid": 19656, "tid": 21652, "ts": 64655803596.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655803596.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655803589.7, "ph": "X", "cat": "fee", "dur": 6.8, "name": "reduce_pipe_connection (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:961)"}, {"pid": 19656, "tid": 21652, "ts": 64655803599.9, "ph": "X", "cat": "fee", "dur": 0.299, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655803599.8, "ph": "X", "cat": "fee", "dur": 0.5, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655803599.6, "ph": "X", "cat": "fee", "dur": 0.72, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655803601.199, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655803601.1, "ph": "X", "cat": "fee", "dur": 0.22, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655803602.519, "ph": "X", "cat": "fee", "dur": 0.08, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655803602.499, "ph": "X", "cat": "fee", "dur": 0.2, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655803603.499, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655803603.8, "ph": "X", "cat": "fee", "dur": 0.899, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655803603.3, "ph": "X", "cat": "fee", "dur": 1.5, "name": "duplicate (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:71)"}, {"pid": 19656, "tid": 21652, "ts": 64655803602.199, "ph": "X", "cat": "fee", "dur": 2.7, "name": "duplicate_for_child (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:97)"}, {"pid": 19656, "tid": 21652, "ts": 64655803599.199, "ph": "X", "cat": "fee", "dur": 6.3, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:100)"}, {"pid": 19656, "tid": 21652, "ts": 64655803609.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655803609.299, "ph": "X", "cat": "fee", "dur": 0.3, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655803609.1, "ph": "X", "cat": "fee", "dur": 0.599, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655803610.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655803610.099, "ph": "X", "cat": "fee", "dur": 0.22, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655803610.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655803610.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655803611.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655803611.7, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655803611.3, "ph": "X", "cat": "fee", "dur": 1.2, "name": "duplicate (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:71)"}, {"pid": 19656, "tid": 21652, "ts": 64655803610.599, "ph": "X", "cat": "fee", "dur": 2.0, "name": "duplicate_for_child (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:97)"}, {"pid": 19656, "tid": 21652, "ts": 64655803608.799, "ph": "X", "cat": "fee", "dur": 4.1, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:100)"}, {"pid": 19656, "tid": 21652, "ts": 64655803616.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655803616.6, "ph": "X", "cat": "fee", "dur": 0.299, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655803616.5, "ph": "X", "cat": "fee", "dur": 0.419, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655803616.2, "ph": "X", "cat": "fee", "dur": 1.199, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:356)"}, {"pid": 19656, "tid": 21652, "ts": 64655803619.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655803619.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655803620.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655803620.3, "ph": "X", "cat": "fee", "dur": 0.4, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 21652, "ts": 64655803621.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655803621.499, "ph": "X", "cat": "fee", "dur": 1.4, "name": "_winapi.OpenProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655803623.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655803623.22, "ph": "X", "cat": "fee", "dur": 0.68, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655803624.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655803620.999, "ph": "X", "cat": "fee", "dur": 3.6, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:106)"}, {"pid": 19656, "tid": 21652, "ts": 64655803625.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655803625.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655803619.0, "ph": "X", "cat": "fee", "dur": 6.499, "name": "reduce_pipe_connection (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:961)"}, {"pid": 19656, "tid": 21652, "ts": 64655803627.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655803627.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655803628.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655803628.0, "ph": "X", "cat": "fee", "dur": 0.4, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 21652, "ts": 64655803628.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655803629.099, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_winapi.OpenProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655803630.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655803630.5, "ph": "X", "cat": "fee", "dur": 0.599, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655803631.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655803628.7, "ph": "X", "cat": "fee", "dur": 3.0, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:106)"}, {"pid": 19656, "tid": 21652, "ts": 64655803632.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655803632.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655803627.1, "ph": "X", "cat": "fee", "dur": 5.499, "name": "reduce_pipe_connection (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:961)"}, {"pid": 19656, "tid": 21652, "ts": 64655803635.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655803634.899, "ph": "X", "cat": "fee", "dur": 0.3, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655803634.7, "ph": "X", "cat": "fee", "dur": 0.52, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655803635.719, "ph": "X", "cat": "fee", "dur": 0.08, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655803635.699, "ph": "X", "cat": "fee", "dur": 0.12, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655803636.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655803636.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655803637.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655803637.4, "ph": "X", "cat": "fee", "dur": 0.799, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655803637.0, "ph": "X", "cat": "fee", "dur": 1.299, "name": "duplicate (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:71)"}, {"pid": 19656, "tid": 21652, "ts": 64655803636.199, "ph": "X", "cat": "fee", "dur": 2.2, "name": "duplicate_for_child (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:97)"}, {"pid": 19656, "tid": 21652, "ts": 64655803634.399, "ph": "X", "cat": "fee", "dur": 4.3, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:100)"}, {"pid": 19656, "tid": 21652, "ts": 64655803552.9, "ph": "X", "cat": "fee", "dur": 88.599, "name": "ForkingPickler.dump"}, {"pid": 19656, "tid": 21652, "ts": 64655803550.2, "ph": "X", "cat": "fee", "dur": 92.9, "name": "dump (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:58)"}, {"pid": 19656, "tid": 21652, "ts": 64655803643.6, "ph": "X", "cat": "fee", "dur": 0.299, "name": "set_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:354)"}, {"pid": 19656, "tid": 21652, "ts": 64655803644.1, "ph": "X", "cat": "fee", "dur": 10.699, "name": "_io.BufferedWriter.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655802146.5, "ph": "X", "cat": "fee", "dur": 1508.8, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:44)"}, {"pid": 19656, "tid": 21652, "ts": 64655802142.3, "ph": "X", "cat": "fee", "dur": 1515.399, "name": "_Popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:324)"}, {"pid": 19656, "tid": 21652, "ts": 64655803659.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "set.add"}, {"pid": 19656, "tid": 21652, "ts": 64655802122.1, "ph": "X", "cat": "fee", "dur": 1538.2, "name": "start (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:110)"}, {"pid": 19656, "tid": 21652, "ts": 64655803661.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 21652, "ts": 64655803661.1, "ph": "X", "cat": "fee", "dur": 0.899, "name": "ident (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:234)"}, {"pid": 19656, "tid": 21652, "ts": 64655802105.499, "ph": "X", "cat": "fee", "dur": 1556.8, "name": "_adjust_process_count (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:662)"}, {"pid": 19656, "tid": 21652, "ts": 64655803662.799, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_start_executor_manager_thread (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:654)"}, {"pid": 19656, "tid": 21652, "ts": 64655803663.4, "ph": "X", "cat": "fee", "dur": 1.3, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655801916.0, "ph": "X", "cat": "fee", "dur": 1748.8, "name": "submit (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:678)"}, {"pid": 19656, "tid": 21652, "ts": 64655803665.8, "ph": "X", "cat": "fee", "dur": 1.9, "name": "_get_chunks (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:183)"}, {"pid": 19656, "tid": 17528, "ts": 64655803675.999, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655803676.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64655803677.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:331)"}, {"pid": 19656, "tid": 17528, "ts": 64655803675.6, "ph": "X", "cat": "fee", "dur": 2.399, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:258)"}, {"pid": 19656, "tid": 17528, "ts": 64655803678.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655803679.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64655803679.799, "ph": "X", "cat": "fee", "dur": 1.3, "name": "_recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:299)"}, {"pid": 19656, "tid": 17528, "ts": 64655803681.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_io.BytesIO.getvalue"}, {"pid": 19656, "tid": 17528, "ts": 64655803678.499, "ph": "X", "cat": "fee", "dur": 3.3, "name": "recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:213)"}, {"pid": 19656, "tid": 17528, "ts": 64655803682.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655803682.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64655803683.4, "ph": "X", "cat": "fee", "dur": 7.399, "name": "_winapi.PeekNamedPipe"}, {"pid": 19656, "tid": 17528, "ts": 64655803694.499, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655803695.499, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655803695.2, "ph": "X", "cat": "fee", "dur": 0.6, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64655803695.9, "ph": "X", "cat": "fee", "dur": 2.6, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64655803699.1, "ph": "X", "cat": "fee", "dur": 0.199, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64655803700.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.keys"}, {"pid": 19656, "tid": 17528, "ts": 64655803701.9, "ph": "X", "cat": "fee", "dur": 1.399, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64655803700.9, "ph": "X", "cat": "fee", "dur": 2.6, "name": "_exhaustive_wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:810)"}, {"pid": 19656, "tid": 17528, "ts": 64655803704.0, "ph": "X", "cat": "fee", "dur": 2.899, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64655803707.3, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64655803709.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64655803709.199, "ph": "X", "cat": "fee", "dur": 0.8, "name": "set.update"}, {"pid": 19656, "tid": 17528, "ts": 64655803710.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:908)"}, {"pid": 19656, "tid": 17528, "ts": 64655803692.1, "ph": "X", "cat": "fee", "dur": 18.9, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:832)"}, {"pid": 19656, "tid": 17528, "ts": 64655803683.099, "ph": "X", "cat": "fee", "dur": 29.5, "name": "_poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:331)"}, {"pid": 19656, "tid": 17528, "ts": 64655803682.299, "ph": "X", "cat": "fee", "dur": 30.4, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:258)"}, {"pid": 19656, "tid": 17528, "ts": 64655803674.9, "ph": "X", "cat": "fee", "dur": 38.0, "name": "clear (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:81)"}, {"pid": 19656, "tid": 17528, "ts": 64655803713.1, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655801999.9, "ph": "X", "cat": "fee", "dur": 1714.5, "name": "wait_result_broken_or_wakeup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:366)"}, {"pid": 19656, "tid": 17528, "ts": 64655803715.4, "ph": "X", "cat": "fee", "dur": 0.7, "name": "is_shutting_down (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:420)"}, {"pid": 19656, "tid": 17528, "ts": 64655803718.2, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_multiprocessing.SemLock._is_zero"}, {"pid": 19656, "tid": 17528, "ts": 64655803717.5, "ph": "X", "cat": "fee", "dur": 1.5, "name": "full (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:131)"}, {"pid": 19656, "tid": 17528, "ts": 64655803721.099, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64655803720.9, "ph": "X", "cat": "fee", "dur": 0.619, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64655803726.2, "ph": "X", "cat": "fee", "dur": 0.299, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64655803725.899, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_qsize (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:209)"}, {"pid": 19656, "tid": 17528, "ts": 64655803727.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "collections.deque.popleft"}, {"pid": 19656, "tid": 17528, "ts": 64655803726.9, "ph": "X", "cat": "fee", "dur": 0.52, "name": "_get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:217)"}, {"pid": 19656, "tid": 17528, "ts": 64655803728.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64655803728.6, "ph": "X", "cat": "fee", "dur": 0.599, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 17528, "ts": 64655803728.3, "ph": "X", "cat": "fee", "dur": 2.199, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64655803731.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655803730.999, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64655803720.0, "ph": "X", "cat": "fee", "dur": 11.6, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:154)"}, {"pid": 19656, "tid": 17528, "ts": 64655803733.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.RLock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64655803733.3, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64655803734.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.RLock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655803734.6, "ph": "X", "cat": "fee", "dur": 0.419, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64655803732.9, "ph": "X", "cat": "fee", "dur": 2.3, "name": "set_running_or_notify_cancel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:486)"}, {"pid": 19656, "tid": 17528, "ts": 64655803736.4, "ph": "X", "cat": "fee", "dur": 0.6, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:151)"}, {"pid": 19656, "tid": 17528, "ts": 64655803738.2, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_multiprocessing.SemLock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64655803739.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64655803739.3, "ph": "X", "cat": "fee", "dur": 0.299, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64655803740.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "collections.deque.append"}, {"pid": 19656, "tid": 17528, "ts": 64655803740.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64655803740.599, "ph": "X", "cat": "fee", "dur": 0.32, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 17528, "ts": 64655803741.7, "ph": "X", "cat": "fee", "dur": 0.899, "name": "_thread.lock.release"}, {"pid": 19656, "tid": 17528, "ts": 64655803742.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "collections.deque.remove"}, {"pid": 19656, "tid": 17528, "ts": 64655803740.4, "ph": "X", "cat": "fee", "dur": 2.699, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64655803744.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655803743.899, "ph": "X", "cat": "fee", "dur": 0.22, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64655803737.5, "ph": "X", "cat": "fee", "dur": 6.7, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:86)"}, {"pid": 19656, "tid": 17528, "ts": 64655803744.8, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_multiprocessing.SemLock._is_zero"}, {"pid": 19656, "tid": 17528, "ts": 64655803744.7, "ph": "X", "cat": "fee", "dur": 0.599, "name": "full (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:131)"}, {"pid": 19656, "tid": 17528, "ts": 64655803746.199, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64655803746.1, "ph": "X", "cat": "fee", "dur": 0.22, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64655803746.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64655803746.6, "ph": "X", "cat": "fee", "dur": 0.22, "name": "_qsize (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:209)"}, {"pid": 19656, "tid": 17528, "ts": 64655803747.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655803747.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64655803745.8, "ph": "X", "cat": "fee", "dur": 2.3, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:154)"}, {"pid": 19656, "tid": 17528, "ts": 64655803716.6, "ph": "X", "cat": "fee", "dur": 32.399, "name": "add_call_item_to_queue (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:343)"}, {"pid": 19656, "tid": 17528, "ts": 64655803750.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.values"}, {"pid": 19656, "tid": 17528, "ts": 64655803752.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655803751.8, "ph": "X", "cat": "fee", "dur": 0.8, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655803753.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655803753.0, "ph": "X", "cat": "fee", "dur": 0.4, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655803753.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655803753.7, "ph": "X", "cat": "fee", "dur": 0.4, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655803754.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655803754.4, "ph": "X", "cat": "fee", "dur": 0.6, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655803755.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655803755.299, "ph": "X", "cat": "fee", "dur": 0.3, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655803756.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655803756.0, "ph": "X", "cat": "fee", "dur": 0.4, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655803756.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655803756.599, "ph": "X", "cat": "fee", "dur": 0.4, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655803751.1, "ph": "X", "cat": "fee", "dur": 5.999, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:376)"}, {"pid": 19656, "tid": 17528, "ts": 64655803759.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655803759.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655803759.6, "ph": "X", "cat": "fee", "dur": 0.5, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64655803760.2, "ph": "X", "cat": "fee", "dur": 2.999, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64655803763.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64655803764.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655803765.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655803764.9, "ph": "X", "cat": "fee", "dur": 0.299, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64655803765.3, "ph": "X", "cat": "fee", "dur": 1.9, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64655803767.499, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64655803767.9, "ph": "X", "cat": "fee", "dur": 0.8, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655803769.9, "ph": "X", "cat": "fee", "dur": 0.4, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655803770.799, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655803771.5, "ph": "X", "cat": "fee", "dur": 0.299, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655803772.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655803773.5, "ph": "X", "cat": "fee", "dur": 0.299, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655803774.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655803775.099, "ph": "X", "cat": "fee", "dur": 0.02, "name": "dict.keys"}, {"pid": 19656, "tid": 21652, "ts": 64655803784.3, "ph": "X", "cat": "fee", "dur": 2.4, "name": "RLock (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:82)"}, {"pid": 19656, "tid": 21652, "ts": 64655803783.6, "ph": "X", "cat": "fee", "dur": 5.3, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:228)"}, {"pid": 19656, "tid": 21652, "ts": 64655803782.8, "ph": "X", "cat": "fee", "dur": 7.3, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:317)"}, {"pid": 19656, "tid": 21652, "ts": 64655803790.9, "ph": "X", "cat": "fee", "dur": 0.399, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:138)"}, {"pid": 19656, "tid": 21652, "ts": 64655803793.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 21652, "ts": 64655803793.2, "ph": "X", "cat": "fee", "dur": 0.7, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 21652, "ts": 64655803794.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "collections.deque.append"}, {"pid": 19656, "tid": 21652, "ts": 64655803794.599, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:213)"}, {"pid": 19656, "tid": 21652, "ts": 64655803796.2, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 21652, "ts": 64655803796.0, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 21652, "ts": 64655803795.8, "ph": "X", "cat": "fee", "dur": 1.8, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655803798.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655803798.1, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 21652, "ts": 64655803792.599, "ph": "X", "cat": "fee", "dur": 6.1, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:122)"}, {"pid": 19656, "tid": 21652, "ts": 64655803800.699, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655803801.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 19656, "tid": 21652, "ts": 64655803802.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 5356, "ts": 64655802305.7, "ph": "X", "cat": "fee", "dur": 1504.0, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 5356, "ts": 64655803812.0, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 5356, "ts": 64655803811.5, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_acquire_restore (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:268)"}, {"pid": 19656, "tid": 5356, "ts": 64655802299.1, "ph": "X", "cat": "fee", "dur": 1513.7, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:280)"}, {"pid": 19656, "tid": 5356, "ts": 64655803815.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.release"}, {"pid": 19656, "tid": 5356, "ts": 64655803815.399, "ph": "X", "cat": "fee", "dur": 0.2, "name": "collections.deque.popleft"}, {"pid": 19656, "tid": 5356, "ts": 64655803822.8, "ph": "X", "cat": "fee", "dur": 0.399, "name": "dict.copy"}, {"pid": 19656, "tid": 5356, "ts": 64655803823.7, "ph": "X", "cat": "fee", "dur": 1.0, "name": "dict.update"}, {"pid": 19656, "tid": 5356, "ts": 64655803819.0, "ph": "X", "cat": "fee", "dur": 5.999, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 19656, "tid": 5356, "ts": 64655803834.6, "ph": "X", "cat": "fee", "dur": 1.4, "name": "_reduce_partial (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:223)"}, {"pid": 19656, "tid": 5356, "ts": 64655803825.6, "ph": "X", "cat": "fee", "dur": 20.899, "name": "ForkingPickler.dump"}, {"pid": 19656, "tid": 5356, "ts": 64655803848.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_io.BytesIO.getbuffer"}, {"pid": 19656, "tid": 5356, "ts": 64655803817.5, "ph": "X", "cat": "fee", "dur": 31.4, "name": "dumps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:48)"}, {"pid": 19656, "tid": 5356, "ts": 64655803850.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 5356, "ts": 64655803851.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 19656, "tid": 5356, "ts": 64655803852.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655803804.1, "ph": "X", "cat": "fee", "dur": 56.8, "name": "_winapi.WriteFile"}, {"pid": 19656, "tid": 21652, "ts": 64655803861.9, "ph": "X", "cat": "fee", "dur": 1.399, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 21652, "ts": 64655803863.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655803803.7, "ph": "X", "cat": "fee", "dur": 60.099, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 19656, "tid": 21652, "ts": 64655803800.4, "ph": "X", "cat": "fee", "dur": 64.7, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 19656, "tid": 21652, "ts": 64655803799.7, "ph": "X", "cat": "fee", "dur": 65.699, "name": "wakeup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:77)"}, {"pid": 19656, "tid": 21652, "ts": 64655803868.4, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 21652, "ts": 64655803868.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 21652, "ts": 64655803869.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655803869.2, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 21652, "ts": 64655803867.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "acquire (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:404)"}, {"pid": 19656, "tid": 21652, "ts": 64655803870.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655803872.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.next"}, {"pid": 19656, "tid": 21652, "ts": 64655803873.3, "ph": "X", "cat": "fee", "dur": 0.6, "name": "dict.copy"}, {"pid": 19656, "tid": 21652, "ts": 64655803874.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655803875.199, "ph": "X", "cat": "fee", "dur": 0.2, "name": "name (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:189)"}, {"pid": 19656, "tid": 21652, "ts": 64655803878.1, "ph": "X", "cat": "fee", "dur": 0.899, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:94)"}, {"pid": 19656, "tid": 21652, "ts": 64655803879.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:94)"}, {"pid": 19656, "tid": 21652, "ts": 64655803877.6, "ph": "X", "cat": "fee", "dur": 2.1, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655803882.6, "ph": "X", "cat": "fee", "dur": 0.299, "name": "set.add"}, {"pid": 19656, "tid": 21652, "ts": 64655803881.0, "ph": "X", "cat": "fee", "dur": 2.0, "name": "add (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_weakrefset.py:86)"}, {"pid": 19656, "tid": 21652, "ts": 64655803872.0, "ph": "X", "cat": "fee", "dur": 11.1, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:80)"}, {"pid": 19656, "tid": 21652, "ts": 64655803884.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 21652, "ts": 64655803884.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655803884.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "dict.get"}, {"pid": 19656, "tid": 21652, "ts": 64655803888.5, "ph": "X", "cat": "fee", "dur": 0.399, "name": "builtins.max"}, {"pid": 19656, "tid": 21652, "ts": 64655803889.3, "ph": "X", "cat": "fee", "dur": 1.599, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 21652, "ts": 64655803887.6, "ph": "X", "cat": "fee", "dur": 3.6, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 21652, "ts": 64655803886.599, "ph": "X", "cat": "fee", "dur": 4.8, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 21652, "ts": 64655803892.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.max"}, {"pid": 19656, "tid": 21652, "ts": 64655803892.699, "ph": "X", "cat": "fee", "dur": 0.9, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 21652, "ts": 64655803892.1, "ph": "X", "cat": "fee", "dur": 1.599, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 21652, "ts": 64655803891.9, "ph": "X", "cat": "fee", "dur": 2.0, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 21652, "ts": 64655803894.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.max"}, {"pid": 19656, "tid": 21652, "ts": 64655803895.1, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 21652, "ts": 64655803894.4, "ph": "X", "cat": "fee", "dur": 1.9, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 21652, "ts": 64655803894.199, "ph": "X", "cat": "fee", "dur": 2.2, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 21652, "ts": 64655803897.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.max"}, {"pid": 19656, "tid": 21652, "ts": 64655803897.4, "ph": "X", "cat": "fee", "dur": 0.9, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 21652, "ts": 64655803896.999, "ph": "X", "cat": "fee", "dur": 1.4, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 21652, "ts": 64655803896.8, "ph": "X", "cat": "fee", "dur": 1.8, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 21652, "ts": 64655803899.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.max"}, {"pid": 19656, "tid": 17528, "ts": 64655803776.4, "ph": "X", "cat": "fee", "dur": 124.899, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64655803902.1, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64655803902.9, "ph": "X", "cat": "fee", "dur": 0.199, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64655803899.6, "ph": "X", "cat": "fee", "dur": 8.399, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 21652, "ts": 64655803899.1, "ph": "X", "cat": "fee", "dur": 9.999, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 21652, "ts": 64655803898.9, "ph": "X", "cat": "fee", "dur": 10.9, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 21652, "ts": 64655803913.2, "ph": "X", "cat": "fee", "dur": 0.7, "name": "builtins.max"}, {"pid": 19656, "tid": 21652, "ts": 64655803914.4, "ph": "X", "cat": "fee", "dur": 1.7, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 21652, "ts": 64655803911.9, "ph": "X", "cat": "fee", "dur": 4.4, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 21652, "ts": 64655803911.199, "ph": "X", "cat": "fee", "dur": 5.3, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 21652, "ts": 64655803917.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.max"}, {"pid": 19656, "tid": 21652, "ts": 64655803918.2, "ph": "X", "cat": "fee", "dur": 1.3, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 21652, "ts": 64655803917.299, "ph": "X", "cat": "fee", "dur": 2.4, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 21652, "ts": 64655803917.1, "ph": "X", "cat": "fee", "dur": 2.799, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 21652, "ts": 64655803885.3, "ph": "X", "cat": "fee", "dur": 34.999, "name": "_cleanup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:61)"}, {"pid": 19656, "tid": 21652, "ts": 64655803922.8, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655803922.2, "ph": "X", "cat": "fee", "dur": 1.5, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655803930.5, "ph": "X", "cat": "fee", "dur": 0.299, "name": "current_process (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:37)"}, {"pid": 19656, "tid": 21652, "ts": 64655803931.0, "ph": "X", "cat": "fee", "dur": 0.399, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655803929.699, "ph": "X", "cat": "fee", "dur": 1.8, "name": "_check_not_importing_main (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\spawn.py:132)"}, {"pid": 19656, "tid": 21652, "ts": 64655803932.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "current_process (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:37)"}, {"pid": 19656, "tid": 21652, "ts": 64655803932.999, "ph": "X", "cat": "fee", "dur": 0.3, "name": "authkey (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:213)"}, {"pid": 19656, "tid": 21652, "ts": 64655803935.1, "ph": "X", "cat": "fee", "dur": 0.299, "name": "list.copy"}, {"pid": 19656, "tid": 21652, "ts": 64655803935.799, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.index"}, {"pid": 19656, "tid": 21652, "ts": 64655803937.4, "ph": "X", "cat": "fee", "dur": 2.1, "name": "nt.getcwd"}, {"pid": 19656, "tid": 21652, "ts": 64655803940.3, "ph": "X", "cat": "fee", "dur": 0.5, "name": "get_start_method (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:249)"}, {"pid": 19656, "tid": 21652, "ts": 64655803941.2, "ph": "X", "cat": "fee", "dur": 1.2, "name": "dict.update"}, {"pid": 19656, "tid": 21652, "ts": 64655803943.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655803943.899, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655803945.7, "ph": "X", "cat": "fee", "dur": 0.199, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655803946.199, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655803946.9, "ph": "X", "cat": "fee", "dur": 0.299, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655803947.4, "ph": "X", "cat": "fee", "dur": 0.6, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655803948.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655803949.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655803949.699, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655803950.3, "ph": "X", "cat": "fee", "dur": 0.199, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655803948.6, "ph": "X", "cat": "fee", "dur": 3.5, "name": "splitdrive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:124)"}, {"pid": 19656, "tid": 21652, "ts": 64655803952.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655803953.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655803953.2, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_get_bothseps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:34)"}, {"pid": 19656, "tid": 21652, "ts": 64655803945.3, "ph": "X", "cat": "fee", "dur": 8.4, "name": "isabs (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:61)"}, {"pid": 19656, "tid": 21652, "ts": 64655803954.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655803954.72, "ph": "X", "cat": "fee", "dur": 0.079, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655803955.1, "ph": "X", "cat": "fee", "dur": 0.299, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655803955.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655803955.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "nt.fspath"}, {"pid": 19656, "tid": 21652, "ts": 64655803956.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655803956.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64655803956.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "str.replace"}, {"pid": 19656, "tid": 21652, "ts": 64655803955.799, "ph": "X", "cat": "fee", "dur": 1.2, "name": "splitdrive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:124)"}, {"pid": 19656, "tid": 21652, "ts": 64655803957.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.startswith"}, {"pid": 19656, "tid": 21652, "ts": 64655803958.2, "ph": "X", "cat": "fee", "dur": 0.399, "name": "str.lstrip"}, {"pid": 19656, "tid": 21652, "ts": 64655803958.8, "ph": "X", "cat": "fee", "dur": 0.6, "name": "str.split"}, {"pid": 19656, "tid": 21652, "ts": 64655803959.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655803960.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655803960.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655803960.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655803960.899, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655803961.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655803961.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655803961.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655803961.7, "ph": "X", "cat": "fee", "dur": 0.299, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655803954.5, "ph": "X", "cat": "fee", "dur": 7.7, "name": "normpath (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:450)"}, {"pid": 19656, "tid": 21652, "ts": 64655803929.199, "ph": "X", "cat": "fee", "dur": 33.4, "name": "get_preparation_data (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\spawn.py:150)"}, {"pid": 19656, "tid": 17528, "ts": 64655803903.9, "ph": "X", "cat": "fee", "dur": 62.499, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64655803775.4, "ph": "X", "cat": "fee", "dur": 191.699, "name": "_exhaustive_wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:810)"}, {"pid": 19656, "tid": 5356, "ts": 64655803854.6, "ph": "X", "cat": "fee", "dur": 118.0, "name": "_winapi.WriteFile"}, {"pid": 19656, "tid": 5356, "ts": 64655803973.799, "ph": "X", "cat": "fee", "dur": 1.9, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 5356, "ts": 64655803976.099, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 19656, "tid": 5356, "ts": 64655803854.2, "ph": "X", "cat": "fee", "dur": 122.299, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 19656, "tid": 5356, "ts": 64655803849.9, "ph": "X", "cat": "fee", "dur": 128.0, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 19656, "tid": 5356, "ts": 64655803978.3, "ph": "X", "cat": "fee", "dur": 0.4, "name": "collections.deque.popleft"}, {"pid": 19656, "tid": 5356, "ts": 64655803979.899, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 5356, "ts": 64655803981.7, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 5356, "ts": 64655803981.5, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 5356, "ts": 64655803982.2, "ph": "X", "cat": "fee", "dur": 1.499, "name": "_thread.allocate_lock"}, {"pid": 19656, "tid": 5356, "ts": 64655803983.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 5356, "ts": 64655803984.199, "ph": "X", "cat": "fee", "dur": 0.1, "name": "collections.deque.append"}, {"pid": 19656, "tid": 5356, "ts": 64655803984.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.release"}, {"pid": 19656, "tid": 5356, "ts": 64655803984.699, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_release_save (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:265)"}, {"pid": 19656, "tid": 17528, "ts": 64655803968.3, "ph": "X", "cat": "fee", "dur": 19.699, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64655803988.6, "ph": "X", "cat": "fee", "dur": 1.9, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 21652, "ts": 64655803963.2, "ph": "X", "cat": "fee", "dur": 29.299, "name": "_winapi.CreatePipe"}, {"pid": 19656, "tid": 21652, "ts": 64655803993.5, "ph": "X", "cat": "fee", "dur": 1.4, "name": "msvcrt.open_osfhandle"}, {"pid": 19656, "tid": 21652, "ts": 64655803995.599, "ph": "X", "cat": "fee", "dur": 0.2, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655804066.299, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655804067.3, "ph": "X", "cat": "fee", "dur": 0.299, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655804067.9, "ph": "X", "cat": "fee", "dur": 1.0, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655804069.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655804069.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655804065.799, "ph": "X", "cat": "fee", "dur": 5.4, "name": "str.join"}, {"pid": 19656, "tid": 21652, "ts": 64655804072.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "get_executable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\spawn.py:45)"}, {"pid": 19656, "tid": 21652, "ts": 64655804073.1, "ph": "X", "cat": "fee", "dur": 13.2, "name": "io.open"}, {"pid": 19656, "tid": 17528, "ts": 64655803990.9, "ph": "X", "cat": "fee", "dur": 106.9, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64655804099.2, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64655804100.799, "ph": "X", "cat": "fee", "dur": 0.2, "name": "set.add"}, {"pid": 19656, "tid": 17528, "ts": 64655804101.299, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 17528, "ts": 64655804103.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64655804104.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64655804102.9, "ph": "X", "cat": "fee", "dur": 1.6, "name": "set.update"}, {"pid": 19656, "tid": 17528, "ts": 64655804105.0, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:908)"}, {"pid": 19656, "tid": 17528, "ts": 64655803758.0, "ph": "X", "cat": "fee", "dur": 347.9, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:832)"}, {"pid": 19656, "tid": 21652, "ts": 64655804088.0, "ph": "X", "cat": "fee", "dur": 1257.0, "name": "_winapi.CreateProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655805346.299, "ph": "X", "cat": "fee", "dur": 1.3, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655805354.5, "ph": "X", "cat": "fee", "dur": 0.399, "name": "builtins.next"}, {"pid": 19656, "tid": 21652, "ts": 64655805356.0, "ph": "X", "cat": "fee", "dur": 0.299, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655805352.0, "ph": "X", "cat": "fee", "dur": 5.999, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:186)"}, {"pid": 19656, "tid": 21652, "ts": 64655805359.499, "ph": "X", "cat": "fee", "dur": 1.3, "name": "set_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:354)"}, {"pid": 19656, "tid": 21652, "ts": 64655805367.599, "ph": "X", "cat": "fee", "dur": 0.4, "name": "dict.copy"}, {"pid": 19656, "tid": 21652, "ts": 64655805368.7, "ph": "X", "cat": "fee", "dur": 1.299, "name": "dict.update"}, {"pid": 19656, "tid": 21652, "ts": 64655805363.4, "ph": "X", "cat": "fee", "dur": 6.8, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 19656, "tid": 21652, "ts": 64655805376.8, "ph": "X", "cat": "fee", "dur": 0.5, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655805376.2, "ph": "X", "cat": "fee", "dur": 1.4, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655805381.299, "ph": "X", "cat": "fee", "dur": 0.4, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655805381.1, "ph": "X", "cat": "fee", "dur": 0.699, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655805375.1, "ph": "X", "cat": "fee", "dur": 8.0, "name": "__reduce__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:344)"}, {"pid": 19656, "tid": 21652, "ts": 64655805370.7, "ph": "X", "cat": "fee", "dur": 22.899, "name": "ForkingPickler.dump"}, {"pid": 19656, "tid": 21652, "ts": 64655805362.2, "ph": "X", "cat": "fee", "dur": 32.7, "name": "dump (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:58)"}, {"pid": 19656, "tid": 21652, "ts": 64655805399.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "dict.copy"}, {"pid": 19656, "tid": 21652, "ts": 64655805399.7, "ph": "X", "cat": "fee", "dur": 0.599, "name": "dict.update"}, {"pid": 19656, "tid": 21652, "ts": 64655805396.6, "ph": "X", "cat": "fee", "dur": 3.9, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 19656, "tid": 21652, "ts": 64655805409.9, "ph": "X", "cat": "fee", "dur": 0.299, "name": "str.rpartition"}, {"pid": 19656, "tid": 21652, "ts": 64655805409.5, "ph": "X", "cat": "fee", "dur": 1.0, "name": "parent (<frozen importlib._bootstrap>:398)"}, {"pid": 19656, "tid": 21652, "ts": 64655805412.999, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655805412.7, "ph": "X", "cat": "fee", "dur": 0.6, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655805409.0, "ph": "X", "cat": "fee", "dur": 5.199, "name": "__reduce__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:344)"}, {"pid": 19656, "tid": 21652, "ts": 64655805425.7, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655805425.6, "ph": "X", "cat": "fee", "dur": 0.4, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655805425.1, "ph": "X", "cat": "fee", "dur": 1.1, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655805424.3, "ph": "X", "cat": "fee", "dur": 4.1, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:57)"}, {"pid": 19656, "tid": 21652, "ts": 64655805432.3, "ph": "X", "cat": "fee", "dur": 0.299, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655805433.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655805435.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655805435.0, "ph": "X", "cat": "fee", "dur": 0.7, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 21652, "ts": 64655805436.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655805437.5, "ph": "X", "cat": "fee", "dur": 3.599, "name": "_winapi.OpenProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655805441.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655805442.0, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655805443.6, "ph": "X", "cat": "fee", "dur": 0.799, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655805436.299, "ph": "X", "cat": "fee", "dur": 8.4, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:106)"}, {"pid": 19656, "tid": 21652, "ts": 64655805445.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655805445.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655805431.7, "ph": "X", "cat": "fee", "dur": 14.1, "name": "reduce_pipe_connection (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:961)"}, {"pid": 19656, "tid": 21652, "ts": 64655805451.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655805451.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655805452.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655805452.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 21652, "ts": 64655805453.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655805453.5, "ph": "X", "cat": "fee", "dur": 1.5, "name": "_winapi.OpenProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655805455.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655805455.299, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655805456.1, "ph": "X", "cat": "fee", "dur": 0.499, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655805453.1, "ph": "X", "cat": "fee", "dur": 3.599, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:106)"}, {"pid": 19656, "tid": 21652, "ts": 64655805457.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655805457.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655805450.999, "ph": "X", "cat": "fee", "dur": 6.6, "name": "reduce_pipe_connection (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:961)"}, {"pid": 19656, "tid": 21652, "ts": 64655805461.2, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655805461.0, "ph": "X", "cat": "fee", "dur": 0.419, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655805460.8, "ph": "X", "cat": "fee", "dur": 0.8, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655805462.399, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655805462.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655805463.419, "ph": "X", "cat": "fee", "dur": 0.08, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655805463.399, "ph": "X", "cat": "fee", "dur": 0.2, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655805464.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655805464.699, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655805464.199, "ph": "X", "cat": "fee", "dur": 1.6, "name": "duplicate (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:71)"}, {"pid": 19656, "tid": 21652, "ts": 64655805463.1, "ph": "X", "cat": "fee", "dur": 2.9, "name": "duplicate_for_child (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:97)"}, {"pid": 19656, "tid": 21652, "ts": 64655805460.399, "ph": "X", "cat": "fee", "dur": 6.1, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:100)"}, {"pid": 19656, "tid": 21652, "ts": 64655805470.3, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655805470.2, "ph": "X", "cat": "fee", "dur": 0.319, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655805469.999, "ph": "X", "cat": "fee", "dur": 0.6, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655805471.12, "ph": "X", "cat": "fee", "dur": 0.079, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655805471.1, "ph": "X", "cat": "fee", "dur": 0.199, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655805471.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655805471.799, "ph": "X", "cat": "fee", "dur": 0.2, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655805472.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655805472.7, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655805472.299, "ph": "X", "cat": "fee", "dur": 1.4, "name": "duplicate (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:71)"}, {"pid": 19656, "tid": 21652, "ts": 64655805471.6, "ph": "X", "cat": "fee", "dur": 2.199, "name": "duplicate_for_child (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:97)"}, {"pid": 19656, "tid": 21652, "ts": 64655805469.7, "ph": "X", "cat": "fee", "dur": 4.5, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:100)"}, {"pid": 19656, "tid": 21652, "ts": 64655805478.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655805478.0, "ph": "X", "cat": "fee", "dur": 0.22, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655805477.8, "ph": "X", "cat": "fee", "dur": 0.5, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655805477.4, "ph": "X", "cat": "fee", "dur": 1.399, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:356)"}, {"pid": 19656, "tid": 21652, "ts": 64655805480.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655805481.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655805481.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655805481.5, "ph": "X", "cat": "fee", "dur": 0.5, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 21652, "ts": 64655805482.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655805482.699, "ph": "X", "cat": "fee", "dur": 1.4, "name": "_winapi.OpenProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655805484.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655805484.5, "ph": "X", "cat": "fee", "dur": 0.599, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655805485.199, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655805482.3, "ph": "X", "cat": "fee", "dur": 3.399, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:106)"}, {"pid": 19656, "tid": 21652, "ts": 64655805486.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655805486.499, "ph": "X", "cat": "fee", "dur": 0.1, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655805480.5, "ph": "X", "cat": "fee", "dur": 6.2, "name": "reduce_pipe_connection (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:961)"}, {"pid": 19656, "tid": 21652, "ts": 64655805488.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655805488.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655805489.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655805489.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 21652, "ts": 64655805490.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64655805490.299, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_winapi.OpenProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655805491.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655805491.7, "ph": "X", "cat": "fee", "dur": 0.599, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655805492.5, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655805489.9, "ph": "X", "cat": "fee", "dur": 3.1, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:106)"}, {"pid": 19656, "tid": 21652, "ts": 64655805493.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)"}, {"pid": 19656, "tid": 21652, "ts": 64655805493.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)"}, {"pid": 19656, "tid": 21652, "ts": 64655805488.2, "ph": "X", "cat": "fee", "dur": 5.7, "name": "reduce_pipe_connection (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:961)"}, {"pid": 19656, "tid": 21652, "ts": 64655805496.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655805495.9, "ph": "X", "cat": "fee", "dur": 0.319, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655805495.7, "ph": "X", "cat": "fee", "dur": 0.6, "name": "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)"}, {"pid": 19656, "tid": 21652, "ts": 64655805496.72, "ph": "X", "cat": "fee", "dur": 0.079, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655805496.7, "ph": "X", "cat": "fee", "dur": 0.199, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655805497.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 21652, "ts": 64655805497.399, "ph": "X", "cat": "fee", "dur": 0.22, "name": "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)"}, {"pid": 19656, "tid": 21652, "ts": 64655805498.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_winapi.GetCurrentProcess"}, {"pid": 19656, "tid": 21652, "ts": 64655805498.5, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_winapi.DuplicateHandle"}, {"pid": 19656, "tid": 21652, "ts": 64655805498.0, "ph": "X", "cat": "fee", "dur": 1.399, "name": "duplicate (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:71)"}, {"pid": 19656, "tid": 21652, "ts": 64655805497.2, "ph": "X", "cat": "fee", "dur": 2.299, "name": "duplicate_for_child (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:97)"}, {"pid": 19656, "tid": 21652, "ts": 64655805495.5, "ph": "X", "cat": "fee", "dur": 4.3, "name": "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:100)"}, {"pid": 19656, "tid": 21652, "ts": 64655805400.9, "ph": "X", "cat": "fee", "dur": 102.2, "name": "ForkingPickler.dump"}, {"pid": 19656, "tid": 21652, "ts": 64655805395.9, "ph": "X", "cat": "fee", "dur": 109.4, "name": "dump (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:58)"}, {"pid": 19656, "tid": 21652, "ts": 64655805506.1, "ph": "X", "cat": "fee", "dur": 0.6, "name": "set_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:354)"}, {"pid": 19656, "tid": 21652, "ts": 64655805506.9, "ph": "X", "cat": "fee", "dur": 14.4, "name": "_io.BufferedWriter.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655803927.5, "ph": "X", "cat": "fee", "dur": 1594.199, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:44)"}, {"pid": 19656, "tid": 21652, "ts": 64655803921.4, "ph": "X", "cat": "fee", "dur": 1603.4, "name": "_Popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:324)"}, {"pid": 19656, "tid": 21652, "ts": 64655805527.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "set.add"}, {"pid": 19656, "tid": 21652, "ts": 64655803883.799, "ph": "X", "cat": "fee", "dur": 1644.6, "name": "start (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:110)"}, {"pid": 19656, "tid": 21652, "ts": 64655805530.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 21652, "ts": 64655805529.9, "ph": "X", "cat": "fee", "dur": 1.399, "name": "ident (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:234)"}, {"pid": 19656, "tid": 21652, "ts": 64655803866.5, "ph": "X", "cat": "fee", "dur": 1665.2, "name": "_adjust_process_count (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:662)"}, {"pid": 19656, "tid": 21652, "ts": 64655805532.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_start_executor_manager_thread (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:654)"}, {"pid": 19656, "tid": 21652, "ts": 64655805532.9, "ph": "X", "cat": "fee", "dur": 1.599, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655803668.899, "ph": "X", "cat": "fee", "dur": 1865.8, "name": "submit (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:678)"}, {"pid": 19656, "tid": 21652, "ts": 64655805536.7, "ph": "X", "cat": "fee", "dur": 2.599, "name": "_get_chunks (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:183)"}, {"pid": 19656, "tid": 21652, "ts": 64655790776.099, "ph": "X", "cat": "fee", "dur": 14764.2, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:597)"}, {"pid": 19656, "tid": 21652, "ts": 64655790774.599, "ph": "X", "cat": "fee", "dur": 14768.2, "name": "map (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:572)"}, {"pid": 19656, "tid": 21652, "ts": 64655790771.0, "ph": "X", "cat": "fee", "dur": 14773.7, "name": "map (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:702)"}, {"pid": 19656, "tid": 17528, "ts": 64655805555.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655805556.199, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64655805556.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:331)"}, {"pid": 19656, "tid": 17528, "ts": 64655805555.0, "ph": "X", "cat": "fee", "dur": 2.1, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:258)"}, {"pid": 19656, "tid": 17528, "ts": 64655805557.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655805558.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64655805558.8, "ph": "X", "cat": "fee", "dur": 1.5, "name": "_recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:299)"}, {"pid": 19656, "tid": 17528, "ts": 64655805560.7, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_io.BytesIO.getvalue"}, {"pid": 19656, "tid": 17528, "ts": 64655805557.5, "ph": "X", "cat": "fee", "dur": 3.699, "name": "recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:213)"}, {"pid": 19656, "tid": 17528, "ts": 64655805561.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655805562.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64655805562.799, "ph": "X", "cat": "fee", "dur": 7.4, "name": "_winapi.PeekNamedPipe"}, {"pid": 19656, "tid": 17528, "ts": 64655805574.199, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655805575.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655805575.0, "ph": "X", "cat": "fee", "dur": 0.5, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64655805575.6, "ph": "X", "cat": "fee", "dur": 2.899, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64655805579.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64655805580.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.keys"}, {"pid": 19656, "tid": 17528, "ts": 64655805582.0, "ph": "X", "cat": "fee", "dur": 1.5, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64655805581.1, "ph": "X", "cat": "fee", "dur": 2.599, "name": "_exhaustive_wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:810)"}, {"pid": 19656, "tid": 17528, "ts": 64655805584.2, "ph": "X", "cat": "fee", "dur": 2.899, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64655805587.9, "ph": "X", "cat": "fee", "dur": 0.699, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64655805590.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64655805590.1, "ph": "X", "cat": "fee", "dur": 0.799, "name": "set.update"}, {"pid": 19656, "tid": 17528, "ts": 64655805591.399, "ph": "X", "cat": "fee", "dur": 0.3, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:908)"}, {"pid": 19656, "tid": 17528, "ts": 64655805571.6, "ph": "X", "cat": "fee", "dur": 20.3, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:832)"}, {"pid": 19656, "tid": 17528, "ts": 64655805562.4, "ph": "X", "cat": "fee", "dur": 31.1, "name": "_poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:331)"}, {"pid": 19656, "tid": 17528, "ts": 64655805561.7, "ph": "X", "cat": "fee", "dur": 31.999, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:258)"}, {"pid": 19656, "tid": 17528, "ts": 64655805554.1, "ph": "X", "cat": "fee", "dur": 39.8, "name": "clear (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:81)"}, {"pid": 19656, "tid": 17528, "ts": 64655805594.1, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655803749.4, "ph": "X", "cat": "fee", "dur": 1845.9, "name": "wait_result_broken_or_wakeup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:366)"}, {"pid": 19656, "tid": 17528, "ts": 64655805596.7, "ph": "X", "cat": "fee", "dur": 0.799, "name": "is_shutting_down (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:420)"}, {"pid": 19656, "tid": 17528, "ts": 64655805599.2, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_multiprocessing.SemLock._is_zero"}, {"pid": 19656, "tid": 17528, "ts": 64655805598.8, "ph": "X", "cat": "fee", "dur": 1.3, "name": "full (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:131)"}, {"pid": 19656, "tid": 17528, "ts": 64655805602.1, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64655805601.9, "ph": "X", "cat": "fee", "dur": 0.6, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64655805603.4, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64655805603.0, "ph": "X", "cat": "fee", "dur": 0.619, "name": "_qsize (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:209)"}, {"pid": 19656, "tid": 17528, "ts": 64655805604.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "collections.deque.popleft"}, {"pid": 19656, "tid": 17528, "ts": 64655805604.099, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:217)"}, {"pid": 19656, "tid": 17528, "ts": 64655805606.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64655805606.099, "ph": "X", "cat": "fee", "dur": 0.52, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 17528, "ts": 64655805605.7, "ph": "X", "cat": "fee", "dur": 2.4, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64655805608.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655805608.6, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64655805600.9, "ph": "X", "cat": "fee", "dur": 8.4, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:154)"}, {"pid": 19656, "tid": 17528, "ts": 64655805611.199, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.RLock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64655805610.8, "ph": "X", "cat": "fee", "dur": 0.7, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64655805612.5, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_thread.RLock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655805612.199, "ph": "X", "cat": "fee", "dur": 0.6, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64655805610.4, "ph": "X", "cat": "fee", "dur": 2.5, "name": "set_running_or_notify_cancel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:486)"}, {"pid": 19656, "tid": 17528, "ts": 64655805614.499, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:151)"}, {"pid": 19656, "tid": 17528, "ts": 64655805615.999, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_multiprocessing.SemLock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64655805617.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64655805617.1, "ph": "X", "cat": "fee", "dur": 0.32, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64655805617.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "collections.deque.append"}, {"pid": 19656, "tid": 17528, "ts": 64655805618.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64655805618.5, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 17528, "ts": 64655805619.6, "ph": "X", "cat": "fee", "dur": 0.799, "name": "_thread.lock.release"}, {"pid": 19656, "tid": 17528, "ts": 64655805620.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "collections.deque.remove"}, {"pid": 19656, "tid": 17528, "ts": 64655805618.299, "ph": "X", "cat": "fee", "dur": 2.5, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64655805622.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655805621.8, "ph": "X", "cat": "fee", "dur": 0.299, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64655805615.499, "ph": "X", "cat": "fee", "dur": 6.8, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:86)"}, {"pid": 19656, "tid": 17528, "ts": 64655805622.9, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_multiprocessing.SemLock._is_zero"}, {"pid": 19656, "tid": 17528, "ts": 64655805622.7, "ph": "X", "cat": "fee", "dur": 0.6, "name": "full (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:131)"}, {"pid": 19656, "tid": 17528, "ts": 64655805624.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64655805623.9, "ph": "X", "cat": "fee", "dur": 0.299, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64655805624.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64655805624.5, "ph": "X", "cat": "fee", "dur": 0.22, "name": "_qsize (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:209)"}, {"pid": 19656, "tid": 17528, "ts": 64655805625.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655805625.7, "ph": "X", "cat": "fee", "dur": 0.199, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64655805623.7, "ph": "X", "cat": "fee", "dur": 2.4, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:154)"}, {"pid": 19656, "tid": 17528, "ts": 64655805597.999, "ph": "X", "cat": "fee", "dur": 29.2, "name": "add_call_item_to_queue (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:343)"}, {"pid": 19656, "tid": 17528, "ts": 64655805628.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "dict.values"}, {"pid": 19656, "tid": 17528, "ts": 64655805630.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655805629.9, "ph": "X", "cat": "fee", "dur": 0.7, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655805631.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655805631.1, "ph": "X", "cat": "fee", "dur": 0.5, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655805632.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655805631.8, "ph": "X", "cat": "fee", "dur": 0.4, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655805632.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655805632.4, "ph": "X", "cat": "fee", "dur": 0.4, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655805633.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655805633.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655805633.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655805633.8, "ph": "X", "cat": "fee", "dur": 0.399, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655805634.999, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655805634.7, "ph": "X", "cat": "fee", "dur": 0.4, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655805635.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655805635.3, "ph": "X", "cat": "fee", "dur": 0.399, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655805629.1, "ph": "X", "cat": "fee", "dur": 6.699, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:376)"}, {"pid": 19656, "tid": 17528, "ts": 64655805638.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655805639.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655805638.7, "ph": "X", "cat": "fee", "dur": 0.599, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64655805639.4, "ph": "X", "cat": "fee", "dur": 3.399, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64655805643.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64655805643.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655805644.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655805644.3, "ph": "X", "cat": "fee", "dur": 0.4, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64655805644.8, "ph": "X", "cat": "fee", "dur": 1.899, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64655805647.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64655805647.4, "ph": "X", "cat": "fee", "dur": 0.799, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655805649.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655805649.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655805650.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655805651.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655805651.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655805652.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655805652.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655805653.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "dict.keys"}, {"pid": 19656, "tid": 21652, "ts": 64655805661.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 21652, "ts": 64655805661.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 19656, "tid": 21652, "ts": 64655805663.2, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.len"}, {"pid": 19656, "tid": 5356, "ts": 64655803985.3, "ph": "X", "cat": "fee", "dur": 1685.3, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 5356, "ts": 64655805672.5, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 5356, "ts": 64655805672.1, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_acquire_restore (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:268)"}, {"pid": 19656, "tid": 5356, "ts": 64655803981.0, "ph": "X", "cat": "fee", "dur": 1692.299, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:280)"}, {"pid": 19656, "tid": 5356, "ts": 64655805675.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.release"}, {"pid": 19656, "tid": 5356, "ts": 64655805675.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "collections.deque.popleft"}, {"pid": 19656, "tid": 5356, "ts": 64655805682.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "dict.copy"}, {"pid": 19656, "tid": 5356, "ts": 64655805683.1, "ph": "X", "cat": "fee", "dur": 0.7, "name": "dict.update"}, {"pid": 19656, "tid": 5356, "ts": 64655805678.9, "ph": "X", "cat": "fee", "dur": 4.999, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 19656, "tid": 5356, "ts": 64655805691.9, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_reduce_partial (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:223)"}, {"pid": 19656, "tid": 5356, "ts": 64655805684.3, "ph": "X", "cat": "fee", "dur": 16.2, "name": "ForkingPickler.dump"}, {"pid": 19656, "tid": 5356, "ts": 64655805701.6, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_io.BytesIO.getbuffer"}, {"pid": 19656, "tid": 5356, "ts": 64655805677.4, "ph": "X", "cat": "fee", "dur": 24.699, "name": "dumps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:48)"}, {"pid": 19656, "tid": 5356, "ts": 64655805703.5, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 5356, "ts": 64655805704.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 19656, "tid": 5356, "ts": 64655805705.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655805665.0, "ph": "X", "cat": "fee", "dur": 47.499, "name": "_winapi.WriteFile"}, {"pid": 19656, "tid": 21652, "ts": 64655805713.5, "ph": "X", "cat": "fee", "dur": 1.5, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 21652, "ts": 64655805715.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64655805664.5, "ph": "X", "cat": "fee", "dur": 51.099, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 19656, "tid": 21652, "ts": 64655805660.599, "ph": "X", "cat": "fee", "dur": 56.4, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 19656, "tid": 21652, "ts": 64655805659.8, "ph": "X", "cat": "fee", "dur": 57.5, "name": "wakeup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:77)"}, {"pid": 19656, "tid": 21652, "ts": 64655805717.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655805720.0, "ph": "X", "cat": "fee", "dur": 0.699, "name": "is_set (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:529)"}, {"pid": 19656, "tid": 21652, "ts": 64655805721.699, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.get_ident"}, {"pid": 19656, "tid": 21652, "ts": 64655805721.4, "ph": "X", "cat": "fee", "dur": 1.2, "name": "current_thread (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:1338)"}, {"pid": 19656, "tid": 5356, "ts": 64655805706.8, "ph": "X", "cat": "fee", "dur": 21.199, "name": "_winapi.WriteFile"}, {"pid": 19656, "tid": 5356, "ts": 64655805729.1, "ph": "X", "cat": "fee", "dur": 1.599, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 5356, "ts": 64655805731.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 5356, "ts": 64655805706.4, "ph": "X", "cat": "fee", "dur": 25.0, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 19656, "tid": 5356, "ts": 64655805703.1, "ph": "X", "cat": "fee", "dur": 29.7, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 19656, "tid": 5356, "ts": 64655805733.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "collections.deque.popleft"}, {"pid": 19656, "tid": 5356, "ts": 64655805734.7, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 5356, "ts": 64655805736.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 5356, "ts": 64655805736.2, "ph": "X", "cat": "fee", "dur": 0.699, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 5356, "ts": 64655805737.1, "ph": "X", "cat": "fee", "dur": 1.4, "name": "_thread.allocate_lock"}, {"pid": 19656, "tid": 5356, "ts": 64655805738.699, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 5356, "ts": 64655805739.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "collections.deque.append"}, {"pid": 19656, "tid": 5356, "ts": 64655805740.199, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_thread.lock.release"}, {"pid": 19656, "tid": 5356, "ts": 64655805739.9, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_release_save (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:265)"}, {"pid": 19656, "tid": 17528, "ts": 64655805654.2, "ph": "X", "cat": "fee", "dur": 89.299, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64655805743.999, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64655805744.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64655805745.7, "ph": "X", "cat": "fee", "dur": 2.4, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64655805653.499, "ph": "X", "cat": "fee", "dur": 94.8, "name": "_exhaustive_wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:810)"}, {"pid": 19656, "tid": 17528, "ts": 64655805749.2, "ph": "X", "cat": "fee", "dur": 2.899, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64655805752.3, "ph": "X", "cat": "fee", "dur": 0.9, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64655805753.6, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64655805754.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64655805755.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "set.add"}, {"pid": 19656, "tid": 17528, "ts": 64655805756.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.hasattr"}, {"pid": 19656, "tid": 17528, "ts": 64655805757.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64655805758.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64655805757.4, "ph": "X", "cat": "fee", "dur": 1.4, "name": "set.update"}, {"pid": 19656, "tid": 17528, "ts": 64655805759.199, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:908)"}, {"pid": 19656, "tid": 17528, "ts": 64655805637.1, "ph": "X", "cat": "fee", "dur": 122.999, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:832)"}, {"pid": 19656, "tid": 17528, "ts": 64655805764.1, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655805764.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64655805765.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:331)"}, {"pid": 19656, "tid": 17528, "ts": 64655805763.799, "ph": "X", "cat": "fee", "dur": 1.5, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:258)"}, {"pid": 19656, "tid": 17528, "ts": 64655805765.799, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655805766.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64655805766.6, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:299)"}, {"pid": 19656, "tid": 17528, "ts": 64655805767.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_io.BytesIO.getvalue"}, {"pid": 19656, "tid": 17528, "ts": 64655805765.6, "ph": "X", "cat": "fee", "dur": 2.399, "name": "recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:213)"}, {"pid": 19656, "tid": 17528, "ts": 64655805768.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655805768.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64655805769.4, "ph": "X", "cat": "fee", "dur": 5.299, "name": "_winapi.PeekNamedPipe"}, {"pid": 19656, "tid": 17528, "ts": 64655805777.5, "ph": "X", "cat": "fee", "dur": 0.299, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655805778.499, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655805778.199, "ph": "X", "cat": "fee", "dur": 0.5, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64655805778.8, "ph": "X", "cat": "fee", "dur": 2.199, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64655805781.499, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64655805782.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "dict.keys"}, {"pid": 19656, "tid": 17528, "ts": 64655805783.4, "ph": "X", "cat": "fee", "dur": 0.899, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64655805782.6, "ph": "X", "cat": "fee", "dur": 1.899, "name": "_exhaustive_wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:810)"}, {"pid": 19656, "tid": 17528, "ts": 64655805784.9, "ph": "X", "cat": "fee", "dur": 1.8, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64655805787.0, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64655805788.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64655805788.3, "ph": "X", "cat": "fee", "dur": 0.5, "name": "set.update"}, {"pid": 19656, "tid": 17528, "ts": 64655805789.2, "ph": "X", "cat": "fee", "dur": 0.199, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:908)"}, {"pid": 19656, "tid": 17528, "ts": 64655805775.6, "ph": "X", "cat": "fee", "dur": 13.9, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:832)"}, {"pid": 19656, "tid": 17528, "ts": 64655805769.2, "ph": "X", "cat": "fee", "dur": 21.699, "name": "_poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:331)"}, {"pid": 19656, "tid": 17528, "ts": 64655805768.4, "ph": "X", "cat": "fee", "dur": 22.599, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:258)"}, {"pid": 19656, "tid": 17528, "ts": 64655805763.3, "ph": "X", "cat": "fee", "dur": 27.799, "name": "clear (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:81)"}, {"pid": 19656, "tid": 17528, "ts": 64655805791.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655805627.6, "ph": "X", "cat": "fee", "dur": 164.1, "name": "wait_result_broken_or_wakeup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:366)"}, {"pid": 19656, "tid": 17528, "ts": 64655805792.8, "ph": "X", "cat": "fee", "dur": 0.6, "name": "is_shutting_down (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:420)"}, {"pid": 19656, "tid": 17528, "ts": 64655805794.3, "ph": "X", "cat": "fee", "dur": 0.5, "name": "flag_executor_shutting_down (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:468)"}, {"pid": 19656, "tid": 17528, "ts": 64655805796.1, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_multiprocessing.SemLock._is_zero"}, {"pid": 19656, "tid": 17528, "ts": 64655805795.8, "ph": "X", "cat": "fee", "dur": 1.12, "name": "full (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:131)"}, {"pid": 19656, "tid": 17528, "ts": 64655805798.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64655805798.4, "ph": "X", "cat": "fee", "dur": 0.42, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64655805799.499, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64655805799.3, "ph": "X", "cat": "fee", "dur": 0.419, "name": "_qsize (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:209)"}, {"pid": 19656, "tid": 17528, "ts": 64655805801.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655805801.1, "ph": "X", "cat": "fee", "dur": 0.399, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64655805797.8, "ph": "X", "cat": "fee", "dur": 3.999, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:154)"}, {"pid": 19656, "tid": 17528, "ts": 64655805795.3, "ph": "X", "cat": "fee", "dur": 7.499, "name": "add_call_item_to_queue (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:343)"}, {"pid": 19656, "tid": 17528, "ts": 64655805803.799, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.values"}, {"pid": 19656, "tid": 17528, "ts": 64655805805.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655805804.9, "ph": "X", "cat": "fee", "dur": 0.599, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655805806.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655805805.8, "ph": "X", "cat": "fee", "dur": 0.6, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655805806.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655805806.599, "ph": "X", "cat": "fee", "dur": 0.4, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655805807.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655805807.2, "ph": "X", "cat": "fee", "dur": 0.4, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655805808.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655805807.8, "ph": "X", "cat": "fee", "dur": 0.4, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655805808.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655805808.5, "ph": "X", "cat": "fee", "dur": 0.32, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655805809.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655805809.1, "ph": "X", "cat": "fee", "dur": 0.4, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655805809.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64655805809.7, "ph": "X", "cat": "fee", "dur": 0.399, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64655805804.3, "ph": "X", "cat": "fee", "dur": 5.9, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:376)"}, {"pid": 19656, "tid": 17528, "ts": 64655805812.0, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655805812.699, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655805812.5, "ph": "X", "cat": "fee", "dur": 0.5, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64655805813.1, "ph": "X", "cat": "fee", "dur": 1.899, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64655805815.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64655805815.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655805816.499, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64655805816.3, "ph": "X", "cat": "fee", "dur": 0.399, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64655805816.72, "ph": "X", "cat": "fee", "dur": 1.18, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64655805818.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64655805818.6, "ph": "X", "cat": "fee", "dur": 0.799, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655805820.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655805821.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655805821.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655805822.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655805822.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655805823.099, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655805823.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64655805824.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.keys"}, {"pid": 19656, "tid": 17528, "ts": 64655805825.0, "ph": "X", "cat": "fee", "dur": 9198430.1, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64665004262.3, "ph": "X", "cat": "fee", "dur": 1.199, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64665004267.6, "ph": "X", "cat": "fee", "dur": 0.699, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64665004272.6, "ph": "X", "cat": "fee", "dur": 6.2, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64655805824.5, "ph": "X", "cat": "fee", "dur": 9198454.7, "name": "_exhaustive_wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:810)"}, {"pid": 19656, "tid": 17528, "ts": 64665004284.9, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64665004289.599, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64665004293.2, "ph": "X", "cat": "fee", "dur": 4.999, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64665004302.0, "ph": "X", "cat": "fee", "dur": 0.5, "name": "set.add"}, {"pid": 19656, "tid": 17528, "ts": 64665004302.7, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64665004310.399, "ph": "X", "cat": "fee", "dur": 0.4, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64665004311.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64665004307.9, "ph": "X", "cat": "fee", "dur": 4.299, "name": "set.update"}, {"pid": 19656, "tid": 17528, "ts": 64665004313.5, "ph": "X", "cat": "fee", "dur": 1.5, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:908)"}, {"pid": 19656, "tid": 17528, "ts": 64655805811.199, "ph": "X", "cat": "fee", "dur": 9198504.0, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:832)"}, {"pid": 19656, "tid": 17528, "ts": 64665004325.4, "ph": "X", "cat": "fee", "dur": 0.699, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64665004326.899, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64665004329.899, "ph": "X", "cat": "fee", "dur": 9.6, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64665004340.299, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64665004344.599, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 19656, "tid": 17528, "ts": 64665004348.6, "ph": "X", "cat": "fee", "dur": 1.4, "name": "_io.BytesIO.write"}, {"pid": 19656, "tid": 17528, "ts": 64665004350.5, "ph": "X", "cat": "fee", "dur": 10.999, "name": "_winapi.PeekNamedPipe"}, {"pid": 19656, "tid": 17528, "ts": 64665004362.2, "ph": "X", "cat": "fee", "dur": 1778.1, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64665006141.199, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64665006142.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 19656, "tid": 17528, "ts": 64665006142.6, "ph": "X", "cat": "fee", "dur": 1458.799, "name": "_io.BytesIO.write"}, {"pid": 19656, "tid": 17528, "ts": 64665004343.099, "ph": "X", "cat": "fee", "dur": 3259.4, "name": "_get_more_data (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:337)"}, {"pid": 19656, "tid": 17528, "ts": 64665004328.5, "ph": "X", "cat": "fee", "dur": 3501.3, "name": "_recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:299)"}, {"pid": 19656, "tid": 17528, "ts": 64665007836.0, "ph": "X", "cat": "fee", "dur": 2.399, "name": "_io.BytesIO.getbuffer"}, {"pid": 19656, "tid": 17528, "ts": 64665049190.6, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 19656, "tid": 17528, "ts": 64665049199.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 19656, "tid": 17528, "ts": 64665049197.2, "ph": "X", "cat": "fee", "dur": 2.699, "name": "_abc._abc_subclasscheck"}, {"pid": 19656, "tid": 17528, "ts": 64665049197.099, "ph": "X", "cat": "fee", "dur": 2.9, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 19656, "tid": 17528, "ts": 64665049187.4, "ph": "X", "cat": "fee", "dur": 13.999, "name": "_abc._abc_subclasscheck"}, {"pid": 19656, "tid": 17528, "ts": 64665049187.3, "ph": "X", "cat": "fee", "dur": 14.119, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 19656, "tid": 17528, "ts": 64665049177.7, "ph": "X", "cat": "fee", "dur": 24.0, "name": "_abc._abc_instancecheck"}, {"pid": 19656, "tid": 17528, "ts": 64665049177.1, "ph": "X", "cat": "fee", "dur": 24.62, "name": "__instancecheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:117)"}, {"pid": 19656, "tid": 17528, "ts": 64665049173.499, "ph": "X", "cat": "fee", "dur": 28.4, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 17528, "ts": 64665049203.0, "ph": "X", "cat": "fee", "dur": 9346.8, "name": "Counter.update"}, {"pid": 19656, "tid": 17528, "ts": 64665049170.4, "ph": "X", "cat": "fee", "dur": 9381.4, "name": "update (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:649)"}, {"pid": 19656, "tid": 17528, "ts": 64665049163.5, "ph": "X", "cat": "fee", "dur": 9390.2, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:581)"}, {"pid": 19656, "tid": 17528, "ts": 64665007838.5, "ph": "X", "cat": "fee", "dur": 77452.7, "name": "_pickle.loads"}, {"pid": 19656, "tid": 17528, "ts": 64665004323.9, "ph": "X", "cat": "fee", "dur": 80969.699, "name": "recv (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:251)"}, {"pid": 19656, "tid": 17528, "ts": 64665085512.7, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64665085513.9, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64665085516.0, "ph": "X", "cat": "fee", "dur": 13.7, "name": "_winapi.PeekNamedPipe"}, {"pid": 19656, "tid": 17528, "ts": 64665085538.3, "ph": "X", "cat": "fee", "dur": 0.899, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64665085540.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64665085539.9, "ph": "X", "cat": "fee", "dur": 0.8, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64665085540.8, "ph": "X", "cat": "fee", "dur": 3.899, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64665085545.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64665085547.5, "ph": "X", "cat": "fee", "dur": 0.5, "name": "dict.keys"}, {"pid": 19656, "tid": 17528, "ts": 64665085550.5, "ph": "X", "cat": "fee", "dur": 2.1, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64665085548.7, "ph": "X", "cat": "fee", "dur": 4.199, "name": "_exhaustive_wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:810)"}, {"pid": 19656, "tid": 17528, "ts": 64665085553.6, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64665085558.6, "ph": "X", "cat": "fee", "dur": 1.3, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64665085563.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64665085562.7, "ph": "X", "cat": "fee", "dur": 1.2, "name": "set.update"}, {"pid": 19656, "tid": 17528, "ts": 64665085564.5, "ph": "X", "cat": "fee", "dur": 0.4, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:908)"}, {"pid": 19656, "tid": 17528, "ts": 64665085532.099, "ph": "X", "cat": "fee", "dur": 33.0, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:832)"}, {"pid": 19656, "tid": 17528, "ts": 64665085514.9, "ph": "X", "cat": "fee", "dur": 52.699, "name": "_poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:331)"}, {"pid": 19656, "tid": 17528, "ts": 64665085512.0, "ph": "X", "cat": "fee", "dur": 55.8, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:258)"}, {"pid": 19656, "tid": 17528, "ts": 64665085509.5, "ph": "X", "cat": "fee", "dur": 58.599, "name": "clear (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:81)"}, {"pid": 19656, "tid": 17528, "ts": 64665085568.4, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64655805803.2, "ph": "X", "cat": "fee", "dur": 9279765.8, "name": "wait_result_broken_or_wakeup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:366)"}, {"pid": 19656, "tid": 17528, "ts": 64665085574.1, "ph": "X", "cat": "fee", "dur": 1.5, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 17528, "ts": 64665085576.4, "ph": "X", "cat": "fee", "dur": 0.7, "name": "dict.pop"}, {"pid": 19656, "tid": 17528, "ts": 64665085586.099, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_thread.RLock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64665085585.3, "ph": "X", "cat": "fee", "dur": 1.4, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64665085590.7, "ph": "X", "cat": "fee", "dur": 0.5, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64665085592.6, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_thread.RLock._is_owned"}, {"pid": 19656, "tid": 17528, "ts": 64665085591.9, "ph": "X", "cat": "fee", "dur": 4.9, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64665085590.1, "ph": "X", "cat": "fee", "dur": 7.0, "name": "notify_all (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:374)"}, {"pid": 19656, "tid": 17528, "ts": 64665085598.8, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_thread.RLock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64665085597.9, "ph": "X", "cat": "fee", "dur": 1.2, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64665085600.1, "ph": "X", "cat": "fee", "dur": 0.699, "name": "_invoke_callbacks (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:326)"}, {"pid": 19656, "tid": 17528, "ts": 64665085582.6, "ph": "X", "cat": "fee", "dur": 18.299, "name": "set_result (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:526)"}, {"pid": 19656, "tid": 17528, "ts": 64665085572.5, "ph": "X", "cat": "fee", "dur": 28.6, "name": "process_result_item (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:397)"}, {"pid": 19656, "tid": 17528, "ts": 64665085606.399, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64665085605.9, "ph": "X", "cat": "fee", "dur": 0.719, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64665085609.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64665085609.1, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 17528, "ts": 64665085608.8, "ph": "X", "cat": "fee", "dur": 1.8, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64665085611.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64665085611.199, "ph": "X", "cat": "fee", "dur": 0.32, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64665085604.8, "ph": "X", "cat": "fee", "dur": 6.899, "name": "release (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:451)"}, {"pid": 19656, "tid": 17528, "ts": 64665085612.1, "ph": "X", "cat": "fee", "dur": 0.8, "name": "is_shutting_down (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:420)"}, {"pid": 19656, "tid": 17528, "ts": 64665085613.4, "ph": "X", "cat": "fee", "dur": 0.7, "name": "flag_executor_shutting_down (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:468)"}, {"pid": 19656, "tid": 17528, "ts": 64665085618.6, "ph": "X", "cat": "fee", "dur": 1.799, "name": "_multiprocessing.SemLock._is_zero"}, {"pid": 19656, "tid": 17528, "ts": 64665085616.4, "ph": "X", "cat": "fee", "dur": 4.3, "name": "full (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:131)"}, {"pid": 19656, "tid": 17528, "ts": 64665085623.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64665085623.599, "ph": "X", "cat": "fee", "dur": 0.42, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64665085625.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64665085624.599, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_qsize (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:209)"}, {"pid": 19656, "tid": 17528, "ts": 64665085627.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64665085627.3, "ph": "X", "cat": "fee", "dur": 0.22, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64665085623.099, "ph": "X", "cat": "fee", "dur": 4.7, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:154)"}, {"pid": 19656, "tid": 17528, "ts": 64665085614.7, "ph": "X", "cat": "fee", "dur": 14.7, "name": "add_call_item_to_queue (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:343)"}, {"pid": 19656, "tid": 17528, "ts": 64665085631.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "dict.values"}, {"pid": 19656, "tid": 17528, "ts": 64665085637.799, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64665085636.2, "ph": "X", "cat": "fee", "dur": 2.3, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64665085639.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64665085639.1, "ph": "X", "cat": "fee", "dur": 0.399, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64665085640.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64665085639.8, "ph": "X", "cat": "fee", "dur": 0.6, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64665085640.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64665085640.7, "ph": "X", "cat": "fee", "dur": 1.899, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64665085643.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64665085642.9, "ph": "X", "cat": "fee", "dur": 0.499, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64665085644.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64665085643.7, "ph": "X", "cat": "fee", "dur": 0.799, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64665085645.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64665085644.7, "ph": "X", "cat": "fee", "dur": 0.599, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64665085646.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64665085645.5, "ph": "X", "cat": "fee", "dur": 0.6, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64665085632.0, "ph": "X", "cat": "fee", "dur": 14.2, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:376)"}, {"pid": 19656, "tid": 17528, "ts": 64665085649.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64665085650.8, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64665085650.499, "ph": "X", "cat": "fee", "dur": 0.6, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64665085651.3, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64665085654.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64665085655.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64665085655.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64665085655.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64665085656.1, "ph": "X", "cat": "fee", "dur": 1.299, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64665085657.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64665085658.0, "ph": "X", "cat": "fee", "dur": 1.8, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64665085662.1, "ph": "X", "cat": "fee", "dur": 0.299, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64665085662.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64665085663.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64665085664.1, "ph": "X", "cat": "fee", "dur": 0.299, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64665085664.7, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64665085665.199, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64665085665.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64665085666.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.keys"}, {"pid": 19656, "tid": 17528, "ts": 64665085667.3, "ph": "X", "cat": "fee", "dur": 10972872.5, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64676058554.5, "ph": "X", "cat": "fee", "dur": 1.399, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64676058561.3, "ph": "X", "cat": "fee", "dur": 0.799, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64676058567.5, "ph": "X", "cat": "fee", "dur": 9.0, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64665085666.6, "ph": "X", "cat": "fee", "dur": 10972912.399, "name": "_exhaustive_wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:810)"}, {"pid": 19656, "tid": 17528, "ts": 64676058586.599, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64676058592.6, "ph": "X", "cat": "fee", "dur": 3.5, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64676058596.999, "ph": "X", "cat": "fee", "dur": 5.5, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64676058606.9, "ph": "X", "cat": "fee", "dur": 0.699, "name": "set.add"}, {"pid": 19656, "tid": 17528, "ts": 64676058607.8, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64676058618.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64676058619.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64676058614.6, "ph": "X", "cat": "fee", "dur": 5.5, "name": "set.update"}, {"pid": 19656, "tid": 17528, "ts": 64676058621.4, "ph": "X", "cat": "fee", "dur": 2.0, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:908)"}, {"pid": 19656, "tid": 17528, "ts": 64665085648.5, "ph": "X", "cat": "fee", "dur": 10972975.199, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:832)"}, {"pid": 19656, "tid": 17528, "ts": 64676058635.6, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64676058637.4, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64676058641.599, "ph": "X", "cat": "fee", "dur": 9.7, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64676058654.6, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64676058657.7, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 19656, "tid": 17528, "ts": 64676058663.0, "ph": "X", "cat": "fee", "dur": 1.2, "name": "_io.BytesIO.write"}, {"pid": 19656, "tid": 17528, "ts": 64676058664.8, "ph": "X", "cat": "fee", "dur": 14.2, "name": "_winapi.PeekNamedPipe"}, {"pid": 19656, "tid": 17528, "ts": 64676058680.2, "ph": "X", "cat": "fee", "dur": 7742.2, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64676066427.6, "ph": "X", "cat": "fee", "dur": 3.399, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64676066433.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 19656, "tid": 17528, "ts": 64676066433.899, "ph": "X", "cat": "fee", "dur": 7727.6, "name": "_io.BytesIO.write"}, {"pid": 19656, "tid": 17528, "ts": 64676058656.799, "ph": "X", "cat": "fee", "dur": 15509.4, "name": "_get_more_data (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:337)"}, {"pid": 19656, "tid": 17528, "ts": 64676058639.7, "ph": "X", "cat": "fee", "dur": 16614.8, "name": "_recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:299)"}, {"pid": 19656, "tid": 17528, "ts": 64676075284.0, "ph": "X", "cat": "fee", "dur": 5.199, "name": "_io.BytesIO.getbuffer"}, {"pid": 19656, "tid": 17528, "ts": 64676290523.4, "ph": "X", "cat": "fee", "dur": 7.699, "name": "_abc._abc_instancecheck"}, {"pid": 19656, "tid": 17528, "ts": 64676290522.599, "ph": "X", "cat": "fee", "dur": 8.9, "name": "__instancecheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:117)"}, {"pid": 19656, "tid": 17528, "ts": 64676290518.1, "ph": "X", "cat": "fee", "dur": 14.899, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 17528, "ts": 64676290535.1, "ph": "X", "cat": "fee", "dur": 47851.0, "name": "Counter.update"}, {"pid": 19656, "tid": 17528, "ts": 64676290513.5, "ph": "X", "cat": "fee", "dur": 47876.6, "name": "update (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:649)"}, {"pid": 19656, "tid": 17528, "ts": 64676290498.1, "ph": "X", "cat": "fee", "dur": 47896.4, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:581)"}, {"pid": 19656, "tid": 17528, "ts": 64676075289.4, "ph": "X", "cat": "fee", "dur": 378420.7, "name": "_pickle.loads"}, {"pid": 19656, "tid": 17528, "ts": 64676058633.8, "ph": "X", "cat": "fee", "dur": 395088.799, "name": "recv (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:251)"}, {"pid": 19656, "tid": 17528, "ts": 64676454610.3, "ph": "X", "cat": "fee", "dur": 0.699, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64676454611.7, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64676454614.7, "ph": "X", "cat": "fee", "dur": 14.6, "name": "_winapi.PeekNamedPipe"}, {"pid": 19656, "tid": 17528, "ts": 64676454639.2, "ph": "X", "cat": "fee", "dur": 0.699, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64676454641.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64676454640.899, "ph": "X", "cat": "fee", "dur": 1.0, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64676454642.1, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64676454647.7, "ph": "X", "cat": "fee", "dur": 0.299, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64676454650.2, "ph": "X", "cat": "fee", "dur": 0.4, "name": "dict.keys"}, {"pid": 19656, "tid": 17528, "ts": 64676454653.4, "ph": "X", "cat": "fee", "dur": 2.0, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64676454651.1, "ph": "X", "cat": "fee", "dur": 4.599, "name": "_exhaustive_wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:810)"}, {"pid": 19656, "tid": 17528, "ts": 64676454656.9, "ph": "X", "cat": "fee", "dur": 4.199, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64676454661.6, "ph": "X", "cat": "fee", "dur": 2.0, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64676454666.999, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64676454666.3, "ph": "X", "cat": "fee", "dur": 1.399, "name": "set.update"}, {"pid": 19656, "tid": 17528, "ts": 64676454668.6, "ph": "X", "cat": "fee", "dur": 0.5, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:908)"}, {"pid": 19656, "tid": 17528, "ts": 64676454632.4, "ph": "X", "cat": "fee", "dur": 36.899, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:832)"}, {"pid": 19656, "tid": 17528, "ts": 64676454612.999, "ph": "X", "cat": "fee", "dur": 59.3, "name": "_poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:331)"}, {"pid": 19656, "tid": 17528, "ts": 64676454609.5, "ph": "X", "cat": "fee", "dur": 62.899, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:258)"}, {"pid": 19656, "tid": 17528, "ts": 64676454606.699, "ph": "X", "cat": "fee", "dur": 66.2, "name": "clear (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:81)"}, {"pid": 19656, "tid": 17528, "ts": 64676454673.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64665085629.9, "ph": "X", "cat": "fee", "dur": 11369043.9, "name": "wait_result_broken_or_wakeup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:366)"}, {"pid": 19656, "tid": 17528, "ts": 64676454676.899, "ph": "X", "cat": "fee", "dur": 0.7, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 17528, "ts": 64676454678.5, "ph": "X", "cat": "fee", "dur": 1.3, "name": "dict.pop"}, {"pid": 19656, "tid": 17528, "ts": 64676454688.9, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_thread.RLock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64676454687.9, "ph": "X", "cat": "fee", "dur": 1.6, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64676454694.6, "ph": "X", "cat": "fee", "dur": 0.7, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64676454699.199, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_thread.RLock._is_owned"}, {"pid": 19656, "tid": 17528, "ts": 64676454698.3, "ph": "X", "cat": "fee", "dur": 5.8, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64676454693.7, "ph": "X", "cat": "fee", "dur": 10.799, "name": "notify_all (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:374)"}, {"pid": 19656, "tid": 17528, "ts": 64676454705.799, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.RLock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64676454704.999, "ph": "X", "cat": "fee", "dur": 1.1, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64676454707.5, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_invoke_callbacks (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:326)"}, {"pid": 19656, "tid": 17528, "ts": 64676454684.9, "ph": "X", "cat": "fee", "dur": 23.1, "name": "set_result (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:526)"}, {"pid": 19656, "tid": 17528, "ts": 64676454676.3, "ph": "X", "cat": "fee", "dur": 31.8, "name": "process_result_item (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:397)"}, {"pid": 19656, "tid": 17528, "ts": 64676454714.899, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64676454714.0, "ph": "X", "cat": "fee", "dur": 1.22, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64676454718.699, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64676454718.1, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 17528, "ts": 64676454717.8, "ph": "X", "cat": "fee", "dur": 2.0, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64676454720.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64676454720.3, "ph": "X", "cat": "fee", "dur": 0.599, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64676454713.3, "ph": "X", "cat": "fee", "dur": 7.9, "name": "release (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:451)"}, {"pid": 19656, "tid": 17528, "ts": 64676454722.2, "ph": "X", "cat": "fee", "dur": 0.7, "name": "is_shutting_down (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:420)"}, {"pid": 19656, "tid": 17528, "ts": 64676454723.499, "ph": "X", "cat": "fee", "dur": 0.8, "name": "flag_executor_shutting_down (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:468)"}, {"pid": 19656, "tid": 17528, "ts": 64676454729.8, "ph": "X", "cat": "fee", "dur": 2.099, "name": "_multiprocessing.SemLock._is_zero"}, {"pid": 19656, "tid": 17528, "ts": 64676454727.5, "ph": "X", "cat": "fee", "dur": 4.5, "name": "full (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:131)"}, {"pid": 19656, "tid": 17528, "ts": 64676454735.699, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64676454735.5, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64676454737.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64676454736.699, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_qsize (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:209)"}, {"pid": 19656, "tid": 17528, "ts": 64676454739.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64676454739.9, "ph": "X", "cat": "fee", "dur": 0.22, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64676454734.9, "ph": "X", "cat": "fee", "dur": 5.5, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:154)"}, {"pid": 19656, "tid": 17528, "ts": 64676454725.1, "ph": "X", "cat": "fee", "dur": 17.0, "name": "add_call_item_to_queue (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:343)"}, {"pid": 19656, "tid": 17528, "ts": 64676454744.299, "ph": "X", "cat": "fee", "dur": 0.2, "name": "dict.values"}, {"pid": 19656, "tid": 17528, "ts": 64676454749.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64676454748.0, "ph": "X", "cat": "fee", "dur": 1.8, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64676454750.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64676454750.1, "ph": "X", "cat": "fee", "dur": 0.7, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64676454751.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64676454751.1, "ph": "X", "cat": "fee", "dur": 0.7, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64676454752.2, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64676454752.0, "ph": "X", "cat": "fee", "dur": 0.6, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64676454752.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64676454752.8, "ph": "X", "cat": "fee", "dur": 0.399, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64676454754.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64676454753.5, "ph": "X", "cat": "fee", "dur": 0.799, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64676454755.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64676454754.6, "ph": "X", "cat": "fee", "dur": 0.599, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64676454756.199, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64676454755.5, "ph": "X", "cat": "fee", "dur": 0.799, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64676454745.0, "ph": "X", "cat": "fee", "dur": 11.4, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:376)"}, {"pid": 19656, "tid": 17528, "ts": 64676454759.999, "ph": "X", "cat": "fee", "dur": 0.6, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64676454762.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64676454761.9, "ph": "X", "cat": "fee", "dur": 0.6, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64676454762.6, "ph": "X", "cat": "fee", "dur": 4.599, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64676454768.8, "ph": "X", "cat": "fee", "dur": 104.499, "name": "sys.getwindowsversion"}, {"pid": 19656, "tid": 17528, "ts": 64676454875.7, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64676454877.099, "ph": "X", "cat": "fee", "dur": 0.3, "name": "set.add"}, {"pid": 19656, "tid": 17528, "ts": 64676454877.8, "ph": "X", "cat": "fee", "dur": 0.5, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64676454879.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64676454878.899, "ph": "X", "cat": "fee", "dur": 0.7, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64676454880.7, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64676454884.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64676454885.4, "ph": "X", "cat": "fee", "dur": 3.3, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64676454893.599, "ph": "X", "cat": "fee", "dur": 0.4, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64676454894.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64676454895.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64676454896.1, "ph": "X", "cat": "fee", "dur": 0.4, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64676454897.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64676454898.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64676454899.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64676454900.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "dict.keys"}, {"pid": 19656, "tid": 17528, "ts": 64676454901.9, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64676454901.0, "ph": "X", "cat": "fee", "dur": 4.499, "name": "_exhaustive_wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:810)"}, {"pid": 19656, "tid": 17528, "ts": 64676454906.2, "ph": "X", "cat": "fee", "dur": 2.599, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64676454909.1, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64676454911.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64676454910.8, "ph": "X", "cat": "fee", "dur": 0.7, "name": "set.update"}, {"pid": 19656, "tid": 17528, "ts": 64676454911.9, "ph": "X", "cat": "fee", "dur": 0.699, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:908)"}, {"pid": 19656, "tid": 17528, "ts": 64676454758.9, "ph": "X", "cat": "fee", "dur": 153.9, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:832)"}, {"pid": 19656, "tid": 17528, "ts": 64676454915.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64676454915.7, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64676454917.399, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64676454920.6, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64676454922.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 19656, "tid": 17528, "ts": 64676454924.3, "ph": "X", "cat": "fee", "dur": 0.599, "name": "_io.BytesIO.write"}, {"pid": 19656, "tid": 17528, "ts": 64676454925.1, "ph": "X", "cat": "fee", "dur": 4.8, "name": "_winapi.PeekNamedPipe"}, {"pid": 19656, "tid": 17528, "ts": 64676454930.5, "ph": "X", "cat": "fee", "dur": 5440.3, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64676460373.4, "ph": "X", "cat": "fee", "dur": 1.6, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64676460376.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 19656, "tid": 17528, "ts": 64676460376.5, "ph": "X", "cat": "fee", "dur": 5004.4, "name": "_io.BytesIO.write"}, {"pid": 19656, "tid": 17528, "ts": 64676454921.9, "ph": "X", "cat": "fee", "dur": 10464.399, "name": "_get_more_data (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:337)"}, {"pid": 19656, "tid": 17528, "ts": 64676454916.6, "ph": "X", "cat": "fee", "dur": 11337.7, "name": "_recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:299)"}, {"pid": 19656, "tid": 17528, "ts": 64676466276.0, "ph": "X", "cat": "fee", "dur": 8.199, "name": "_io.BytesIO.getbuffer"}, {"pid": 19656, "tid": 17528, "ts": 64676607287.2, "ph": "X", "cat": "fee", "dur": 3.699, "name": "_abc._abc_instancecheck"}, {"pid": 19656, "tid": 17528, "ts": 64676607286.7, "ph": "X", "cat": "fee", "dur": 4.4, "name": "__instancecheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:117)"}, {"pid": 19656, "tid": 17528, "ts": 64676607284.4, "ph": "X", "cat": "fee", "dur": 7.3, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 17528, "ts": 64676607293.0, "ph": "X", "cat": "fee", "dur": 32104.4, "name": "Counter.update"}, {"pid": 19656, "tid": 17528, "ts": 64676607282.1, "ph": "X", "cat": "fee", "dur": 32118.299, "name": "update (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:649)"}, {"pid": 19656, "tid": 17528, "ts": 64676607272.5, "ph": "X", "cat": "fee", "dur": 32134.9, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:581)"}, {"pid": 19656, "tid": 17528, "ts": 64676466284.5, "ph": "X", "cat": "fee", "dur": 252743.1, "name": "_pickle.loads"}, {"pid": 19656, "tid": 17528, "ts": 64676454914.899, "ph": "X", "cat": "fee", "dur": 264116.1, "name": "recv (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:251)"}, {"pid": 19656, "tid": 17528, "ts": 64676719474.5, "ph": "X", "cat": "fee", "dur": 0.699, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64676719475.699, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64676719478.0, "ph": "X", "cat": "fee", "dur": 17.699, "name": "_winapi.PeekNamedPipe"}, {"pid": 19656, "tid": 17528, "ts": 64676719503.799, "ph": "X", "cat": "fee", "dur": 0.9, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64676719505.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64676719505.4, "ph": "X", "cat": "fee", "dur": 0.699, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64676719506.2, "ph": "X", "cat": "fee", "dur": 4.8, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64676719512.0, "ph": "X", "cat": "fee", "dur": 0.399, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64676719514.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "dict.keys"}, {"pid": 19656, "tid": 17528, "ts": 64676719517.3, "ph": "X", "cat": "fee", "dur": 2.399, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64676719515.3, "ph": "X", "cat": "fee", "dur": 4.8, "name": "_exhaustive_wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:810)"}, {"pid": 19656, "tid": 17528, "ts": 64676719521.1, "ph": "X", "cat": "fee", "dur": 4.499, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64676719526.099, "ph": "X", "cat": "fee", "dur": 1.5, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64676719530.199, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64676719529.5, "ph": "X", "cat": "fee", "dur": 1.4, "name": "set.update"}, {"pid": 19656, "tid": 17528, "ts": 64676719531.5, "ph": "X", "cat": "fee", "dur": 0.5, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:908)"}, {"pid": 19656, "tid": 17528, "ts": 64676719498.1, "ph": "X", "cat": "fee", "dur": 34.099, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:832)"}, {"pid": 19656, "tid": 17528, "ts": 64676719476.6, "ph": "X", "cat": "fee", "dur": 57.8, "name": "_poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:331)"}, {"pid": 19656, "tid": 17528, "ts": 64676719473.7, "ph": "X", "cat": "fee", "dur": 60.899, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:258)"}, {"pid": 19656, "tid": 17528, "ts": 64676719471.8, "ph": "X", "cat": "fee", "dur": 63.3, "name": "clear (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:81)"}, {"pid": 19656, "tid": 17528, "ts": 64676719535.4, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64676454742.5, "ph": "X", "cat": "fee", "dur": 264793.499, "name": "wait_result_broken_or_wakeup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:366)"}, {"pid": 19656, "tid": 17528, "ts": 64676719538.299, "ph": "X", "cat": "fee", "dur": 0.6, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 17528, "ts": 64676719539.6, "ph": "X", "cat": "fee", "dur": 0.399, "name": "dict.pop"}, {"pid": 19656, "tid": 17528, "ts": 64676719545.399, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.RLock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64676719544.899, "ph": "X", "cat": "fee", "dur": 0.9, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64676719548.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64676719549.9, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_thread.RLock._is_owned"}, {"pid": 19656, "tid": 17528, "ts": 64676719549.5, "ph": "X", "cat": "fee", "dur": 2.999, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64676719548.2, "ph": "X", "cat": "fee", "dur": 4.699, "name": "notify_all (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:374)"}, {"pid": 19656, "tid": 17528, "ts": 64676719553.8, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_thread.RLock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64676719553.3, "ph": "X", "cat": "fee", "dur": 0.799, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64676719554.8, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_invoke_callbacks (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:326)"}, {"pid": 19656, "tid": 17528, "ts": 64676719542.3, "ph": "X", "cat": "fee", "dur": 12.9, "name": "set_result (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:526)"}, {"pid": 19656, "tid": 17528, "ts": 64676719537.9, "ph": "X", "cat": "fee", "dur": 17.4, "name": "process_result_item (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:397)"}, {"pid": 19656, "tid": 17528, "ts": 64676719559.1, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64676719558.7, "ph": "X", "cat": "fee", "dur": 0.619, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64676719562.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64676719561.7, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 17528, "ts": 64676719561.4, "ph": "X", "cat": "fee", "dur": 1.599, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64676719563.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64676719563.6, "ph": "X", "cat": "fee", "dur": 0.22, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64676719558.299, "ph": "X", "cat": "fee", "dur": 5.7, "name": "release (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:451)"}, {"pid": 19656, "tid": 17528, "ts": 64676719567.3, "ph": "X", "cat": "fee", "dur": 0.5, "name": "is_shutting_down (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:420)"}, {"pid": 19656, "tid": 17528, "ts": 64676719568.3, "ph": "X", "cat": "fee", "dur": 0.5, "name": "flag_executor_shutting_down (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:468)"}, {"pid": 19656, "tid": 17528, "ts": 64676719571.8, "ph": "X", "cat": "fee", "dur": 1.299, "name": "_multiprocessing.SemLock._is_zero"}, {"pid": 19656, "tid": 17528, "ts": 64676719570.499, "ph": "X", "cat": "fee", "dur": 2.62, "name": "full (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:131)"}, {"pid": 19656, "tid": 17528, "ts": 64676719575.299, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64676719575.1, "ph": "X", "cat": "fee", "dur": 0.419, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64676719576.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64676719576.1, "ph": "X", "cat": "fee", "dur": 0.52, "name": "_qsize (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:209)"}, {"pid": 19656, "tid": 17528, "ts": 64676719578.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64676719578.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64676719574.5, "ph": "X", "cat": "fee", "dur": 4.099, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:154)"}, {"pid": 19656, "tid": 17528, "ts": 64676719569.4, "ph": "X", "cat": "fee", "dur": 10.3, "name": "add_call_item_to_queue (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:343)"}, {"pid": 19656, "tid": 17528, "ts": 64676719581.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "dict.values"}, {"pid": 19656, "tid": 17528, "ts": 64676719583.899, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64676719583.3, "ph": "X", "cat": "fee", "dur": 1.2, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64676719585.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64676719584.8, "ph": "X", "cat": "fee", "dur": 0.8, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64676719586.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64676719585.8, "ph": "X", "cat": "fee", "dur": 0.419, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64676719586.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64676719586.5, "ph": "X", "cat": "fee", "dur": 0.5, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64676719587.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64676719587.199, "ph": "X", "cat": "fee", "dur": 0.5, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64676719588.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64676719588.199, "ph": "X", "cat": "fee", "dur": 0.3, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64676719589.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64676719588.8, "ph": "X", "cat": "fee", "dur": 0.699, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64676719590.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64676719589.8, "ph": "X", "cat": "fee", "dur": 0.399, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64676719581.899, "ph": "X", "cat": "fee", "dur": 8.4, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:376)"}, {"pid": 19656, "tid": 17528, "ts": 64676719592.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64676719593.799, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64676719593.6, "ph": "X", "cat": "fee", "dur": 0.5, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64676719594.2, "ph": "X", "cat": "fee", "dur": 4.1, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64676719599.3, "ph": "X", "cat": "fee", "dur": 107.4, "name": "sys.getwindowsversion"}, {"pid": 19656, "tid": 17528, "ts": 64676719708.9, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64676719710.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "set.add"}, {"pid": 19656, "tid": 17528, "ts": 64676719711.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64676719712.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64676719711.8, "ph": "X", "cat": "fee", "dur": 0.599, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64676719712.5, "ph": "X", "cat": "fee", "dur": 2.699, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64676719716.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64676719717.1, "ph": "X", "cat": "fee", "dur": 1.399, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64676719720.6, "ph": "X", "cat": "fee", "dur": 0.299, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64676719721.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64676719721.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64676719722.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64676719724.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64676719725.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64676719725.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64676719726.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "dict.keys"}, {"pid": 19656, "tid": 17528, "ts": 64676719727.7, "ph": "X", "cat": "fee", "dur": 2.799, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64676719726.8, "ph": "X", "cat": "fee", "dur": 3.9, "name": "_exhaustive_wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:810)"}, {"pid": 19656, "tid": 17528, "ts": 64676719731.3, "ph": "X", "cat": "fee", "dur": 2.5, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64676719734.199, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64676719736.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64676719735.8, "ph": "X", "cat": "fee", "dur": 0.799, "name": "set.update"}, {"pid": 19656, "tid": 17528, "ts": 64676719736.999, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:908)"}, {"pid": 19656, "tid": 17528, "ts": 64676719591.8, "ph": "X", "cat": "fee", "dur": 146.0, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:832)"}, {"pid": 19656, "tid": 17528, "ts": 64676719740.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64676719740.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64676719741.6, "ph": "X", "cat": "fee", "dur": 3.199, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64676719745.2, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64676719746.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 19656, "tid": 17528, "ts": 64676719748.6, "ph": "X", "cat": "fee", "dur": 0.9, "name": "_io.BytesIO.write"}, {"pid": 19656, "tid": 17528, "ts": 64676719749.8, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_winapi.PeekNamedPipe"}, {"pid": 19656, "tid": 17528, "ts": 64676719754.8, "ph": "X", "cat": "fee", "dur": 5446.099, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64676725202.499, "ph": "X", "cat": "fee", "dur": 1.4, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64676725204.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 19656, "tid": 17528, "ts": 64676725205.2, "ph": "X", "cat": "fee", "dur": 5359.8, "name": "_io.BytesIO.write"}, {"pid": 19656, "tid": 17528, "ts": 64676719746.399, "ph": "X", "cat": "fee", "dur": 10820.5, "name": "_get_more_data (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:337)"}, {"pid": 19656, "tid": 17528, "ts": 64676719741.0, "ph": "X", "cat": "fee", "dur": 12524.7, "name": "_recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:299)"}, {"pid": 19656, "tid": 17528, "ts": 64676732271.3, "ph": "X", "cat": "fee", "dur": 2.7, "name": "_io.BytesIO.getbuffer"}, {"pid": 19656, "tid": 17528, "ts": 64676891111.4, "ph": "X", "cat": "fee", "dur": 3.5, "name": "_abc._abc_instancecheck"}, {"pid": 19656, "tid": 17528, "ts": 64676891110.6, "ph": "X", "cat": "fee", "dur": 4.6, "name": "__instancecheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:117)"}, {"pid": 19656, "tid": 17528, "ts": 64676891107.9, "ph": "X", "cat": "fee", "dur": 7.899, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 17528, "ts": 64676891117.599, "ph": "X", "cat": "fee", "dur": 39828.8, "name": "Counter.update"}, {"pid": 19656, "tid": 17528, "ts": 64676891105.8, "ph": "X", "cat": "fee", "dur": 39842.8, "name": "update (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:649)"}, {"pid": 19656, "tid": 17528, "ts": 64676891096.9, "ph": "X", "cat": "fee", "dur": 39854.1, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:581)"}, {"pid": 19656, "tid": 17528, "ts": 64676732274.2, "ph": "X", "cat": "fee", "dur": 292477.799, "name": "_pickle.loads"}, {"pid": 19656, "tid": 17528, "ts": 64676719739.6, "ph": "X", "cat": "fee", "dur": 305014.999, "name": "recv (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:251)"}, {"pid": 19656, "tid": 17528, "ts": 64677025215.4, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64677025216.2, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64677025218.8, "ph": "X", "cat": "fee", "dur": 14.999, "name": "_winapi.PeekNamedPipe"}, {"pid": 19656, "tid": 17528, "ts": 64677025242.0, "ph": "X", "cat": "fee", "dur": 0.5, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64677025243.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64677025243.2, "ph": "X", "cat": "fee", "dur": 0.7, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64677025244.0, "ph": "X", "cat": "fee", "dur": 4.7, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64677025249.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64677025251.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "dict.keys"}, {"pid": 19656, "tid": 17528, "ts": 64677025254.1, "ph": "X", "cat": "fee", "dur": 2.3, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64677025252.199, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_exhaustive_wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:810)"}, {"pid": 19656, "tid": 17528, "ts": 64677025257.7, "ph": "X", "cat": "fee", "dur": 4.8, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64677025265.1, "ph": "X", "cat": "fee", "dur": 1.5, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64677025269.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64677025268.6, "ph": "X", "cat": "fee", "dur": 1.9, "name": "set.update"}, {"pid": 19656, "tid": 17528, "ts": 64677025271.1, "ph": "X", "cat": "fee", "dur": 0.6, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:908)"}, {"pid": 19656, "tid": 17528, "ts": 64677025236.6, "ph": "X", "cat": "fee", "dur": 35.2, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:832)"}, {"pid": 19656, "tid": 17528, "ts": 64677025217.2, "ph": "X", "cat": "fee", "dur": 57.4, "name": "_poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:331)"}, {"pid": 19656, "tid": 17528, "ts": 64677025214.199, "ph": "X", "cat": "fee", "dur": 60.7, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:258)"}, {"pid": 19656, "tid": 17528, "ts": 64677025212.5, "ph": "X", "cat": "fee", "dur": 62.6, "name": "clear (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:81)"}, {"pid": 19656, "tid": 17528, "ts": 64677025275.299, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64676719580.099, "ph": "X", "cat": "fee", "dur": 305695.8, "name": "wait_result_broken_or_wakeup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:366)"}, {"pid": 19656, "tid": 17528, "ts": 64677025279.4, "ph": "X", "cat": "fee", "dur": 0.699, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 17528, "ts": 64677025281.599, "ph": "X", "cat": "fee", "dur": 0.5, "name": "dict.pop"}, {"pid": 19656, "tid": 17528, "ts": 64677025286.5, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_thread.RLock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64677025285.699, "ph": "X", "cat": "fee", "dur": 1.2, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64677025290.7, "ph": "X", "cat": "fee", "dur": 0.299, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64677025291.999, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_thread.RLock._is_owned"}, {"pid": 19656, "tid": 17528, "ts": 64677025291.4, "ph": "X", "cat": "fee", "dur": 3.6, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64677025289.9, "ph": "X", "cat": "fee", "dur": 5.399, "name": "notify_all (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:374)"}, {"pid": 19656, "tid": 17528, "ts": 64677025296.1, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_thread.RLock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64677025295.7, "ph": "X", "cat": "fee", "dur": 0.8, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64677025297.2, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_invoke_callbacks (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:326)"}, {"pid": 19656, "tid": 17528, "ts": 64677025284.0, "ph": "X", "cat": "fee", "dur": 13.7, "name": "set_result (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:526)"}, {"pid": 19656, "tid": 17528, "ts": 64677025278.4, "ph": "X", "cat": "fee", "dur": 19.399, "name": "process_result_item (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:397)"}, {"pid": 19656, "tid": 17528, "ts": 64677025301.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64677025301.2, "ph": "X", "cat": "fee", "dur": 0.899, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64677025305.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64677025304.699, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 17528, "ts": 64677025304.4, "ph": "X", "cat": "fee", "dur": 1.6, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64677025306.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64677025306.5, "ph": "X", "cat": "fee", "dur": 0.319, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64677025300.6, "ph": "X", "cat": "fee", "dur": 6.4, "name": "release (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:451)"}, {"pid": 19656, "tid": 17528, "ts": 64677025307.6, "ph": "X", "cat": "fee", "dur": 0.7, "name": "is_shutting_down (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:420)"}, {"pid": 19656, "tid": 17528, "ts": 64677025308.8, "ph": "X", "cat": "fee", "dur": 0.399, "name": "flag_executor_shutting_down (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:468)"}, {"pid": 19656, "tid": 17528, "ts": 64677025312.4, "ph": "X", "cat": "fee", "dur": 1.6, "name": "_multiprocessing.SemLock._is_zero"}, {"pid": 19656, "tid": 17528, "ts": 64677025311.1, "ph": "X", "cat": "fee", "dur": 3.0, "name": "full (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:131)"}, {"pid": 19656, "tid": 17528, "ts": 64677025316.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64677025316.2, "ph": "X", "cat": "fee", "dur": 0.399, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64677025317.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64677025317.099, "ph": "X", "cat": "fee", "dur": 0.42, "name": "_qsize (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:209)"}, {"pid": 19656, "tid": 17528, "ts": 64677025319.399, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64677025319.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64677025315.7, "ph": "X", "cat": "fee", "dur": 4.1, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:154)"}, {"pid": 19656, "tid": 17528, "ts": 64677025309.9, "ph": "X", "cat": "fee", "dur": 10.9, "name": "add_call_item_to_queue (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:343)"}, {"pid": 19656, "tid": 17528, "ts": 64677025322.5, "ph": "X", "cat": "fee", "dur": 0.199, "name": "dict.values"}, {"pid": 19656, "tid": 17528, "ts": 64677025325.3, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64677025324.699, "ph": "X", "cat": "fee", "dur": 1.4, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64677025326.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64677025326.4, "ph": "X", "cat": "fee", "dur": 1.4, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64677025328.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64677025328.1, "ph": "X", "cat": "fee", "dur": 0.399, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64677025328.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64677025328.8, "ph": "X", "cat": "fee", "dur": 0.5, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64677025329.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64677025329.5, "ph": "X", "cat": "fee", "dur": 0.4, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64677025330.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64677025330.299, "ph": "X", "cat": "fee", "dur": 0.4, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64677025331.299, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64677025331.0, "ph": "X", "cat": "fee", "dur": 0.4, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64677025332.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64677025331.7, "ph": "X", "cat": "fee", "dur": 0.5, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64677025323.1, "ph": "X", "cat": "fee", "dur": 9.199, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:376)"}, {"pid": 19656, "tid": 17528, "ts": 64677025334.9, "ph": "X", "cat": "fee", "dur": 0.299, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64677025336.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64677025335.7, "ph": "X", "cat": "fee", "dur": 0.7, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64677025336.5, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64677025339.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64677025340.5, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64677025341.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64677025340.9, "ph": "X", "cat": "fee", "dur": 0.4, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64677025341.4, "ph": "X", "cat": "fee", "dur": 1.299, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64677025343.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64677025343.4, "ph": "X", "cat": "fee", "dur": 1.5, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64677025346.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64677025347.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64677025347.799, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64677025348.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64677025349.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64677025349.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64677025350.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64677025351.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.keys"}, {"pid": 19656, "tid": 17528, "ts": 64677025352.0, "ph": "X", "cat": "fee", "dur": 286702.2, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64677312057.1, "ph": "X", "cat": "fee", "dur": 0.7, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64677312060.3, "ph": "X", "cat": "fee", "dur": 0.5, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64677312062.8, "ph": "X", "cat": "fee", "dur": 11.0, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64677025351.299, "ph": "X", "cat": "fee", "dur": 286723.2, "name": "_exhaustive_wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:810)"}, {"pid": 19656, "tid": 17528, "ts": 64677312077.0, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64677312080.6, "ph": "X", "cat": "fee", "dur": 3.399, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64677312084.6, "ph": "X", "cat": "fee", "dur": 1.9, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64677312088.5, "ph": "X", "cat": "fee", "dur": 0.299, "name": "set.add"}, {"pid": 19656, "tid": 17528, "ts": 64677312089.0, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64677312092.4, "ph": "X", "cat": "fee", "dur": 0.299, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64677312092.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64677312091.3, "ph": "X", "cat": "fee", "dur": 2.2, "name": "set.update"}, {"pid": 19656, "tid": 17528, "ts": 64677312095.7, "ph": "X", "cat": "fee", "dur": 0.899, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:908)"}, {"pid": 19656, "tid": 17528, "ts": 64677025333.7, "ph": "X", "cat": "fee", "dur": 286763.1, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:832)"}, {"pid": 19656, "tid": 17528, "ts": 64677312103.1, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64677312104.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64677312105.799, "ph": "X", "cat": "fee", "dur": 3783.6, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64677315891.4, "ph": "X", "cat": "fee", "dur": 1.9, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64677315895.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 19656, "tid": 17528, "ts": 64677315897.5, "ph": "X", "cat": "fee", "dur": 12.299, "name": "_io.BytesIO.write"}, {"pid": 19656, "tid": 17528, "ts": 64677315911.0, "ph": "X", "cat": "fee", "dur": 7.8, "name": "_winapi.PeekNamedPipe"}, {"pid": 19656, "tid": 17528, "ts": 64677315919.9, "ph": "X", "cat": "fee", "dur": 5715.199, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64677321636.4, "ph": "X", "cat": "fee", "dur": 0.899, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64677321638.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 19656, "tid": 17528, "ts": 64677321638.3, "ph": "X", "cat": "fee", "dur": 4384.7, "name": "_io.BytesIO.write"}, {"pid": 19656, "tid": 17528, "ts": 64677315895.099, "ph": "X", "cat": "fee", "dur": 10129.8, "name": "_get_more_data (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:337)"}, {"pid": 19656, "tid": 17528, "ts": 64677312105.0, "ph": "X", "cat": "fee", "dur": 14463.4, "name": "_recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:299)"}, {"pid": 19656, "tid": 17528, "ts": 64677326573.4, "ph": "X", "cat": "fee", "dur": 1.899, "name": "_io.BytesIO.getbuffer"}, {"pid": 19656, "tid": 17528, "ts": 64677462806.7, "ph": "X", "cat": "fee", "dur": 2.999, "name": "_abc._abc_instancecheck"}, {"pid": 19656, "tid": 17528, "ts": 64677462806.2, "ph": "X", "cat": "fee", "dur": 4.199, "name": "__instancecheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:117)"}, {"pid": 19656, "tid": 17528, "ts": 64677462804.0, "ph": "X", "cat": "fee", "dur": 7.6, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 17528, "ts": 64677462812.999, "ph": "X", "cat": "fee", "dur": 40349.5, "name": "Counter.update"}, {"pid": 19656, "tid": 17528, "ts": 64677462802.4, "ph": "X", "cat": "fee", "dur": 40362.299, "name": "update (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:649)"}, {"pid": 19656, "tid": 17528, "ts": 64677462792.699, "ph": "X", "cat": "fee", "dur": 40373.8, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:581)"}, {"pid": 19656, "tid": 17528, "ts": 64677326575.4, "ph": "X", "cat": "fee", "dur": 261933.099, "name": "_pickle.loads"}, {"pid": 19656, "tid": 17528, "ts": 64677312102.3, "ph": "X", "cat": "fee", "dur": 276408.8, "name": "recv (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:251)"}, {"pid": 19656, "tid": 17528, "ts": 64677589061.2, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64677589062.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64677589064.7, "ph": "X", "cat": "fee", "dur": 14.599, "name": "_winapi.PeekNamedPipe"}, {"pid": 19656, "tid": 17528, "ts": 64677589087.8, "ph": "X", "cat": "fee", "dur": 0.7, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64677589089.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64677589089.1, "ph": "X", "cat": "fee", "dur": 0.8, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64677589090.0, "ph": "X", "cat": "fee", "dur": 4.199, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64677589095.1, "ph": "X", "cat": "fee", "dur": 0.399, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64677589097.299, "ph": "X", "cat": "fee", "dur": 0.3, "name": "dict.keys"}, {"pid": 19656, "tid": 17528, "ts": 64677589099.9, "ph": "X", "cat": "fee", "dur": 2.199, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64677589098.1, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_exhaustive_wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:810)"}, {"pid": 19656, "tid": 17528, "ts": 64677589103.3, "ph": "X", "cat": "fee", "dur": 4.399, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64677589108.199, "ph": "X", "cat": "fee", "dur": 1.3, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64677589112.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64677589111.499, "ph": "X", "cat": "fee", "dur": 1.2, "name": "set.update"}, {"pid": 19656, "tid": 17528, "ts": 64677589113.499, "ph": "X", "cat": "fee", "dur": 0.5, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:908)"}, {"pid": 19656, "tid": 17528, "ts": 64677589081.8, "ph": "X", "cat": "fee", "dur": 32.3, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:832)"}, {"pid": 19656, "tid": 17528, "ts": 64677589063.4, "ph": "X", "cat": "fee", "dur": 52.799, "name": "_poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:331)"}, {"pid": 19656, "tid": 17528, "ts": 64677589060.1, "ph": "X", "cat": "fee", "dur": 56.299, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:258)"}, {"pid": 19656, "tid": 17528, "ts": 64677589057.999, "ph": "X", "cat": "fee", "dur": 58.6, "name": "clear (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:81)"}, {"pid": 19656, "tid": 17528, "ts": 64677589116.799, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64677025321.3, "ph": "X", "cat": "fee", "dur": 563796.1, "name": "wait_result_broken_or_wakeup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:366)"}, {"pid": 19656, "tid": 17528, "ts": 64677589119.8, "ph": "X", "cat": "fee", "dur": 0.799, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 17528, "ts": 64677589123.1, "ph": "X", "cat": "fee", "dur": 0.4, "name": "dict.pop"}, {"pid": 19656, "tid": 17528, "ts": 64677589127.8, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_thread.RLock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64677589127.4, "ph": "X", "cat": "fee", "dur": 1.0, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64677589131.2, "ph": "X", "cat": "fee", "dur": 0.299, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64677589132.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.RLock._is_owned"}, {"pid": 19656, "tid": 17528, "ts": 64677589131.9, "ph": "X", "cat": "fee", "dur": 3.5, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64677589130.6, "ph": "X", "cat": "fee", "dur": 5.1, "name": "notify_all (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:374)"}, {"pid": 19656, "tid": 17528, "ts": 64677589136.599, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.RLock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64677589136.1, "ph": "X", "cat": "fee", "dur": 0.719, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64677589137.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_invoke_callbacks (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:326)"}, {"pid": 19656, "tid": 17528, "ts": 64677589125.6, "ph": "X", "cat": "fee", "dur": 12.499, "name": "set_result (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:526)"}, {"pid": 19656, "tid": 17528, "ts": 64677589119.4, "ph": "X", "cat": "fee", "dur": 18.799, "name": "process_result_item (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:397)"}, {"pid": 19656, "tid": 17528, "ts": 64677589142.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64677589141.8, "ph": "X", "cat": "fee", "dur": 0.52, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64677589145.199, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64677589144.699, "ph": "X", "cat": "fee", "dur": 0.9, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 17528, "ts": 64677589144.4, "ph": "X", "cat": "fee", "dur": 1.9, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64677589147.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64677589146.9, "ph": "X", "cat": "fee", "dur": 0.319, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64677589141.3, "ph": "X", "cat": "fee", "dur": 6.1, "name": "release (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:451)"}, {"pid": 19656, "tid": 17528, "ts": 64677589147.8, "ph": "X", "cat": "fee", "dur": 0.5, "name": "is_shutting_down (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:420)"}, {"pid": 19656, "tid": 17528, "ts": 64677589148.9, "ph": "X", "cat": "fee", "dur": 0.5, "name": "flag_executor_shutting_down (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:468)"}, {"pid": 19656, "tid": 17528, "ts": 64677589152.5, "ph": "X", "cat": "fee", "dur": 1.4, "name": "_multiprocessing.SemLock._is_zero"}, {"pid": 19656, "tid": 17528, "ts": 64677589151.2, "ph": "X", "cat": "fee", "dur": 2.8, "name": "full (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:131)"}, {"pid": 19656, "tid": 17528, "ts": 64677589156.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64677589155.8, "ph": "X", "cat": "fee", "dur": 0.72, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64677589157.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64677589157.0, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_qsize (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:209)"}, {"pid": 19656, "tid": 17528, "ts": 64677589159.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64677589159.0, "ph": "X", "cat": "fee", "dur": 0.22, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64677589155.3, "ph": "X", "cat": "fee", "dur": 4.2, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:154)"}, {"pid": 19656, "tid": 17528, "ts": 64677589149.999, "ph": "X", "cat": "fee", "dur": 10.6, "name": "add_call_item_to_queue (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:343)"}, {"pid": 19656, "tid": 17528, "ts": 64677589162.5, "ph": "X", "cat": "fee", "dur": 0.5, "name": "dict.values"}, {"pid": 19656, "tid": 17528, "ts": 64677589165.8, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64677589165.1, "ph": "X", "cat": "fee", "dur": 1.3, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64677589166.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64677589166.7, "ph": "X", "cat": "fee", "dur": 0.5, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64677589167.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64677589167.499, "ph": "X", "cat": "fee", "dur": 0.4, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64677589168.499, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64677589168.2, "ph": "X", "cat": "fee", "dur": 0.6, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64677589169.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64677589168.999, "ph": "X", "cat": "fee", "dur": 0.5, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64677589170.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64677589170.1, "ph": "X", "cat": "fee", "dur": 0.399, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64677589171.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64677589170.799, "ph": "X", "cat": "fee", "dur": 1.4, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64677589172.799, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64677589172.6, "ph": "X", "cat": "fee", "dur": 0.399, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64677589163.5, "ph": "X", "cat": "fee", "dur": 9.599, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:376)"}, {"pid": 19656, "tid": 17528, "ts": 64677589175.599, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64677589176.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64677589176.3, "ph": "X", "cat": "fee", "dur": 0.4, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64677589176.8, "ph": "X", "cat": "fee", "dur": 4.399, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64677589182.1, "ph": "X", "cat": "fee", "dur": 111.5, "name": "sys.getwindowsversion"}, {"pid": 19656, "tid": 17528, "ts": 64677589295.9, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64677589297.5, "ph": "X", "cat": "fee", "dur": 0.299, "name": "set.add"}, {"pid": 19656, "tid": 17528, "ts": 64677589298.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64677589299.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64677589299.0, "ph": "X", "cat": "fee", "dur": 0.6, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64677589299.7, "ph": "X", "cat": "fee", "dur": 2.6, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64677589303.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64677589304.2, "ph": "X", "cat": "fee", "dur": 1.6, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64677589307.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64677589308.5, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64677589309.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64677589309.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64677589310.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64677589311.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64677589311.8, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64677589312.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "dict.keys"}, {"pid": 19656, "tid": 17528, "ts": 64677589313.8, "ph": "X", "cat": "fee", "dur": 3.199, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64677589312.999, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_exhaustive_wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:810)"}, {"pid": 19656, "tid": 17528, "ts": 64677589318.299, "ph": "X", "cat": "fee", "dur": 2.6, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64677589321.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64677589323.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64677589322.7, "ph": "X", "cat": "fee", "dur": 0.699, "name": "set.update"}, {"pid": 19656, "tid": 17528, "ts": 64677589323.899, "ph": "X", "cat": "fee", "dur": 0.5, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:908)"}, {"pid": 19656, "tid": 17528, "ts": 64677589174.5, "ph": "X", "cat": "fee", "dur": 150.1, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:832)"}, {"pid": 19656, "tid": 17528, "ts": 64677589326.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64677589327.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64677589328.8, "ph": "X", "cat": "fee", "dur": 2.4, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64677589331.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64677589333.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 19656, "tid": 17528, "ts": 64677589334.799, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_io.BytesIO.write"}, {"pid": 19656, "tid": 17528, "ts": 64677589335.7, "ph": "X", "cat": "fee", "dur": 4.399, "name": "_winapi.PeekNamedPipe"}, {"pid": 19656, "tid": 17528, "ts": 64677589340.7, "ph": "X", "cat": "fee", "dur": 6449.7, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64677595792.299, "ph": "X", "cat": "fee", "dur": 1.2, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64677595794.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 19656, "tid": 17528, "ts": 64677595795.099, "ph": "X", "cat": "fee", "dur": 4981.6, "name": "_io.BytesIO.write"}, {"pid": 19656, "tid": 17528, "ts": 64677589332.8, "ph": "X", "cat": "fee", "dur": 11446.599, "name": "_get_more_data (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:337)"}, {"pid": 19656, "tid": 17528, "ts": 64677589327.9, "ph": "X", "cat": "fee", "dur": 12069.1, "name": "_recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:299)"}, {"pid": 19656, "tid": 17528, "ts": 64677601403.9, "ph": "X", "cat": "fee", "dur": 2.5, "name": "_io.BytesIO.getbuffer"}, {"pid": 19656, "tid": 17528, "ts": 64677743549.0, "ph": "X", "cat": "fee", "dur": 3.099, "name": "_abc._abc_instancecheck"}, {"pid": 19656, "tid": 17528, "ts": 64677743546.7, "ph": "X", "cat": "fee", "dur": 5.699, "name": "__instancecheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:117)"}, {"pid": 19656, "tid": 17528, "ts": 64677743544.8, "ph": "X", "cat": "fee", "dur": 8.4, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 17528, "ts": 64677743554.3, "ph": "X", "cat": "fee", "dur": 43255.299, "name": "Counter.update"}, {"pid": 19656, "tid": 17528, "ts": 64677743543.2, "ph": "X", "cat": "fee", "dur": 43268.4, "name": "update (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:649)"}, {"pid": 19656, "tid": 17528, "ts": 64677743535.2, "ph": "X", "cat": "fee", "dur": 43278.4, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:581)"}, {"pid": 19656, "tid": 17528, "ts": 64677601408.4, "ph": "X", "cat": "fee", "dur": 286268.299, "name": "_pickle.loads"}, {"pid": 19656, "tid": 17528, "ts": 64677589326.5, "ph": "X", "cat": "fee", "dur": 298353.1, "name": "recv (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:251)"}, {"pid": 19656, "tid": 17528, "ts": 64677888238.099, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64677888239.4, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64677888241.7, "ph": "X", "cat": "fee", "dur": 12.899, "name": "_winapi.PeekNamedPipe"}, {"pid": 19656, "tid": 17528, "ts": 64677888262.8, "ph": "X", "cat": "fee", "dur": 0.6, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64677888264.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64677888264.1, "ph": "X", "cat": "fee", "dur": 0.5, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64677888264.8, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64677888270.0, "ph": "X", "cat": "fee", "dur": 0.6, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64677888272.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "dict.keys"}, {"pid": 19656, "tid": 17528, "ts": 64677888274.8, "ph": "X", "cat": "fee", "dur": 1.8, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64677888273.099, "ph": "X", "cat": "fee", "dur": 3.8, "name": "_exhaustive_wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:810)"}, {"pid": 19656, "tid": 17528, "ts": 64677888278.3, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64677888282.8, "ph": "X", "cat": "fee", "dur": 1.3, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64677888287.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64677888286.7, "ph": "X", "cat": "fee", "dur": 1.4, "name": "set.update"}, {"pid": 19656, "tid": 17528, "ts": 64677888288.7, "ph": "X", "cat": "fee", "dur": 0.4, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:908)"}, {"pid": 19656, "tid": 17528, "ts": 64677888257.2, "ph": "X", "cat": "fee", "dur": 32.099, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:832)"}, {"pid": 19656, "tid": 17528, "ts": 64677888240.399, "ph": "X", "cat": "fee", "dur": 51.1, "name": "_poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:331)"}, {"pid": 19656, "tid": 17528, "ts": 64677888237.0, "ph": "X", "cat": "fee", "dur": 54.7, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:258)"}, {"pid": 19656, "tid": 17528, "ts": 64677888235.1, "ph": "X", "cat": "fee", "dur": 56.999, "name": "clear (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:81)"}, {"pid": 19656, "tid": 17528, "ts": 64677888292.4, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64677589161.0, "ph": "X", "cat": "fee", "dur": 299131.8, "name": "wait_result_broken_or_wakeup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:366)"}, {"pid": 19656, "tid": 17528, "ts": 64677888295.399, "ph": "X", "cat": "fee", "dur": 0.7, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 17528, "ts": 64677888296.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "dict.pop"}, {"pid": 19656, "tid": 17528, "ts": 64677888301.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.RLock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64677888300.6, "ph": "X", "cat": "fee", "dur": 1.099, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64677888304.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64677888305.3, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_thread.RLock._is_owned"}, {"pid": 19656, "tid": 17528, "ts": 64677888304.8, "ph": "X", "cat": "fee", "dur": 2.699, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64677888303.7, "ph": "X", "cat": "fee", "dur": 4.099, "name": "notify_all (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:374)"}, {"pid": 19656, "tid": 17528, "ts": 64677888308.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.RLock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64677888308.2, "ph": "X", "cat": "fee", "dur": 0.899, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64677888309.8, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_invoke_callbacks (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:326)"}, {"pid": 19656, "tid": 17528, "ts": 64677888298.9, "ph": "X", "cat": "fee", "dur": 11.32, "name": "set_result (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:526)"}, {"pid": 19656, "tid": 17528, "ts": 64677888295.0, "ph": "X", "cat": "fee", "dur": 15.4, "name": "process_result_item (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:397)"}, {"pid": 19656, "tid": 17528, "ts": 64677888313.899, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64677888313.5, "ph": "X", "cat": "fee", "dur": 0.62, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64677888317.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64677888317.1, "ph": "X", "cat": "fee", "dur": 3.399, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 17528, "ts": 64677888316.9, "ph": "X", "cat": "fee", "dur": 4.5, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64677888322.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64677888321.9, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64677888312.899, "ph": "X", "cat": "fee", "dur": 9.5, "name": "release (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:451)"}, {"pid": 19656, "tid": 17528, "ts": 64677888322.9, "ph": "X", "cat": "fee", "dur": 0.599, "name": "is_shutting_down (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:420)"}, {"pid": 19656, "tid": 17528, "ts": 64677888324.2, "ph": "X", "cat": "fee", "dur": 0.7, "name": "flag_executor_shutting_down (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:468)"}, {"pid": 19656, "tid": 17528, "ts": 64677888328.3, "ph": "X", "cat": "fee", "dur": 1.299, "name": "_multiprocessing.SemLock._is_zero"}, {"pid": 19656, "tid": 17528, "ts": 64677888327.0, "ph": "X", "cat": "fee", "dur": 2.7, "name": "full (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:131)"}, {"pid": 19656, "tid": 17528, "ts": 64677888331.899, "ph": "X", "cat": "fee", "dur": 11.1, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64677888331.7, "ph": "X", "cat": "fee", "dur": 11.4, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64677888344.299, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64677888343.799, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_qsize (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:209)"}, {"pid": 19656, "tid": 17528, "ts": 64677888345.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64677888345.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64677888331.1, "ph": "X", "cat": "fee", "dur": 15.1, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:154)"}, {"pid": 19656, "tid": 17528, "ts": 64677888325.5, "ph": "X", "cat": "fee", "dur": 24.2, "name": "add_call_item_to_queue (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:343)"}, {"pid": 19656, "tid": 17528, "ts": 64677888351.399, "ph": "X", "cat": "fee", "dur": 0.2, "name": "dict.values"}, {"pid": 19656, "tid": 17528, "ts": 64677888354.0, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64677888353.4, "ph": "X", "cat": "fee", "dur": 1.2, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64677888355.199, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64677888354.9, "ph": "X", "cat": "fee", "dur": 0.5, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64677888355.9, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64677888355.699, "ph": "X", "cat": "fee", "dur": 0.6, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64677888356.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64677888356.6, "ph": "X", "cat": "fee", "dur": 0.399, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64677888357.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64677888357.2, "ph": "X", "cat": "fee", "dur": 0.4, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64677888358.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64677888358.1, "ph": "X", "cat": "fee", "dur": 0.399, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64677888358.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64677888358.7, "ph": "X", "cat": "fee", "dur": 0.299, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64677888359.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64677888359.3, "ph": "X", "cat": "fee", "dur": 0.399, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64677888352.1, "ph": "X", "cat": "fee", "dur": 7.7, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:376)"}, {"pid": 19656, "tid": 17528, "ts": 64677888362.4, "ph": "X", "cat": "fee", "dur": 0.399, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64677888363.799, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64677888363.4, "ph": "X", "cat": "fee", "dur": 0.699, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64677888364.2, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64677888367.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64677888368.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64677888369.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64677888368.8, "ph": "X", "cat": "fee", "dur": 0.5, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64677888369.399, "ph": "X", "cat": "fee", "dur": 1.3, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64677888371.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64677888371.4, "ph": "X", "cat": "fee", "dur": 1.799, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64677888375.3, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64677888376.8, "ph": "X", "cat": "fee", "dur": 0.299, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64677888377.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64677888378.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64677888378.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64677888379.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64677888379.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64677888380.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.keys"}, {"pid": 19656, "tid": 17528, "ts": 64677888381.6, "ph": "X", "cat": "fee", "dur": 43931.099, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64677932314.699, "ph": "X", "cat": "fee", "dur": 0.6, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64677932317.3, "ph": "X", "cat": "fee", "dur": 0.399, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64677932319.7, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64677888380.9, "ph": "X", "cat": "fee", "dur": 43942.4, "name": "_exhaustive_wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:810)"}, {"pid": 19656, "tid": 17528, "ts": 64677932325.4, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64677932328.399, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64677932332.0, "ph": "X", "cat": "fee", "dur": 1.899, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64677932335.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "set.add"}, {"pid": 19656, "tid": 17528, "ts": 64677932336.1, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64677932339.5, "ph": "X", "cat": "fee", "dur": 0.299, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64677932340.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64677932338.6, "ph": "X", "cat": "fee", "dur": 2.0, "name": "set.update"}, {"pid": 19656, "tid": 17528, "ts": 64677932341.3, "ph": "X", "cat": "fee", "dur": 0.9, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:908)"}, {"pid": 19656, "tid": 17528, "ts": 64677888361.4, "ph": "X", "cat": "fee", "dur": 43981.0, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:832)"}, {"pid": 19656, "tid": 17528, "ts": 64677932347.8, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64677932348.9, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64677932350.4, "ph": "X", "cat": "fee", "dur": 5.0, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64677932356.0, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64677932357.6, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 19656, "tid": 17528, "ts": 64677932359.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_io.BytesIO.write"}, {"pid": 19656, "tid": 17528, "ts": 64677932360.0, "ph": "X", "cat": "fee", "dur": 7.9, "name": "_winapi.PeekNamedPipe"}, {"pid": 19656, "tid": 17528, "ts": 64677932368.6, "ph": "X", "cat": "fee", "dur": 4565.1, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64677936935.3, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64677936937.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 19656, "tid": 17528, "ts": 64677936937.2, "ph": "X", "cat": "fee", "dur": 3376.199, "name": "_io.BytesIO.write"}, {"pid": 19656, "tid": 17528, "ts": 64677932357.299, "ph": "X", "cat": "fee", "dur": 7957.4, "name": "_get_more_data (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:337)"}, {"pid": 19656, "tid": 17528, "ts": 64677932349.699, "ph": "X", "cat": "fee", "dur": 8445.2, "name": "_recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:299)"}, {"pid": 19656, "tid": 17528, "ts": 64677940798.699, "ph": "X", "cat": "fee", "dur": 1.4, "name": "_io.BytesIO.getbuffer"}, {"pid": 19656, "tid": 17528, "ts": 64678034582.8, "ph": "X", "cat": "fee", "dur": 2.1, "name": "_abc._abc_instancecheck"}, {"pid": 19656, "tid": 17528, "ts": 64678034582.2, "ph": "X", "cat": "fee", "dur": 2.899, "name": "__instancecheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:117)"}, {"pid": 19656, "tid": 17528, "ts": 64678034580.3, "ph": "X", "cat": "fee", "dur": 5.3, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 17528, "ts": 64678034586.5, "ph": "X", "cat": "fee", "dur": 27588.2, "name": "Counter.update"}, {"pid": 19656, "tid": 17528, "ts": 64678034579.0, "ph": "X", "cat": "fee", "dur": 27597.6, "name": "update (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:649)"}, {"pid": 19656, "tid": 17528, "ts": 64678034573.0, "ph": "X", "cat": "fee", "dur": 27605.9, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:581)"}, {"pid": 19656, "tid": 17528, "ts": 64677940800.3, "ph": "X", "cat": "fee", "dur": 187108.399, "name": "_pickle.loads"}, {"pid": 19656, "tid": 17528, "ts": 64677932347.2, "ph": "X", "cat": "fee", "dur": 195563.799, "name": "recv (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:251)"}, {"pid": 19656, "tid": 17528, "ts": 64678128367.3, "ph": "X", "cat": "fee", "dur": 0.599, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64678128368.6, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64678128370.5, "ph": "X", "cat": "fee", "dur": 12.4, "name": "_winapi.PeekNamedPipe"}, {"pid": 19656, "tid": 17528, "ts": 64678128404.2, "ph": "X", "cat": "fee", "dur": 0.699, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64678128406.2, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64678128405.8, "ph": "X", "cat": "fee", "dur": 0.7, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64678128406.6, "ph": "X", "cat": "fee", "dur": 4.5, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64678128411.999, "ph": "X", "cat": "fee", "dur": 0.3, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64678128413.999, "ph": "X", "cat": "fee", "dur": 0.2, "name": "dict.keys"}, {"pid": 19656, "tid": 17528, "ts": 64678128416.299, "ph": "X", "cat": "fee", "dur": 2.0, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64678128414.6, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_exhaustive_wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:810)"}, {"pid": 19656, "tid": 17528, "ts": 64678128419.5, "ph": "X", "cat": "fee", "dur": 4.399, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64678128424.399, "ph": "X", "cat": "fee", "dur": 1.4, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64678128428.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64678128427.699, "ph": "X", "cat": "fee", "dur": 1.1, "name": "set.update"}, {"pid": 19656, "tid": 17528, "ts": 64678128429.4, "ph": "X", "cat": "fee", "dur": 0.5, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:908)"}, {"pid": 19656, "tid": 17528, "ts": 64678128388.3, "ph": "X", "cat": "fee", "dur": 41.8, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:832)"}, {"pid": 19656, "tid": 17528, "ts": 64678128369.399, "ph": "X", "cat": "fee", "dur": 63.2, "name": "_poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:331)"}, {"pid": 19656, "tid": 17528, "ts": 64678128366.7, "ph": "X", "cat": "fee", "dur": 66.0, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:258)"}, {"pid": 19656, "tid": 17528, "ts": 64678128364.9, "ph": "X", "cat": "fee", "dur": 68.099, "name": "clear (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:81)"}, {"pid": 19656, "tid": 17528, "ts": 64678128433.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64677888350.2, "ph": "X", "cat": "fee", "dur": 240083.599, "name": "wait_result_broken_or_wakeup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:366)"}, {"pid": 19656, "tid": 17528, "ts": 64678128435.9, "ph": "X", "cat": "fee", "dur": 0.7, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 17528, "ts": 64678128437.3, "ph": "X", "cat": "fee", "dur": 0.4, "name": "dict.pop"}, {"pid": 19656, "tid": 17528, "ts": 64678128442.6, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_thread.RLock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64678128442.1, "ph": "X", "cat": "fee", "dur": 1.0, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64678128445.699, "ph": "X", "cat": "fee", "dur": 0.4, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64678128447.0, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_thread.RLock._is_owned"}, {"pid": 19656, "tid": 17528, "ts": 64678128446.5, "ph": "X", "cat": "fee", "dur": 3.399, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64678128445.199, "ph": "X", "cat": "fee", "dur": 4.9, "name": "notify_all (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:374)"}, {"pid": 19656, "tid": 17528, "ts": 64678128450.999, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.RLock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64678128450.499, "ph": "X", "cat": "fee", "dur": 0.8, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64678128452.1, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_invoke_callbacks (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:326)"}, {"pid": 19656, "tid": 17528, "ts": 64678128439.9, "ph": "X", "cat": "fee", "dur": 12.599, "name": "set_result (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:526)"}, {"pid": 19656, "tid": 17528, "ts": 64678128435.6, "ph": "X", "cat": "fee", "dur": 17.099, "name": "process_result_item (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:397)"}, {"pid": 19656, "tid": 17528, "ts": 64678128456.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64678128456.2, "ph": "X", "cat": "fee", "dur": 0.52, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64678128459.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64678128459.1, "ph": "X", "cat": "fee", "dur": 0.799, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 17528, "ts": 64678128458.8, "ph": "X", "cat": "fee", "dur": 1.7, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64678128461.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64678128461.0, "ph": "X", "cat": "fee", "dur": 0.22, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64678128455.4, "ph": "X", "cat": "fee", "dur": 5.999, "name": "release (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:451)"}, {"pid": 19656, "tid": 17528, "ts": 64678128461.899, "ph": "X", "cat": "fee", "dur": 0.4, "name": "is_shutting_down (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:420)"}, {"pid": 19656, "tid": 17528, "ts": 64678128462.9, "ph": "X", "cat": "fee", "dur": 0.7, "name": "flag_executor_shutting_down (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:468)"}, {"pid": 19656, "tid": 17528, "ts": 64678128466.4, "ph": "X", "cat": "fee", "dur": 1.3, "name": "_multiprocessing.SemLock._is_zero"}, {"pid": 19656, "tid": 17528, "ts": 64678128465.4, "ph": "X", "cat": "fee", "dur": 2.32, "name": "full (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:131)"}, {"pid": 19656, "tid": 17528, "ts": 64678128469.499, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64678128469.3, "ph": "X", "cat": "fee", "dur": 0.419, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64678128474.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64678128473.8, "ph": "X", "cat": "fee", "dur": 0.52, "name": "_qsize (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:209)"}, {"pid": 19656, "tid": 17528, "ts": 64678128475.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64678128475.599, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64678128468.8, "ph": "X", "cat": "fee", "dur": 7.299, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:154)"}, {"pid": 19656, "tid": 17528, "ts": 64678128464.3, "ph": "X", "cat": "fee", "dur": 13.3, "name": "add_call_item_to_queue (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:343)"}, {"pid": 19656, "tid": 17528, "ts": 64678128479.399, "ph": "X", "cat": "fee", "dur": 0.2, "name": "dict.values"}, {"pid": 19656, "tid": 17528, "ts": 64678128481.699, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64678128481.1, "ph": "X", "cat": "fee", "dur": 1.099, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64678128482.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64678128482.5, "ph": "X", "cat": "fee", "dur": 0.399, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64678128483.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64678128483.3, "ph": "X", "cat": "fee", "dur": 0.399, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64678128484.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64678128483.9, "ph": "X", "cat": "fee", "dur": 0.5, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64678128484.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64678128484.7, "ph": "X", "cat": "fee", "dur": 0.5, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64678128485.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64678128485.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64678128486.499, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64678128486.2, "ph": "X", "cat": "fee", "dur": 0.7, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64678128487.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64678128487.2, "ph": "X", "cat": "fee", "dur": 0.4, "name": "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)"}, {"pid": 19656, "tid": 17528, "ts": 64678128479.899, "ph": "X", "cat": "fee", "dur": 7.8, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:376)"}, {"pid": 19656, "tid": 17528, "ts": 64678128490.1, "ph": "X", "cat": "fee", "dur": 0.299, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64678128491.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64678128490.7, "ph": "X", "cat": "fee", "dur": 0.5, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64678128491.299, "ph": "X", "cat": "fee", "dur": 2.5, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64678128494.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64678128495.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64678128495.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64678128495.5, "ph": "X", "cat": "fee", "dur": 0.399, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64678128495.919, "ph": "X", "cat": "fee", "dur": 1.28, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64678128497.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64678128498.0, "ph": "X", "cat": "fee", "dur": 1.199, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64678128500.699, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64678128501.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64678128501.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64678128502.699, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64678128503.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64678128503.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64678128504.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64678128504.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "dict.keys"}, {"pid": 19656, "tid": 17528, "ts": 64678128505.9, "ph": "X", "cat": "fee", "dur": 854879.399, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64678983387.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64678983389.399, "ph": "X", "cat": "fee", "dur": 0.6, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64678983391.8, "ph": "X", "cat": "fee", "dur": 3.2, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64678128505.2, "ph": "X", "cat": "fee", "dur": 854890.3, "name": "_exhaustive_wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:810)"}, {"pid": 19656, "tid": 17528, "ts": 64678983397.8, "ph": "X", "cat": "fee", "dur": 2.899, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64678983400.9, "ph": "X", "cat": "fee", "dur": 2.899, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64678983404.4, "ph": "X", "cat": "fee", "dur": 1.699, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64678983408.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "set.add"}, {"pid": 19656, "tid": 17528, "ts": 64678983408.5, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64678983411.699, "ph": "X", "cat": "fee", "dur": 0.3, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64678983412.199, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64678983410.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "set.update"}, {"pid": 19656, "tid": 17528, "ts": 64678983413.699, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:908)"}, {"pid": 19656, "tid": 17528, "ts": 64678128489.1, "ph": "X", "cat": "fee", "dur": 854925.599, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:832)"}, {"pid": 19656, "tid": 17528, "ts": 64678983420.799, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64678983421.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64678983423.5, "ph": "X", "cat": "fee", "dur": 4.899, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64678983429.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64678983430.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 19656, "tid": 17528, "ts": 64678983432.3, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_io.BytesIO.write"}, {"pid": 19656, "tid": 17528, "ts": 64678983433.1, "ph": "X", "cat": "fee", "dur": 8.2, "name": "_winapi.PeekNamedPipe"}, {"pid": 19656, "tid": 17528, "ts": 64678983442.099, "ph": "X", "cat": "fee", "dur": 4624.4, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64678988067.3, "ph": "X", "cat": "fee", "dur": 0.799, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64678988068.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 19656, "tid": 17528, "ts": 64678988068.92, "ph": "X", "cat": "fee", "dur": 3437.079, "name": "_io.BytesIO.write"}, {"pid": 19656, "tid": 17528, "ts": 64678983430.199, "ph": "X", "cat": "fee", "dur": 8076.9, "name": "_get_more_data (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:337)"}, {"pid": 19656, "tid": 17528, "ts": 64678983422.8, "ph": "X", "cat": "fee", "dur": 8576.5, "name": "_recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:299)"}, {"pid": 19656, "tid": 17528, "ts": 64678992003.8, "ph": "X", "cat": "fee", "dur": 1.5, "name": "_io.BytesIO.getbuffer"}, {"pid": 19656, "tid": 17528, "ts": 64679084710.0, "ph": "X", "cat": "fee", "dur": 2.399, "name": "_abc._abc_instancecheck"}, {"pid": 19656, "tid": 17528, "ts": 64679084709.7, "ph": "X", "cat": "fee", "dur": 2.9, "name": "__instancecheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:117)"}, {"pid": 19656, "tid": 17528, "ts": 64679084708.3, "ph": "X", "cat": "fee", "dur": 4.7, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 17528, "ts": 64679084713.8, "ph": "X", "cat": "fee", "dur": 25713.5, "name": "Counter.update"}, {"pid": 19656, "tid": 17528, "ts": 64679084707.099, "ph": "X", "cat": "fee", "dur": 25722.5, "name": "update (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:649)"}, {"pid": 19656, "tid": 17528, "ts": 64679084700.4, "ph": "X", "cat": "fee", "dur": 25731.1, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:581)"}, {"pid": 19656, "tid": 17528, "ts": 64678992005.5, "ph": "X", "cat": "fee", "dur": 185377.499, "name": "_pickle.loads"}, {"pid": 19656, "tid": 17528, "ts": 64678983420.2, "ph": "X", "cat": "fee", "dur": 193965.0, "name": "recv (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:251)"}, {"pid": 19656, "tid": 17528, "ts": 64679177870.7, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64679177871.6, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 19656, "tid": 17528, "ts": 64679177874.099, "ph": "X", "cat": "fee", "dur": 11.6, "name": "_winapi.PeekNamedPipe"}, {"pid": 19656, "tid": 17528, "ts": 64679177892.8, "ph": "X", "cat": "fee", "dur": 0.6, "name": "builtins.getattr"}, {"pid": 19656, "tid": 17528, "ts": 64679177894.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 17528, "ts": 64679177893.9, "ph": "X", "cat": "fee", "dur": 0.599, "name": "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)"}, {"pid": 19656, "tid": 17528, "ts": 64679177894.6, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_winapi.ReadFile"}, {"pid": 19656, "tid": 17528, "ts": 64679177899.5, "ph": "X", "cat": "fee", "dur": 0.199, "name": "list.append"}, {"pid": 19656, "tid": 17528, "ts": 64679177901.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "dict.keys"}, {"pid": 19656, "tid": 17528, "ts": 64679177903.4, "ph": "X", "cat": "fee", "dur": 2.1, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 19656, "tid": 17528, "ts": 64679177901.999, "ph": "X", "cat": "fee", "dur": 3.8, "name": "_exhaustive_wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:810)"}, {"pid": 19656, "tid": 17528, "ts": 64679177907.0, "ph": "X", "cat": "fee", "dur": 4.099, "name": "_winapi.Overlapped.cancel"}, {"pid": 19656, "tid": 17528, "ts": 64679177911.599, "ph": "X", "cat": "fee", "dur": 1.4, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 17528, "ts": 64679177915.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)"}, {"pid": 19656, "tid": 17528, "ts": 64679177915.0, "ph": "X", "cat": "fee", "dur": 1.3, "name": "set.update"}, {"pid": 19656, "tid": 17528, "ts": 64679177916.9, "ph": "X", "cat": "fee", "dur": 0.5, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:908)"}, {"pid": 19656, "tid": 17528, "ts": 64679177887.799, "ph": "X", "cat": "fee", "dur": 29.7, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:832)"}, {"pid": 19656, "tid": 17528, "ts": 64679177872.5, "ph": "X", "cat": "fee", "dur": 47.7, "name": "_poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:331)"}, {"pid": 19656, "tid": 17528, "ts": 64679177870.0, "ph": "X", "cat": "fee", "dur": 50.4, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:258)"}, {"pid": 19656, "tid": 17528, "ts": 64679177868.3, "ph": "X", "cat": "fee", "dur": 52.299, "name": "clear (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:81)"}, {"pid": 19656, "tid": 17528, "ts": 64679177920.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64678128478.0, "ph": "X", "cat": "fee", "dur": 1049443.4, "name": "wait_result_broken_or_wakeup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:366)"}, {"pid": 19656, "tid": 17528, "ts": 64679177923.9, "ph": "X", "cat": "fee", "dur": 0.6, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 17528, "ts": 64679177925.1, "ph": "X", "cat": "fee", "dur": 0.5, "name": "dict.pop"}, {"pid": 19656, "tid": 17528, "ts": 64679177929.3, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_thread.RLock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64679177928.7, "ph": "X", "cat": "fee", "dur": 1.1, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64679177932.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.len"}, {"pid": 19656, "tid": 17528, "ts": 64679177933.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.RLock._is_owned"}, {"pid": 19656, "tid": 17528, "ts": 64679177933.1, "ph": "X", "cat": "fee", "dur": 2.8, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64679177932.1, "ph": "X", "cat": "fee", "dur": 4.099, "name": "notify_all (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:374)"}, {"pid": 19656, "tid": 17528, "ts": 64679177937.0, "ph": "X", "cat": "fee", "dur": 0.599, "name": "_thread.RLock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64679177936.6, "ph": "X", "cat": "fee", "dur": 1.099, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64679177938.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_invoke_callbacks (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:326)"}, {"pid": 19656, "tid": 17528, "ts": 64679177927.2, "ph": "X", "cat": "fee", "dur": 11.5, "name": "set_result (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:526)"}, {"pid": 19656, "tid": 17528, "ts": 64679177923.6, "ph": "X", "cat": "fee", "dur": 15.3, "name": "process_result_item (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:397)"}, {"pid": 19656, "tid": 17528, "ts": 64679177942.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64679177941.9, "ph": "X", "cat": "fee", "dur": 0.6, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64679177945.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64679177945.0, "ph": "X", "cat": "fee", "dur": 1.099, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 17528, "ts": 64679177944.7, "ph": "X", "cat": "fee", "dur": 1.899, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64679177947.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64679177947.099, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64679177941.499, "ph": "X", "cat": "fee", "dur": 6.2, "name": "release (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:451)"}, {"pid": 19656, "tid": 17528, "ts": 64679177948.099, "ph": "X", "cat": "fee", "dur": 0.4, "name": "is_shutting_down (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:420)"}, {"pid": 19656, "tid": 17528, "ts": 64679177949.0, "ph": "X", "cat": "fee", "dur": 0.399, "name": "flag_executor_shutting_down (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:468)"}, {"pid": 19656, "tid": 17528, "ts": 64679177953.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "dict.values"}, {"pid": 19656, "tid": 17528, "ts": 64679177958.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64679177960.299, "ph": "X", "cat": "fee", "dur": 1.2, "name": "nt.getpid"}, {"pid": 19656, "tid": 17528, "ts": 64679177964.7, "ph": "X", "cat": "fee", "dur": 0.899, "name": "builtins.max"}, {"pid": 19656, "tid": 17528, "ts": 64679177966.0, "ph": "X", "cat": "fee", "dur": 1.099, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 17528, "ts": 64679177963.6, "ph": "X", "cat": "fee", "dur": 3.999, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 17528, "ts": 64679177962.799, "ph": "X", "cat": "fee", "dur": 5.0, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 17528, "ts": 64679177957.499, "ph": "X", "cat": "fee", "dur": 10.5, "name": "is_alive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:153)"}, {"pid": 19656, "tid": 17528, "ts": 64679177955.1, "ph": "X", "cat": "fee", "dur": 13.0, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:522)"}, {"pid": 19656, "tid": 17528, "ts": 64679177969.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64679177969.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 19656, "tid": 17528, "ts": 64679177970.399, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.max"}, {"pid": 19656, "tid": 17528, "ts": 64679177970.8, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 17528, "ts": 64679177970.1, "ph": "X", "cat": "fee", "dur": 1.3, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 17528, "ts": 64679177969.8, "ph": "X", "cat": "fee", "dur": 1.7, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 17528, "ts": 64679177968.899, "ph": "X", "cat": "fee", "dur": 2.9, "name": "is_alive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:153)"}, {"pid": 19656, "tid": 17528, "ts": 64679177968.399, "ph": "X", "cat": "fee", "dur": 3.5, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:522)"}, {"pid": 19656, "tid": 17528, "ts": 64679177972.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64679177972.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 19656, "tid": 17528, "ts": 64679177973.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.max"}, {"pid": 19656, "tid": 17528, "ts": 64679177974.0, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 17528, "ts": 64679177973.5, "ph": "X", "cat": "fee", "dur": 1.099, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 17528, "ts": 64679177973.3, "ph": "X", "cat": "fee", "dur": 1.399, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 17528, "ts": 64679177972.4, "ph": "X", "cat": "fee", "dur": 2.4, "name": "is_alive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:153)"}, {"pid": 19656, "tid": 17528, "ts": 64679177972.1, "ph": "X", "cat": "fee", "dur": 2.8, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:522)"}, {"pid": 19656, "tid": 17528, "ts": 64679177975.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64679177975.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "nt.getpid"}, {"pid": 19656, "tid": 17528, "ts": 64679177976.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.max"}, {"pid": 19656, "tid": 17528, "ts": 64679177976.999, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 17528, "ts": 64679177976.499, "ph": "X", "cat": "fee", "dur": 1.0, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 17528, "ts": 64679177976.3, "ph": "X", "cat": "fee", "dur": 1.299, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 17528, "ts": 64679177975.499, "ph": "X", "cat": "fee", "dur": 2.2, "name": "is_alive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:153)"}, {"pid": 19656, "tid": 17528, "ts": 64679177975.1, "ph": "X", "cat": "fee", "dur": 2.7, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:522)"}, {"pid": 19656, "tid": 17528, "ts": 64679177978.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64679177978.799, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 19656, "tid": 17528, "ts": 64679177979.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.max"}, {"pid": 19656, "tid": 17528, "ts": 64679177979.9, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 17528, "ts": 64679177979.4, "ph": "X", "cat": "fee", "dur": 1.0, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 17528, "ts": 64679177979.2, "ph": "X", "cat": "fee", "dur": 1.3, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 17528, "ts": 64679177978.4, "ph": "X", "cat": "fee", "dur": 2.3, "name": "is_alive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:153)"}, {"pid": 19656, "tid": 17528, "ts": 64679177977.999, "ph": "X", "cat": "fee", "dur": 2.8, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:522)"}, {"pid": 19656, "tid": 17528, "ts": 64679177981.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64679177981.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "nt.getpid"}, {"pid": 19656, "tid": 17528, "ts": 64679177982.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.max"}, {"pid": 19656, "tid": 17528, "ts": 64679177982.7, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 17528, "ts": 64679177982.3, "ph": "X", "cat": "fee", "dur": 0.9, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 17528, "ts": 64679177982.0, "ph": "X", "cat": "fee", "dur": 1.3, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 17528, "ts": 64679177981.299, "ph": "X", "cat": "fee", "dur": 2.1, "name": "is_alive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:153)"}, {"pid": 19656, "tid": 17528, "ts": 64679177981.0, "ph": "X", "cat": "fee", "dur": 2.5, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:522)"}, {"pid": 19656, "tid": 17528, "ts": 64679177984.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64679177984.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 19656, "tid": 17528, "ts": 64679177985.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.max"}, {"pid": 19656, "tid": 17528, "ts": 64679177985.899, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 17528, "ts": 64679177985.4, "ph": "X", "cat": "fee", "dur": 0.999, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 17528, "ts": 64679177985.2, "ph": "X", "cat": "fee", "dur": 1.3, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 17528, "ts": 64679177984.4, "ph": "X", "cat": "fee", "dur": 2.3, "name": "is_alive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:153)"}, {"pid": 19656, "tid": 17528, "ts": 64679177983.7, "ph": "X", "cat": "fee", "dur": 3.1, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:522)"}, {"pid": 19656, "tid": 17528, "ts": 64679177987.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64679177987.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "nt.getpid"}, {"pid": 19656, "tid": 17528, "ts": 64679177988.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.max"}, {"pid": 19656, "tid": 17528, "ts": 64679177988.899, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 17528, "ts": 64679177988.399, "ph": "X", "cat": "fee", "dur": 1.2, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 17528, "ts": 64679177988.2, "ph": "X", "cat": "fee", "dur": 1.499, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 17528, "ts": 64679177987.3, "ph": "X", "cat": "fee", "dur": 2.5, "name": "is_alive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:153)"}, {"pid": 19656, "tid": 17528, "ts": 64679177986.899, "ph": "X", "cat": "fee", "dur": 3.1, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:522)"}, {"pid": 19656, "tid": 17528, "ts": 64679177990.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:522)"}, {"pid": 19656, "tid": 17528, "ts": 64679177954.5, "ph": "X", "cat": "fee", "dur": 36.0, "name": "builtins.sum"}, {"pid": 19656, "tid": 17528, "ts": 64679177952.7, "ph": "X", "cat": "fee", "dur": 37.899, "name": "get_n_children_alive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:520)"}, {"pid": 19656, "tid": 17528, "ts": 64679177991.199, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.values"}, {"pid": 19656, "tid": 17528, "ts": 64679177992.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64679177992.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 19656, "tid": 17528, "ts": 64679177993.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.max"}, {"pid": 19656, "tid": 17528, "ts": 64679177993.499, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 17528, "ts": 64679177993.0, "ph": "X", "cat": "fee", "dur": 0.999, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 17528, "ts": 64679177992.8, "ph": "X", "cat": "fee", "dur": 1.3, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 17528, "ts": 64679177992.0, "ph": "X", "cat": "fee", "dur": 2.199, "name": "is_alive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:153)"}, {"pid": 19656, "tid": 17528, "ts": 64679177991.699, "ph": "X", "cat": "fee", "dur": 2.6, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:522)"}, {"pid": 19656, "tid": 17528, "ts": 64679177994.999, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64679177995.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 19656, "tid": 17528, "ts": 64679177995.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.max"}, {"pid": 19656, "tid": 17528, "ts": 64679177996.3, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 17528, "ts": 64679177995.7, "ph": "X", "cat": "fee", "dur": 1.0, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 17528, "ts": 64679177995.499, "ph": "X", "cat": "fee", "dur": 1.3, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 17528, "ts": 64679177994.8, "ph": "X", "cat": "fee", "dur": 2.199, "name": "is_alive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:153)"}, {"pid": 19656, "tid": 17528, "ts": 64679177994.499, "ph": "X", "cat": "fee", "dur": 2.6, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:522)"}, {"pid": 19656, "tid": 17528, "ts": 64679177997.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64679177997.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 19656, "tid": 17528, "ts": 64679177998.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.max"}, {"pid": 19656, "tid": 17528, "ts": 64679177998.9, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 17528, "ts": 64679177998.5, "ph": "X", "cat": "fee", "dur": 0.9, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 17528, "ts": 64679177998.2, "ph": "X", "cat": "fee", "dur": 1.3, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 17528, "ts": 64679177997.5, "ph": "X", "cat": "fee", "dur": 2.1, "name": "is_alive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:153)"}, {"pid": 19656, "tid": 17528, "ts": 64679177997.299, "ph": "X", "cat": "fee", "dur": 2.4, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:522)"}, {"pid": 19656, "tid": 17528, "ts": 64679178000.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64679178000.599, "ph": "X", "cat": "fee", "dur": 0.02, "name": "nt.getpid"}, {"pid": 19656, "tid": 17528, "ts": 64679178001.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.max"}, {"pid": 19656, "tid": 17528, "ts": 64679178001.599, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 17528, "ts": 64679178001.099, "ph": "X", "cat": "fee", "dur": 0.9, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 17528, "ts": 64679178000.9, "ph": "X", "cat": "fee", "dur": 1.299, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 17528, "ts": 64679178000.1, "ph": "X", "cat": "fee", "dur": 2.199, "name": "is_alive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:153)"}, {"pid": 19656, "tid": 17528, "ts": 64679177999.9, "ph": "X", "cat": "fee", "dur": 2.5, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:522)"}, {"pid": 19656, "tid": 17528, "ts": 64679178002.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64679178003.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "nt.getpid"}, {"pid": 19656, "tid": 17528, "ts": 64679178003.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.max"}, {"pid": 19656, "tid": 17528, "ts": 64679178004.2, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 17528, "ts": 64679178003.7, "ph": "X", "cat": "fee", "dur": 0.9, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 17528, "ts": 64679178003.5, "ph": "X", "cat": "fee", "dur": 1.2, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 17528, "ts": 64679178002.8, "ph": "X", "cat": "fee", "dur": 2.0, "name": "is_alive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:153)"}, {"pid": 19656, "tid": 17528, "ts": 64679178002.599, "ph": "X", "cat": "fee", "dur": 2.5, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:522)"}, {"pid": 19656, "tid": 17528, "ts": 64679178005.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64679178005.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 19656, "tid": 17528, "ts": 64679178006.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.max"}, {"pid": 19656, "tid": 17528, "ts": 64679178007.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 17528, "ts": 64679178006.5, "ph": "X", "cat": "fee", "dur": 0.899, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 17528, "ts": 64679178006.3, "ph": "X", "cat": "fee", "dur": 1.2, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 17528, "ts": 64679178005.5, "ph": "X", "cat": "fee", "dur": 2.1, "name": "is_alive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:153)"}, {"pid": 19656, "tid": 17528, "ts": 64679178005.3, "ph": "X", "cat": "fee", "dur": 2.4, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:522)"}, {"pid": 19656, "tid": 17528, "ts": 64679178008.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64679178008.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "nt.getpid"}, {"pid": 19656, "tid": 17528, "ts": 64679178009.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.max"}, {"pid": 19656, "tid": 17528, "ts": 64679178009.6, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 17528, "ts": 64679178009.1, "ph": "X", "cat": "fee", "dur": 1.0, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 17528, "ts": 64679178008.9, "ph": "X", "cat": "fee", "dur": 1.299, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 17528, "ts": 64679178008.1, "ph": "X", "cat": "fee", "dur": 2.2, "name": "is_alive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:153)"}, {"pid": 19656, "tid": 17528, "ts": 64679178007.9, "ph": "X", "cat": "fee", "dur": 2.5, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:522)"}, {"pid": 19656, "tid": 17528, "ts": 64679178011.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64679178011.199, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 19656, "tid": 17528, "ts": 64679178012.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.max"}, {"pid": 19656, "tid": 17528, "ts": 64679178012.3, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 17528, "ts": 64679178011.8, "ph": "X", "cat": "fee", "dur": 1.0, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 17528, "ts": 64679178011.6, "ph": "X", "cat": "fee", "dur": 1.3, "name": "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)"}, {"pid": 19656, "tid": 17528, "ts": 64679178010.8, "ph": "X", "cat": "fee", "dur": 2.199, "name": "is_alive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:153)"}, {"pid": 19656, "tid": 17528, "ts": 64679178010.6, "ph": "X", "cat": "fee", "dur": 2.5, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:522)"}, {"pid": 19656, "tid": 17528, "ts": 64679178013.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:522)"}, {"pid": 19656, "tid": 17528, "ts": 64679177991.5, "ph": "X", "cat": "fee", "dur": 21.999, "name": "builtins.sum"}, {"pid": 19656, "tid": 17528, "ts": 64679177991.0, "ph": "X", "cat": "fee", "dur": 22.599, "name": "get_n_children_alive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:520)"}, {"pid": 19656, "tid": 17528, "ts": 64679178017.5, "ph": "X", "cat": "fee", "dur": 1.2, "name": "_multiprocessing.SemLock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64679178019.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64679178019.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64679178020.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "collections.deque.append"}, {"pid": 19656, "tid": 17528, "ts": 64679178021.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64679178021.2, "ph": "X", "cat": "fee", "dur": 0.32, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 17528, "ts": 64679178022.4, "ph": "X", "cat": "fee", "dur": 1.499, "name": "_thread.lock.release"}, {"pid": 19656, "tid": 17528, "ts": 64679178024.2, "ph": "X", "cat": "fee", "dur": 0.199, "name": "collections.deque.remove"}, {"pid": 19656, "tid": 17528, "ts": 64679178021.0, "ph": "X", "cat": "fee", "dur": 3.6, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64679178025.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64679178025.1, "ph": "X", "cat": "fee", "dur": 0.299, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64679178016.7, "ph": "X", "cat": "fee", "dur": 8.8, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:86)"}, {"pid": 19656, "tid": 17528, "ts": 64679178015.799, "ph": "X", "cat": "fee", "dur": 9.9, "name": "put_nowait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:137)"}, {"pid": 19656, "tid": 17528, "ts": 64679178026.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_multiprocessing.SemLock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64679178027.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64679178027.199, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64679178027.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "collections.deque.append"}, {"pid": 19656, "tid": 17528, "ts": 64679178028.199, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64679178028.1, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 17528, "ts": 64679178027.9, "ph": "X", "cat": "fee", "dur": 1.1, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64679178029.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64679178029.3, "ph": "X", "cat": "fee", "dur": 0.22, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64679178026.5, "ph": "X", "cat": "fee", "dur": 3.099, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:86)"}, {"pid": 19656, "tid": 17528, "ts": 64679178026.199, "ph": "X", "cat": "fee", "dur": 3.5, "name": "put_nowait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:137)"}, {"pid": 19656, "tid": 17528, "ts": 64679178030.499, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_multiprocessing.SemLock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64679178031.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64679178030.999, "ph": "X", "cat": "fee", "dur": 0.22, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64679178031.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "collections.deque.append"}, {"pid": 19656, "tid": 17528, "ts": 64679178031.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64679178031.9, "ph": "X", "cat": "fee", "dur": 0.22, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 17528, "ts": 64679178031.7, "ph": "X", "cat": "fee", "dur": 0.799, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64679178032.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64679178032.8, "ph": "X", "cat": "fee", "dur": 0.199, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64679178030.4, "ph": "X", "cat": "fee", "dur": 2.7, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:86)"}, {"pid": 19656, "tid": 17528, "ts": 64679178030.1, "ph": "X", "cat": "fee", "dur": 3.1, "name": "put_nowait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:137)"}, {"pid": 19656, "tid": 17528, "ts": 64679178033.799, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_multiprocessing.SemLock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64679178034.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64679178034.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64679178034.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "collections.deque.append"}, {"pid": 19656, "tid": 17528, "ts": 64679178035.299, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64679178035.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 17528, "ts": 64679178035.0, "ph": "X", "cat": "fee", "dur": 0.799, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64679178036.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64679178036.0, "ph": "X", "cat": "fee", "dur": 0.22, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64679178033.7, "ph": "X", "cat": "fee", "dur": 2.7, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:86)"}, {"pid": 19656, "tid": 17528, "ts": 64679178033.5, "ph": "X", "cat": "fee", "dur": 3.0, "name": "put_nowait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:137)"}, {"pid": 19656, "tid": 17528, "ts": 64679178037.099, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_multiprocessing.SemLock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64679178037.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64679178037.599, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64679178037.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "collections.deque.append"}, {"pid": 19656, "tid": 17528, "ts": 64679178038.42, "ph": "X", "cat": "fee", "dur": 0.179, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64679178038.4, "ph": "X", "cat": "fee", "dur": 0.219, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 17528, "ts": 64679178038.2, "ph": "X", "cat": "fee", "dur": 0.7, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64679178039.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64679178039.2, "ph": "X", "cat": "fee", "dur": 0.22, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64679178037.0, "ph": "X", "cat": "fee", "dur": 2.5, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:86)"}, {"pid": 19656, "tid": 17528, "ts": 64679178036.799, "ph": "X", "cat": "fee", "dur": 2.8, "name": "put_nowait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:137)"}, {"pid": 19656, "tid": 17528, "ts": 64679178040.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_multiprocessing.SemLock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64679178040.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64679178040.7, "ph": "X", "cat": "fee", "dur": 0.199, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64679178041.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "collections.deque.append"}, {"pid": 19656, "tid": 17528, "ts": 64679178041.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64679178041.399, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 17528, "ts": 64679178041.3, "ph": "X", "cat": "fee", "dur": 0.599, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64679178042.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64679178042.2, "ph": "X", "cat": "fee", "dur": 0.299, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64679178040.099, "ph": "X", "cat": "fee", "dur": 2.5, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:86)"}, {"pid": 19656, "tid": 17528, "ts": 64679178039.9, "ph": "X", "cat": "fee", "dur": 2.8, "name": "put_nowait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:137)"}, {"pid": 19656, "tid": 17528, "ts": 64679178043.399, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_multiprocessing.SemLock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64679178044.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64679178043.899, "ph": "X", "cat": "fee", "dur": 0.22, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64679178044.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "collections.deque.append"}, {"pid": 19656, "tid": 17528, "ts": 64679178044.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64679178044.699, "ph": "X", "cat": "fee", "dur": 0.22, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 17528, "ts": 64679178044.5, "ph": "X", "cat": "fee", "dur": 0.799, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64679178045.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64679178045.5, "ph": "X", "cat": "fee", "dur": 0.199, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64679178043.2, "ph": "X", "cat": "fee", "dur": 2.599, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:86)"}, {"pid": 19656, "tid": 17528, "ts": 64679178043.0, "ph": "X", "cat": "fee", "dur": 2.9, "name": "put_nowait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:137)"}, {"pid": 19656, "tid": 17528, "ts": 64679178046.5, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_multiprocessing.SemLock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64679178047.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64679178047.0, "ph": "X", "cat": "fee", "dur": 0.219, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64679178047.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "collections.deque.append"}, {"pid": 19656, "tid": 17528, "ts": 64679178047.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64679178047.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 17528, "ts": 64679178047.699, "ph": "X", "cat": "fee", "dur": 0.6, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64679178048.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64679178048.6, "ph": "X", "cat": "fee", "dur": 0.22, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64679178046.4, "ph": "X", "cat": "fee", "dur": 2.5, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:86)"}, {"pid": 19656, "tid": 17528, "ts": 64679178046.199, "ph": "X", "cat": "fee", "dur": 2.8, "name": "put_nowait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:137)"}, {"pid": 19656, "tid": 17528, "ts": 64679177951.7, "ph": "X", "cat": "fee", "dur": 97.6, "name": "shutdown_workers (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:494)"}, {"pid": 19656, "tid": 17528, "ts": 64679178052.1, "ph": "X", "cat": "fee", "dur": 2.299, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 17528, "ts": 64679178051.9, "ph": "X", "cat": "fee", "dur": 2.6, "name": "_close (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:281)"}, {"pid": 19656, "tid": 17528, "ts": 64679178050.8, "ph": "X", "cat": "fee", "dur": 4.099, "name": "close (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:178)"}, {"pid": 19656, "tid": 17528, "ts": 64679178060.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 19656, "tid": 17528, "ts": 64679178062.0, "ph": "X", "cat": "fee", "dur": 0.399, "name": "sub_debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:44)"}, {"pid": 19656, "tid": 17528, "ts": 64679178063.8, "ph": "X", "cat": "fee", "dur": 0.5, "name": "debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:48)"}, {"pid": 19656, "tid": 17528, "ts": 64679178064.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_thread.lock.__enter__"}, {"pid": 19656, "tid": 17528, "ts": 64679178064.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 17528, "ts": 64679178065.199, "ph": "X", "cat": "fee", "dur": 0.1, "name": "collections.deque.append"}, {"pid": 19656, "tid": 17528, "ts": 64679178065.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64679178065.699, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)"}, {"pid": 19656, "tid": 17528, "ts": 64679178065.5, "ph": "X", "cat": "fee", "dur": 0.8, "name": "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)"}, {"pid": 19656, "tid": 17528, "ts": 64679178066.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64679178066.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 17528, "ts": 64679178063.199, "ph": "X", "cat": "fee", "dur": 3.8, "name": "_finalize_close (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:206)"}, {"pid": 19656, "tid": 17528, "ts": 64679178058.7, "ph": "X", "cat": "fee", "dur": 9.4, "name": "__call__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:205)"}, {"pid": 19656, "tid": 17528, "ts": 64679178050.1, "ph": "X", "cat": "fee", "dur": 18.2, "name": "close (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:140)"}, {"pid": 19656, "tid": 17528, "ts": 64679178069.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:48)"}, {"pid": 19656, "tid": 17528, "ts": 64679178070.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "nt.getpid"}, {"pid": 19656, "tid": 17528, "ts": 64679178070.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "sub_debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:44)"}, {"pid": 19656, "tid": 17528, "ts": 64679178071.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:48)"}, {"pid": 19656, "tid": 17528, "ts": 64679178074.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "is_set (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:529)"}, {"pid": 19656, "tid": 17528, "ts": 64679178076.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.get_ident"}, {"pid": 19656, "tid": 17528, "ts": 64679178075.599, "ph": "X", "cat": "fee", "dur": 1.1, "name": "current_thread (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:1338)"}, {"pid": 19656, "tid": 5356, "ts": 64655805740.5, "ph": "X", "cat": "fee", "dur": 23372341.5, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 5356, "ts": 64679178084.999, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 5356, "ts": 64679178084.5, "ph": "X", "cat": "fee", "dur": 1.199, "name": "_acquire_restore (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:268)"}, {"pid": 19656, "tid": 5356, "ts": 64655805735.7, "ph": "X", "cat": "fee", "dur": 23372350.199, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:280)"}, {"pid": 19656, "tid": 5356, "ts": 64679178088.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.release"}, {"pid": 19656, "tid": 5356, "ts": 64679178088.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "collections.deque.popleft"}, {"pid": 19656, "tid": 5356, "ts": 64679178100.6, "ph": "X", "cat": "fee", "dur": 1.599, "name": "dict.copy"}, {"pid": 19656, "tid": 5356, "ts": 64679178102.999, "ph": "X", "cat": "fee", "dur": 1.0, "name": "dict.update"}, {"pid": 19656, "tid": 5356, "ts": 64679178094.3, "ph": "X", "cat": "fee", "dur": 9.8, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 19656, "tid": 5356, "ts": 64679178104.8, "ph": "X", "cat": "fee", "dur": 3.999, "name": "ForkingPickler.dump"}, {"pid": 19656, "tid": 5356, "ts": 64679178109.7, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_io.BytesIO.getbuffer"}, {"pid": 19656, "tid": 5356, "ts": 64679178092.0, "ph": "X", "cat": "fee", "dur": 18.5, "name": "dumps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:48)"}, {"pid": 19656, "tid": 5356, "ts": 64679178112.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 5356, "ts": 64679178112.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 19656, "tid": 5356, "ts": 64679178113.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 5356, "ts": 64679178116.5, "ph": "X", "cat": "fee", "dur": 7.8, "name": "_winapi.WriteFile"}, {"pid": 19656, "tid": 5356, "ts": 64679178124.9, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 5356, "ts": 64679178125.799, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 5356, "ts": 64679178115.8, "ph": "X", "cat": "fee", "dur": 10.12, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 19656, "tid": 5356, "ts": 64679178111.4, "ph": "X", "cat": "fee", "dur": 15.799, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 19656, "tid": 5356, "ts": 64679178127.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "collections.deque.popleft"}, {"pid": 19656, "tid": 5356, "ts": 64679178130.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "dict.copy"}, {"pid": 19656, "tid": 5356, "ts": 64679178130.8, "ph": "X", "cat": "fee", "dur": 0.4, "name": "dict.update"}, {"pid": 19656, "tid": 5356, "ts": 64679178128.9, "ph": "X", "cat": "fee", "dur": 2.319, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 19656, "tid": 5356, "ts": 64679178131.5, "ph": "X", "cat": "fee", "dur": 1.2, "name": "ForkingPickler.dump"}, {"pid": 19656, "tid": 5356, "ts": 64679178132.899, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_io.BytesIO.getbuffer"}, {"pid": 19656, "tid": 5356, "ts": 64679178128.2, "ph": "X", "cat": "fee", "dur": 5.0, "name": "dumps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:48)"}, {"pid": 19656, "tid": 5356, "ts": 64679178133.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 5356, "ts": 64679178134.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 19656, "tid": 5356, "ts": 64679178134.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 5356, "ts": 64679178135.8, "ph": "X", "cat": "fee", "dur": 2.6, "name": "_winapi.WriteFile"}, {"pid": 19656, "tid": 5356, "ts": 64679178138.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 5356, "ts": 64679178139.199, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 5356, "ts": 64679178135.5, "ph": "X", "cat": "fee", "dur": 3.82, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 19656, "tid": 5356, "ts": 64679178133.6, "ph": "X", "cat": "fee", "dur": 6.3, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 19656, "tid": 5356, "ts": 64679178140.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "collections.deque.popleft"}, {"pid": 19656, "tid": 5356, "ts": 64679178142.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.copy"}, {"pid": 19656, "tid": 5356, "ts": 64679178142.499, "ph": "X", "cat": "fee", "dur": 0.3, "name": "dict.update"}, {"pid": 19656, "tid": 5356, "ts": 64679178141.1, "ph": "X", "cat": "fee", "dur": 1.72, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 19656, "tid": 5356, "ts": 64679178143.1, "ph": "X", "cat": "fee", "dur": 0.799, "name": "ForkingPickler.dump"}, {"pid": 19656, "tid": 5356, "ts": 64679178144.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_io.BytesIO.getbuffer"}, {"pid": 19656, "tid": 5356, "ts": 64679178140.6, "ph": "X", "cat": "fee", "dur": 3.719, "name": "dumps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:48)"}, {"pid": 19656, "tid": 5356, "ts": 64679178145.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 5356, "ts": 64679178145.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 19656, "tid": 5356, "ts": 64679178145.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 5356, "ts": 64679178146.7, "ph": "X", "cat": "fee", "dur": 2.0, "name": "_winapi.WriteFile"}, {"pid": 19656, "tid": 5356, "ts": 64679178149.099, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 5356, "ts": 64679178149.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 5356, "ts": 64679178146.5, "ph": "X", "cat": "fee", "dur": 3.099, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 19656, "tid": 5356, "ts": 64679178144.799, "ph": "X", "cat": "fee", "dur": 5.3, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 19656, "tid": 5356, "ts": 64679178150.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "collections.deque.popleft"}, {"pid": 19656, "tid": 5356, "ts": 64679178152.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.copy"}, {"pid": 19656, "tid": 5356, "ts": 64679178152.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "dict.update"}, {"pid": 19656, "tid": 5356, "ts": 64679178151.2, "ph": "X", "cat": "fee", "dur": 1.419, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 19656, "tid": 5356, "ts": 64679178152.8, "ph": "X", "cat": "fee", "dur": 0.8, "name": "ForkingPickler.dump"}, {"pid": 19656, "tid": 5356, "ts": 64679178153.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_io.BytesIO.getbuffer"}, {"pid": 19656, "tid": 5356, "ts": 64679178150.7, "ph": "X", "cat": "fee", "dur": 3.219, "name": "dumps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:48)"}, {"pid": 19656, "tid": 5356, "ts": 64679178154.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 5356, "ts": 64679178155.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 19656, "tid": 5356, "ts": 64679178155.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 5356, "ts": 64679178156.199, "ph": "X", "cat": "fee", "dur": 1.8, "name": "_winapi.WriteFile"}, {"pid": 19656, "tid": 5356, "ts": 64679178158.3, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 5356, "ts": 64679178158.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 5356, "ts": 64679178156.0, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 19656, "tid": 5356, "ts": 64679178154.5, "ph": "X", "cat": "fee", "dur": 4.8, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 19656, "tid": 5356, "ts": 64679178159.499, "ph": "X", "cat": "fee", "dur": 0.02, "name": "collections.deque.popleft"}, {"pid": 19656, "tid": 5356, "ts": 64679178160.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.copy"}, {"pid": 19656, "tid": 5356, "ts": 64679178161.3, "ph": "X", "cat": "fee", "dur": 0.199, "name": "dict.update"}, {"pid": 19656, "tid": 5356, "ts": 64679178160.3, "ph": "X", "cat": "fee", "dur": 1.3, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 19656, "tid": 5356, "ts": 64679178162.0, "ph": "X", "cat": "fee", "dur": 0.799, "name": "ForkingPickler.dump"}, {"pid": 19656, "tid": 5356, "ts": 64679178163.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_io.BytesIO.getbuffer"}, {"pid": 19656, "tid": 5356, "ts": 64679178159.9, "ph": "X", "cat": "fee", "dur": 3.3, "name": "dumps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:48)"}, {"pid": 19656, "tid": 5356, "ts": 64679178163.799, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 5356, "ts": 64679178164.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 19656, "tid": 5356, "ts": 64679178164.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 5356, "ts": 64679178165.2, "ph": "X", "cat": "fee", "dur": 1.7, "name": "_winapi.WriteFile"}, {"pid": 19656, "tid": 5356, "ts": 64679178167.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 5356, "ts": 64679178167.599, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 5356, "ts": 64679178165.099, "ph": "X", "cat": "fee", "dur": 2.6, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 19656, "tid": 5356, "ts": 64679178163.6, "ph": "X", "cat": "fee", "dur": 4.599, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 19656, "tid": 5356, "ts": 64679178168.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "collections.deque.popleft"}, {"pid": 19656, "tid": 5356, "ts": 64679178170.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.copy"}, {"pid": 19656, "tid": 5356, "ts": 64679178170.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "dict.update"}, {"pid": 19656, "tid": 5356, "ts": 64679178169.2, "ph": "X", "cat": "fee", "dur": 1.399, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 19656, "tid": 5356, "ts": 64679178170.8, "ph": "X", "cat": "fee", "dur": 0.7, "name": "ForkingPickler.dump"}, {"pid": 19656, "tid": 5356, "ts": 64679178171.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_io.BytesIO.getbuffer"}, {"pid": 19656, "tid": 5356, "ts": 64679178168.8, "ph": "X", "cat": "fee", "dur": 3.02, "name": "dumps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:48)"}, {"pid": 19656, "tid": 5356, "ts": 64679178172.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 5356, "ts": 64679178172.699, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 19656, "tid": 5356, "ts": 64679178173.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 5356, "ts": 64679178173.9, "ph": "X", "cat": "fee", "dur": 1.9, "name": "_winapi.WriteFile"}, {"pid": 19656, "tid": 5356, "ts": 64679178176.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 5356, "ts": 64679178176.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 5356, "ts": 64679178173.8, "ph": "X", "cat": "fee", "dur": 2.719, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 19656, "tid": 5356, "ts": 64679178172.2, "ph": "X", "cat": "fee", "dur": 4.799, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 19656, "tid": 5356, "ts": 64679178177.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "collections.deque.popleft"}, {"pid": 19656, "tid": 5356, "ts": 64679178178.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.copy"}, {"pid": 19656, "tid": 5356, "ts": 64679178178.999, "ph": "X", "cat": "fee", "dur": 0.3, "name": "dict.update"}, {"pid": 19656, "tid": 5356, "ts": 64679178177.999, "ph": "X", "cat": "fee", "dur": 1.32, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 19656, "tid": 5356, "ts": 64679178179.499, "ph": "X", "cat": "fee", "dur": 0.7, "name": "ForkingPickler.dump"}, {"pid": 19656, "tid": 5356, "ts": 64679178180.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_io.BytesIO.getbuffer"}, {"pid": 19656, "tid": 5356, "ts": 64679178177.6, "ph": "X", "cat": "fee", "dur": 3.0, "name": "dumps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:48)"}, {"pid": 19656, "tid": 5356, "ts": 64679178181.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 5356, "ts": 64679178181.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 19656, "tid": 5356, "ts": 64679178181.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 5356, "ts": 64679178182.6, "ph": "X", "cat": "fee", "dur": 1.699, "name": "_winapi.WriteFile"}, {"pid": 19656, "tid": 5356, "ts": 64679178184.599, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 5356, "ts": 64679178185.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 5356, "ts": 64679178182.4, "ph": "X", "cat": "fee", "dur": 2.699, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 19656, "tid": 5356, "ts": 64679178180.9, "ph": "X", "cat": "fee", "dur": 4.6, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 19656, "tid": 5356, "ts": 64679178185.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "collections.deque.popleft"}, {"pid": 19656, "tid": 5356, "ts": 64679178187.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.copy"}, {"pid": 19656, "tid": 5356, "ts": 64679178187.6, "ph": "X", "cat": "fee", "dur": 0.299, "name": "dict.update"}, {"pid": 19656, "tid": 5356, "ts": 64679178186.599, "ph": "X", "cat": "fee", "dur": 1.4, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 19656, "tid": 5356, "ts": 64679178188.2, "ph": "X", "cat": "fee", "dur": 0.699, "name": "ForkingPickler.dump"}, {"pid": 19656, "tid": 5356, "ts": 64679178189.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_io.BytesIO.getbuffer"}, {"pid": 19656, "tid": 5356, "ts": 64679178186.2, "ph": "X", "cat": "fee", "dur": 3.1, "name": "dumps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:48)"}, {"pid": 19656, "tid": 5356, "ts": 64679178189.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 19656, "tid": 5356, "ts": 64679178190.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 19656, "tid": 5356, "ts": 64679178190.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 5356, "ts": 64679178191.3, "ph": "X", "cat": "fee", "dur": 2.0, "name": "_winapi.WriteFile"}, {"pid": 19656, "tid": 5356, "ts": 64679178193.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 19656, "tid": 5356, "ts": 64679178194.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 5356, "ts": 64679178191.199, "ph": "X", "cat": "fee", "dur": 2.9, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 19656, "tid": 5356, "ts": 64679178189.6, "ph": "X", "cat": "fee", "dur": 5.0, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 19656, "tid": 5356, "ts": 64679178194.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "collections.deque.popleft"}, {"pid": 19656, "tid": 5356, "ts": 64679178195.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:48)"}, {"pid": 19656, "tid": 5356, "ts": 64679178196.32, "ph": "X", "cat": "fee", "dur": 0.879, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 5356, "ts": 64679178196.3, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_close (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:281)"}, {"pid": 19656, "tid": 5356, "ts": 64679178195.9, "ph": "X", "cat": "fee", "dur": 1.8, "name": "close (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:178)"}, {"pid": 19656, "tid": 5356, "ts": 64655793716.2, "ph": "X", "cat": "fee", "dur": 23384481.7, "name": "_feed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:213)"}, {"pid": 19656, "tid": 5356, "ts": 64655793714.2, "ph": "X", "cat": "fee", "dur": 23384486.7, "name": "run (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:899)"}, {"pid": 19656, "tid": 5356, "ts": 64679178202.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.get_ident"}, {"pid": 19656, "tid": 5356, "ts": 64679178203.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.RLock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64679178078.0, "ph": "X", "cat": "fee", "dur": 158.1, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 17528, "ts": 64679178236.799, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.release"}, {"pid": 19656, "tid": 17528, "ts": 64679178239.099, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.locked"}, {"pid": 19656, "tid": 17528, "ts": 64679178240.5, "ph": "X", "cat": "fee", "dur": 0.4, "name": "daemon (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:1127)"}, {"pid": 19656, "tid": 17528, "ts": 64679178238.599, "ph": "X", "cat": "fee", "dur": 2.5, "name": "_stop (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:985)"}, {"pid": 19656, "tid": 17528, "ts": 64679178077.5, "ph": "X", "cat": "fee", "dur": 163.7, "name": "_wait_for_tstate_lock (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:1059)"}, {"pid": 19656, "tid": 17528, "ts": 64679178073.1, "ph": "X", "cat": "fee", "dur": 170.799, "name": "join (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:1021)"}, {"pid": 19656, "tid": 17528, "ts": 64679178244.899, "ph": "X", "cat": "fee", "dur": 0.2, "name": "debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:48)"}, {"pid": 19656, "tid": 17528, "ts": 64679178071.5, "ph": "X", "cat": "fee", "dur": 173.7, "name": "_finalize_join (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:196)"}, {"pid": 19656, "tid": 17528, "ts": 64679178070.0, "ph": "X", "cat": "fee", "dur": 176.4, "name": "__call__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:205)"}, {"pid": 19656, "tid": 17528, "ts": 64679178069.1, "ph": "X", "cat": "fee", "dur": 177.7, "name": "join_thread (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:150)"}, {"pid": 19656, "tid": 17528, "ts": 64679178250.9, "ph": "X", "cat": "fee", "dur": 3.8, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 17528, "ts": 64679178250.8, "ph": "X", "cat": "fee", "dur": 4.099, "name": "_close (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:281)"}, {"pid": 19656, "tid": 17528, "ts": 64679178250.2, "ph": "X", "cat": "fee", "dur": 5.0, "name": "close (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:178)"}, {"pid": 19656, "tid": 17528, "ts": 64679178256.1, "ph": "X", "cat": "fee", "dur": 4.899, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 17528, "ts": 64679178256.0, "ph": "X", "cat": "fee", "dur": 5.1, "name": "_close (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:281)"}, {"pid": 19656, "tid": 17528, "ts": 64679178255.7, "ph": "X", "cat": "fee", "dur": 5.6, "name": "close (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:178)"}, {"pid": 19656, "tid": 17528, "ts": 64679178248.699, "ph": "X", "cat": "fee", "dur": 12.8, "name": "close (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:71)"}, {"pid": 19656, "tid": 17528, "ts": 64679178261.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 17528, "ts": 64679178262.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "dict.values"}, {"pid": 19656, "tid": 17528, "ts": 64679178265.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64679178266.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "nt.getpid"}, {"pid": 19656, "tid": 17528, "ts": 64679178269.3, "ph": "X", "cat": "fee", "dur": 32809.399, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 17528, "ts": 64679211082.599, "ph": "X", "cat": "fee", "dur": 3.2, "name": "_winapi.GetExitCodeProcess"}, {"pid": 19656, "tid": 17528, "ts": 64679178267.999, "ph": "X", "cat": "fee", "dur": 32818.7, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 17528, "ts": 64679211089.9, "ph": "X", "cat": "fee", "dur": 0.7, "name": "set.discard"}, {"pid": 19656, "tid": 17528, "ts": 64679178264.8, "ph": "X", "cat": "fee", "dur": 32826.1, "name": "join (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:142)"}, {"pid": 19656, "tid": 17528, "ts": 64679211094.1, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64679211095.4, "ph": "X", "cat": "fee", "dur": 0.7, "name": "nt.getpid"}, {"pid": 19656, "tid": 17528, "ts": 64679211098.7, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 17528, "ts": 64679211100.099, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_winapi.GetExitCodeProcess"}, {"pid": 19656, "tid": 17528, "ts": 64679211097.1, "ph": "X", "cat": "fee", "dur": 3.399, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 17528, "ts": 64679211100.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "set.discard"}, {"pid": 19656, "tid": 17528, "ts": 64679211093.6, "ph": "X", "cat": "fee", "dur": 7.4, "name": "join (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:142)"}, {"pid": 19656, "tid": 17528, "ts": 64679211101.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64679211102.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 19656, "tid": 17528, "ts": 64679211102.7, "ph": "X", "cat": "fee", "dur": 0.599, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 17528, "ts": 64679211103.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_winapi.GetExitCodeProcess"}, {"pid": 19656, "tid": 17528, "ts": 64679211102.5, "ph": "X", "cat": "fee", "dur": 1.5, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 17528, "ts": 64679211104.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "set.discard"}, {"pid": 19656, "tid": 17528, "ts": 64679211101.5, "ph": "X", "cat": "fee", "dur": 2.72, "name": "join (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:142)"}, {"pid": 19656, "tid": 17528, "ts": 64679211104.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64679211105.199, "ph": "X", "cat": "fee", "dur": 0.02, "name": "nt.getpid"}, {"pid": 19656, "tid": 17528, "ts": 64679211105.8, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 17528, "ts": 64679211106.5, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_winapi.GetExitCodeProcess"}, {"pid": 19656, "tid": 17528, "ts": 64679211105.6, "ph": "X", "cat": "fee", "dur": 1.3, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 17528, "ts": 64679211107.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "set.discard"}, {"pid": 19656, "tid": 17528, "ts": 64679211104.7, "ph": "X", "cat": "fee", "dur": 2.419, "name": "join (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:142)"}, {"pid": 19656, "tid": 17528, "ts": 64679211107.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64679211108.199, "ph": "X", "cat": "fee", "dur": 0.02, "name": "nt.getpid"}, {"pid": 19656, "tid": 17528, "ts": 64679211108.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 17528, "ts": 64679211109.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_winapi.GetExitCodeProcess"}, {"pid": 19656, "tid": 17528, "ts": 64679211108.6, "ph": "X", "cat": "fee", "dur": 1.2, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 17528, "ts": 64679211109.999, "ph": "X", "cat": "fee", "dur": 0.02, "name": "set.discard"}, {"pid": 19656, "tid": 17528, "ts": 64679211107.6, "ph": "X", "cat": "fee", "dur": 2.5, "name": "join (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:142)"}, {"pid": 19656, "tid": 17528, "ts": 64679211110.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64679211110.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "nt.getpid"}, {"pid": 19656, "tid": 17528, "ts": 64679211111.4, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 17528, "ts": 64679211111.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_winapi.GetExitCodeProcess"}, {"pid": 19656, "tid": 17528, "ts": 64679211111.2, "ph": "X", "cat": "fee", "dur": 1.099, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 17528, "ts": 64679211112.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "set.discard"}, {"pid": 19656, "tid": 17528, "ts": 64679211110.499, "ph": "X", "cat": "fee", "dur": 2.1, "name": "join (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:142)"}, {"pid": 19656, "tid": 17528, "ts": 64679211113.299, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64679211113.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "nt.getpid"}, {"pid": 19656, "tid": 17528, "ts": 64679211114.2, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 17528, "ts": 64679211114.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_winapi.GetExitCodeProcess"}, {"pid": 19656, "tid": 17528, "ts": 64679211113.9, "ph": "X", "cat": "fee", "dur": 1.3, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 17528, "ts": 64679211115.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "set.discard"}, {"pid": 19656, "tid": 17528, "ts": 64679211113.1, "ph": "X", "cat": "fee", "dur": 2.319, "name": "join (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:142)"}, {"pid": 19656, "tid": 17528, "ts": 64679211116.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)"}, {"pid": 19656, "tid": 17528, "ts": 64679211116.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "nt.getpid"}, {"pid": 19656, "tid": 17528, "ts": 64679211117.2, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_winapi.WaitForSingleObject"}, {"pid": 19656, "tid": 17528, "ts": 64679211117.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_winapi.GetExitCodeProcess"}, {"pid": 19656, "tid": 17528, "ts": 64679211116.9, "ph": "X", "cat": "fee", "dur": 1.199, "name": "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)"}, {"pid": 19656, "tid": 17528, "ts": 64679211118.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "set.discard"}, {"pid": 19656, "tid": 17528, "ts": 64679211115.799, "ph": "X", "cat": "fee", "dur": 2.6, "name": "join (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:142)"}, {"pid": 19656, "tid": 17528, "ts": 64679177950.899, "ph": "X", "cat": "fee", "dur": 33167.9, "name": "join_executor_internals (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:508)"}, {"pid": 19656, "tid": 17528, "ts": 64655793560.199, "ph": "X", "cat": "fee", "dur": 23417559.1, "name": "run (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:311)"}, {"pid": 19656, "tid": 17528, "ts": 64679211122.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.get_ident"}, {"pid": 19656, "tid": 17528, "ts": 64679211123.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.RLock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64655805723.8, "ph": "X", "cat": "fee", "dur": 23405407.3, "name": "_thread.lock.acquire"}, {"pid": 19656, "tid": 21652, "ts": 64679211132.6, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_thread.lock.release"}, {"pid": 19656, "tid": 21652, "ts": 64679211135.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.locked"}, {"pid": 19656, "tid": 21652, "ts": 64679211136.5, "ph": "X", "cat": "fee", "dur": 0.5, "name": "daemon (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:1127)"}, {"pid": 19656, "tid": 21652, "ts": 64679211140.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.lock.locked"}, {"pid": 19656, "tid": 21652, "ts": 64679211141.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_thread.lock.locked"}, {"pid": 19656, "tid": 21652, "ts": 64679211140.3, "ph": "X", "cat": "fee", "dur": 1.099, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:778)"}, {"pid": 19656, "tid": 21652, "ts": 64679211142.1, "ph": "X", "cat": "fee", "dur": 0.7, "name": "set.difference_update"}, {"pid": 19656, "tid": 21652, "ts": 64679211138.7, "ph": "X", "cat": "fee", "dur": 4.199, "name": "_maintain_shutdown_locks (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:768)"}, {"pid": 19656, "tid": 21652, "ts": 64679211143.199, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.lock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64679211134.8, "ph": "X", "cat": "fee", "dur": 8.6, "name": "_stop (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:985)"}, {"pid": 19656, "tid": 21652, "ts": 64655805723.4, "ph": "X", "cat": "fee", "dur": 23405420.2, "name": "_wait_for_tstate_lock (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:1059)"}, {"pid": 19656, "tid": 21652, "ts": 64655805719.2, "ph": "X", "cat": "fee", "dur": 23405426.999, "name": "join (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:1021)"}, {"pid": 19656, "tid": 21652, "ts": 64679211149.7, "ph": "X", "cat": "fee", "dur": 8.3, "name": "remove (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\weakref.py:370)"}, {"pid": 19656, "tid": 21652, "ts": 64679211160.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "set.discard"}, {"pid": 19656, "tid": 21652, "ts": 64679211159.1, "ph": "X", "cat": "fee", "dur": 2.3, "name": "_remove (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_weakrefset.py:39)"}, {"pid": 19656, "tid": 21652, "ts": 64679211168.799, "ph": "X", "cat": "fee", "dur": 0.02, "name": "set.discard"}, {"pid": 19656, "tid": 21652, "ts": 64679211168.6, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_remove (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_weakrefset.py:39)"}, {"pid": 19656, "tid": 21652, "ts": 64679211174.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__del__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:135)"}, {"pid": 19656, "tid": 21652, "ts": 64679211174.7, "ph": "X", "cat": "fee", "dur": 0.199, "name": "__del__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:135)"}, {"pid": 19656, "tid": 21652, "ts": 64679211177.6, "ph": "X", "cat": "fee", "dur": 9.5, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64679211177.399, "ph": "X", "cat": "fee", "dur": 9.8, "name": "_close (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:281)"}, {"pid": 19656, "tid": 21652, "ts": 64679211176.8, "ph": "X", "cat": "fee", "dur": 10.8, "name": "close (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:178)"}, {"pid": 19656, "tid": 21652, "ts": 64679211188.5, "ph": "X", "cat": "fee", "dur": 2.599, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64679211188.4, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_close (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:281)"}, {"pid": 19656, "tid": 21652, "ts": 64679211188.2, "ph": "X", "cat": "fee", "dur": 3.2, "name": "close (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:178)"}, {"pid": 19656, "tid": 21652, "ts": 64679211176.0, "ph": "X", "cat": "fee", "dur": 15.5, "name": "close (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:349)"}, {"pid": 19656, "tid": 21652, "ts": 64679211192.099, "ph": "X", "cat": "fee", "dur": 0.02, "name": "__del__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:135)"}, {"pid": 19656, "tid": 21652, "ts": 64679211193.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__del__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:135)"}, {"pid": 19656, "tid": 21652, "ts": 64679211195.2, "ph": "X", "cat": "fee", "dur": 0.199, "name": "set.discard"}, {"pid": 19656, "tid": 21652, "ts": 64679211194.8, "ph": "X", "cat": "fee", "dur": 0.619, "name": "_remove (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_weakrefset.py:39)"}, {"pid": 19656, "tid": 21652, "ts": 64679211201.2, "ph": "X", "cat": "fee", "dur": 0.4, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64679211202.8, "ph": "X", "cat": "fee", "dur": 0.399, "name": "sub_debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:44)"}, {"pid": 19656, "tid": 21652, "ts": 64679211204.6, "ph": "X", "cat": "fee", "dur": 61.999, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64679211267.1, "ph": "X", "cat": "fee", "dur": 3.5, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64679211204.1, "ph": "X", "cat": "fee", "dur": 66.699, "name": "_close_handles (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:28)"}, {"pid": 19656, "tid": 21652, "ts": 64679211200.4, "ph": "X", "cat": "fee", "dur": 71.7, "name": "__call__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:205)"}, {"pid": 19656, "tid": 21652, "ts": 64679211274.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "set.discard"}, {"pid": 19656, "tid": 21652, "ts": 64679211273.8, "ph": "X", "cat": "fee", "dur": 0.919, "name": "_remove (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_weakrefset.py:39)"}, {"pid": 19656, "tid": 21652, "ts": 64679211275.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64679211276.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "sub_debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:44)"}, {"pid": 19656, "tid": 21652, "ts": 64679211277.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64679211277.799, "ph": "X", "cat": "fee", "dur": 2.1, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64679211277.0, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_close_handles (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:28)"}, {"pid": 19656, "tid": 21652, "ts": 64679211275.499, "ph": "X", "cat": "fee", "dur": 5.0, "name": "__call__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:205)"}, {"pid": 19656, "tid": 21652, "ts": 64679211281.599, "ph": "X", "cat": "fee", "dur": 0.02, "name": "set.discard"}, {"pid": 19656, "tid": 21652, "ts": 64679211281.3, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_remove (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_weakrefset.py:39)"}, {"pid": 19656, "tid": 21652, "ts": 64679211282.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64679211283.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "sub_debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:44)"}, {"pid": 19656, "tid": 21652, "ts": 64679211283.4, "ph": "X", "cat": "fee", "dur": 21.899, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64679211305.6, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64679211283.3, "ph": "X", "cat": "fee", "dur": 25.2, "name": "_close_handles (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:28)"}, {"pid": 19656, "tid": 21652, "ts": 64679211282.2, "ph": "X", "cat": "fee", "dur": 27.1, "name": "__call__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:205)"}, {"pid": 19656, "tid": 21652, "ts": 64679211311.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "set.discard"}, {"pid": 19656, "tid": 21652, "ts": 64679211310.499, "ph": "X", "cat": "fee", "dur": 0.72, "name": "_remove (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_weakrefset.py:39)"}, {"pid": 19656, "tid": 21652, "ts": 64679211312.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64679211312.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "sub_debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:44)"}, {"pid": 19656, "tid": 21652, "ts": 64679211313.2, "ph": "X", "cat": "fee", "dur": 20.099, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64679211333.6, "ph": "X", "cat": "fee", "dur": 2.3, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64679211312.999, "ph": "X", "cat": "fee", "dur": 23.0, "name": "_close_handles (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:28)"}, {"pid": 19656, "tid": 21652, "ts": 64679211311.8, "ph": "X", "cat": "fee", "dur": 24.999, "name": "__call__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:205)"}, {"pid": 19656, "tid": 21652, "ts": 64679211338.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "set.discard"}, {"pid": 19656, "tid": 21652, "ts": 64679211338.0, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_remove (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_weakrefset.py:39)"}, {"pid": 19656, "tid": 21652, "ts": 64679211339.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64679211340.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "sub_debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:44)"}, {"pid": 19656, "tid": 21652, "ts": 64679211340.7, "ph": "X", "cat": "fee", "dur": 21.999, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64679211363.0, "ph": "X", "cat": "fee", "dur": 2.899, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64679211340.6, "ph": "X", "cat": "fee", "dur": 25.5, "name": "_close_handles (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:28)"}, {"pid": 19656, "tid": 21652, "ts": 64679211339.399, "ph": "X", "cat": "fee", "dur": 27.4, "name": "__call__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:205)"}, {"pid": 19656, "tid": 21652, "ts": 64679211368.299, "ph": "X", "cat": "fee", "dur": 0.2, "name": "set.discard"}, {"pid": 19656, "tid": 21652, "ts": 64679211367.9, "ph": "X", "cat": "fee", "dur": 0.62, "name": "_remove (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_weakrefset.py:39)"}, {"pid": 19656, "tid": 21652, "ts": 64679211369.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64679211369.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "sub_debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:44)"}, {"pid": 19656, "tid": 21652, "ts": 64679211370.4, "ph": "X", "cat": "fee", "dur": 18.8, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64679211389.6, "ph": "X", "cat": "fee", "dur": 2.3, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64679211370.299, "ph": "X", "cat": "fee", "dur": 21.8, "name": "_close_handles (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:28)"}, {"pid": 19656, "tid": 21652, "ts": 64679211369.1, "ph": "X", "cat": "fee", "dur": 23.699, "name": "__call__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:205)"}, {"pid": 19656, "tid": 21652, "ts": 64679211394.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "set.discard"}, {"pid": 19656, "tid": 21652, "ts": 64679211393.8, "ph": "X", "cat": "fee", "dur": 0.619, "name": "_remove (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_weakrefset.py:39)"}, {"pid": 19656, "tid": 21652, "ts": 64679211395.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64679211395.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "sub_debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:44)"}, {"pid": 19656, "tid": 21652, "ts": 64679211396.399, "ph": "X", "cat": "fee", "dur": 19.8, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64679211416.6, "ph": "X", "cat": "fee", "dur": 3.1, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64679211396.3, "ph": "X", "cat": "fee", "dur": 23.6, "name": "_close_handles (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:28)"}, {"pid": 19656, "tid": 21652, "ts": 64679211395.0, "ph": "X", "cat": "fee", "dur": 25.6, "name": "__call__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:205)"}, {"pid": 19656, "tid": 21652, "ts": 64679211422.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "set.discard"}, {"pid": 19656, "tid": 21652, "ts": 64679211421.9, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_remove (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_weakrefset.py:39)"}, {"pid": 19656, "tid": 21652, "ts": 64679211423.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "nt.getpid"}, {"pid": 19656, "tid": 21652, "ts": 64679211424.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "sub_debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:44)"}, {"pid": 19656, "tid": 21652, "ts": 64679211424.6, "ph": "X", "cat": "fee", "dur": 18.899, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64679211443.9, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_winapi.CloseHandle"}, {"pid": 19656, "tid": 21652, "ts": 64679211424.4, "ph": "X", "cat": "fee", "dur": 22.5, "name": "_close_handles (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:28)"}, {"pid": 19656, "tid": 21652, "ts": 64679211423.299, "ph": "X", "cat": "fee", "dur": 24.3, "name": "__call__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:205)"}, {"pid": 19656, "tid": 21652, "ts": 64679211449.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__del__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:135)"}, {"pid": 19656, "tid": 21652, "ts": 64679211450.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__del__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:135)"}, {"pid": 19656, "tid": 21652, "ts": 64655805548.099, "ph": "X", "cat": "fee", "dur": 23405902.2, "name": "shutdown (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:731)"}, {"pid": 19656, "tid": 21652, "ts": 64655805546.4, "ph": "X", "cat": "fee", "dur": 23405904.8, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:635)"}, {"pid": 19656, "tid": 21652, "ts": 64679211455.8, "ph": "X", "cat": "fee", "dur": 0.4, "name": "list.reverse"}, {"pid": 19656, "tid": 21652, "ts": 64679211457.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.pop"}, {"pid": 19656, "tid": 21652, "ts": 64679211460.1, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_thread.RLock.__enter__"}, {"pid": 19656, "tid": 21652, "ts": 64679211459.7, "ph": "X", "cat": "fee", "dur": 0.9, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 21652, "ts": 64679211462.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__get_result (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:387)"}, {"pid": 19656, "tid": 21652, "ts": 64679211463.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.RLock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64679211463.1, "ph": "X", "cat": "fee", "dur": 0.699, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 21652, "ts": 64679211458.6, "ph": "X", "cat": "fee", "dur": 5.3, "name": "result (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:417)"}, {"pid": 19656, "tid": 21652, "ts": 64679211455.4, "ph": "X", "cat": "fee", "dur": 10.1, "name": "result_iterator (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:601)"}, {"pid": 19656, "tid": 21652, "ts": 64679211465.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.reverse"}, {"pid": 19656, "tid": 21652, "ts": 64679211465.9, "ph": "X", "cat": "fee", "dur": 0.699, "name": "list.pop"}, {"pid": 19656, "tid": 21652, "ts": 64679211455.1, "ph": "X", "cat": "fee", "dur": 11.7, "name": "_chain_from_iterable_of_lists (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:553)"}, {"pid": 19656, "tid": 21652, "ts": 64679211467.899, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.pop"}, {"pid": 19656, "tid": 21652, "ts": 64679211468.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.RLock.__enter__"}, {"pid": 19656, "tid": 21652, "ts": 64679211468.6, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 21652, "ts": 64679211469.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__get_result (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:387)"}, {"pid": 19656, "tid": 21652, "ts": 64679211469.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.RLock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64679211469.8, "ph": "X", "cat": "fee", "dur": 0.22, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 21652, "ts": 64679211468.2, "ph": "X", "cat": "fee", "dur": 2.0, "name": "result (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:417)"}, {"pid": 19656, "tid": 21652, "ts": 64679211467.8, "ph": "X", "cat": "fee", "dur": 3.2, "name": "result_iterator (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:601)"}, {"pid": 19656, "tid": 21652, "ts": 64679211471.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.reverse"}, {"pid": 19656, "tid": 21652, "ts": 64679211471.5, "ph": "X", "cat": "fee", "dur": 0.399, "name": "list.pop"}, {"pid": 19656, "tid": 21652, "ts": 64679211467.5, "ph": "X", "cat": "fee", "dur": 4.42, "name": "_chain_from_iterable_of_lists (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:553)"}, {"pid": 19656, "tid": 21652, "ts": 64679211472.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.pop"}, {"pid": 19656, "tid": 21652, "ts": 64679211473.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.RLock.__enter__"}, {"pid": 19656, "tid": 21652, "ts": 64679211473.3, "ph": "X", "cat": "fee", "dur": 0.32, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 21652, "ts": 64679211474.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__get_result (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:387)"}, {"pid": 19656, "tid": 21652, "ts": 64679211474.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_thread.RLock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64679211474.499, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 21652, "ts": 64679211473.0, "ph": "X", "cat": "fee", "dur": 1.8, "name": "result (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:417)"}, {"pid": 19656, "tid": 21652, "ts": 64679211472.6, "ph": "X", "cat": "fee", "dur": 3.0, "name": "result_iterator (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:601)"}, {"pid": 19656, "tid": 21652, "ts": 64679211475.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.reverse"}, {"pid": 19656, "tid": 21652, "ts": 64679211475.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.pop"}, {"pid": 19656, "tid": 21652, "ts": 64679211472.4, "ph": "X", "cat": "fee", "dur": 3.8, "name": "_chain_from_iterable_of_lists (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:553)"}, {"pid": 19656, "tid": 21652, "ts": 64679211476.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.pop"}, {"pid": 19656, "tid": 21652, "ts": 64679211477.499, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_thread.RLock.__enter__"}, {"pid": 19656, "tid": 21652, "ts": 64679211477.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 21652, "ts": 64679211478.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__get_result (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:387)"}, {"pid": 19656, "tid": 21652, "ts": 64679211478.52, "ph": "X", "cat": "fee", "dur": 0.08, "name": "_thread.RLock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64679211478.5, "ph": "X", "cat": "fee", "dur": 0.12, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 21652, "ts": 64679211477.1, "ph": "X", "cat": "fee", "dur": 1.6, "name": "result (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:417)"}, {"pid": 19656, "tid": 21652, "ts": 64679211476.8, "ph": "X", "cat": "fee", "dur": 2.699, "name": "result_iterator (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:601)"}, {"pid": 19656, "tid": 21652, "ts": 64679211479.799, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.reverse"}, {"pid": 19656, "tid": 21652, "ts": 64679211480.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.pop"}, {"pid": 19656, "tid": 21652, "ts": 64679211476.6, "ph": "X", "cat": "fee", "dur": 3.699, "name": "_chain_from_iterable_of_lists (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:553)"}, {"pid": 19656, "tid": 21652, "ts": 64679211480.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.pop"}, {"pid": 19656, "tid": 21652, "ts": 64679211481.599, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.RLock.__enter__"}, {"pid": 19656, "tid": 21652, "ts": 64679211481.5, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 21652, "ts": 64679211482.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__get_result (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:387)"}, {"pid": 19656, "tid": 21652, "ts": 64679211482.619, "ph": "X", "cat": "fee", "dur": 0.08, "name": "_thread.RLock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64679211482.599, "ph": "X", "cat": "fee", "dur": 0.12, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 21652, "ts": 64679211481.2, "ph": "X", "cat": "fee", "dur": 1.6, "name": "result (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:417)"}, {"pid": 19656, "tid": 21652, "ts": 64679211480.799, "ph": "X", "cat": "fee", "dur": 2.8, "name": "result_iterator (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:601)"}, {"pid": 19656, "tid": 21652, "ts": 64679211484.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.reverse"}, {"pid": 19656, "tid": 21652, "ts": 64679211484.099, "ph": "X", "cat": "fee", "dur": 0.4, "name": "list.pop"}, {"pid": 19656, "tid": 21652, "ts": 64679211480.6, "ph": "X", "cat": "fee", "dur": 3.919, "name": "_chain_from_iterable_of_lists (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:553)"}, {"pid": 19656, "tid": 21652, "ts": 64679211485.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.pop"}, {"pid": 19656, "tid": 21652, "ts": 64679211485.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.RLock.__enter__"}, {"pid": 19656, "tid": 21652, "ts": 64679211485.6, "ph": "X", "cat": "fee", "dur": 3.8, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 21652, "ts": 64679211489.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__get_result (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:387)"}, {"pid": 19656, "tid": 21652, "ts": 64679211490.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_thread.RLock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64679211490.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 21652, "ts": 64679211485.399, "ph": "X", "cat": "fee", "dur": 5.2, "name": "result (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:417)"}, {"pid": 19656, "tid": 21652, "ts": 64679211485.0, "ph": "X", "cat": "fee", "dur": 6.6, "name": "result_iterator (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:601)"}, {"pid": 19656, "tid": 21652, "ts": 64679211491.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.reverse"}, {"pid": 19656, "tid": 21652, "ts": 64679211492.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.pop"}, {"pid": 19656, "tid": 21652, "ts": 64679211484.9, "ph": "X", "cat": "fee", "dur": 7.499, "name": "_chain_from_iterable_of_lists (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:553)"}, {"pid": 19656, "tid": 21652, "ts": 64679211493.3, "ph": "X", "cat": "fee", "dur": 0.199, "name": "list.pop"}, {"pid": 19656, "tid": 21652, "ts": 64679211494.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_thread.RLock.__enter__"}, {"pid": 19656, "tid": 21652, "ts": 64679211493.999, "ph": "X", "cat": "fee", "dur": 0.42, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 21652, "ts": 64679211494.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "__get_result (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:387)"}, {"pid": 19656, "tid": 21652, "ts": 64679211495.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_thread.RLock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64679211495.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 21652, "ts": 64679211493.7, "ph": "X", "cat": "fee", "dur": 1.7, "name": "result (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:417)"}, {"pid": 19656, "tid": 21652, "ts": 64679211493.2, "ph": "X", "cat": "fee", "dur": 2.799, "name": "result_iterator (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:601)"}, {"pid": 19656, "tid": 21652, "ts": 64679211496.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.reverse"}, {"pid": 19656, "tid": 21652, "ts": 64679211496.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "list.pop"}, {"pid": 19656, "tid": 21652, "ts": 64679211492.999, "ph": "X", "cat": "fee", "dur": 3.72, "name": "_chain_from_iterable_of_lists (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:553)"}, {"pid": 19656, "tid": 21652, "ts": 64679211497.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.pop"}, {"pid": 19656, "tid": 21652, "ts": 64679211498.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.RLock.__enter__"}, {"pid": 19656, "tid": 21652, "ts": 64679211497.9, "ph": "X", "cat": "fee", "dur": 0.399, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)"}, {"pid": 19656, "tid": 21652, "ts": 64679211498.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__get_result (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:387)"}, {"pid": 19656, "tid": 21652, "ts": 64679211499.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_thread.RLock.__exit__"}, {"pid": 19656, "tid": 21652, "ts": 64679211499.1, "ph": "X", "cat": "fee", "dur": 0.219, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)"}, {"pid": 19656, "tid": 21652, "ts": 64679211497.6, "ph": "X", "cat": "fee", "dur": 1.799, "name": "result (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:417)"}, {"pid": 19656, "tid": 21652, "ts": 64679211497.2, "ph": "X", "cat": "fee", "dur": 2.899, "name": "result_iterator (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:601)"}, {"pid": 19656, "tid": 21652, "ts": 64679211500.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.reverse"}, {"pid": 19656, "tid": 21652, "ts": 64679211500.5, "ph": "X", "cat": "fee", "dur": 0.5, "name": "list.pop"}, {"pid": 19656, "tid": 21652, "ts": 64679211497.0, "ph": "X", "cat": "fee", "dur": 4.02, "name": "_chain_from_iterable_of_lists (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:553)"}, {"pid": 19656, "tid": 21652, "ts": 64679211502.099, "ph": "X", "cat": "fee", "dur": 0.4, "name": "time.perf_counter"}, {"pid": 19656, "tid": 21652, "ts": 64679211509.8, "ph": "X", "cat": "fee", "dur": 170.2, "name": "builtins.print"}, {"pid": 19656, "tid": 21652, "ts": 64679211682.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "dict.items"}, {"pid": 19656, "tid": 21652, "ts": 64679211687.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "Counter.items"}, {"pid": 19656, "tid": 21652, "ts": 64679211691.5, "ph": "X", "cat": "fee", "dur": 0.5, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64679211692.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.iter"}, {"pid": 19656, "tid": 21652, "ts": 64679211700.7, "ph": "X", "cat": "fee", "dur": 5.5, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\heapq.py:563)"}, {"pid": 19656, "tid": 21652, "ts": 64679211707.0, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_heapq.heapify"}, {"pid": 19656, "tid": 21652, "ts": 64679211708.4, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679211709.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679211710.0, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679211710.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679211711.199, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679211712.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679211713.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679211715.6, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679211716.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679211716.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679211717.6, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679211718.6, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679211719.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679211720.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679211720.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679211722.9, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679211724.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679232009.3, "ph": "X", "cat": "fee", "dur": 2.299, "name": "list.sort"}, {"pid": 19656, "tid": 21652, "ts": 64679232014.4, "ph": "X", "cat": "fee", "dur": 2.4, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\heapq.py:577)"}, {"pid": 19656, "tid": 21652, "ts": 64679211690.9, "ph": "X", "cat": "fee", "dur": 20326.3, "name": "nlargest (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\heapq.py:521)"}, {"pid": 19656, "tid": 21652, "ts": 64679211685.099, "ph": "X", "cat": "fee", "dur": 20334.2, "name": "most_common (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:600)"}, {"pid": 19656, "tid": 21652, "ts": 64679232024.3, "ph": "X", "cat": "fee", "dur": 1.7, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64679232029.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64679232033.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64679232032.299, "ph": "X", "cat": "fee", "dur": 0.9, "name": "isstring (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:595)"}, {"pid": 19656, "tid": 21652, "ts": 64679232034.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64679232034.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "isstring (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:595)"}, {"pid": 19656, "tid": 21652, "ts": 64679232039.399, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64679232041.2, "ph": "X", "cat": "fee", "dur": 1.399, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 19656, "tid": 21652, "ts": 64679232039.0, "ph": "X", "cat": "fee", "dur": 3.62, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:224)"}, {"pid": 19656, "tid": 21652, "ts": 64679232044.199, "ph": "X", "cat": "fee", "dur": 1.0, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:76)"}, {"pid": 19656, "tid": 21652, "ts": 64679232049.3, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64679232048.9, "ph": "X", "cat": "fee", "dur": 0.8, "name": "tell (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:286)"}, {"pid": 19656, "tid": 21652, "ts": 64679232051.6, "ph": "X", "cat": "fee", "dur": 0.899, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:111)"}, {"pid": 19656, "tid": 21652, "ts": 64679232054.3, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 19656, "tid": 21652, "ts": 64679232053.9, "ph": "X", "cat": "fee", "dur": 0.899, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 19656, "tid": 21652, "ts": 64679232055.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64679232055.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "tell (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:286)"}, {"pid": 19656, "tid": 21652, "ts": 64679232056.7, "ph": "X", "cat": "fee", "dur": 0.399, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 19656, "tid": 21652, "ts": 64679232056.4, "ph": "X", "cat": "fee", "dur": 0.719, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 19656, "tid": 21652, "ts": 64679232057.6, "ph": "X", "cat": "fee", "dur": 0.299, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 19656, "tid": 21652, "ts": 64679232057.399, "ph": "X", "cat": "fee", "dur": 0.6, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 19656, "tid": 21652, "ts": 64679232059.1, "ph": "X", "cat": "fee", "dur": 0.299, "name": "builtins.ord"}, {"pid": 19656, "tid": 21652, "ts": 64679232059.899, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 19656, "tid": 21652, "ts": 64679232059.6, "ph": "X", "cat": "fee", "dur": 0.6, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 19656, "tid": 21652, "ts": 64679232060.699, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 19656, "tid": 21652, "ts": 64679232060.5, "ph": "X", "cat": "fee", "dur": 0.419, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 19656, "tid": 21652, "ts": 64679232061.199, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.ord"}, {"pid": 19656, "tid": 21652, "ts": 64679232062.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64679232062.8, "ph": "X", "cat": "fee", "dur": 1.5, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 19656, "tid": 21652, "ts": 64679232062.5, "ph": "X", "cat": "fee", "dur": 1.899, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 19656, "tid": 21652, "ts": 64679232065.999, "ph": "X", "cat": "fee", "dur": 1.6, "name": "type.fromkeys"}, {"pid": 19656, "tid": 21652, "ts": 64679232065.1, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_uniq (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:432)"}, {"pid": 19656, "tid": 21652, "ts": 64679232068.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64679232071.299, "ph": "X", "cat": "fee", "dur": 0.6, "name": "list.insert"}, {"pid": 19656, "tid": 21652, "ts": 64679232072.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64679232072.599, "ph": "X", "cat": "fee", "dur": 0.4, "name": "append (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:172)"}, {"pid": 19656, "tid": 21652, "ts": 64679232074.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64679232074.5, "ph": "X", "cat": "fee", "dur": 0.32, "name": "__len__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:160)"}, {"pid": 19656, "tid": 21652, "ts": 64679232073.599, "ph": "X", "cat": "fee", "dur": 1.4, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64679232078.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64679232078.3, "ph": "X", "cat": "fee", "dur": 0.8, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 19656, "tid": 21652, "ts": 64679232050.6, "ph": "X", "cat": "fee", "dur": 28.9, "name": "_parse (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:493)"}, {"pid": 19656, "tid": 21652, "ts": 64679232080.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64679232080.5, "ph": "X", "cat": "fee", "dur": 0.199, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 19656, "tid": 21652, "ts": 64679232080.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64679232047.499, "ph": "X", "cat": "fee", "dur": 33.5, "name": "_parse_sub (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:435)"}, {"pid": 19656, "tid": 21652, "ts": 64679232082.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64679232081.699, "ph": "X", "cat": "fee", "dur": 1.6, "name": "fix_flags (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:921)"}, {"pid": 19656, "tid": 21652, "ts": 64679232037.0, "ph": "X", "cat": "fee", "dur": 46.6, "name": "parse (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:937)"}, {"pid": 19656, "tid": 21652, "ts": 64679232087.799, "ph": "X", "cat": "fee", "dur": 0.8, "name": "builtins.min"}, {"pid": 19656, "tid": 21652, "ts": 64679232088.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.min"}, {"pid": 19656, "tid": 21652, "ts": 64679232086.0, "ph": "X", "cat": "fee", "dur": 3.2, "name": "getwidth (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:174)"}, {"pid": 19656, "tid": 21652, "ts": 64679232091.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_get_iscased (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:453)"}, {"pid": 19656, "tid": 21652, "ts": 64679232090.5, "ph": "X", "cat": "fee", "dur": 1.7, "name": "_get_literal_prefix (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:461)"}, {"pid": 19656, "tid": 21652, "ts": 64679232093.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_get_iscased (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:453)"}, {"pid": 19656, "tid": 21652, "ts": 64679232093.0, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_get_charset_prefix (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:492)"}, {"pid": 19656, "tid": 21652, "ts": 64679232094.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64679232094.419, "ph": "X", "cat": "fee", "dur": 0.08, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64679232094.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64679232094.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64679232095.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64679232095.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.min"}, {"pid": 19656, "tid": 21652, "ts": 64679232095.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64679232098.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64679232101.1, "ph": "X", "cat": "fee", "dur": 0.8, "name": "bytearray.find"}, {"pid": 19656, "tid": 21652, "ts": 64679232102.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64679232102.3, "ph": "X", "cat": "fee", "dur": 0.199, "name": "bytearray.find"}, {"pid": 19656, "tid": 21652, "ts": 64679232102.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64679232102.8, "ph": "X", "cat": "fee", "dur": 0.199, "name": "bytearray.find"}, {"pid": 19656, "tid": 21652, "ts": 64679232103.499, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64679232103.999, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64679232104.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64679232096.2, "ph": "X", "cat": "fee", "dur": 7.999, "name": "_optimize_charset (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:276)"}, {"pid": 19656, "tid": 21652, "ts": 64679232105.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64679232106.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64679232106.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64679232106.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64679232106.799, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64679232105.6, "ph": "X", "cat": "fee", "dur": 1.299, "name": "_compile_charset (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:249)"}, {"pid": 19656, "tid": 21652, "ts": 64679232108.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64679232085.4, "ph": "X", "cat": "fee", "dur": 23.0, "name": "_compile_info (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:536)"}, {"pid": 19656, "tid": 21652, "ts": 64679232111.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64679232112.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "bytearray.find"}, {"pid": 19656, "tid": 21652, "ts": 64679232112.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64679232112.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "bytearray.find"}, {"pid": 19656, "tid": 21652, "ts": 64679232113.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64679232113.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "bytearray.find"}, {"pid": 19656, "tid": 21652, "ts": 64679232113.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64679232113.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64679232113.899, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64679232110.599, "ph": "X", "cat": "fee", "dur": 3.4, "name": "_optimize_charset (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:276)"}, {"pid": 19656, "tid": 21652, "ts": 64679232114.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64679232114.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64679232114.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64679232115.199, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64679232115.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64679232115.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64679232115.699, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64679232115.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64679232115.1, "ph": "X", "cat": "fee", "dur": 0.92, "name": "_compile_charset (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:249)"}, {"pid": 19656, "tid": 21652, "ts": 64679232116.199, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64679232109.099, "ph": "X", "cat": "fee", "dur": 7.3, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:71)"}, {"pid": 19656, "tid": 21652, "ts": 64679232116.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 19656, "tid": 21652, "ts": 64679232084.4, "ph": "X", "cat": "fee", "dur": 32.5, "name": "_code (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:598)"}, {"pid": 19656, "tid": 21652, "ts": 64679232118.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64679232117.8, "ph": "X", "cat": "fee", "dur": 0.32, "name": "groups (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:81)"}, {"pid": 19656, "tid": 21652, "ts": 64679232118.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.items"}, {"pid": 19656, "tid": 21652, "ts": 64679232120.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64679232120.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "groups (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:81)"}, {"pid": 19656, "tid": 21652, "ts": 64679232120.8, "ph": "X", "cat": "fee", "dur": 2.099, "name": "_sre.compile"}, {"pid": 19656, "tid": 21652, "ts": 64679232034.0, "ph": "X", "cat": "fee", "dur": 89.1, "name": "compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:759)"}, {"pid": 19656, "tid": 21652, "ts": 64679232126.7, "ph": "X", "cat": "fee", "dur": 0.399, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64679232131.7, "ph": "X", "cat": "fee", "dur": 1.5, "name": "__new__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:670)"}, {"pid": 19656, "tid": 21652, "ts": 64679232129.5, "ph": "X", "cat": "fee", "dur": 3.8, "name": "__call__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:358)"}, {"pid": 19656, "tid": 21652, "ts": 64679232134.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__new__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:670)"}, {"pid": 19656, "tid": 21652, "ts": 64679232134.0, "ph": "X", "cat": "fee", "dur": 0.599, "name": "__call__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:358)"}, {"pid": 19656, "tid": 21652, "ts": 64679232126.3, "ph": "X", "cat": "fee", "dur": 8.399, "name": "__and__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:977)"}, {"pid": 19656, "tid": 21652, "ts": 64679232135.199, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64679232023.399, "ph": "X", "cat": "fee", "dur": 112.6, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:289)"}, {"pid": 19656, "tid": 21652, "ts": 64679232136.6, "ph": "X", "cat": "fee", "dur": 8.499, "name": "re.Pattern.sub"}, {"pid": 19656, "tid": 21652, "ts": 64679232022.5, "ph": "X", "cat": "fee", "dur": 122.7, "name": "sub (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:203)"}, {"pid": 19656, "tid": 21652, "ts": 64679232147.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "Counter.items"}, {"pid": 19656, "tid": 21652, "ts": 64679232152.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64679232152.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.iter"}, {"pid": 19656, "tid": 21652, "ts": 64679232154.699, "ph": "X", "cat": "fee", "dur": 2.5, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\heapq.py:563)"}, {"pid": 19656, "tid": 21652, "ts": 64679232157.6, "ph": "X", "cat": "fee", "dur": 0.7, "name": "_heapq.heapify"}, {"pid": 19656, "tid": 21652, "ts": 64679232159.799, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679232160.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679232161.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679232161.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679232164.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679232164.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679232164.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679232165.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679232165.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679232166.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679232166.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679232166.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679232167.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679232167.899, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679232168.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679232169.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679232169.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679232170.0, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679232170.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679232171.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679232171.699, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679232172.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679232173.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679232174.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679232174.999, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679269638.199, "ph": "X", "cat": "fee", "dur": 2.5, "name": "list.sort"}, {"pid": 19656, "tid": 21652, "ts": 64679269642.6, "ph": "X", "cat": "fee", "dur": 1.899, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\heapq.py:577)"}, {"pid": 19656, "tid": 21652, "ts": 64679232148.899, "ph": "X", "cat": "fee", "dur": 37496.0, "name": "nlargest (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\heapq.py:521)"}, {"pid": 19656, "tid": 21652, "ts": 64679232146.7, "ph": "X", "cat": "fee", "dur": 37500.3, "name": "most_common (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:600)"}, {"pid": 19656, "tid": 21652, "ts": 64679269650.9, "ph": "X", "cat": "fee", "dur": 1.0, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64679269650.3, "ph": "X", "cat": "fee", "dur": 2.9, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:289)"}, {"pid": 19656, "tid": 21652, "ts": 64679269653.7, "ph": "X", "cat": "fee", "dur": 7.699, "name": "re.Pattern.sub"}, {"pid": 19656, "tid": 21652, "ts": 64679269649.7, "ph": "X", "cat": "fee", "dur": 11.799, "name": "sub (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:203)"}, {"pid": 19656, "tid": 21652, "ts": 64679269664.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "Counter.items"}, {"pid": 19656, "tid": 21652, "ts": 64679269665.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64679269666.0, "ph": "X", "cat": "fee", "dur": 0.299, "name": "builtins.iter"}, {"pid": 19656, "tid": 21652, "ts": 64679269668.3, "ph": "X", "cat": "fee", "dur": 2.3, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\heapq.py:563)"}, {"pid": 19656, "tid": 21652, "ts": 64679269671.0, "ph": "X", "cat": "fee", "dur": 0.899, "name": "_heapq.heapify"}, {"pid": 19656, "tid": 21652, "ts": 64679269672.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679269672.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679269673.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679269673.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679269674.0, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679269674.5, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679269674.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679269675.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679269676.0, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679269677.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679269678.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679269678.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679269680.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679269680.499, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679269681.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679269681.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679269683.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679269683.6, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679269684.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679269686.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679269687.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679269689.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679313853.9, "ph": "X", "cat": "fee", "dur": 2.3, "name": "list.sort"}, {"pid": 19656, "tid": 21652, "ts": 64679313858.999, "ph": "X", "cat": "fee", "dur": 2.7, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\heapq.py:577)"}, {"pid": 19656, "tid": 21652, "ts": 64679269665.1, "ph": "X", "cat": "fee", "dur": 44197.099, "name": "nlargest (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\heapq.py:521)"}, {"pid": 19656, "tid": 21652, "ts": 64679269663.2, "ph": "X", "cat": "fee", "dur": 44201.3, "name": "most_common (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:600)"}, {"pid": 19656, "tid": 21652, "ts": 64679313867.899, "ph": "X", "cat": "fee", "dur": 1.6, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64679313867.5, "ph": "X", "cat": "fee", "dur": 3.8, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:289)"}, {"pid": 19656, "tid": 21652, "ts": 64679313871.699, "ph": "X", "cat": "fee", "dur": 9.4, "name": "re.Pattern.sub"}, {"pid": 19656, "tid": 21652, "ts": 64679313866.9, "ph": "X", "cat": "fee", "dur": 14.299, "name": "sub (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:203)"}, {"pid": 19656, "tid": 21652, "ts": 64679313884.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "Counter.items"}, {"pid": 19656, "tid": 21652, "ts": 64679313886.3, "ph": "X", "cat": "fee", "dur": 0.4, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64679313887.0, "ph": "X", "cat": "fee", "dur": 0.399, "name": "builtins.iter"}, {"pid": 19656, "tid": 21652, "ts": 64679313890.5, "ph": "X", "cat": "fee", "dur": 2.3, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\heapq.py:563)"}, {"pid": 19656, "tid": 21652, "ts": 64679313893.4, "ph": "X", "cat": "fee", "dur": 0.8, "name": "_heapq.heapify"}, {"pid": 19656, "tid": 21652, "ts": 64679313894.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679313895.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679313896.1, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679313896.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679313897.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679313897.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679313897.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679313898.299, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679313898.799, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679313899.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679313899.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679313900.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679313901.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679313901.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679313902.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679313902.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679313903.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679313903.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679313904.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679313904.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679313907.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679313909.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679313910.8, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679356637.2, "ph": "X", "cat": "fee", "dur": 1.3, "name": "list.sort"}, {"pid": 19656, "tid": 21652, "ts": 64679356639.7, "ph": "X", "cat": "fee", "dur": 1.999, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\heapq.py:577)"}, {"pid": 19656, "tid": 21652, "ts": 64679313886.1, "ph": "X", "cat": "fee", "dur": 42755.9, "name": "nlargest (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\heapq.py:521)"}, {"pid": 19656, "tid": 21652, "ts": 64679313883.7, "ph": "X", "cat": "fee", "dur": 42759.8, "name": "most_common (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:600)"}, {"pid": 19656, "tid": 21652, "ts": 64679356646.7, "ph": "X", "cat": "fee", "dur": 0.799, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64679356646.3, "ph": "X", "cat": "fee", "dur": 2.099, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:289)"}, {"pid": 19656, "tid": 21652, "ts": 64679356649.1, "ph": "X", "cat": "fee", "dur": 6.499, "name": "re.Pattern.sub"}, {"pid": 19656, "tid": 21652, "ts": 64679356645.7, "ph": "X", "cat": "fee", "dur": 10.0, "name": "sub (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:203)"}, {"pid": 19656, "tid": 21652, "ts": 64679356658.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "Counter.items"}, {"pid": 19656, "tid": 21652, "ts": 64679356659.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64679356659.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.iter"}, {"pid": 19656, "tid": 21652, "ts": 64679356661.6, "ph": "X", "cat": "fee", "dur": 2.3, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\heapq.py:563)"}, {"pid": 19656, "tid": 21652, "ts": 64679356664.2, "ph": "X", "cat": "fee", "dur": 0.799, "name": "_heapq.heapify"}, {"pid": 19656, "tid": 21652, "ts": 64679356665.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679356665.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679356666.3, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679356666.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679356667.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679356668.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679356669.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679356670.1, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679356670.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679356671.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679356671.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679356673.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679356673.7, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679356674.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679356675.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679356679.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679356685.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679398871.299, "ph": "X", "cat": "fee", "dur": 1.2, "name": "list.sort"}, {"pid": 19656, "tid": 21652, "ts": 64679398873.599, "ph": "X", "cat": "fee", "dur": 1.4, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\heapq.py:577)"}, {"pid": 19656, "tid": 21652, "ts": 64679356659.4, "ph": "X", "cat": "fee", "dur": 42215.9, "name": "nlargest (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\heapq.py:521)"}, {"pid": 19656, "tid": 21652, "ts": 64679356657.399, "ph": "X", "cat": "fee", "dur": 42219.3, "name": "most_common (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:600)"}, {"pid": 19656, "tid": 21652, "ts": 64679398879.899, "ph": "X", "cat": "fee", "dur": 0.9, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64679398879.399, "ph": "X", "cat": "fee", "dur": 2.2, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:289)"}, {"pid": 19656, "tid": 21652, "ts": 64679398882.0, "ph": "X", "cat": "fee", "dur": 5.999, "name": "re.Pattern.sub"}, {"pid": 19656, "tid": 21652, "ts": 64679398878.899, "ph": "X", "cat": "fee", "dur": 9.2, "name": "sub (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:203)"}, {"pid": 19656, "tid": 21652, "ts": 64679398890.1, "ph": "X", "cat": "fee", "dur": 0.199, "name": "Counter.items"}, {"pid": 19656, "tid": 21652, "ts": 64679398891.299, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64679398891.6, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.iter"}, {"pid": 19656, "tid": 21652, "ts": 64679398893.3, "ph": "X", "cat": "fee", "dur": 2.0, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\heapq.py:563)"}, {"pid": 19656, "tid": 21652, "ts": 64679398895.7, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_heapq.heapify"}, {"pid": 19656, "tid": 21652, "ts": 64679398896.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679398898.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679398899.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679398899.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679398900.0, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679398900.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679398900.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679398901.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679398901.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679398902.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679398903.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679398903.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679398903.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679398905.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679398905.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679398906.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679398907.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679398908.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679398913.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679398913.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679442453.5, "ph": "X", "cat": "fee", "dur": 1.2, "name": "list.sort"}, {"pid": 19656, "tid": 21652, "ts": 64679442455.9, "ph": "X", "cat": "fee", "dur": 1.6, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\heapq.py:577)"}, {"pid": 19656, "tid": 21652, "ts": 64679398891.0, "ph": "X", "cat": "fee", "dur": 43566.8, "name": "nlargest (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\heapq.py:521)"}, {"pid": 19656, "tid": 21652, "ts": 64679398889.5, "ph": "X", "cat": "fee", "dur": 43569.9, "name": "most_common (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:600)"}, {"pid": 19656, "tid": 21652, "ts": 64679442462.2, "ph": "X", "cat": "fee", "dur": 0.6, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64679442461.7, "ph": "X", "cat": "fee", "dur": 1.9, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:289)"}, {"pid": 19656, "tid": 21652, "ts": 64679442464.1, "ph": "X", "cat": "fee", "dur": 6.099, "name": "re.Pattern.sub"}, {"pid": 19656, "tid": 21652, "ts": 64679442461.1, "ph": "X", "cat": "fee", "dur": 9.2, "name": "sub (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:203)"}, {"pid": 19656, "tid": 21652, "ts": 64679442472.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "Counter.items"}, {"pid": 19656, "tid": 21652, "ts": 64679442473.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64679442474.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.iter"}, {"pid": 19656, "tid": 21652, "ts": 64679442475.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\heapq.py:563)"}, {"pid": 19656, "tid": 21652, "ts": 64679442478.499, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_heapq.heapify"}, {"pid": 19656, "tid": 21652, "ts": 64679442479.3, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679442479.8, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679442480.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679442480.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679442480.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679442481.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679442481.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679442482.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679442482.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679442483.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679442484.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679442484.299, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679442484.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679442485.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679442486.9, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679442487.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679442488.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679442489.399, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679442491.399, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679442497.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679490186.6, "ph": "X", "cat": "fee", "dur": 1.399, "name": "list.sort"}, {"pid": 19656, "tid": 21652, "ts": 64679490189.1, "ph": "X", "cat": "fee", "dur": 1.899, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\heapq.py:577)"}, {"pid": 19656, "tid": 21652, "ts": 64679442473.6, "ph": "X", "cat": "fee", "dur": 47717.6, "name": "nlargest (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\heapq.py:521)"}, {"pid": 19656, "tid": 21652, "ts": 64679442472.0, "ph": "X", "cat": "fee", "dur": 47720.5, "name": "most_common (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:600)"}, {"pid": 19656, "tid": 21652, "ts": 64679490195.5, "ph": "X", "cat": "fee", "dur": 0.899, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64679490195.2, "ph": "X", "cat": "fee", "dur": 2.0, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:289)"}, {"pid": 19656, "tid": 21652, "ts": 64679490197.8, "ph": "X", "cat": "fee", "dur": 6.199, "name": "re.Pattern.sub"}, {"pid": 19656, "tid": 21652, "ts": 64679490194.3, "ph": "X", "cat": "fee", "dur": 9.8, "name": "sub (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:203)"}, {"pid": 19656, "tid": 21652, "ts": 64679490206.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "Counter.items"}, {"pid": 19656, "tid": 21652, "ts": 64679490207.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 19656, "tid": 21652, "ts": 64679490207.6, "ph": "X", "cat": "fee", "dur": 0.299, "name": "builtins.iter"}, {"pid": 19656, "tid": 21652, "ts": 64679490209.799, "ph": "X", "cat": "fee", "dur": 2.3, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\heapq.py:563)"}, {"pid": 19656, "tid": 21652, "ts": 64679490212.599, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_heapq.heapify"}, {"pid": 19656, "tid": 21652, "ts": 64679490213.4, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679490214.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679490214.399, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679490214.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679490215.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679490215.7, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679490216.2, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679490217.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679490218.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679490218.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679490219.5, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679490222.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_heapq.heapreplace"}, {"pid": 19656, "tid": 21652, "ts": 64679541028.4, "ph": "X", "cat": "fee", "dur": 1.099, "name": "list.sort"}, {"pid": 19656, "tid": 21652, "ts": 64679541030.6, "ph": "X", "cat": "fee", "dur": 1.6, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\heapq.py:577)"}, {"pid": 19656, "tid": 21652, "ts": 64679490206.999, "ph": "X", "cat": "fee", "dur": 50825.5, "name": "nlargest (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\heapq.py:521)"}, {"pid": 19656, "tid": 21652, "ts": 64679490205.6, "ph": "X", "cat": "fee", "dur": 50828.5, "name": "most_common (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:600)"}, {"pid": 19656, "tid": 21652, "ts": 64679541037.0, "ph": "X", "cat": "fee", "dur": 0.899, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64679541036.6, "ph": "X", "cat": "fee", "dur": 2.2, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:289)"}, {"pid": 19656, "tid": 21652, "ts": 64679541039.2, "ph": "X", "cat": "fee", "dur": 6.2, "name": "re.Pattern.sub"}, {"pid": 19656, "tid": 21652, "ts": 64679541036.1, "ph": "X", "cat": "fee", "dur": 9.4, "name": "sub (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:203)"}, {"pid": 19656, "tid": 21652, "ts": 64679541047.599, "ph": "X", "cat": "fee", "dur": 266.7, "name": "builtins.print"}, {"pid": 19656, "tid": 21652, "ts": 64679541317.2, "ph": "X", "cat": "fee", "dur": 0.9, "name": "<listcomp> (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:175)"}, {"pid": 19656, "tid": 21652, "ts": 64679541322.4, "ph": "X", "cat": "fee", "dur": 912.599, "name": "builtins.print"}, {"pid": 19656, "tid": 21652, "ts": 64679542235.599, "ph": "X", "cat": "fee", "dur": 0.2, "name": "dict.items"}, {"pid": 19656, "tid": 21652, "ts": 64679542236.8, "ph": "X", "cat": "fee", "dur": 0.299, "name": "str.upper"}, {"pid": 19656, "tid": 21652, "ts": 64679542243.5, "ph": "X", "cat": "fee", "dur": 182.5, "name": "builtins.print"}, {"pid": 19656, "tid": 21652, "ts": 64679542426.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "str.upper"}, {"pid": 19656, "tid": 21652, "ts": 64679542432.2, "ph": "X", "cat": "fee", "dur": 32.6, "name": "builtins.print"}, {"pid": 19656, "tid": 21652, "ts": 64679542466.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "str.upper"}, {"pid": 19656, "tid": 21652, "ts": 64679542471.4, "ph": "X", "cat": "fee", "dur": 110.899, "name": "builtins.print"}, {"pid": 19656, "tid": 21652, "ts": 64679542584.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "str.upper"}, {"pid": 19656, "tid": 21652, "ts": 64679542591.3, "ph": "X", "cat": "fee", "dur": 104.099, "name": "builtins.print"}, {"pid": 19656, "tid": 21652, "ts": 64679542696.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.upper"}, {"pid": 19656, "tid": 21652, "ts": 64679542703.4, "ph": "X", "cat": "fee", "dur": 83.1, "name": "builtins.print"}, {"pid": 19656, "tid": 21652, "ts": 64679542787.2, "ph": "X", "cat": "fee", "dur": 0.199, "name": "str.upper"}, {"pid": 19656, "tid": 21652, "ts": 64679542792.6, "ph": "X", "cat": "fee", "dur": 116.699, "name": "builtins.print"}, {"pid": 19656, "tid": 21652, "ts": 64679542909.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.upper"}, {"pid": 19656, "tid": 21652, "ts": 64679542914.3, "ph": "X", "cat": "fee", "dur": 84.2, "name": "builtins.print"}, {"pid": 19656, "tid": 21652, "ts": 64679542999.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "str.upper"}, {"pid": 19656, "tid": 21652, "ts": 64679543003.599, "ph": "X", "cat": "fee", "dur": 248.8, "name": "builtins.print"}, {"pid": 19656, "tid": 21652, "ts": 64679211681.9, "ph": "X", "cat": "fee", "dur": 331571.3, "name": "printTopNWords (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:156)"}, {"pid": 19656, "tid": 21652, "ts": 64679543258.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "dict.items"}, {"pid": 19656, "tid": 21652, "ts": 64679543258.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "dict.keys"}, {"pid": 19656, "tid": 21652, "ts": 64679543262.2, "ph": "X", "cat": "fee", "dur": 0.599, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64679543261.899, "ph": "X", "cat": "fee", "dur": 1.9, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:289)"}, {"pid": 19656, "tid": 21652, "ts": 64679543264.3, "ph": "X", "cat": "fee", "dur": 7.999, "name": "re.Pattern.sub"}, {"pid": 19656, "tid": 21652, "ts": 64679543261.399, "ph": "X", "cat": "fee", "dur": 11.0, "name": "sub (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:203)"}, {"pid": 19656, "tid": 21652, "ts": 64679543273.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "dict.keys"}, {"pid": 19656, "tid": 21652, "ts": 64679543274.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64679543274.4, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:289)"}, {"pid": 19656, "tid": 21652, "ts": 64679543275.0, "ph": "X", "cat": "fee", "dur": 4.2, "name": "re.Pattern.sub"}, {"pid": 19656, "tid": 21652, "ts": 64679543274.2, "ph": "X", "cat": "fee", "dur": 5.1, "name": "sub (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:203)"}, {"pid": 19656, "tid": 21652, "ts": 64679543279.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "dict.keys"}, {"pid": 19656, "tid": 21652, "ts": 64679543281.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64679543280.899, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:289)"}, {"pid": 19656, "tid": 21652, "ts": 64679543281.399, "ph": "X", "cat": "fee", "dur": 4.0, "name": "re.Pattern.sub"}, {"pid": 19656, "tid": 21652, "ts": 64679543280.7, "ph": "X", "cat": "fee", "dur": 4.8, "name": "sub (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:203)"}, {"pid": 19656, "tid": 21652, "ts": 64679543285.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.keys"}, {"pid": 19656, "tid": 21652, "ts": 64679543286.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64679543286.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:289)"}, {"pid": 19656, "tid": 21652, "ts": 64679543287.2, "ph": "X", "cat": "fee", "dur": 4.099, "name": "re.Pattern.sub"}, {"pid": 19656, "tid": 21652, "ts": 64679543286.6, "ph": "X", "cat": "fee", "dur": 4.8, "name": "sub (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:203)"}, {"pid": 19656, "tid": 21652, "ts": 64679543291.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "dict.keys"}, {"pid": 19656, "tid": 21652, "ts": 64679543292.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64679543292.5, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:289)"}, {"pid": 19656, "tid": 21652, "ts": 64679543292.9, "ph": "X", "cat": "fee", "dur": 4.0, "name": "re.Pattern.sub"}, {"pid": 19656, "tid": 21652, "ts": 64679543292.299, "ph": "X", "cat": "fee", "dur": 4.7, "name": "sub (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:203)"}, {"pid": 19656, "tid": 21652, "ts": 64679543297.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.keys"}, {"pid": 19656, "tid": 21652, "ts": 64679543298.399, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64679543298.3, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:289)"}, {"pid": 19656, "tid": 21652, "ts": 64679543298.8, "ph": "X", "cat": "fee", "dur": 4.0, "name": "re.Pattern.sub"}, {"pid": 19656, "tid": 21652, "ts": 64679543298.1, "ph": "X", "cat": "fee", "dur": 4.8, "name": "sub (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:203)"}, {"pid": 19656, "tid": 21652, "ts": 64679543303.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.keys"}, {"pid": 19656, "tid": 21652, "ts": 64679543304.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64679543304.199, "ph": "X", "cat": "fee", "dur": 2.2, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:289)"}, {"pid": 19656, "tid": 21652, "ts": 64679543306.499, "ph": "X", "cat": "fee", "dur": 4.1, "name": "re.Pattern.sub"}, {"pid": 19656, "tid": 21652, "ts": 64679543304.0, "ph": "X", "cat": "fee", "dur": 6.62, "name": "sub (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:203)"}, {"pid": 19656, "tid": 21652, "ts": 64679543311.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "dict.keys"}, {"pid": 19656, "tid": 21652, "ts": 64679543312.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 19656, "tid": 21652, "ts": 64679543311.9, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:289)"}, {"pid": 19656, "tid": 21652, "ts": 64679543312.4, "ph": "X", "cat": "fee", "dur": 3.999, "name": "re.Pattern.sub"}, {"pid": 19656, "tid": 21652, "ts": 64679543311.7, "ph": "X", "cat": "fee", "dur": 4.8, "name": "sub (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:203)"}, {"pid": 19656, "tid": 21652, "ts": 64679543317.0, "ph": "X", "cat": "fee", "dur": 191.499, "name": "builtins.print"}, {"pid": 19656, "tid": 21652, "ts": 64679543517.899, "ph": "X", "cat": "fee", "dur": 101.5, "name": "builtins.print"}, {"pid": 19656, "tid": 21652, "ts": 64679543257.5, "ph": "X", "cat": "fee", "dur": 362.4, "name": "printWordFrequencyOverYears (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:182)"}, {"pid": 19656, "tid": 21652, "ts": 64655789478.6, "ph": "X", "cat": "fee", "dur": 23754142.1, "name": "runWordCounter (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:213)"}, {"pid": 19656, "tid": 21652, "ts": 64679543629.1, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_chain_from_iterable_of_lists (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:553)"}, {"pid": 19656, "tid": 21652, "ts": 64679543630.3, "ph": "X", "cat": "fee", "dur": 1.2, "name": "result_iterator (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:601)"}, {"pid": 19656, "tid": 21652, "ts": 64655789477.9, "ph": "X", "cat": "fee", "dur": 23900622.999, "name": "main (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:280)"}, {"pid": 19656, "tid": 21652, "ts": 64655786947.1, "ph": "X", "cat": "fee", "dur": 23903154.9, "name": "<module> (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:1)"}, {"pid": 19656, "tid": 21652, "ts": 64655786946.4, "ph": "X", "cat": "fee", "dur": 23903156.599, "name": "builtins.exec"}, {"ph": "M", "pid": 20236, "tid": 20236, "name": "process_name", "args": {"name": "SpawnProcess-2"}}, {"ph": "M", "pid": 20236, "tid": 18860, "name": "thread_name", "args": {"name": "MainThread"}}, {"pid": 20236, "tid": 18860, "ts": 64655946678.9, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_multiprocessing.SemLock.__enter__"}, {"pid": 20236, "tid": 18860, "ts": 64655946678.599, "ph": "X", "cat": "fee", "dur": 1.4, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:94)"}, {"pid": 20236, "tid": 18860, "ts": 64655946681.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 20236, "tid": 18860, "ts": 64655946682.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 20236, "tid": 18860, "ts": 64655946683.8, "ph": "X", "cat": "fee", "dur": 6.699, "name": "_winapi.ReadFile"}, {"pid": 20236, "tid": 18860, "ts": 64655946692.0, "ph": "X", "cat": "fee", "dur": 1.799, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 20236, "tid": 18860, "ts": 64655946695.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 20236, "tid": 18860, "ts": 64655946696.4, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_io.BytesIO.write"}, {"pid": 20236, "tid": 18860, "ts": 64655946697.099, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_winapi.PeekNamedPipe"}, {"pid": 20236, "tid": 18860, "ts": 64655946703.5, "ph": "X", "cat": "fee", "dur": 1.899, "name": "_winapi.ReadFile"}, {"pid": 20236, "tid": 18860, "ts": 64655946705.699, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 20236, "tid": 18860, "ts": 64655946706.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 20236, "tid": 18860, "ts": 64655946706.499, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_io.BytesIO.write"}, {"pid": 20236, "tid": 18860, "ts": 64655946694.799, "ph": "X", "cat": "fee", "dur": 12.0, "name": "_get_more_data (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:337)"}, {"pid": 20236, "tid": 18860, "ts": 64655946682.899, "ph": "X", "cat": "fee", "dur": 24.8, "name": "_recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:299)"}, {"pid": 20236, "tid": 18860, "ts": 64655946708.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_io.BytesIO.getvalue"}, {"pid": 20236, "tid": 18860, "ts": 64655946680.599, "ph": "X", "cat": "fee", "dur": 28.0, "name": "recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:213)"}, {"pid": 20236, "tid": 18860, "ts": 64655946710.0, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_multiprocessing.SemLock.__exit__"}, {"pid": 20236, "tid": 18860, "ts": 64655946709.7, "ph": "X", "cat": "fee", "dur": 0.8, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:97)"}, {"pid": 20236, "tid": 18860, "ts": 64655946711.0, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_multiprocessing.SemLock.release"}, {"pid": 20236, "tid": 18860, "ts": 64655946721.8, "ph": "X", "cat": "fee", "dur": 1.6, "name": "_rebuild_partial (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:225)"}, {"pid": 20236, "tid": 18860, "ts": 64655946712.0, "ph": "X", "cat": "fee", "dur": 14.9, "name": "_pickle.loads"}, {"pid": 20236, "tid": 18860, "ts": 64655946677.599, "ph": "X", "cat": "fee", "dur": 49.4, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:98)"}, {"pid": 20236, "tid": 18860, "ts": 64655946729.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "time.perf_counter"}, {"pid": 20236, "tid": 18860, "ts": 64655946730.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "nt.getpid"}, {"pid": 20236, "tid": 18860, "ts": 64655946731.4, "ph": "X", "cat": "fee", "dur": 38.699, "name": "builtins.print"}, {"pid": 20236, "tid": 18860, "ts": 64655946811.6, "ph": "X", "cat": "fee", "dur": 1.7, "name": "_locale._getdefaultlocale"}, {"pid": 20236, "tid": 18860, "ts": 64655946810.899, "ph": "X", "cat": "fee", "dur": 2.8, "name": "getpreferredencoding (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_bootlocale.py:11)"}, {"pid": 20236, "tid": 18860, "ts": 64655946816.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\codecs.py:260)"}, {"pid": 20236, "tid": 18860, "ts": 64655946771.9, "ph": "X", "cat": "fee", "dur": 46.4, "name": "io.open"}, {"pid": 20236, "tid": 18860, "ts": 64656114434.6, "ph": "X", "cat": "fee", "dur": 300004.3, "name": "_codecs.charmap_decode"}, {"pid": 20236, "tid": 18860, "ts": 64656114426.2, "ph": "X", "cat": "fee", "dur": 300015.2, "name": "decode (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\encodings\\cp1252.py:22)"}, {"pid": 20236, "tid": 18860, "ts": 64655946819.2, "ph": "X", "cat": "fee", "dur": 896970.3, "name": "_io.TextIOWrapper.read"}, {"pid": 20236, "tid": 18860, "ts": 64656843803.0, "ph": "X", "cat": "fee", "dur": 125.099, "name": "_io.TextIOWrapper.__exit__"}, {"pid": 20236, "tid": 18860, "ts": 64655946771.5, "ph": "X", "cat": "fee", "dur": 897158.5, "name": "readInData (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:47)"}, {"pid": 20236, "tid": 18860, "ts": 64656843983.8, "ph": "X", "cat": "fee", "dur": 3853393.499, "name": "str.split"}, {"pid": 20236, "tid": 18860, "ts": 64660697384.6, "ph": "X", "cat": "fee", "dur": 1800008.0, "name": "str.join"}, {"pid": 20236, "tid": 18860, "ts": 64663670833.9, "ph": "X", "cat": "fee", "dur": 5.199, "name": "builtins.isinstance"}, {"pid": 20236, "tid": 18860, "ts": 64663670850.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 20236, "tid": 18860, "ts": 64663670854.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 20236, "tid": 18860, "ts": 64663670852.9, "ph": "X", "cat": "fee", "dur": 2.1, "name": "isstring (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:595)"}, {"pid": 20236, "tid": 18860, "ts": 64663670858.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 20236, "tid": 18860, "ts": 64663670857.9, "ph": "X", "cat": "fee", "dur": 0.319, "name": "isstring (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:595)"}, {"pid": 20236, "tid": 18860, "ts": 64663670864.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 20236, "tid": 18860, "ts": 64663670868.499, "ph": "X", "cat": "fee", "dur": 2.2, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 20236, "tid": 18860, "ts": 64663670863.9, "ph": "X", "cat": "fee", "dur": 7.0, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:224)"}, {"pid": 20236, "tid": 18860, "ts": 64663670874.2, "ph": "X", "cat": "fee", "dur": 2.5, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:76)"}, {"pid": 20236, "tid": 18860, "ts": 64663670882.5, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.len"}, {"pid": 20236, "tid": 18860, "ts": 64663670882.0, "ph": "X", "cat": "fee", "dur": 0.899, "name": "tell (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:286)"}, {"pid": 20236, "tid": 18860, "ts": 64663670884.9, "ph": "X", "cat": "fee", "dur": 1.2, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:111)"}, {"pid": 20236, "tid": 18860, "ts": 64663670889.0, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 20236, "tid": 18860, "ts": 64663670888.2, "ph": "X", "cat": "fee", "dur": 1.4, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 20236, "tid": 18860, "ts": 64663670890.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 20236, "tid": 18860, "ts": 64663670890.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "tell (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:286)"}, {"pid": 20236, "tid": 18860, "ts": 64663670891.7, "ph": "X", "cat": "fee", "dur": 0.399, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 20236, "tid": 18860, "ts": 64663670891.4, "ph": "X", "cat": "fee", "dur": 0.8, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 20236, "tid": 18860, "ts": 64663670892.599, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 20236, "tid": 18860, "ts": 64663670892.4, "ph": "X", "cat": "fee", "dur": 0.699, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 20236, "tid": 18860, "ts": 64663670894.0, "ph": "X", "cat": "fee", "dur": 0.7, "name": "builtins.ord"}, {"pid": 20236, "tid": 18860, "ts": 64663670895.099, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 20236, "tid": 18860, "ts": 64663670894.9, "ph": "X", "cat": "fee", "dur": 0.599, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 20236, "tid": 18860, "ts": 64663670895.899, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 20236, "tid": 18860, "ts": 64663670895.7, "ph": "X", "cat": "fee", "dur": 0.719, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 20236, "tid": 18860, "ts": 64663670896.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.ord"}, {"pid": 20236, "tid": 18860, "ts": 64663670898.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "list.append"}, {"pid": 20236, "tid": 18860, "ts": 64663670899.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 20236, "tid": 18860, "ts": 64663670898.899, "ph": "X", "cat": "fee", "dur": 0.5, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 20236, "tid": 18860, "ts": 64663670899.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.ord"}, {"pid": 20236, "tid": 18860, "ts": 64663670900.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 20236, "tid": 18860, "ts": 64663670900.1, "ph": "X", "cat": "fee", "dur": 0.5, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 20236, "tid": 18860, "ts": 64663670901.0, "ph": "X", "cat": "fee", "dur": 1.099, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 20236, "tid": 18860, "ts": 64663670900.8, "ph": "X", "cat": "fee", "dur": 1.399, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 20236, "tid": 18860, "ts": 64663670902.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.ord"}, {"pid": 20236, "tid": 18860, "ts": 64663670902.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 20236, "tid": 18860, "ts": 64663670903.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 20236, "tid": 18860, "ts": 64663670903.1, "ph": "X", "cat": "fee", "dur": 0.52, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 20236, "tid": 18860, "ts": 64663670905.6, "ph": "X", "cat": "fee", "dur": 0.6, "name": "dict.get"}, {"pid": 20236, "tid": 18860, "ts": 64663670906.4, "ph": "X", "cat": "fee", "dur": 0.399, "name": "dict.get"}, {"pid": 20236, "tid": 18860, "ts": 64663670904.6, "ph": "X", "cat": "fee", "dur": 2.6, "name": "_class_escape (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:295)"}, {"pid": 20236, "tid": 18860, "ts": 64663670907.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 20236, "tid": 18860, "ts": 64663670908.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 20236, "tid": 18860, "ts": 64663670908.6, "ph": "X", "cat": "fee", "dur": 0.199, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 20236, "tid": 18860, "ts": 64663670908.4, "ph": "X", "cat": "fee", "dur": 0.5, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 20236, "tid": 18860, "ts": 64663670911.0, "ph": "X", "cat": "fee", "dur": 2.599, "name": "type.fromkeys"}, {"pid": 20236, "tid": 18860, "ts": 64663670909.5, "ph": "X", "cat": "fee", "dur": 5.899, "name": "_uniq (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:432)"}, {"pid": 20236, "tid": 18860, "ts": 64663670915.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 20236, "tid": 18860, "ts": 64663670916.3, "ph": "X", "cat": "fee", "dur": 0.599, "name": "list.insert"}, {"pid": 20236, "tid": 18860, "ts": 64663670917.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 20236, "tid": 18860, "ts": 64663670917.399, "ph": "X", "cat": "fee", "dur": 0.32, "name": "append (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:172)"}, {"pid": 20236, "tid": 18860, "ts": 64663670918.4, "ph": "X", "cat": "fee", "dur": 2.0, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 20236, "tid": 18860, "ts": 64663670918.199, "ph": "X", "cat": "fee", "dur": 2.3, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 20236, "tid": 18860, "ts": 64663670921.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 20236, "tid": 18860, "ts": 64663670921.2, "ph": "X", "cat": "fee", "dur": 0.299, "name": "tell (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:286)"}, {"pid": 20236, "tid": 18860, "ts": 64663670925.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 20236, "tid": 18860, "ts": 64663670925.0, "ph": "X", "cat": "fee", "dur": 0.319, "name": "__len__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:160)"}, {"pid": 20236, "tid": 18860, "ts": 64663670928.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 20236, "tid": 18860, "ts": 64663670929.599, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:111)"}, {"pid": 20236, "tid": 18860, "ts": 64663670927.1, "ph": "X", "cat": "fee", "dur": 2.899, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 20236, "tid": 18860, "ts": 64663670930.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 20236, "tid": 18860, "ts": 64663670930.4, "ph": "X", "cat": "fee", "dur": 0.219, "name": "__len__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:160)"}, {"pid": 20236, "tid": 18860, "ts": 64663670930.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 20236, "tid": 18860, "ts": 64663670930.8, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 20236, "tid": 18860, "ts": 64663670931.619, "ph": "X", "cat": "fee", "dur": 0.08, "name": "builtins.isinstance"}, {"pid": 20236, "tid": 18860, "ts": 64663670931.599, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 20236, "tid": 18860, "ts": 64663670932.899, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 20236, "tid": 18860, "ts": 64663670932.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 20236, "tid": 18860, "ts": 64663670933.8, "ph": "X", "cat": "fee", "dur": 0.4, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 20236, "tid": 18860, "ts": 64663670935.399, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__setitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:168)"}, {"pid": 20236, "tid": 18860, "ts": 64663670936.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 20236, "tid": 18860, "ts": 64663670936.4, "ph": "X", "cat": "fee", "dur": 0.299, "name": "__len__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:160)"}, {"pid": 20236, "tid": 18860, "ts": 64663670936.199, "ph": "X", "cat": "fee", "dur": 0.52, "name": "builtins.len"}, {"pid": 20236, "tid": 18860, "ts": 64663670940.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 20236, "tid": 18860, "ts": 64663670940.3, "ph": "X", "cat": "fee", "dur": 0.199, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 20236, "tid": 18860, "ts": 64663670883.6, "ph": "X", "cat": "fee", "dur": 57.2, "name": "_parse (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:493)"}, {"pid": 20236, "tid": 18860, "ts": 64663670941.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 20236, "tid": 18860, "ts": 64663670941.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 20236, "tid": 18860, "ts": 64663670941.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 20236, "tid": 18860, "ts": 64663670878.899, "ph": "X", "cat": "fee", "dur": 63.3, "name": "_parse_sub (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:435)"}, {"pid": 20236, "tid": 18860, "ts": 64663670944.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 20236, "tid": 18860, "ts": 64663670942.999, "ph": "X", "cat": "fee", "dur": 2.6, "name": "fix_flags (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:921)"}, {"pid": 20236, "tid": 18860, "ts": 64663670860.0, "ph": "X", "cat": "fee", "dur": 86.0, "name": "parse (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:937)"}, {"pid": 20236, "tid": 18860, "ts": 64663670951.3, "ph": "X", "cat": "fee", "dur": 2.099, "name": "builtins.min"}, {"pid": 20236, "tid": 18860, "ts": 64663670953.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.min"}, {"pid": 20236, "tid": 18860, "ts": 64663670950.099, "ph": "X", "cat": "fee", "dur": 3.8, "name": "getwidth (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:174)"}, {"pid": 20236, "tid": 18860, "ts": 64663670955.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.min"}, {"pid": 20236, "tid": 18860, "ts": 64663670955.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.min"}, {"pid": 20236, "tid": 18860, "ts": 64663670949.0, "ph": "X", "cat": "fee", "dur": 6.9, "name": "getwidth (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:174)"}, {"pid": 20236, "tid": 18860, "ts": 64663670958.8, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_get_iscased (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:453)"}, {"pid": 20236, "tid": 18860, "ts": 64663670957.4, "ph": "X", "cat": "fee", "dur": 2.099, "name": "_get_literal_prefix (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:461)"}, {"pid": 20236, "tid": 18860, "ts": 64663670960.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_get_iscased (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:453)"}, {"pid": 20236, "tid": 18860, "ts": 64663670960.2, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_get_charset_prefix (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:492)"}, {"pid": 20236, "tid": 18860, "ts": 64663670961.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 20236, "tid": 18860, "ts": 64663670961.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 20236, "tid": 18860, "ts": 64663670961.799, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 20236, "tid": 18860, "ts": 64663670961.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 20236, "tid": 18860, "ts": 64663670962.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 20236, "tid": 18860, "ts": 64663670962.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.min"}, {"pid": 20236, "tid": 18860, "ts": 64663670962.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 20236, "tid": 18860, "ts": 64663670962.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 20236, "tid": 18860, "ts": 64663670947.8, "ph": "X", "cat": "fee", "dur": 15.1, "name": "_compile_info (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:536)"}, {"pid": 20236, "tid": 18860, "ts": 64663670967.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 20236, "tid": 18860, "ts": 64663670967.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__len__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:160)"}, {"pid": 20236, "tid": 18860, "ts": 64663670967.0, "ph": "X", "cat": "fee", "dur": 0.599, "name": "builtins.len"}, {"pid": 20236, "tid": 18860, "ts": 64663670968.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 20236, "tid": 18860, "ts": 64663670967.9, "ph": "X", "cat": "fee", "dur": 0.299, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 20236, "tid": 18860, "ts": 64663670966.9, "ph": "X", "cat": "fee", "dur": 1.5, "name": "_simple (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:423)"}, {"pid": 20236, "tid": 18860, "ts": 64663670968.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 20236, "tid": 18860, "ts": 64663670968.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 20236, "tid": 18860, "ts": 64663670968.899, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 20236, "tid": 18860, "ts": 64663670969.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 20236, "tid": 18860, "ts": 64663670969.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 20236, "tid": 18860, "ts": 64663670975.82, "ph": "X", "cat": "fee", "dur": 0.08, "name": "builtins.isinstance"}, {"pid": 20236, "tid": 18860, "ts": 64663670975.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 20236, "tid": 18860, "ts": 64663670979.499, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 20236, "tid": 18860, "ts": 64663670984.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 20236, "tid": 18860, "ts": 64663670985.4, "ph": "X", "cat": "fee", "dur": 1.899, "name": "bytearray.find"}, {"pid": 20236, "tid": 18860, "ts": 64663670987.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 20236, "tid": 18860, "ts": 64663670987.7, "ph": "X", "cat": "fee", "dur": 0.199, "name": "bytearray.find"}, {"pid": 20236, "tid": 18860, "ts": 64663670988.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 20236, "tid": 18860, "ts": 64663670988.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "bytearray.find"}, {"pid": 20236, "tid": 18860, "ts": 64663670988.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 20236, "tid": 18860, "ts": 64663670988.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "bytearray.find"}, {"pid": 20236, "tid": 18860, "ts": 64663670988.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 20236, "tid": 18860, "ts": 64663670989.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "bytearray.find"}, {"pid": 20236, "tid": 18860, "ts": 64663670989.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 20236, "tid": 18860, "ts": 64663670989.899, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 20236, "tid": 18860, "ts": 64663670990.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 20236, "tid": 18860, "ts": 64663670990.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 20236, "tid": 18860, "ts": 64663670976.7, "ph": "X", "cat": "fee", "dur": 14.1, "name": "_optimize_charset (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:276)"}, {"pid": 20236, "tid": 18860, "ts": 64663670991.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 20236, "tid": 18860, "ts": 64663670991.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 20236, "tid": 18860, "ts": 64663670992.02, "ph": "X", "cat": "fee", "dur": 0.079, "name": "list.append"}, {"pid": 20236, "tid": 18860, "ts": 64663670992.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 20236, "tid": 18860, "ts": 64663670993.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 20236, "tid": 18860, "ts": 64663670993.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 20236, "tid": 18860, "ts": 64663670993.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 20236, "tid": 18860, "ts": 64663670993.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 20236, "tid": 18860, "ts": 64663670993.699, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 20236, "tid": 18860, "ts": 64663670994.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 20236, "tid": 18860, "ts": 64663670994.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 20236, "tid": 18860, "ts": 64663670995.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 20236, "tid": 18860, "ts": 64663670995.499, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 20236, "tid": 18860, "ts": 64663670992.6, "ph": "X", "cat": "fee", "dur": 3.02, "name": "_compile_charset (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:249)"}, {"pid": 20236, "tid": 18860, "ts": 64663670995.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 20236, "tid": 18860, "ts": 64663670996.32, "ph": "X", "cat": "fee", "dur": 0.079, "name": "builtins.isinstance"}, {"pid": 20236, "tid": 18860, "ts": 64663670996.3, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 20236, "tid": 18860, "ts": 64663670974.3, "ph": "X", "cat": "fee", "dur": 23.9, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:71)"}, {"pid": 20236, "tid": 18860, "ts": 64663670998.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 20236, "tid": 18860, "ts": 64663670998.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 20236, "tid": 18860, "ts": 64663670964.7, "ph": "X", "cat": "fee", "dur": 34.099, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:71)"}, {"pid": 20236, "tid": 18860, "ts": 64663670999.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 20236, "tid": 18860, "ts": 64663670946.8, "ph": "X", "cat": "fee", "dur": 52.4, "name": "_code (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:598)"}, {"pid": 20236, "tid": 18860, "ts": 64663671000.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 20236, "tid": 18860, "ts": 64663671000.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "groups (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:81)"}, {"pid": 20236, "tid": 18860, "ts": 64663671001.1, "ph": "X", "cat": "fee", "dur": 0.399, "name": "dict.items"}, {"pid": 20236, "tid": 18860, "ts": 64663671002.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 20236, "tid": 18860, "ts": 64663671002.8, "ph": "X", "cat": "fee", "dur": 0.22, "name": "groups (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:81)"}, {"pid": 20236, "tid": 18860, "ts": 64663671003.7, "ph": "X", "cat": "fee", "dur": 1.6, "name": "_sre.compile"}, {"pid": 20236, "tid": 18860, "ts": 64663670857.2, "ph": "X", "cat": "fee", "dur": 148.3, "name": "compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:759)"}, {"pid": 20236, "tid": 18860, "ts": 64663671009.5, "ph": "X", "cat": "fee", "dur": 0.599, "name": "builtins.isinstance"}, {"pid": 20236, "tid": 18860, "ts": 64663671015.999, "ph": "X", "cat": "fee", "dur": 2.0, "name": "__new__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:670)"}, {"pid": 20236, "tid": 18860, "ts": 64663671013.3, "ph": "X", "cat": "fee", "dur": 4.8, "name": "__call__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:358)"}, {"pid": 20236, "tid": 18860, "ts": 64663671019.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__new__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:670)"}, {"pid": 20236, "tid": 18860, "ts": 64663671018.9, "ph": "X", "cat": "fee", "dur": 0.7, "name": "__call__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:358)"}, {"pid": 20236, "tid": 18860, "ts": 64663671008.899, "ph": "X", "cat": "fee", "dur": 10.8, "name": "__and__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:977)"}, {"pid": 20236, "tid": 18860, "ts": 64663671020.099, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 20236, "tid": 18860, "ts": 64663670832.2, "ph": "X", "cat": "fee", "dur": 188.899, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:289)"}, {"pid": 20236, "tid": 18860, "ts": 64663671021.7, "ph": "X", "cat": "fee", "dur": 5699002.699, "name": "re.Pattern.sub"}, {"pid": 20236, "tid": 18860, "ts": 64663670830.2, "ph": "X", "cat": "fee", "dur": 5699203.5, "name": "sub (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:203)"}, {"pid": 20236, "tid": 18860, "ts": 64669370046.6, "ph": "X", "cat": "fee", "dur": 2756511.2, "name": "str.split"}, {"pid": 20236, "tid": 18860, "ts": 64656843975.8, "ph": "X", "cat": "fee", "dur": 15301730.5, "name": "cleanAndTokenize (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:64)"}, {"pid": 20236, "tid": 18860, "ts": 64672149872.7, "ph": "X", "cat": "fee", "dur": 0.899, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 20236, "tid": 18860, "ts": 64672149883.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 20236, "tid": 18860, "ts": 64672149889.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 20236, "tid": 18860, "ts": 64672149887.8, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_abc._abc_subclasscheck"}, {"pid": 20236, "tid": 18860, "ts": 64672149887.5, "ph": "X", "cat": "fee", "dur": 4.399, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 20236, "tid": 18860, "ts": 64672149894.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 20236, "tid": 18860, "ts": 64672149892.5, "ph": "X", "cat": "fee", "dur": 2.3, "name": "_abc._abc_subclasscheck"}, {"pid": 20236, "tid": 18860, "ts": 64672149892.399, "ph": "X", "cat": "fee", "dur": 2.42, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 20236, "tid": 18860, "ts": 64672149897.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 20236, "tid": 18860, "ts": 64672149895.199, "ph": "X", "cat": "fee", "dur": 2.7, "name": "_abc._abc_subclasscheck"}, {"pid": 20236, "tid": 18860, "ts": 64672149895.1, "ph": "X", "cat": "fee", "dur": 2.82, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 20236, "tid": 18860, "ts": 64672149899.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 20236, "tid": 18860, "ts": 64672149898.22, "ph": "X", "cat": "fee", "dur": 2.18, "name": "_abc._abc_subclasscheck"}, {"pid": 20236, "tid": 18860, "ts": 64672149898.2, "ph": "X", "cat": "fee", "dur": 2.22, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 20236, "tid": 18860, "ts": 64672149901.799, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 20236, "tid": 18860, "ts": 64672149900.72, "ph": "X", "cat": "fee", "dur": 1.48, "name": "_abc._abc_subclasscheck"}, {"pid": 20236, "tid": 18860, "ts": 64672149900.7, "ph": "X", "cat": "fee", "dur": 1.52, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 20236, "tid": 18860, "ts": 64672149904.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 20236, "tid": 18860, "ts": 64672149907.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 20236, "tid": 18860, "ts": 64672149909.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 20236, "tid": 18860, "ts": 64672149908.899, "ph": "X", "cat": "fee", "dur": 1.6, "name": "_abc._abc_subclasscheck"}, {"pid": 20236, "tid": 18860, "ts": 64672149908.399, "ph": "X", "cat": "fee", "dur": 2.2, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 20236, "tid": 18860, "ts": 64672149905.9, "ph": "X", "cat": "fee", "dur": 6.899, "name": "_abc._abc_subclasscheck"}, {"pid": 20236, "tid": 18860, "ts": 64672149905.8, "ph": "X", "cat": "fee", "dur": 7.1, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 20236, "tid": 18860, "ts": 64672149902.42, "ph": "X", "cat": "fee", "dur": 10.779, "name": "_abc._abc_subclasscheck"}, {"pid": 20236, "tid": 18860, "ts": 64672149902.4, "ph": "X", "cat": "fee", "dur": 10.819, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 20236, "tid": 18860, "ts": 64672149914.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 20236, "tid": 18860, "ts": 64672149913.52, "ph": "X", "cat": "fee", "dur": 2.079, "name": "_abc._abc_subclasscheck"}, {"pid": 20236, "tid": 18860, "ts": 64672149913.5, "ph": "X", "cat": "fee", "dur": 2.199, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 20236, "tid": 18860, "ts": 64672149916.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 20236, "tid": 18860, "ts": 64672149915.92, "ph": "X", "cat": "fee", "dur": 1.48, "name": "_abc._abc_subclasscheck"}, {"pid": 20236, "tid": 18860, "ts": 64672149915.9, "ph": "X", "cat": "fee", "dur": 1.52, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 20236, "tid": 18860, "ts": 64672149880.8, "ph": "X", "cat": "fee", "dur": 37.0, "name": "_abc._abc_subclasscheck"}, {"pid": 20236, "tid": 18860, "ts": 64672149880.7, "ph": "X", "cat": "fee", "dur": 37.12, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 20236, "tid": 18860, "ts": 64672149919.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 20236, "tid": 18860, "ts": 64672149918.1, "ph": "X", "cat": "fee", "dur": 1.8, "name": "_abc._abc_subclasscheck"}, {"pid": 20236, "tid": 18860, "ts": 64672149917.999, "ph": "X", "cat": "fee", "dur": 1.92, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 20236, "tid": 18860, "ts": 64672149868.3, "ph": "X", "cat": "fee", "dur": 51.999, "name": "_abc._abc_subclasscheck"}, {"pid": 20236, "tid": 18860, "ts": 64672149868.2, "ph": "X", "cat": "fee", "dur": 52.2, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 20236, "tid": 18860, "ts": 64672149858.4, "ph": "X", "cat": "fee", "dur": 62.2, "name": "_abc._abc_instancecheck"}, {"pid": 20236, "tid": 18860, "ts": 64672149857.199, "ph": "X", "cat": "fee", "dur": 63.42, "name": "__instancecheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:117)"}, {"pid": 20236, "tid": 18860, "ts": 64672149852.4, "ph": "X", "cat": "fee", "dur": 68.499, "name": "builtins.isinstance"}, {"pid": 20236, "tid": 18860, "ts": 64672149921.4, "ph": "X", "cat": "fee", "dur": 4899369.8, "name": "_collections._count_elements"}, {"pid": 20236, "tid": 18860, "ts": 64672149848.799, "ph": "X", "cat": "fee", "dur": 4899447.9, "name": "update (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:649)"}, {"pid": 20236, "tid": 18860, "ts": 64672149833.0, "ph": "X", "cat": "fee", "dur": 4899470.0, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:581)"}, {"pid": 20236, "tid": 18860, "ts": 64655946771.099, "ph": "X", "cat": "fee", "dur": 21102533.9, "name": "getWordCount (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:83)"}, {"pid": 20236, "tid": 18860, "ts": 64677516646.3, "ph": "X", "cat": "fee", "dur": 1.799, "name": "time.perf_counter"}, {"pid": 20236, "tid": 18860, "ts": 64677516651.6, "ph": "X", "cat": "fee", "dur": 1.699, "name": "nt.getpid"}, {"pid": 20236, "tid": 18860, "ts": 64677516671.5, "ph": "X", "cat": "fee", "dur": 566.3, "name": "builtins.print"}, {"pid": 20236, "tid": 18860, "ts": 64677517246.199, "ph": "X", "cat": "fee", "dur": 0.7, "name": "Counter.values"}, {"pid": 20236, "tid": 18860, "ts": 64677517247.1, "ph": "X", "cat": "fee", "dur": 4201.5, "name": "builtins.sum"}, {"pid": 20236, "tid": 18860, "ts": 64677521451.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "Counter.items"}, {"pid": 20236, "tid": 18860, "ts": 64677517243.0, "ph": "X", "cat": "fee", "dur": 132039.899, "name": "getWordFrequencies (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:101)"}, {"pid": 20236, "tid": 18860, "ts": 64655946729.4, "ph": "X", "cat": "fee", "dur": 21702556.2, "name": "getWordData (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:123)"}, {"pid": 20236, "tid": 18860, "ts": 64655946728.9, "ph": "X", "cat": "fee", "dur": 21702559.0, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:202)"}, {"pid": 20236, "tid": 18860, "ts": 64655946728.2, "ph": "X", "cat": "fee", "dur": 21702562.1, "name": "_process_chunk (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:193)"}, {"pid": 20236, "tid": 18860, "ts": 64677649306.9, "ph": "X", "cat": "fee", "dur": 2.0, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:145)"}, {"pid": 20236, "tid": 18860, "ts": 64677649339.7, "ph": "X", "cat": "fee", "dur": 1.899, "name": "dict.copy"}, {"pid": 20236, "tid": 18860, "ts": 64677649342.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "dict.update"}, {"pid": 20236, "tid": 18860, "ts": 64677649324.4, "ph": "X", "cat": "fee", "dur": 21.0, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 20236, "tid": 18860, "ts": 64677649373.399, "ph": "X", "cat": "fee", "dur": 0.9, "name": "mappingproxy.get"}, {"pid": 20236, "tid": 18860, "ts": 64677649375.2, "ph": "X", "cat": "fee", "dur": 1.999, "name": "builtins.hasattr"}, {"pid": 20236, "tid": 18860, "ts": 64677649371.599, "ph": "X", "cat": "fee", "dur": 6.7, "name": "_slotnames (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\copyreg.py:103)"}, {"pid": 20236, "tid": 18860, "ts": 64677649395.1, "ph": "X", "cat": "fee", "dur": 45445.899, "name": "__reduce__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:714)"}, {"pid": 20236, "tid": 18860, "ts": 64677649345.999, "ph": "X", "cat": "fee", "dur": 264862.5, "name": "ForkingPickler.dump"}, {"pid": 20236, "tid": 18860, "ts": 64677929711.8, "ph": "X", "cat": "fee", "dur": 1.5, "name": "_io.BytesIO.getbuffer"}, {"pid": 20236, "tid": 18860, "ts": 64677649316.8, "ph": "X", "cat": "fee", "dur": 280396.8, "name": "dumps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:48)"}, {"pid": 20236, "tid": 18860, "ts": 64677929720.1, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 20236, "tid": 18860, "ts": 64677929724.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 20236, "tid": 18860, "ts": 64677929728.7, "ph": "X", "cat": "fee", "dur": 0.5, "name": "builtins.len"}, {"pid": 20236, "tid": 18860, "ts": 64677929735.4, "ph": "X", "cat": "fee", "dur": 2546.4, "name": "_winapi.WriteFile"}, {"pid": 20236, "tid": 18860, "ts": 64677932288.599, "ph": "X", "cat": "fee", "dur": 4648.3, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 20236, "tid": 18860, "ts": 64677936939.5, "ph": "X", "cat": "fee", "dur": 3.399, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 20236, "tid": 18860, "ts": 64677936943.7, "ph": "X", "cat": "fee", "dur": 0.299, "name": "builtins.len"}, {"pid": 20236, "tid": 18860, "ts": 64677929732.7, "ph": "X", "cat": "fee", "dur": 7211.6, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 20236, "tid": 18860, "ts": 64677929718.699, "ph": "X", "cat": "fee", "dur": 7231.1, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 20236, "tid": 18860, "ts": 64677649310.499, "ph": "X", "cat": "fee", "dur": 287640.4, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:370)"}, {"pid": 20236, "tid": 18860, "ts": 64677649300.7, "ph": "X", "cat": "fee", "dur": 288121.999, "name": "_sendback_result (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:205)"}, {"pid": 20236, "tid": 18860, "ts": 64678093330.3, "ph": "X", "cat": "fee", "dur": 1085179.4, "name": "_multiprocessing.SemLock.__enter__"}, {"pid": 20236, "tid": 18860, "ts": 64678093329.2, "ph": "X", "cat": "fee", "dur": 1085181.7, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:94)"}, {"pid": 20236, "tid": 18860, "ts": 64679178520.0, "ph": "X", "cat": "fee", "dur": 0.599, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 20236, "tid": 18860, "ts": 64679178521.199, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 20236, "tid": 18860, "ts": 64679178523.999, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_winapi.ReadFile"}, {"pid": 20236, "tid": 18860, "ts": 64679178530.8, "ph": "X", "cat": "fee", "dur": 1.0, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 20236, "tid": 18860, "ts": 64679178533.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 20236, "tid": 18860, "ts": 64679178534.099, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_io.BytesIO.write"}, {"pid": 20236, "tid": 18860, "ts": 64679178522.0, "ph": "X", "cat": "fee", "dur": 12.4, "name": "_recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:299)"}, {"pid": 20236, "tid": 18860, "ts": 64679178536.2, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_io.BytesIO.getvalue"}, {"pid": 20236, "tid": 18860, "ts": 64679178518.899, "ph": "X", "cat": "fee", "dur": 17.62, "name": "recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:213)"}, {"pid": 20236, "tid": 18860, "ts": 64679178538.5, "ph": "X", "cat": "fee", "dur": 1.199, "name": "_multiprocessing.SemLock.__exit__"}, {"pid": 20236, "tid": 18860, "ts": 64679178537.399, "ph": "X", "cat": "fee", "dur": 2.4, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:97)"}, {"pid": 20236, "tid": 18860, "ts": 64679178541.0, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_multiprocessing.SemLock.release"}, {"pid": 20236, "tid": 18860, "ts": 64679178542.1, "ph": "X", "cat": "fee", "dur": 2.3, "name": "_pickle.loads"}, {"pid": 20236, "tid": 18860, "ts": 64678093326.2, "ph": "X", "cat": "fee", "dur": 1085218.299, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:98)"}, {"pid": 20236, "tid": 18860, "ts": 64679178546.6, "ph": "X", "cat": "fee", "dur": 0.599, "name": "nt.getpid"}, {"pid": 20236, "tid": 18860, "ts": 64679178556.6, "ph": "X", "cat": "fee", "dur": 0.5, "name": "dict.copy"}, {"pid": 20236, "tid": 18860, "ts": 64679178557.699, "ph": "X", "cat": "fee", "dur": 1.2, "name": "dict.update"}, {"pid": 20236, "tid": 18860, "ts": 64679178551.099, "ph": "X", "cat": "fee", "dur": 8.0, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 20236, "tid": 18860, "ts": 64679178559.5, "ph": "X", "cat": "fee", "dur": 2.399, "name": "ForkingPickler.dump"}, {"pid": 20236, "tid": 18860, "ts": 64679178562.6, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_io.BytesIO.getbuffer"}, {"pid": 20236, "tid": 18860, "ts": 64679178549.599, "ph": "X", "cat": "fee", "dur": 13.52, "name": "dumps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:48)"}, {"pid": 20236, "tid": 18860, "ts": 64679178564.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 20236, "tid": 18860, "ts": 64679178565.6, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 20236, "tid": 18860, "ts": 64679178567.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 20236, "tid": 18860, "ts": 64679178569.3, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_winapi.WriteFile"}, {"pid": 20236, "tid": 18860, "ts": 64679178573.7, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 20236, "tid": 18860, "ts": 64679178574.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 20236, "tid": 18860, "ts": 64679178568.8, "ph": "X", "cat": "fee", "dur": 5.599, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 20236, "tid": 18860, "ts": 64679178564.5, "ph": "X", "cat": "fee", "dur": 10.9, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 20236, "tid": 18860, "ts": 64679178547.9, "ph": "X", "cat": "fee", "dur": 27.7, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:370)"}, {"pid": 20236, "tid": 18860, "ts": 64655946676.299, "ph": "X", "cat": "fee", "dur": 23231899.8, "name": "_process_worker (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:215)"}, {"pid": 20236, "tid": 18860, "ts": 64655946674.299, "ph": "X", "cat": "fee", "dur": 23231902.5, "name": "run (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:103)"}, {"pid": 20236, "tid": 18860, "ts": 64679178585.0, "ph": "X", "cat": "fee", "dur": 0.6, "name": "info (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:52)"}, {"pid": 20236, "tid": 18860, "ts": 64679178586.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:48)"}, {"pid": 20236, "tid": 18860, "ts": 64679178591.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "<lambda> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:284)"}, {"pid": 20236, "tid": 18860, "ts": 64679178591.3, "ph": "X", "cat": "fee", "dur": 3.3, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:291)"}, {"pid": 20236, "tid": 18860, "ts": 64679178595.4, "ph": "X", "cat": "fee", "dur": 0.5, "name": "list.sort"}, {"pid": 20236, "tid": 18860, "ts": 64679178587.599, "ph": "X", "cat": "fee", "dur": 8.5, "name": "_run_finalizers (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:268)"}, {"pid": 20236, "tid": 18860, "ts": 64679178597.2, "ph": "X", "cat": "fee", "dur": 0.7, "name": "current_process (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:37)"}, {"pid": 20236, "tid": 18860, "ts": 64679178599.3, "ph": "X", "cat": "fee", "dur": 1.399, "name": "_cleanup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:61)"}, {"pid": 20236, "tid": 18860, "ts": 64679178598.499, "ph": "X", "cat": "fee", "dur": 2.5, "name": "active_children (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:43)"}, {"pid": 20236, "tid": 18860, "ts": 64679178601.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_cleanup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:61)"}, {"pid": 20236, "tid": 18860, "ts": 64679178601.299, "ph": "X", "cat": "fee", "dur": 0.5, "name": "active_children (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:43)"}, {"pid": 20236, "tid": 18860, "ts": 64679178602.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:48)"}, {"pid": 20236, "tid": 18860, "ts": 64679178603.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "<lambda> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:282)"}, {"pid": 20236, "tid": 18860, "ts": 64679178603.2, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:291)"}, {"pid": 20236, "tid": 18860, "ts": 64679178604.099, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.sort"}, {"pid": 20236, "tid": 18860, "ts": 64679178604.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "dict.get"}, {"pid": 20236, "tid": 18860, "ts": 64679178605.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "sub_debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:44)"}, {"pid": 20236, "tid": 18860, "ts": 64679178609.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 20236, "tid": 18860, "ts": 64679178610.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "sub_debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:44)"}, {"ph": "M", "pid": 22484, "tid": 22484, "name": "process_name", "args": {"name": "SpawnProcess-8"}}, {"ph": "M", "pid": 22484, "tid": 8068, "name": "thread_name", "args": {"name": "MainThread"}}, {"pid": 22484, "tid": 8068, "ts": 64655954063.5, "ph": "X", "cat": "fee", "dur": 0.9, "name": "_multiprocessing.SemLock.__enter__"}, {"pid": 22484, "tid": 8068, "ts": 64655954063.1, "ph": "X", "cat": "fee", "dur": 1.399, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:94)"}, {"pid": 22484, "tid": 8068, "ts": 64655954065.599, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 22484, "tid": 8068, "ts": 64655954066.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 22484, "tid": 8068, "ts": 64655954067.8, "ph": "X", "cat": "fee", "dur": 6.7, "name": "_winapi.ReadFile"}, {"pid": 22484, "tid": 8068, "ts": 64655954075.499, "ph": "X", "cat": "fee", "dur": 2.1, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 22484, "tid": 8068, "ts": 64655954078.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 22484, "tid": 8068, "ts": 64655954080.6, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_io.BytesIO.write"}, {"pid": 22484, "tid": 8068, "ts": 64655954081.2, "ph": "X", "cat": "fee", "dur": 5.8, "name": "_winapi.PeekNamedPipe"}, {"pid": 22484, "tid": 8068, "ts": 64655954087.6, "ph": "X", "cat": "fee", "dur": 2.1, "name": "_winapi.ReadFile"}, {"pid": 22484, "tid": 8068, "ts": 64655954089.899, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 22484, "tid": 8068, "ts": 64655954090.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 22484, "tid": 8068, "ts": 64655954090.62, "ph": "X", "cat": "fee", "dur": 0.38, "name": "_io.BytesIO.write"}, {"pid": 22484, "tid": 8068, "ts": 64655954078.7, "ph": "X", "cat": "fee", "dur": 12.4, "name": "_get_more_data (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:337)"}, {"pid": 22484, "tid": 8068, "ts": 64655954067.0, "ph": "X", "cat": "fee", "dur": 24.8, "name": "_recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:299)"}, {"pid": 22484, "tid": 8068, "ts": 64655954092.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_io.BytesIO.getvalue"}, {"pid": 22484, "tid": 8068, "ts": 64655954065.099, "ph": "X", "cat": "fee", "dur": 27.7, "name": "recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:213)"}, {"pid": 22484, "tid": 8068, "ts": 64655954093.999, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_multiprocessing.SemLock.__exit__"}, {"pid": 22484, "tid": 8068, "ts": 64655954093.6, "ph": "X", "cat": "fee", "dur": 0.899, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:97)"}, {"pid": 22484, "tid": 8068, "ts": 64655954094.999, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_multiprocessing.SemLock.release"}, {"pid": 22484, "tid": 8068, "ts": 64655954106.1, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_rebuild_partial (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:225)"}, {"pid": 22484, "tid": 8068, "ts": 64655954095.9, "ph": "X", "cat": "fee", "dur": 14.6, "name": "_pickle.loads"}, {"pid": 22484, "tid": 8068, "ts": 64655954062.0, "ph": "X", "cat": "fee", "dur": 48.6, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:98)"}, {"pid": 22484, "tid": 8068, "ts": 64655954113.3, "ph": "X", "cat": "fee", "dur": 0.199, "name": "time.perf_counter"}, {"pid": 22484, "tid": 8068, "ts": 64655954113.8, "ph": "X", "cat": "fee", "dur": 0.299, "name": "nt.getpid"}, {"pid": 22484, "tid": 8068, "ts": 64655954114.7, "ph": "X", "cat": "fee", "dur": 44.5, "name": "builtins.print"}, {"pid": 22484, "tid": 8068, "ts": 64655954213.7, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_locale._getdefaultlocale"}, {"pid": 22484, "tid": 8068, "ts": 64655954212.8, "ph": "X", "cat": "fee", "dur": 4.599, "name": "getpreferredencoding (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_bootlocale.py:11)"}, {"pid": 22484, "tid": 8068, "ts": 64655954223.1, "ph": "X", "cat": "fee", "dur": 0.6, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\codecs.py:260)"}, {"pid": 22484, "tid": 8068, "ts": 64655954162.2, "ph": "X", "cat": "fee", "dur": 63.299, "name": "io.open"}, {"pid": 22484, "tid": 8068, "ts": 64656128937.7, "ph": "X", "cat": "fee", "dur": 287901.199, "name": "_codecs.charmap_decode"}, {"pid": 22484, "tid": 8068, "ts": 64656128934.8, "ph": "X", "cat": "fee", "dur": 287906.2, "name": "decode (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\encodings\\cp1252.py:22)"}, {"pid": 22484, "tid": 8068, "ts": 64655954226.9, "ph": "X", "cat": "fee", "dur": 887640.099, "name": "_io.TextIOWrapper.read"}, {"pid": 22484, "tid": 8068, "ts": 64656841883.999, "ph": "X", "cat": "fee", "dur": 225.3, "name": "_io.TextIOWrapper.__exit__"}, {"pid": 22484, "tid": 8068, "ts": 64655954161.5, "ph": "X", "cat": "fee", "dur": 887955.0, "name": "readInData (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:47)"}, {"pid": 22484, "tid": 8068, "ts": 64656842214.6, "ph": "X", "cat": "fee", "dur": 3519952.6, "name": "str.split"}, {"pid": 22484, "tid": 8068, "ts": 64660362173.3, "ph": "X", "cat": "fee", "dur": 1450428.6, "name": "str.join"}, {"pid": 22484, "tid": 8068, "ts": 64663281231.8, "ph": "X", "cat": "fee", "dur": 6.3, "name": "builtins.isinstance"}, {"pid": 22484, "tid": 8068, "ts": 64663281251.0, "ph": "X", "cat": "fee", "dur": 0.299, "name": "builtins.isinstance"}, {"pid": 22484, "tid": 8068, "ts": 64663281255.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 22484, "tid": 8068, "ts": 64663281254.1, "ph": "X", "cat": "fee", "dur": 2.199, "name": "isstring (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:595)"}, {"pid": 22484, "tid": 8068, "ts": 64663281259.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 22484, "tid": 8068, "ts": 64663281258.9, "ph": "X", "cat": "fee", "dur": 0.399, "name": "isstring (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:595)"}, {"pid": 22484, "tid": 8068, "ts": 64663281265.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 22484, "tid": 8068, "ts": 64663281269.9, "ph": "X", "cat": "fee", "dur": 2.2, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 22484, "tid": 8068, "ts": 64663281265.5, "ph": "X", "cat": "fee", "dur": 6.7, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:224)"}, {"pid": 22484, "tid": 8068, "ts": 64663281276.299, "ph": "X", "cat": "fee", "dur": 2.7, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:76)"}, {"pid": 22484, "tid": 8068, "ts": 64663281286.199, "ph": "X", "cat": "fee", "dur": 0.5, "name": "builtins.len"}, {"pid": 22484, "tid": 8068, "ts": 64663281285.399, "ph": "X", "cat": "fee", "dur": 1.4, "name": "tell (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:286)"}, {"pid": 22484, "tid": 8068, "ts": 64663281289.4, "ph": "X", "cat": "fee", "dur": 1.9, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:111)"}, {"pid": 22484, "tid": 8068, "ts": 64663281294.299, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 22484, "tid": 8068, "ts": 64663281293.9, "ph": "X", "cat": "fee", "dur": 1.0, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 22484, "tid": 8068, "ts": 64663281295.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 22484, "tid": 8068, "ts": 64663281295.7, "ph": "X", "cat": "fee", "dur": 0.32, "name": "tell (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:286)"}, {"pid": 22484, "tid": 8068, "ts": 64663281297.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 22484, "tid": 8068, "ts": 64663281297.0, "ph": "X", "cat": "fee", "dur": 0.72, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 22484, "tid": 8068, "ts": 64663281298.2, "ph": "X", "cat": "fee", "dur": 0.399, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 22484, "tid": 8068, "ts": 64663281298.0, "ph": "X", "cat": "fee", "dur": 0.7, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 22484, "tid": 8068, "ts": 64663281300.3, "ph": "X", "cat": "fee", "dur": 0.8, "name": "builtins.ord"}, {"pid": 22484, "tid": 8068, "ts": 64663281301.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 22484, "tid": 8068, "ts": 64663281301.3, "ph": "X", "cat": "fee", "dur": 0.599, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 22484, "tid": 8068, "ts": 64663281302.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 22484, "tid": 8068, "ts": 64663281302.1, "ph": "X", "cat": "fee", "dur": 0.7, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 22484, "tid": 8068, "ts": 64663281303.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.ord"}, {"pid": 22484, "tid": 8068, "ts": 64663281304.8, "ph": "X", "cat": "fee", "dur": 0.899, "name": "list.append"}, {"pid": 22484, "tid": 8068, "ts": 64663281306.199, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 22484, "tid": 8068, "ts": 64663281306.0, "ph": "X", "cat": "fee", "dur": 0.5, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 22484, "tid": 8068, "ts": 64663281306.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.ord"}, {"pid": 22484, "tid": 8068, "ts": 64663281307.499, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 22484, "tid": 8068, "ts": 64663281307.199, "ph": "X", "cat": "fee", "dur": 0.6, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 22484, "tid": 8068, "ts": 64663281308.2, "ph": "X", "cat": "fee", "dur": 1.4, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 22484, "tid": 8068, "ts": 64663281307.999, "ph": "X", "cat": "fee", "dur": 1.62, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 22484, "tid": 8068, "ts": 64663281309.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.ord"}, {"pid": 22484, "tid": 8068, "ts": 64663281310.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 22484, "tid": 8068, "ts": 64663281310.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 22484, "tid": 8068, "ts": 64663281310.7, "ph": "X", "cat": "fee", "dur": 0.5, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 22484, "tid": 8068, "ts": 64663281313.799, "ph": "X", "cat": "fee", "dur": 0.7, "name": "dict.get"}, {"pid": 22484, "tid": 8068, "ts": 64663281314.7, "ph": "X", "cat": "fee", "dur": 0.399, "name": "dict.get"}, {"pid": 22484, "tid": 8068, "ts": 64663281312.1, "ph": "X", "cat": "fee", "dur": 3.399, "name": "_class_escape (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:295)"}, {"pid": 22484, "tid": 8068, "ts": 64663281315.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 22484, "tid": 8068, "ts": 64663281316.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 22484, "tid": 8068, "ts": 64663281317.099, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 22484, "tid": 8068, "ts": 64663281316.9, "ph": "X", "cat": "fee", "dur": 0.5, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 22484, "tid": 8068, "ts": 64663281319.1, "ph": "X", "cat": "fee", "dur": 2.7, "name": "type.fromkeys"}, {"pid": 22484, "tid": 8068, "ts": 64663281318.099, "ph": "X", "cat": "fee", "dur": 5.7, "name": "_uniq (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:432)"}, {"pid": 22484, "tid": 8068, "ts": 64663281323.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 22484, "tid": 8068, "ts": 64663281325.199, "ph": "X", "cat": "fee", "dur": 0.5, "name": "list.insert"}, {"pid": 22484, "tid": 8068, "ts": 64663281326.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 22484, "tid": 8068, "ts": 64663281326.2, "ph": "X", "cat": "fee", "dur": 0.319, "name": "append (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:172)"}, {"pid": 22484, "tid": 8068, "ts": 64663281327.2, "ph": "X", "cat": "fee", "dur": 2.1, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 22484, "tid": 8068, "ts": 64663281326.999, "ph": "X", "cat": "fee", "dur": 2.4, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 22484, "tid": 8068, "ts": 64663281330.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 22484, "tid": 8068, "ts": 64663281330.0, "ph": "X", "cat": "fee", "dur": 0.5, "name": "tell (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:286)"}, {"pid": 22484, "tid": 8068, "ts": 64663281336.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 22484, "tid": 8068, "ts": 64663281336.099, "ph": "X", "cat": "fee", "dur": 0.32, "name": "__len__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:160)"}, {"pid": 22484, "tid": 8068, "ts": 64663281339.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 22484, "tid": 8068, "ts": 64663281341.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:111)"}, {"pid": 22484, "tid": 8068, "ts": 64663281338.899, "ph": "X", "cat": "fee", "dur": 2.8, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 22484, "tid": 8068, "ts": 64663281342.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 22484, "tid": 8068, "ts": 64663281342.199, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__len__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:160)"}, {"pid": 22484, "tid": 8068, "ts": 64663281342.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 22484, "tid": 8068, "ts": 64663281342.6, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 22484, "tid": 8068, "ts": 64663281343.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 22484, "tid": 8068, "ts": 64663281343.5, "ph": "X", "cat": "fee", "dur": 0.199, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 22484, "tid": 8068, "ts": 64663281344.92, "ph": "X", "cat": "fee", "dur": 0.079, "name": "builtins.isinstance"}, {"pid": 22484, "tid": 8068, "ts": 64663281344.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 22484, "tid": 8068, "ts": 64663281345.999, "ph": "X", "cat": "fee", "dur": 0.5, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 22484, "tid": 8068, "ts": 64663281347.7, "ph": "X", "cat": "fee", "dur": 0.599, "name": "__setitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:168)"}, {"pid": 22484, "tid": 8068, "ts": 64663281349.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 22484, "tid": 8068, "ts": 64663281349.0, "ph": "X", "cat": "fee", "dur": 0.299, "name": "__len__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:160)"}, {"pid": 22484, "tid": 8068, "ts": 64663281348.799, "ph": "X", "cat": "fee", "dur": 0.6, "name": "builtins.len"}, {"pid": 22484, "tid": 8068, "ts": 64663281353.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 22484, "tid": 8068, "ts": 64663281353.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 22484, "tid": 8068, "ts": 64663281287.8, "ph": "X", "cat": "fee", "dur": 66.4, "name": "_parse (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:493)"}, {"pid": 22484, "tid": 8068, "ts": 64663281354.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 22484, "tid": 8068, "ts": 64663281355.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 22484, "tid": 8068, "ts": 64663281355.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 22484, "tid": 8068, "ts": 64663281281.7, "ph": "X", "cat": "fee", "dur": 74.199, "name": "_parse_sub (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:435)"}, {"pid": 22484, "tid": 8068, "ts": 64663281357.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 22484, "tid": 8068, "ts": 64663281356.899, "ph": "X", "cat": "fee", "dur": 2.5, "name": "fix_flags (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:921)"}, {"pid": 22484, "tid": 8068, "ts": 64663281261.9, "ph": "X", "cat": "fee", "dur": 98.1, "name": "parse (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:937)"}, {"pid": 22484, "tid": 8068, "ts": 64663281366.4, "ph": "X", "cat": "fee", "dur": 2.399, "name": "builtins.min"}, {"pid": 22484, "tid": 8068, "ts": 64663281369.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.min"}, {"pid": 22484, "tid": 8068, "ts": 64663281364.999, "ph": "X", "cat": "fee", "dur": 4.3, "name": "getwidth (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:174)"}, {"pid": 22484, "tid": 8068, "ts": 64663281370.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.min"}, {"pid": 22484, "tid": 8068, "ts": 64663281371.02, "ph": "X", "cat": "fee", "dur": 0.18, "name": "builtins.min"}, {"pid": 22484, "tid": 8068, "ts": 64663281363.6, "ph": "X", "cat": "fee", "dur": 7.7, "name": "getwidth (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:174)"}, {"pid": 22484, "tid": 8068, "ts": 64663281375.6, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_get_iscased (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:453)"}, {"pid": 22484, "tid": 8068, "ts": 64663281373.5, "ph": "X", "cat": "fee", "dur": 2.899, "name": "_get_literal_prefix (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:461)"}, {"pid": 22484, "tid": 8068, "ts": 64663281378.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_get_iscased (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:453)"}, {"pid": 22484, "tid": 8068, "ts": 64663281377.199, "ph": "X", "cat": "fee", "dur": 1.6, "name": "_get_charset_prefix (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:492)"}, {"pid": 22484, "tid": 8068, "ts": 64663281379.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 22484, "tid": 8068, "ts": 64663281379.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 22484, "tid": 8068, "ts": 64663281379.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 22484, "tid": 8068, "ts": 64663281379.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 22484, "tid": 8068, "ts": 64663281379.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 22484, "tid": 8068, "ts": 64663281380.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.min"}, {"pid": 22484, "tid": 8068, "ts": 64663281380.199, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 22484, "tid": 8068, "ts": 64663281380.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 22484, "tid": 8068, "ts": 64663281362.8, "ph": "X", "cat": "fee", "dur": 17.799, "name": "_compile_info (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:536)"}, {"pid": 22484, "tid": 8068, "ts": 64663281385.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 22484, "tid": 8068, "ts": 64663281385.5, "ph": "X", "cat": "fee", "dur": 0.22, "name": "__len__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:160)"}, {"pid": 22484, "tid": 8068, "ts": 64663281385.2, "ph": "X", "cat": "fee", "dur": 0.599, "name": "builtins.len"}, {"pid": 22484, "tid": 8068, "ts": 64663281386.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 22484, "tid": 8068, "ts": 64663281386.1, "ph": "X", "cat": "fee", "dur": 0.299, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 22484, "tid": 8068, "ts": 64663281385.0, "ph": "X", "cat": "fee", "dur": 1.799, "name": "_simple (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:423)"}, {"pid": 22484, "tid": 8068, "ts": 64663281387.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 22484, "tid": 8068, "ts": 64663281387.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 22484, "tid": 8068, "ts": 64663281387.299, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 22484, "tid": 8068, "ts": 64663281387.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 22484, "tid": 8068, "ts": 64663281387.52, "ph": "X", "cat": "fee", "dur": 0.279, "name": "list.append"}, {"pid": 22484, "tid": 8068, "ts": 64663281395.699, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 22484, "tid": 8068, "ts": 64663281395.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 22484, "tid": 8068, "ts": 64663281400.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 22484, "tid": 8068, "ts": 64663281405.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 22484, "tid": 8068, "ts": 64663281406.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "bytearray.find"}, {"pid": 22484, "tid": 8068, "ts": 64663281408.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 22484, "tid": 8068, "ts": 64663281409.099, "ph": "X", "cat": "fee", "dur": 0.2, "name": "bytearray.find"}, {"pid": 22484, "tid": 8068, "ts": 64663281409.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 22484, "tid": 8068, "ts": 64663281409.599, "ph": "X", "cat": "fee", "dur": 0.2, "name": "bytearray.find"}, {"pid": 22484, "tid": 8068, "ts": 64663281409.899, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 22484, "tid": 8068, "ts": 64663281410.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "bytearray.find"}, {"pid": 22484, "tid": 8068, "ts": 64663281410.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 22484, "tid": 8068, "ts": 64663281410.399, "ph": "X", "cat": "fee", "dur": 0.2, "name": "bytearray.find"}, {"pid": 22484, "tid": 8068, "ts": 64663281411.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 22484, "tid": 8068, "ts": 64663281411.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 22484, "tid": 8068, "ts": 64663281411.899, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 22484, "tid": 8068, "ts": 64663281412.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 22484, "tid": 8068, "ts": 64663281396.699, "ph": "X", "cat": "fee", "dur": 15.5, "name": "_optimize_charset (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:276)"}, {"pid": 22484, "tid": 8068, "ts": 64663281413.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 22484, "tid": 8068, "ts": 64663281413.22, "ph": "X", "cat": "fee", "dur": 0.079, "name": "builtins.len"}, {"pid": 22484, "tid": 8068, "ts": 64663281413.399, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 22484, "tid": 8068, "ts": 64663281414.199, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 22484, "tid": 8068, "ts": 64663281414.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 22484, "tid": 8068, "ts": 64663281414.699, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 22484, "tid": 8068, "ts": 64663281414.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 22484, "tid": 8068, "ts": 64663281414.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 22484, "tid": 8068, "ts": 64663281415.1, "ph": "X", "cat": "fee", "dur": 0.4, "name": "list.append"}, {"pid": 22484, "tid": 8068, "ts": 64663281415.52, "ph": "X", "cat": "fee", "dur": 0.079, "name": "list.append"}, {"pid": 22484, "tid": 8068, "ts": 64663281415.699, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 22484, "tid": 8068, "ts": 64663281417.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 22484, "tid": 8068, "ts": 64663281417.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 22484, "tid": 8068, "ts": 64663281413.9, "ph": "X", "cat": "fee", "dur": 3.599, "name": "_compile_charset (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:249)"}, {"pid": 22484, "tid": 8068, "ts": 64663281417.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 22484, "tid": 8068, "ts": 64663281418.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 22484, "tid": 8068, "ts": 64663281418.1, "ph": "X", "cat": "fee", "dur": 0.8, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 22484, "tid": 8068, "ts": 64663281393.899, "ph": "X", "cat": "fee", "dur": 26.4, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:71)"}, {"pid": 22484, "tid": 8068, "ts": 64663281420.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 22484, "tid": 8068, "ts": 64663281420.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 22484, "tid": 8068, "ts": 64663281382.6, "ph": "X", "cat": "fee", "dur": 38.3, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:71)"}, {"pid": 22484, "tid": 8068, "ts": 64663281421.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 22484, "tid": 8068, "ts": 64663281361.4, "ph": "X", "cat": "fee", "dur": 59.899, "name": "_code (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:598)"}, {"pid": 22484, "tid": 8068, "ts": 64663281422.799, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 22484, "tid": 8068, "ts": 64663281422.5, "ph": "X", "cat": "fee", "dur": 0.42, "name": "groups (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:81)"}, {"pid": 22484, "tid": 8068, "ts": 64663281423.5, "ph": "X", "cat": "fee", "dur": 0.7, "name": "dict.items"}, {"pid": 22484, "tid": 8068, "ts": 64663281426.099, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 22484, "tid": 8068, "ts": 64663281426.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "groups (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:81)"}, {"pid": 22484, "tid": 8068, "ts": 64663281427.3, "ph": "X", "cat": "fee", "dur": 1.7, "name": "_sre.compile"}, {"pid": 22484, "tid": 8068, "ts": 64663281258.1, "ph": "X", "cat": "fee", "dur": 170.999, "name": "compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:759)"}, {"pid": 22484, "tid": 8068, "ts": 64663281433.9, "ph": "X", "cat": "fee", "dur": 0.6, "name": "builtins.isinstance"}, {"pid": 22484, "tid": 8068, "ts": 64663281440.5, "ph": "X", "cat": "fee", "dur": 3.0, "name": "__new__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:670)"}, {"pid": 22484, "tid": 8068, "ts": 64663281437.3, "ph": "X", "cat": "fee", "dur": 6.299, "name": "__call__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:358)"}, {"pid": 22484, "tid": 8068, "ts": 64663281444.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__new__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:670)"}, {"pid": 22484, "tid": 8068, "ts": 64663281444.5, "ph": "X", "cat": "fee", "dur": 0.599, "name": "__call__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:358)"}, {"pid": 22484, "tid": 8068, "ts": 64663281433.1, "ph": "X", "cat": "fee", "dur": 12.1, "name": "__and__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:977)"}, {"pid": 22484, "tid": 8068, "ts": 64663281445.599, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 22484, "tid": 8068, "ts": 64663281230.0, "ph": "X", "cat": "fee", "dur": 216.6, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:289)"}, {"pid": 22484, "tid": 8068, "ts": 64663281447.5, "ph": "X", "cat": "fee", "dur": 5315043.2, "name": "re.Pattern.sub"}, {"pid": 22484, "tid": 8068, "ts": 64663281227.899, "ph": "X", "cat": "fee", "dur": 5315270.0, "name": "sub (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:203)"}, {"pid": 22484, "tid": 8068, "ts": 64668596508.499, "ph": "X", "cat": "fee", "dur": 2714152.0, "name": "str.split"}, {"pid": 22484, "tid": 8068, "ts": 64656842204.2, "ph": "X", "cat": "fee", "dur": 14492818.7, "name": "cleanAndTokenize (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:64)"}, {"pid": 22484, "tid": 8068, "ts": 64671339437.199, "ph": "X", "cat": "fee", "dur": 0.9, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 22484, "tid": 8068, "ts": 64671339448.4, "ph": "X", "cat": "fee", "dur": 0.199, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 22484, "tid": 8068, "ts": 64671339456.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 22484, "tid": 8068, "ts": 64671339454.5, "ph": "X", "cat": "fee", "dur": 4.699, "name": "_abc._abc_subclasscheck"}, {"pid": 22484, "tid": 8068, "ts": 64671339454.0, "ph": "X", "cat": "fee", "dur": 5.3, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 22484, "tid": 8068, "ts": 64671339461.799, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 22484, "tid": 8068, "ts": 64671339460.1, "ph": "X", "cat": "fee", "dur": 2.099, "name": "_abc._abc_subclasscheck"}, {"pid": 22484, "tid": 8068, "ts": 64671339460.0, "ph": "X", "cat": "fee", "dur": 2.299, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 22484, "tid": 8068, "ts": 64671339464.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 22484, "tid": 8068, "ts": 64671339462.6, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_abc._abc_subclasscheck"}, {"pid": 22484, "tid": 8068, "ts": 64671339462.5, "ph": "X", "cat": "fee", "dur": 2.92, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 22484, "tid": 8068, "ts": 64671339468.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 22484, "tid": 8068, "ts": 64671339465.7, "ph": "X", "cat": "fee", "dur": 3.6, "name": "_abc._abc_subclasscheck"}, {"pid": 22484, "tid": 8068, "ts": 64671339465.599, "ph": "X", "cat": "fee", "dur": 3.72, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 22484, "tid": 8068, "ts": 64671339471.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 22484, "tid": 8068, "ts": 64671339469.82, "ph": "X", "cat": "fee", "dur": 2.379, "name": "_abc._abc_subclasscheck"}, {"pid": 22484, "tid": 8068, "ts": 64671339469.8, "ph": "X", "cat": "fee", "dur": 2.419, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 22484, "tid": 8068, "ts": 64671339474.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 22484, "tid": 8068, "ts": 64671339478.299, "ph": "X", "cat": "fee", "dur": 0.02, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 22484, "tid": 8068, "ts": 64671339480.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 22484, "tid": 8068, "ts": 64671339479.2, "ph": "X", "cat": "fee", "dur": 2.0, "name": "_abc._abc_subclasscheck"}, {"pid": 22484, "tid": 8068, "ts": 64671339479.0, "ph": "X", "cat": "fee", "dur": 2.22, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 22484, "tid": 8068, "ts": 64671339476.7, "ph": "X", "cat": "fee", "dur": 8.2, "name": "_abc._abc_subclasscheck"}, {"pid": 22484, "tid": 8068, "ts": 64671339476.6, "ph": "X", "cat": "fee", "dur": 8.4, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 22484, "tid": 8068, "ts": 64671339472.5, "ph": "X", "cat": "fee", "dur": 12.699, "name": "_abc._abc_subclasscheck"}, {"pid": 22484, "tid": 8068, "ts": 64671339472.4, "ph": "X", "cat": "fee", "dur": 12.9, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 22484, "tid": 8068, "ts": 64671339489.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 22484, "tid": 8068, "ts": 64671339485.7, "ph": "X", "cat": "fee", "dur": 4.8, "name": "_abc._abc_subclasscheck"}, {"pid": 22484, "tid": 8068, "ts": 64671339485.6, "ph": "X", "cat": "fee", "dur": 4.92, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 22484, "tid": 8068, "ts": 64671339492.199, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 22484, "tid": 8068, "ts": 64671339490.8, "ph": "X", "cat": "fee", "dur": 2.0, "name": "_abc._abc_subclasscheck"}, {"pid": 22484, "tid": 8068, "ts": 64671339490.699, "ph": "X", "cat": "fee", "dur": 2.12, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 22484, "tid": 8068, "ts": 64671339447.099, "ph": "X", "cat": "fee", "dur": 46.0, "name": "_abc._abc_subclasscheck"}, {"pid": 22484, "tid": 8068, "ts": 64671339447.0, "ph": "X", "cat": "fee", "dur": 46.12, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 22484, "tid": 8068, "ts": 64671339494.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 22484, "tid": 8068, "ts": 64671339493.499, "ph": "X", "cat": "fee", "dur": 2.0, "name": "_abc._abc_subclasscheck"}, {"pid": 22484, "tid": 8068, "ts": 64671339493.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 22484, "tid": 8068, "ts": 64671339431.5, "ph": "X", "cat": "fee", "dur": 64.3, "name": "_abc._abc_subclasscheck"}, {"pid": 22484, "tid": 8068, "ts": 64671339431.399, "ph": "X", "cat": "fee", "dur": 64.5, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 22484, "tid": 8068, "ts": 64671339418.9, "ph": "X", "cat": "fee", "dur": 77.099, "name": "_abc._abc_instancecheck"}, {"pid": 22484, "tid": 8068, "ts": 64671339417.199, "ph": "X", "cat": "fee", "dur": 78.9, "name": "__instancecheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:117)"}, {"pid": 22484, "tid": 8068, "ts": 64671339410.9, "ph": "X", "cat": "fee", "dur": 85.399, "name": "builtins.isinstance"}, {"pid": 22484, "tid": 8068, "ts": 64671339496.9, "ph": "X", "cat": "fee", "dur": 4466034.6, "name": "_collections._count_elements"}, {"pid": 22484, "tid": 8068, "ts": 64671339408.0, "ph": "X", "cat": "fee", "dur": 4466129.9, "name": "update (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:649)"}, {"pid": 22484, "tid": 8068, "ts": 64671339395.0, "ph": "X", "cat": "fee", "dur": 4466150.1, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:581)"}, {"pid": 22484, "tid": 8068, "ts": 64655954161.0, "ph": "X", "cat": "fee", "dur": 19851386.2, "name": "getWordCount (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:83)"}, {"pid": 22484, "tid": 8068, "ts": 64676641871.1, "ph": "X", "cat": "fee", "dur": 1.9, "name": "time.perf_counter"}, {"pid": 22484, "tid": 8068, "ts": 64676641878.6, "ph": "X", "cat": "fee", "dur": 2.599, "name": "nt.getpid"}, {"pid": 22484, "tid": 8068, "ts": 64676641903.6, "ph": "X", "cat": "fee", "dur": 148.299, "name": "builtins.print"}, {"pid": 22484, "tid": 8068, "ts": 64676642061.299, "ph": "X", "cat": "fee", "dur": 0.7, "name": "Counter.values"}, {"pid": 22484, "tid": 8068, "ts": 64676642062.1, "ph": "X", "cat": "fee", "dur": 5504.599, "name": "builtins.sum"}, {"pid": 22484, "tid": 8068, "ts": 64676647570.0, "ph": "X", "cat": "fee", "dur": 0.4, "name": "Counter.items"}, {"pid": 22484, "tid": 8068, "ts": 64676642056.699, "ph": "X", "cat": "fee", "dur": 240646.7, "name": "getWordFrequencies (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:101)"}, {"pid": 22484, "tid": 8068, "ts": 64655954112.8, "ph": "X", "cat": "fee", "dur": 20928593.1, "name": "getWordData (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:123)"}, {"pid": 22484, "tid": 8068, "ts": 64655954112.3, "ph": "X", "cat": "fee", "dur": 20928595.6, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:202)"}, {"pid": 22484, "tid": 8068, "ts": 64655954111.699, "ph": "X", "cat": "fee", "dur": 20928597.9, "name": "_process_chunk (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:193)"}, {"pid": 22484, "tid": 8068, "ts": 64676882723.3, "ph": "X", "cat": "fee", "dur": 1.4, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:145)"}, {"pid": 22484, "tid": 8068, "ts": 64676882755.1, "ph": "X", "cat": "fee", "dur": 1.6, "name": "dict.copy"}, {"pid": 22484, "tid": 8068, "ts": 64676882757.9, "ph": "X", "cat": "fee", "dur": 1.9, "name": "dict.update"}, {"pid": 22484, "tid": 8068, "ts": 64676882735.6, "ph": "X", "cat": "fee", "dur": 24.6, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 22484, "tid": 8068, "ts": 64676882783.899, "ph": "X", "cat": "fee", "dur": 0.8, "name": "mappingproxy.get"}, {"pid": 22484, "tid": 8068, "ts": 64676882785.5, "ph": "X", "cat": "fee", "dur": 2.199, "name": "builtins.hasattr"}, {"pid": 22484, "tid": 8068, "ts": 64676882781.7, "ph": "X", "cat": "fee", "dur": 7.499, "name": "_slotnames (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\copyreg.py:103)"}, {"pid": 22484, "tid": 8068, "ts": 64676882806.3, "ph": "X", "cat": "fee", "dur": 70201.4, "name": "__reduce__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:714)"}, {"pid": 22484, "tid": 8068, "ts": 64676882760.8, "ph": "X", "cat": "fee", "dur": 394778.8, "name": "ForkingPickler.dump"}, {"pid": 22484, "tid": 8068, "ts": 64677311121.7, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_io.BytesIO.getbuffer"}, {"pid": 22484, "tid": 8068, "ts": 64676882731.199, "ph": "X", "cat": "fee", "dur": 428393.9, "name": "dumps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:48)"}, {"pid": 22484, "tid": 8068, "ts": 64677311135.1, "ph": "X", "cat": "fee", "dur": 0.899, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 22484, "tid": 8068, "ts": 64677311145.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 22484, "tid": 8068, "ts": 64677311149.5, "ph": "X", "cat": "fee", "dur": 0.8, "name": "builtins.len"}, {"pid": 22484, "tid": 8068, "ts": 64677311160.3, "ph": "X", "cat": "fee", "dur": 4727.9, "name": "_winapi.WriteFile"}, {"pid": 22484, "tid": 8068, "ts": 64677315895.3, "ph": "X", "cat": "fee", "dur": 279897.5, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 22484, "tid": 8068, "ts": 64677595796.899, "ph": "X", "cat": "fee", "dur": 3.4, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 22484, "tid": 8068, "ts": 64677595801.4, "ph": "X", "cat": "fee", "dur": 0.7, "name": "builtins.len"}, {"pid": 22484, "tid": 8068, "ts": 64677311156.0, "ph": "X", "cat": "fee", "dur": 284646.3, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 22484, "tid": 8068, "ts": 64677311133.7, "ph": "X", "cat": "fee", "dur": 284675.599, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 22484, "tid": 8068, "ts": 64676882726.4, "ph": "X", "cat": "fee", "dur": 713083.999, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:370)"}, {"pid": 22484, "tid": 8068, "ts": 64676882717.6, "ph": "X", "cat": "fee", "dur": 713687.9, "name": "_sendback_result (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:205)"}, {"pid": 22484, "tid": 8068, "ts": 64677771201.1, "ph": "X", "cat": "fee", "dur": 1407235.699, "name": "_multiprocessing.SemLock.__enter__"}, {"pid": 22484, "tid": 8068, "ts": 64677771198.5, "ph": "X", "cat": "fee", "dur": 1407239.299, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:94)"}, {"pid": 22484, "tid": 8068, "ts": 64679178443.5, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 22484, "tid": 8068, "ts": 64679178444.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 22484, "tid": 8068, "ts": 64679178447.6, "ph": "X", "cat": "fee", "dur": 6.9, "name": "_winapi.ReadFile"}, {"pid": 22484, "tid": 8068, "ts": 64679178455.6, "ph": "X", "cat": "fee", "dur": 1.299, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 22484, "tid": 8068, "ts": 64679178459.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 22484, "tid": 8068, "ts": 64679178459.3, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_io.BytesIO.write"}, {"pid": 22484, "tid": 8068, "ts": 64679178445.899, "ph": "X", "cat": "fee", "dur": 13.8, "name": "_recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:299)"}, {"pid": 22484, "tid": 8068, "ts": 64679178461.7, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_io.BytesIO.getvalue"}, {"pid": 22484, "tid": 8068, "ts": 64679178441.5, "ph": "X", "cat": "fee", "dur": 20.6, "name": "recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:213)"}, {"pid": 22484, "tid": 8068, "ts": 64679178464.2, "ph": "X", "cat": "fee", "dur": 2.099, "name": "_multiprocessing.SemLock.__exit__"}, {"pid": 22484, "tid": 8068, "ts": 64679178463.2, "ph": "X", "cat": "fee", "dur": 3.199, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:97)"}, {"pid": 22484, "tid": 8068, "ts": 64679178467.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_multiprocessing.SemLock.release"}, {"pid": 22484, "tid": 8068, "ts": 64679178468.8, "ph": "X", "cat": "fee", "dur": 2.299, "name": "_pickle.loads"}, {"pid": 22484, "tid": 8068, "ts": 64677771195.1, "ph": "X", "cat": "fee", "dur": 1407276.1, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:98)"}, {"pid": 22484, "tid": 8068, "ts": 64679178473.5, "ph": "X", "cat": "fee", "dur": 0.5, "name": "nt.getpid"}, {"pid": 22484, "tid": 8068, "ts": 64679178485.4, "ph": "X", "cat": "fee", "dur": 0.299, "name": "dict.copy"}, {"pid": 22484, "tid": 8068, "ts": 64679178486.3, "ph": "X", "cat": "fee", "dur": 1.0, "name": "dict.update"}, {"pid": 22484, "tid": 8068, "ts": 64679178478.099, "ph": "X", "cat": "fee", "dur": 9.4, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 22484, "tid": 8068, "ts": 64679178487.9, "ph": "X", "cat": "fee", "dur": 2.899, "name": "ForkingPickler.dump"}, {"pid": 22484, "tid": 8068, "ts": 64679178491.4, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_io.BytesIO.getbuffer"}, {"pid": 22484, "tid": 8068, "ts": 64679178476.599, "ph": "X", "cat": "fee", "dur": 15.3, "name": "dumps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:48)"}, {"pid": 22484, "tid": 8068, "ts": 64679178494.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 22484, "tid": 8068, "ts": 64679178494.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 22484, "tid": 8068, "ts": 64679178496.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 22484, "tid": 8068, "ts": 64679178499.2, "ph": "X", "cat": "fee", "dur": 3.8, "name": "_winapi.WriteFile"}, {"pid": 22484, "tid": 8068, "ts": 64679178503.5, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 22484, "tid": 8068, "ts": 64679178504.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 22484, "tid": 8068, "ts": 64679178498.3, "ph": "X", "cat": "fee", "dur": 5.899, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 22484, "tid": 8068, "ts": 64679178493.5, "ph": "X", "cat": "fee", "dur": 11.8, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 22484, "tid": 8068, "ts": 64679178474.6, "ph": "X", "cat": "fee", "dur": 30.899, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:370)"}, {"pid": 22484, "tid": 8068, "ts": 64655954060.7, "ph": "X", "cat": "fee", "dur": 23224445.2, "name": "_process_worker (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:215)"}, {"pid": 22484, "tid": 8068, "ts": 64655954058.8, "ph": "X", "cat": "fee", "dur": 23224447.799, "name": "run (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:103)"}, {"pid": 22484, "tid": 8068, "ts": 64679178514.099, "ph": "X", "cat": "fee", "dur": 0.6, "name": "info (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:52)"}, {"pid": 22484, "tid": 8068, "ts": 64679178515.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:48)"}, {"pid": 22484, "tid": 8068, "ts": 64679178521.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "<lambda> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:284)"}, {"pid": 22484, "tid": 8068, "ts": 64679178520.6, "ph": "X", "cat": "fee", "dur": 5.8, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:291)"}, {"pid": 22484, "tid": 8068, "ts": 64679178527.5, "ph": "X", "cat": "fee", "dur": 0.5, "name": "list.sort"}, {"pid": 22484, "tid": 8068, "ts": 64679178516.7, "ph": "X", "cat": "fee", "dur": 11.599, "name": "_run_finalizers (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:268)"}, {"pid": 22484, "tid": 8068, "ts": 64679178529.799, "ph": "X", "cat": "fee", "dur": 0.7, "name": "current_process (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:37)"}, {"pid": 22484, "tid": 8068, "ts": 64679178532.3, "ph": "X", "cat": "fee", "dur": 1.5, "name": "_cleanup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:61)"}, {"pid": 22484, "tid": 8068, "ts": 64679178531.2, "ph": "X", "cat": "fee", "dur": 2.8, "name": "active_children (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:43)"}, {"pid": 22484, "tid": 8068, "ts": 64679178534.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_cleanup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:61)"}, {"pid": 22484, "tid": 8068, "ts": 64679178534.4, "ph": "X", "cat": "fee", "dur": 0.499, "name": "active_children (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:43)"}, {"pid": 22484, "tid": 8068, "ts": 64679178535.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:48)"}, {"pid": 22484, "tid": 8068, "ts": 64679178537.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<lambda> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:282)"}, {"pid": 22484, "tid": 8068, "ts": 64679178536.6, "ph": "X", "cat": "fee", "dur": 0.9, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:291)"}, {"pid": 22484, "tid": 8068, "ts": 64679178537.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.sort"}, {"pid": 22484, "tid": 8068, "ts": 64679178538.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "dict.get"}, {"pid": 22484, "tid": 8068, "ts": 64679178539.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "sub_debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:44)"}, {"pid": 22484, "tid": 8068, "ts": 64679178543.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "nt.getpid"}, {"pid": 22484, "tid": 8068, "ts": 64679178545.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "sub_debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:44)"}, {"ph": "M", "pid": 5100, "tid": 5100, "name": "process_name", "args": {"name": "SpawnProcess-5"}}, {"ph": "M", "pid": 5100, "tid": 20560, "name": "thread_name", "args": {"name": "MainThread"}}, {"pid": 5100, "tid": 20560, "ts": 64655950153.2, "ph": "X", "cat": "fee", "dur": 0.899, "name": "_multiprocessing.SemLock.__enter__"}, {"pid": 5100, "tid": 20560, "ts": 64655950152.8, "ph": "X", "cat": "fee", "dur": 1.5, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:94)"}, {"pid": 5100, "tid": 20560, "ts": 64655950155.399, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 5100, "tid": 20560, "ts": 64655950156.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 5100, "tid": 20560, "ts": 64655950157.899, "ph": "X", "cat": "fee", "dur": 6.8, "name": "_winapi.ReadFile"}, {"pid": 5100, "tid": 20560, "ts": 64655950165.8, "ph": "X", "cat": "fee", "dur": 2.499, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 5100, "tid": 20560, "ts": 64655950169.9, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 5100, "tid": 20560, "ts": 64655950171.8, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_io.BytesIO.write"}, {"pid": 5100, "tid": 20560, "ts": 64655950172.599, "ph": "X", "cat": "fee", "dur": 8.0, "name": "_winapi.PeekNamedPipe"}, {"pid": 5100, "tid": 20560, "ts": 64655950181.4, "ph": "X", "cat": "fee", "dur": 2.899, "name": "_winapi.ReadFile"}, {"pid": 5100, "tid": 20560, "ts": 64655950184.7, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 5100, "tid": 20560, "ts": 64655950185.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 5100, "tid": 20560, "ts": 64655950185.799, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_io.BytesIO.write"}, {"pid": 5100, "tid": 20560, "ts": 64655950169.5, "ph": "X", "cat": "fee", "dur": 17.0, "name": "_get_more_data (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:337)"}, {"pid": 5100, "tid": 20560, "ts": 64655950156.8, "ph": "X", "cat": "fee", "dur": 30.7, "name": "_recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:299)"}, {"pid": 5100, "tid": 20560, "ts": 64655950188.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_io.BytesIO.getvalue"}, {"pid": 5100, "tid": 20560, "ts": 64655950154.9, "ph": "X", "cat": "fee", "dur": 33.899, "name": "recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:213)"}, {"pid": 5100, "tid": 20560, "ts": 64655950190.7, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_multiprocessing.SemLock.__exit__"}, {"pid": 5100, "tid": 20560, "ts": 64655950190.099, "ph": "X", "cat": "fee", "dur": 1.2, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:97)"}, {"pid": 5100, "tid": 20560, "ts": 64655950191.899, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_multiprocessing.SemLock.release"}, {"pid": 5100, "tid": 20560, "ts": 64655950205.7, "ph": "X", "cat": "fee", "dur": 1.7, "name": "_rebuild_partial (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:225)"}, {"pid": 5100, "tid": 20560, "ts": 64655950193.1, "ph": "X", "cat": "fee", "dur": 18.299, "name": "_pickle.loads"}, {"pid": 5100, "tid": 20560, "ts": 64655950151.7, "ph": "X", "cat": "fee", "dur": 59.8, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:98)"}, {"pid": 5100, "tid": 20560, "ts": 64655950214.5, "ph": "X", "cat": "fee", "dur": 0.299, "name": "time.perf_counter"}, {"pid": 5100, "tid": 20560, "ts": 64655950215.199, "ph": "X", "cat": "fee", "dur": 0.2, "name": "nt.getpid"}, {"pid": 5100, "tid": 20560, "ts": 64655950216.1, "ph": "X", "cat": "fee", "dur": 50.7, "name": "builtins.print"}, {"pid": 5100, "tid": 20560, "ts": 64655950312.2, "ph": "X", "cat": "fee", "dur": 1.9, "name": "_locale._getdefaultlocale"}, {"pid": 5100, "tid": 20560, "ts": 64655950311.4, "ph": "X", "cat": "fee", "dur": 3.1, "name": "getpreferredencoding (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_bootlocale.py:11)"}, {"pid": 5100, "tid": 20560, "ts": 64655950317.599, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\codecs.py:260)"}, {"pid": 5100, "tid": 20560, "ts": 64655950269.5, "ph": "X", "cat": "fee", "dur": 50.2, "name": "io.open"}, {"pid": 5100, "tid": 20560, "ts": 64656103994.399, "ph": "X", "cat": "fee", "dur": 262481.4, "name": "_codecs.charmap_decode"}, {"pid": 5100, "tid": 20560, "ts": 64656103985.799, "ph": "X", "cat": "fee", "dur": 262492.9, "name": "decode (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\encodings\\cp1252.py:22)"}, {"pid": 5100, "tid": 20560, "ts": 64655950320.8, "ph": "X", "cat": "fee", "dur": 774180.099, "name": "_io.TextIOWrapper.read"}, {"pid": 5100, "tid": 20560, "ts": 64656724505.699, "ph": "X", "cat": "fee", "dur": 62.3, "name": "_io.TextIOWrapper.__exit__"}, {"pid": 5100, "tid": 20560, "ts": 64655950268.8, "ph": "X", "cat": "fee", "dur": 774300.1, "name": "readInData (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:47)"}, {"pid": 5100, "tid": 20560, "ts": 64656724586.6, "ph": "X", "cat": "fee", "dur": 3536985.599, "name": "str.split"}, {"pid": 5100, "tid": 20560, "ts": 64660261576.7, "ph": "X", "cat": "fee", "dur": 1480401.1, "name": "str.join"}, {"pid": 5100, "tid": 20560, "ts": 64663149508.4, "ph": "X", "cat": "fee", "dur": 8.2, "name": "builtins.isinstance"}, {"pid": 5100, "tid": 20560, "ts": 64663149534.399, "ph": "X", "cat": "fee", "dur": 1.1, "name": "builtins.isinstance"}, {"pid": 5100, "tid": 20560, "ts": 64663149542.8, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.isinstance"}, {"pid": 5100, "tid": 20560, "ts": 64663149539.8, "ph": "X", "cat": "fee", "dur": 3.8, "name": "isstring (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:595)"}, {"pid": 5100, "tid": 20560, "ts": 64663149548.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 5100, "tid": 20560, "ts": 64663149547.799, "ph": "X", "cat": "fee", "dur": 0.42, "name": "isstring (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:595)"}, {"pid": 5100, "tid": 20560, "ts": 64663149558.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 5100, "tid": 20560, "ts": 64663149564.2, "ph": "X", "cat": "fee", "dur": 4.1, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 5100, "tid": 20560, "ts": 64663149558.3, "ph": "X", "cat": "fee", "dur": 10.299, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:224)"}, {"pid": 5100, "tid": 20560, "ts": 64663149575.0, "ph": "X", "cat": "fee", "dur": 4.8, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:76)"}, {"pid": 5100, "tid": 20560, "ts": 64663149590.2, "ph": "X", "cat": "fee", "dur": 0.699, "name": "builtins.len"}, {"pid": 5100, "tid": 20560, "ts": 64663149589.399, "ph": "X", "cat": "fee", "dur": 1.9, "name": "tell (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:286)"}, {"pid": 5100, "tid": 20560, "ts": 64663149596.3, "ph": "X", "cat": "fee", "dur": 2.999, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:111)"}, {"pid": 5100, "tid": 20560, "ts": 64663149604.2, "ph": "X", "cat": "fee", "dur": 0.6, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 5100, "tid": 20560, "ts": 64663149603.5, "ph": "X", "cat": "fee", "dur": 1.4, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 5100, "tid": 20560, "ts": 64663149606.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 5100, "tid": 20560, "ts": 64663149606.2, "ph": "X", "cat": "fee", "dur": 0.4, "name": "tell (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:286)"}, {"pid": 5100, "tid": 20560, "ts": 64663149608.7, "ph": "X", "cat": "fee", "dur": 0.899, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 5100, "tid": 20560, "ts": 64663149608.2, "ph": "X", "cat": "fee", "dur": 1.599, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 5100, "tid": 20560, "ts": 64663149610.5, "ph": "X", "cat": "fee", "dur": 0.699, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 5100, "tid": 20560, "ts": 64663149610.199, "ph": "X", "cat": "fee", "dur": 1.4, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 5100, "tid": 20560, "ts": 64663149613.6, "ph": "X", "cat": "fee", "dur": 1.1, "name": "builtins.ord"}, {"pid": 5100, "tid": 20560, "ts": 64663149615.6, "ph": "X", "cat": "fee", "dur": 0.8, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 5100, "tid": 20560, "ts": 64663149615.2, "ph": "X", "cat": "fee", "dur": 1.4, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 5100, "tid": 20560, "ts": 64663149617.5, "ph": "X", "cat": "fee", "dur": 0.799, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 5100, "tid": 20560, "ts": 64663149617.1, "ph": "X", "cat": "fee", "dur": 1.3, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 5100, "tid": 20560, "ts": 64663149618.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.ord"}, {"pid": 5100, "tid": 20560, "ts": 64663149621.4, "ph": "X", "cat": "fee", "dur": 1.099, "name": "list.append"}, {"pid": 5100, "tid": 20560, "ts": 64663149623.4, "ph": "X", "cat": "fee", "dur": 0.399, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 5100, "tid": 20560, "ts": 64663149623.0, "ph": "X", "cat": "fee", "dur": 1.0, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 5100, "tid": 20560, "ts": 64663149624.599, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.ord"}, {"pid": 5100, "tid": 20560, "ts": 64663149625.8, "ph": "X", "cat": "fee", "dur": 0.7, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 5100, "tid": 20560, "ts": 64663149625.399, "ph": "X", "cat": "fee", "dur": 1.3, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 5100, "tid": 20560, "ts": 64663149627.399, "ph": "X", "cat": "fee", "dur": 2.4, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 5100, "tid": 20560, "ts": 64663149627.0, "ph": "X", "cat": "fee", "dur": 3.0, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 5100, "tid": 20560, "ts": 64663149630.6, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.ord"}, {"pid": 5100, "tid": 20560, "ts": 64663149631.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 5100, "tid": 20560, "ts": 64663149632.7, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 5100, "tid": 20560, "ts": 64663149632.3, "ph": "X", "cat": "fee", "dur": 1.199, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 5100, "tid": 20560, "ts": 64663149637.7, "ph": "X", "cat": "fee", "dur": 1.099, "name": "dict.get"}, {"pid": 5100, "tid": 20560, "ts": 64663149639.5, "ph": "X", "cat": "fee", "dur": 0.8, "name": "dict.get"}, {"pid": 5100, "tid": 20560, "ts": 64663149635.3, "ph": "X", "cat": "fee", "dur": 5.899, "name": "_class_escape (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:295)"}, {"pid": 5100, "tid": 20560, "ts": 64663149641.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 5100, "tid": 20560, "ts": 64663149643.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 5100, "tid": 20560, "ts": 64663149643.8, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 5100, "tid": 20560, "ts": 64663149643.399, "ph": "X", "cat": "fee", "dur": 1.1, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 5100, "tid": 20560, "ts": 64663149647.699, "ph": "X", "cat": "fee", "dur": 5.0, "name": "type.fromkeys"}, {"pid": 5100, "tid": 20560, "ts": 64663149645.5, "ph": "X", "cat": "fee", "dur": 10.299, "name": "_uniq (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:432)"}, {"pid": 5100, "tid": 20560, "ts": 64663149656.0, "ph": "X", "cat": "fee", "dur": 0.299, "name": "builtins.len"}, {"pid": 5100, "tid": 20560, "ts": 64663149657.2, "ph": "X", "cat": "fee", "dur": 1.0, "name": "list.insert"}, {"pid": 5100, "tid": 20560, "ts": 64663149660.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 5100, "tid": 20560, "ts": 64663149659.599, "ph": "X", "cat": "fee", "dur": 0.7, "name": "append (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:172)"}, {"pid": 5100, "tid": 20560, "ts": 64663149661.5, "ph": "X", "cat": "fee", "dur": 4.0, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 5100, "tid": 20560, "ts": 64663149661.099, "ph": "X", "cat": "fee", "dur": 4.5, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 5100, "tid": 20560, "ts": 64663149667.199, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 5100, "tid": 20560, "ts": 64663149666.699, "ph": "X", "cat": "fee", "dur": 0.8, "name": "tell (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:286)"}, {"pid": 5100, "tid": 20560, "ts": 64663149673.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 5100, "tid": 20560, "ts": 64663149672.5, "ph": "X", "cat": "fee", "dur": 0.799, "name": "__len__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:160)"}, {"pid": 5100, "tid": 20560, "ts": 64663149677.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 5100, "tid": 20560, "ts": 64663149680.399, "ph": "X", "cat": "fee", "dur": 0.8, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:111)"}, {"pid": 5100, "tid": 20560, "ts": 64663149676.2, "ph": "X", "cat": "fee", "dur": 5.8, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 5100, "tid": 20560, "ts": 64663149683.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 5100, "tid": 20560, "ts": 64663149682.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__len__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:160)"}, {"pid": 5100, "tid": 20560, "ts": 64663149683.6, "ph": "X", "cat": "fee", "dur": 0.4, "name": "builtins.isinstance"}, {"pid": 5100, "tid": 20560, "ts": 64663149683.4, "ph": "X", "cat": "fee", "dur": 0.9, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 5100, "tid": 20560, "ts": 64663149686.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 5100, "tid": 20560, "ts": 64663149686.0, "ph": "X", "cat": "fee", "dur": 0.299, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 5100, "tid": 20560, "ts": 64663149688.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 5100, "tid": 20560, "ts": 64663149687.999, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 5100, "tid": 20560, "ts": 64663149689.1, "ph": "X", "cat": "fee", "dur": 0.899, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 5100, "tid": 20560, "ts": 64663149692.299, "ph": "X", "cat": "fee", "dur": 1.0, "name": "__setitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:168)"}, {"pid": 5100, "tid": 20560, "ts": 64663149695.599, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 5100, "tid": 20560, "ts": 64663149695.3, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__len__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:160)"}, {"pid": 5100, "tid": 20560, "ts": 64663149695.0, "ph": "X", "cat": "fee", "dur": 0.9, "name": "builtins.len"}, {"pid": 5100, "tid": 20560, "ts": 64663149704.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 5100, "tid": 20560, "ts": 64663149704.3, "ph": "X", "cat": "fee", "dur": 0.6, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 5100, "tid": 20560, "ts": 64663149593.0, "ph": "X", "cat": "fee", "dur": 112.599, "name": "_parse (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:493)"}, {"pid": 5100, "tid": 20560, "ts": 64663149707.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 5100, "tid": 20560, "ts": 64663149707.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 5100, "tid": 20560, "ts": 64663149708.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 5100, "tid": 20560, "ts": 64663149584.8, "ph": "X", "cat": "fee", "dur": 124.1, "name": "_parse_sub (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:435)"}, {"pid": 5100, "tid": 20560, "ts": 64663149711.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 5100, "tid": 20560, "ts": 64663149711.2, "ph": "X", "cat": "fee", "dur": 3.399, "name": "fix_flags (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:921)"}, {"pid": 5100, "tid": 20560, "ts": 64663149551.4, "ph": "X", "cat": "fee", "dur": 164.299, "name": "parse (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:937)"}, {"pid": 5100, "tid": 20560, "ts": 64663149728.4, "ph": "X", "cat": "fee", "dur": 4.0, "name": "builtins.min"}, {"pid": 5100, "tid": 20560, "ts": 64663149732.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.min"}, {"pid": 5100, "tid": 20560, "ts": 64663149726.2, "ph": "X", "cat": "fee", "dur": 7.0, "name": "getwidth (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:174)"}, {"pid": 5100, "tid": 20560, "ts": 64663149735.6, "ph": "X", "cat": "fee", "dur": 0.299, "name": "builtins.min"}, {"pid": 5100, "tid": 20560, "ts": 64663149736.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.min"}, {"pid": 5100, "tid": 20560, "ts": 64663149723.0, "ph": "X", "cat": "fee", "dur": 13.499, "name": "getwidth (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:174)"}, {"pid": 5100, "tid": 20560, "ts": 64663149741.4, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_get_iscased (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:453)"}, {"pid": 5100, "tid": 20560, "ts": 64663149739.6, "ph": "X", "cat": "fee", "dur": 3.2, "name": "_get_literal_prefix (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:461)"}, {"pid": 5100, "tid": 20560, "ts": 64663149745.799, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_get_iscased (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:453)"}, {"pid": 5100, "tid": 20560, "ts": 64663149743.999, "ph": "X", "cat": "fee", "dur": 2.8, "name": "_get_charset_prefix (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:492)"}, {"pid": 5100, "tid": 20560, "ts": 64663149747.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 5100, "tid": 20560, "ts": 64663149748.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 5100, "tid": 20560, "ts": 64663149748.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 5100, "tid": 20560, "ts": 64663149748.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 5100, "tid": 20560, "ts": 64663149748.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 5100, "tid": 20560, "ts": 64663149749.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.min"}, {"pid": 5100, "tid": 20560, "ts": 64663149749.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 5100, "tid": 20560, "ts": 64663149749.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 5100, "tid": 20560, "ts": 64663149720.8, "ph": "X", "cat": "fee", "dur": 29.2, "name": "_compile_info (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:536)"}, {"pid": 5100, "tid": 20560, "ts": 64663149759.699, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 5100, "tid": 20560, "ts": 64663149759.5, "ph": "X", "cat": "fee", "dur": 0.299, "name": "__len__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:160)"}, {"pid": 5100, "tid": 20560, "ts": 64663149759.1, "ph": "X", "cat": "fee", "dur": 0.8, "name": "builtins.len"}, {"pid": 5100, "tid": 20560, "ts": 64663149760.499, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 5100, "tid": 20560, "ts": 64663149760.4, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 5100, "tid": 20560, "ts": 64663149758.8, "ph": "X", "cat": "fee", "dur": 2.6, "name": "_simple (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:423)"}, {"pid": 5100, "tid": 20560, "ts": 64663149762.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 5100, "tid": 20560, "ts": 64663149762.32, "ph": "X", "cat": "fee", "dur": 0.079, "name": "builtins.len"}, {"pid": 5100, "tid": 20560, "ts": 64663149762.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 5100, "tid": 20560, "ts": 64663149762.999, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 5100, "tid": 20560, "ts": 64663149763.1, "ph": "X", "cat": "fee", "dur": 0.5, "name": "list.append"}, {"pid": 5100, "tid": 20560, "ts": 64663149775.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 5100, "tid": 20560, "ts": 64663149775.6, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 5100, "tid": 20560, "ts": 64663149784.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 5100, "tid": 20560, "ts": 64663149792.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 5100, "tid": 20560, "ts": 64663149793.3, "ph": "X", "cat": "fee", "dur": 2.8, "name": "bytearray.find"}, {"pid": 5100, "tid": 20560, "ts": 64663149796.4, "ph": "X", "cat": "fee", "dur": 2.3, "name": "builtins.len"}, {"pid": 5100, "tid": 20560, "ts": 64663149798.9, "ph": "X", "cat": "fee", "dur": 0.4, "name": "bytearray.find"}, {"pid": 5100, "tid": 20560, "ts": 64663149799.499, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 5100, "tid": 20560, "ts": 64663149799.8, "ph": "X", "cat": "fee", "dur": 0.199, "name": "bytearray.find"}, {"pid": 5100, "tid": 20560, "ts": 64663149800.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 5100, "tid": 20560, "ts": 64663149800.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "bytearray.find"}, {"pid": 5100, "tid": 20560, "ts": 64663149800.799, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 5100, "tid": 20560, "ts": 64663149801.0, "ph": "X", "cat": "fee", "dur": 0.299, "name": "bytearray.find"}, {"pid": 5100, "tid": 20560, "ts": 64663149802.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 5100, "tid": 20560, "ts": 64663149802.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 5100, "tid": 20560, "ts": 64663149803.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 5100, "tid": 20560, "ts": 64663149803.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 5100, "tid": 20560, "ts": 64663149778.4, "ph": "X", "cat": "fee", "dur": 25.5, "name": "_optimize_charset (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:276)"}, {"pid": 5100, "tid": 20560, "ts": 64663149805.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 5100, "tid": 20560, "ts": 64663149805.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 5100, "tid": 20560, "ts": 64663149806.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 5100, "tid": 20560, "ts": 64663149807.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 5100, "tid": 20560, "ts": 64663149808.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 5100, "tid": 20560, "ts": 64663149808.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 5100, "tid": 20560, "ts": 64663149808.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 5100, "tid": 20560, "ts": 64663149808.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 5100, "tid": 20560, "ts": 64663149809.1, "ph": "X", "cat": "fee", "dur": 0.6, "name": "list.append"}, {"pid": 5100, "tid": 20560, "ts": 64663149809.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 5100, "tid": 20560, "ts": 64663149809.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 5100, "tid": 20560, "ts": 64663149812.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 5100, "tid": 20560, "ts": 64663149812.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 5100, "tid": 20560, "ts": 64663149807.0, "ph": "X", "cat": "fee", "dur": 5.699, "name": "_compile_charset (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:249)"}, {"pid": 5100, "tid": 20560, "ts": 64663149813.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 5100, "tid": 20560, "ts": 64663149813.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 5100, "tid": 20560, "ts": 64663149813.8, "ph": "X", "cat": "fee", "dur": 0.899, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 5100, "tid": 20560, "ts": 64663149772.899, "ph": "X", "cat": "fee", "dur": 44.1, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:71)"}, {"pid": 5100, "tid": 20560, "ts": 64663149817.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 5100, "tid": 20560, "ts": 64663149817.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 5100, "tid": 20560, "ts": 64663149752.7, "ph": "X", "cat": "fee", "dur": 65.399, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:71)"}, {"pid": 5100, "tid": 20560, "ts": 64663149818.799, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 5100, "tid": 20560, "ts": 64663149718.899, "ph": "X", "cat": "fee", "dur": 100.1, "name": "_code (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:598)"}, {"pid": 5100, "tid": 20560, "ts": 64663149822.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 5100, "tid": 20560, "ts": 64663149821.7, "ph": "X", "cat": "fee", "dur": 0.8, "name": "groups (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:81)"}, {"pid": 5100, "tid": 20560, "ts": 64663149823.8, "ph": "X", "cat": "fee", "dur": 0.5, "name": "dict.items"}, {"pid": 5100, "tid": 20560, "ts": 64663149827.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 5100, "tid": 20560, "ts": 64663149826.899, "ph": "X", "cat": "fee", "dur": 0.4, "name": "groups (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:81)"}, {"pid": 5100, "tid": 20560, "ts": 64663149828.7, "ph": "X", "cat": "fee", "dur": 3.199, "name": "_sre.compile"}, {"pid": 5100, "tid": 20560, "ts": 64663149546.4, "ph": "X", "cat": "fee", "dur": 285.7, "name": "compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:759)"}, {"pid": 5100, "tid": 20560, "ts": 64663149840.1, "ph": "X", "cat": "fee", "dur": 0.999, "name": "builtins.isinstance"}, {"pid": 5100, "tid": 20560, "ts": 64663149851.499, "ph": "X", "cat": "fee", "dur": 4.1, "name": "__new__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:670)"}, {"pid": 5100, "tid": 20560, "ts": 64663149845.5, "ph": "X", "cat": "fee", "dur": 10.4, "name": "__call__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:358)"}, {"pid": 5100, "tid": 20560, "ts": 64663149858.5, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__new__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:670)"}, {"pid": 5100, "tid": 20560, "ts": 64663149858.0, "ph": "X", "cat": "fee", "dur": 1.2, "name": "__call__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:358)"}, {"pid": 5100, "tid": 20560, "ts": 64663149839.1, "ph": "X", "cat": "fee", "dur": 20.3, "name": "__and__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:977)"}, {"pid": 5100, "tid": 20560, "ts": 64663149860.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "builtins.len"}, {"pid": 5100, "tid": 20560, "ts": 64663149505.4, "ph": "X", "cat": "fee", "dur": 356.8, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:289)"}, {"pid": 5100, "tid": 20560, "ts": 64663149864.3, "ph": "X", "cat": "fee", "dur": 5116460.9, "name": "re.Pattern.sub"}, {"pid": 5100, "tid": 20560, "ts": 64663149497.0, "ph": "X", "cat": "fee", "dur": 5116833.599, "name": "sub (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:203)"}, {"pid": 5100, "tid": 20560, "ts": 64668266337.1, "ph": "X", "cat": "fee", "dur": 2693502.0, "name": "str.split"}, {"pid": 5100, "tid": 20560, "ts": 64656724584.5, "ph": "X", "cat": "fee", "dur": 14268262.9, "name": "cleanAndTokenize (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:64)"}, {"pid": 5100, "tid": 20560, "ts": 64671000294.3, "ph": "X", "cat": "fee", "dur": 1.799, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 5100, "tid": 20560, "ts": 64671000317.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 5100, "tid": 20560, "ts": 64671000329.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 5100, "tid": 20560, "ts": 64671000325.8, "ph": "X", "cat": "fee", "dur": 9.3, "name": "_abc._abc_subclasscheck"}, {"pid": 5100, "tid": 20560, "ts": 64671000325.2, "ph": "X", "cat": "fee", "dur": 10.099, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 5100, "tid": 20560, "ts": 64671000339.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 5100, "tid": 20560, "ts": 64671000336.599, "ph": "X", "cat": "fee", "dur": 4.0, "name": "_abc._abc_subclasscheck"}, {"pid": 5100, "tid": 20560, "ts": 64671000336.5, "ph": "X", "cat": "fee", "dur": 4.2, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 5100, "tid": 20560, "ts": 64671000343.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 5100, "tid": 20560, "ts": 64671000341.3, "ph": "X", "cat": "fee", "dur": 3.899, "name": "_abc._abc_subclasscheck"}, {"pid": 5100, "tid": 20560, "ts": 64671000341.2, "ph": "X", "cat": "fee", "dur": 4.019, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 5100, "tid": 20560, "ts": 64671000349.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 5100, "tid": 20560, "ts": 64671000345.699, "ph": "X", "cat": "fee", "dur": 6.9, "name": "_abc._abc_subclasscheck"}, {"pid": 5100, "tid": 20560, "ts": 64671000345.6, "ph": "X", "cat": "fee", "dur": 7.1, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 5100, "tid": 20560, "ts": 64671000355.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 5100, "tid": 20560, "ts": 64671000353.2, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_abc._abc_subclasscheck"}, {"pid": 5100, "tid": 20560, "ts": 64671000353.1, "ph": "X", "cat": "fee", "dur": 4.419, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 5100, "tid": 20560, "ts": 64671000361.2, "ph": "X", "cat": "fee", "dur": 0.199, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 5100, "tid": 20560, "ts": 64671000365.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 5100, "tid": 20560, "ts": 64671000371.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 5100, "tid": 20560, "ts": 64671000367.8, "ph": "X", "cat": "fee", "dur": 6.199, "name": "_abc._abc_subclasscheck"}, {"pid": 5100, "tid": 20560, "ts": 64671000367.6, "ph": "X", "cat": "fee", "dur": 6.499, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 5100, "tid": 20560, "ts": 64671000364.0, "ph": "X", "cat": "fee", "dur": 15.799, "name": "_abc._abc_subclasscheck"}, {"pid": 5100, "tid": 20560, "ts": 64671000363.699, "ph": "X", "cat": "fee", "dur": 16.5, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 5100, "tid": 20560, "ts": 64671000357.92, "ph": "X", "cat": "fee", "dur": 23.179, "name": "_abc._abc_subclasscheck"}, {"pid": 5100, "tid": 20560, "ts": 64671000357.9, "ph": "X", "cat": "fee", "dur": 23.299, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 5100, "tid": 20560, "ts": 64671000383.199, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 5100, "tid": 20560, "ts": 64671000381.82, "ph": "X", "cat": "fee", "dur": 2.679, "name": "_abc._abc_subclasscheck"}, {"pid": 5100, "tid": 20560, "ts": 64671000381.8, "ph": "X", "cat": "fee", "dur": 2.8, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 5100, "tid": 20560, "ts": 64671000387.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 5100, "tid": 20560, "ts": 64671000385.1, "ph": "X", "cat": "fee", "dur": 7.8, "name": "_abc._abc_subclasscheck"}, {"pid": 5100, "tid": 20560, "ts": 64671000384.999, "ph": "X", "cat": "fee", "dur": 8.0, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 5100, "tid": 20560, "ts": 64671000314.1, "ph": "X", "cat": "fee", "dur": 79.4, "name": "_abc._abc_subclasscheck"}, {"pid": 5100, "tid": 20560, "ts": 64671000313.9, "ph": "X", "cat": "fee", "dur": 80.0, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 5100, "tid": 20560, "ts": 64671000397.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 5100, "tid": 20560, "ts": 64671000394.9, "ph": "X", "cat": "fee", "dur": 3.599, "name": "_abc._abc_subclasscheck"}, {"pid": 5100, "tid": 20560, "ts": 64671000394.8, "ph": "X", "cat": "fee", "dur": 3.8, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 5100, "tid": 20560, "ts": 64671000286.399, "ph": "X", "cat": "fee", "dur": 113.0, "name": "_abc._abc_subclasscheck"}, {"pid": 5100, "tid": 20560, "ts": 64671000285.099, "ph": "X", "cat": "fee", "dur": 114.5, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 5100, "tid": 20560, "ts": 64671000265.2, "ph": "X", "cat": "fee", "dur": 135.7, "name": "_abc._abc_instancecheck"}, {"pid": 5100, "tid": 20560, "ts": 64671000264.099, "ph": "X", "cat": "fee", "dur": 137.2, "name": "__instancecheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:117)"}, {"pid": 5100, "tid": 20560, "ts": 64671000256.6, "ph": "X", "cat": "fee", "dur": 145.4, "name": "builtins.isinstance"}, {"pid": 5100, "tid": 20560, "ts": 64671000403.4, "ph": "X", "cat": "fee", "dur": 4311470.499, "name": "_collections._count_elements"}, {"pid": 5100, "tid": 20560, "ts": 64671000250.3, "ph": "X", "cat": "fee", "dur": 4311628.6, "name": "update (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:649)"}, {"pid": 5100, "tid": 20560, "ts": 64671000224.4, "ph": "X", "cat": "fee", "dur": 4311661.2, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:581)"}, {"pid": 5100, "tid": 20560, "ts": 64655950268.3, "ph": "X", "cat": "fee", "dur": 19361619.3, "name": "getWordCount (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:83)"}, {"pid": 5100, "tid": 20560, "ts": 64675867253.6, "ph": "X", "cat": "fee", "dur": 2.399, "name": "time.perf_counter"}, {"pid": 5100, "tid": 20560, "ts": 64675867261.5, "ph": "X", "cat": "fee", "dur": 2.3, "name": "nt.getpid"}, {"pid": 5100, "tid": 20560, "ts": 64675867287.8, "ph": "X", "cat": "fee", "dur": 277.3, "name": "builtins.print"}, {"pid": 5100, "tid": 20560, "ts": 64675867575.5, "ph": "X", "cat": "fee", "dur": 0.7, "name": "Counter.values"}, {"pid": 5100, "tid": 20560, "ts": 64675867576.4, "ph": "X", "cat": "fee", "dur": 6798.599, "name": "builtins.sum"}, {"pid": 5100, "tid": 20560, "ts": 64675874378.9, "ph": "X", "cat": "fee", "dur": 0.499, "name": "Counter.items"}, {"pid": 5100, "tid": 20560, "ts": 64675867571.5, "ph": "X", "cat": "fee", "dur": 173511.1, "name": "getWordFrequencies (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:101)"}, {"pid": 5100, "tid": 20560, "ts": 64655950214.0, "ph": "X", "cat": "fee", "dur": 20090870.899, "name": "getWordData (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:123)"}, {"pid": 5100, "tid": 20560, "ts": 64655950213.399, "ph": "X", "cat": "fee", "dur": 20090874.7, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:202)"}, {"pid": 5100, "tid": 20560, "ts": 64655950212.8, "ph": "X", "cat": "fee", "dur": 20090878.9, "name": "_process_chunk (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:193)"}, {"pid": 5100, "tid": 20560, "ts": 64676041109.3, "ph": "X", "cat": "fee", "dur": 1.7, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:145)"}, {"pid": 5100, "tid": 20560, "ts": 64676041150.0, "ph": "X", "cat": "fee", "dur": 2.399, "name": "dict.copy"}, {"pid": 5100, "tid": 20560, "ts": 64676041153.6, "ph": "X", "cat": "fee", "dur": 2.5, "name": "dict.update"}, {"pid": 5100, "tid": 20560, "ts": 64676041125.2, "ph": "X", "cat": "fee", "dur": 31.3, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 5100, "tid": 20560, "ts": 64676041186.199, "ph": "X", "cat": "fee", "dur": 1.1, "name": "mappingproxy.get"}, {"pid": 5100, "tid": 20560, "ts": 64676041188.4, "ph": "X", "cat": "fee", "dur": 2.599, "name": "builtins.hasattr"}, {"pid": 5100, "tid": 20560, "ts": 64676041183.1, "ph": "X", "cat": "fee", "dur": 9.5, "name": "_slotnames (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\copyreg.py:103)"}, {"pid": 5100, "tid": 20560, "ts": 64676041211.799, "ph": "X", "cat": "fee", "dur": 83289.2, "name": "__reduce__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:714)"}, {"pid": 5100, "tid": 20560, "ts": 64676041157.299, "ph": "X", "cat": "fee", "dur": 483336.6, "name": "ForkingPickler.dump"}, {"pid": 5100, "tid": 20560, "ts": 64676566947.8, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_io.BytesIO.getbuffer"}, {"pid": 5100, "tid": 20560, "ts": 64676041119.4, "ph": "X", "cat": "fee", "dur": 525832.499, "name": "dumps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:48)"}, {"pid": 5100, "tid": 20560, "ts": 64676566965.9, "ph": "X", "cat": "fee", "dur": 0.799, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 5100, "tid": 20560, "ts": 64676566974.3, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 5100, "tid": 20560, "ts": 64676566982.0, "ph": "X", "cat": "fee", "dur": 0.4, "name": "builtins.len"}, {"pid": 5100, "tid": 20560, "ts": 64676566993.6, "ph": "X", "cat": "fee", "dur": 5643.7, "name": "_winapi.WriteFile"}, {"pid": 5100, "tid": 20560, "ts": 64676572645.499, "ph": "X", "cat": "fee", "dur": 152560.0, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 5100, "tid": 20560, "ts": 64676725210.5, "ph": "X", "cat": "fee", "dur": 3.7, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 5100, "tid": 20560, "ts": 64676725215.8, "ph": "X", "cat": "fee", "dur": 0.5, "name": "builtins.len"}, {"pid": 5100, "tid": 20560, "ts": 64676566989.2, "ph": "X", "cat": "fee", "dur": 158227.299, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 5100, "tid": 20560, "ts": 64676566963.7, "ph": "X", "cat": "fee", "dur": 158260.9, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 5100, "tid": 20560, "ts": 64676041112.699, "ph": "X", "cat": "fee", "dur": 684113.0, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:370)"}, {"pid": 5100, "tid": 20560, "ts": 64676041101.799, "ph": "X", "cat": "fee", "dur": 684653.8, "name": "_sendback_result (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:205)"}, {"pid": 5100, "tid": 20560, "ts": 64676950619.0, "ph": "X", "cat": "fee", "dur": 2227722.2, "name": "_multiprocessing.SemLock.__enter__"}, {"pid": 5100, "tid": 20560, "ts": 64676950616.799, "ph": "X", "cat": "fee", "dur": 2227725.9, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:94)"}, {"pid": 5100, "tid": 20560, "ts": 64679178347.1, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 5100, "tid": 20560, "ts": 64679178348.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 5100, "tid": 20560, "ts": 64679178350.599, "ph": "X", "cat": "fee", "dur": 6.6, "name": "_winapi.ReadFile"}, {"pid": 5100, "tid": 20560, "ts": 64679178358.4, "ph": "X", "cat": "fee", "dur": 1.3, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 5100, "tid": 20560, "ts": 64679178361.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 5100, "tid": 20560, "ts": 64679178361.999, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_io.BytesIO.write"}, {"pid": 5100, "tid": 20560, "ts": 64679178348.9, "ph": "X", "cat": "fee", "dur": 13.4, "name": "_recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:299)"}, {"pid": 5100, "tid": 20560, "ts": 64679178364.1, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_io.BytesIO.getvalue"}, {"pid": 5100, "tid": 20560, "ts": 64679178346.2, "ph": "X", "cat": "fee", "dur": 18.2, "name": "recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:213)"}, {"pid": 5100, "tid": 20560, "ts": 64679178366.3, "ph": "X", "cat": "fee", "dur": 1.6, "name": "_multiprocessing.SemLock.__exit__"}, {"pid": 5100, "tid": 20560, "ts": 64679178365.4, "ph": "X", "cat": "fee", "dur": 2.6, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:97)"}, {"pid": 5100, "tid": 20560, "ts": 64679178369.099, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_multiprocessing.SemLock.release"}, {"pid": 5100, "tid": 20560, "ts": 64679178370.2, "ph": "X", "cat": "fee", "dur": 2.099, "name": "_pickle.loads"}, {"pid": 5100, "tid": 20560, "ts": 64676950611.6, "ph": "X", "cat": "fee", "dur": 2227760.799, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:98)"}, {"pid": 5100, "tid": 20560, "ts": 64679178374.199, "ph": "X", "cat": "fee", "dur": 0.8, "name": "nt.getpid"}, {"pid": 5100, "tid": 20560, "ts": 64679178384.9, "ph": "X", "cat": "fee", "dur": 0.199, "name": "dict.copy"}, {"pid": 5100, "tid": 20560, "ts": 64679178385.9, "ph": "X", "cat": "fee", "dur": 0.799, "name": "dict.update"}, {"pid": 5100, "tid": 20560, "ts": 64679178378.499, "ph": "X", "cat": "fee", "dur": 8.4, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 5100, "tid": 20560, "ts": 64679178387.4, "ph": "X", "cat": "fee", "dur": 2.999, "name": "ForkingPickler.dump"}, {"pid": 5100, "tid": 20560, "ts": 64679178391.0, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_io.BytesIO.getbuffer"}, {"pid": 5100, "tid": 20560, "ts": 64679178377.0, "ph": "X", "cat": "fee", "dur": 14.499, "name": "dumps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:48)"}, {"pid": 5100, "tid": 20560, "ts": 64679178393.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 5100, "tid": 20560, "ts": 64679178394.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 5100, "tid": 20560, "ts": 64679178395.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 5100, "tid": 20560, "ts": 64679178398.3, "ph": "X", "cat": "fee", "dur": 3.699, "name": "_winapi.WriteFile"}, {"pid": 5100, "tid": 20560, "ts": 64679178402.5, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 5100, "tid": 20560, "ts": 64679178403.099, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 5100, "tid": 20560, "ts": 64679178397.4, "ph": "X", "cat": "fee", "dur": 5.9, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 5100, "tid": 20560, "ts": 64679178392.9, "ph": "X", "cat": "fee", "dur": 11.3, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 5100, "tid": 20560, "ts": 64679178375.6, "ph": "X", "cat": "fee", "dur": 29.1, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:370)"}, {"pid": 5100, "tid": 20560, "ts": 64655950150.5, "ph": "X", "cat": "fee", "dur": 23228254.599, "name": "_process_worker (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:215)"}, {"pid": 5100, "tid": 20560, "ts": 64655950149.4, "ph": "X", "cat": "fee", "dur": 23228256.199, "name": "run (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:103)"}, {"pid": 5100, "tid": 20560, "ts": 64679178413.699, "ph": "X", "cat": "fee", "dur": 0.7, "name": "info (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:52)"}, {"pid": 5100, "tid": 20560, "ts": 64679178418.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:48)"}, {"pid": 5100, "tid": 20560, "ts": 64679178426.8, "ph": "X", "cat": "fee", "dur": 0.4, "name": "<lambda> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:284)"}, {"pid": 5100, "tid": 20560, "ts": 64679178424.099, "ph": "X", "cat": "fee", "dur": 6.0, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:291)"}, {"pid": 5100, "tid": 20560, "ts": 64679178431.1, "ph": "X", "cat": "fee", "dur": 0.7, "name": "list.sort"}, {"pid": 5100, "tid": 20560, "ts": 64679178419.4, "ph": "X", "cat": "fee", "dur": 12.7, "name": "_run_finalizers (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:268)"}, {"pid": 5100, "tid": 20560, "ts": 64679178433.7, "ph": "X", "cat": "fee", "dur": 0.9, "name": "current_process (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:37)"}, {"pid": 5100, "tid": 20560, "ts": 64679178436.5, "ph": "X", "cat": "fee", "dur": 1.4, "name": "_cleanup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:61)"}, {"pid": 5100, "tid": 20560, "ts": 64679178435.4, "ph": "X", "cat": "fee", "dur": 2.7, "name": "active_children (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:43)"}, {"pid": 5100, "tid": 20560, "ts": 64679178438.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_cleanup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:61)"}, {"pid": 5100, "tid": 20560, "ts": 64679178438.5, "ph": "X", "cat": "fee", "dur": 0.5, "name": "active_children (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:43)"}, {"pid": 5100, "tid": 20560, "ts": 64679178439.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:48)"}, {"pid": 5100, "tid": 20560, "ts": 64679178441.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<lambda> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:282)"}, {"pid": 5100, "tid": 20560, "ts": 64679178440.7, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:291)"}, {"pid": 5100, "tid": 20560, "ts": 64679178441.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.sort"}, {"pid": 5100, "tid": 20560, "ts": 64679178442.9, "ph": "X", "cat": "fee", "dur": 0.199, "name": "dict.get"}, {"pid": 5100, "tid": 20560, "ts": 64679178443.7, "ph": "X", "cat": "fee", "dur": 0.199, "name": "sub_debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:44)"}, {"pid": 5100, "tid": 20560, "ts": 64679178447.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "nt.getpid"}, {"pid": 5100, "tid": 20560, "ts": 64679178448.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "sub_debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:44)"}, {"ph": "M", "pid": 656, "tid": 656, "name": "process_name", "args": {"name": "SpawnProcess-1"}}, {"ph": "M", "pid": 656, "tid": 14556, "name": "thread_name", "args": {"name": "MainThread"}}, {"pid": 656, "tid": 14556, "ts": 64655942499.8, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_multiprocessing.SemLock.__enter__"}, {"pid": 656, "tid": 14556, "ts": 64655942499.4, "ph": "X", "cat": "fee", "dur": 1.599, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:94)"}, {"pid": 656, "tid": 14556, "ts": 64655942502.499, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 656, "tid": 14556, "ts": 64655942503.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 656, "tid": 14556, "ts": 64655942505.4, "ph": "X", "cat": "fee", "dur": 8.1, "name": "_winapi.ReadFile"}, {"pid": 656, "tid": 14556, "ts": 64655942514.7, "ph": "X", "cat": "fee", "dur": 2.399, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 656, "tid": 14556, "ts": 64655942518.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 656, "tid": 14556, "ts": 64655942520.1, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_io.BytesIO.write"}, {"pid": 656, "tid": 14556, "ts": 64655942520.9, "ph": "X", "cat": "fee", "dur": 7.199, "name": "_winapi.PeekNamedPipe"}, {"pid": 656, "tid": 14556, "ts": 64655942528.9, "ph": "X", "cat": "fee", "dur": 3.099, "name": "_winapi.ReadFile"}, {"pid": 656, "tid": 14556, "ts": 64655942532.399, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 656, "tid": 14556, "ts": 64655942533.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 656, "tid": 14556, "ts": 64655942533.5, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_io.BytesIO.write"}, {"pid": 656, "tid": 14556, "ts": 64655942518.199, "ph": "X", "cat": "fee", "dur": 15.8, "name": "_get_more_data (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:337)"}, {"pid": 656, "tid": 14556, "ts": 64655942503.999, "ph": "X", "cat": "fee", "dur": 30.9, "name": "_recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:299)"}, {"pid": 656, "tid": 14556, "ts": 64655942535.699, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_io.BytesIO.getvalue"}, {"pid": 656, "tid": 14556, "ts": 64655942501.7, "ph": "X", "cat": "fee", "dur": 34.3, "name": "recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:213)"}, {"pid": 656, "tid": 14556, "ts": 64655942537.4, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_multiprocessing.SemLock.__exit__"}, {"pid": 656, "tid": 14556, "ts": 64655942537.0, "ph": "X", "cat": "fee", "dur": 0.999, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:97)"}, {"pid": 656, "tid": 14556, "ts": 64655942538.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_multiprocessing.SemLock.release"}, {"pid": 656, "tid": 14556, "ts": 64655942549.7, "ph": "X", "cat": "fee", "dur": 1.699, "name": "_rebuild_partial (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:225)"}, {"pid": 656, "tid": 14556, "ts": 64655942539.499, "ph": "X", "cat": "fee", "dur": 15.4, "name": "_pickle.loads"}, {"pid": 656, "tid": 14556, "ts": 64655942498.3, "ph": "X", "cat": "fee", "dur": 56.7, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:98)"}, {"pid": 656, "tid": 14556, "ts": 64655942557.7, "ph": "X", "cat": "fee", "dur": 0.4, "name": "time.perf_counter"}, {"pid": 656, "tid": 14556, "ts": 64655942558.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "nt.getpid"}, {"pid": 656, "tid": 14556, "ts": 64655942559.299, "ph": "X", "cat": "fee", "dur": 57.2, "name": "builtins.print"}, {"pid": 656, "tid": 14556, "ts": 64655942659.899, "ph": "X", "cat": "fee", "dur": 1.9, "name": "_locale._getdefaultlocale"}, {"pid": 656, "tid": 14556, "ts": 64655942659.2, "ph": "X", "cat": "fee", "dur": 2.999, "name": "getpreferredencoding (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_bootlocale.py:11)"}, {"pid": 656, "tid": 14556, "ts": 64655942665.3, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\codecs.py:260)"}, {"pid": 656, "tid": 14556, "ts": 64655942618.9, "ph": "X", "cat": "fee", "dur": 48.4, "name": "io.open"}, {"pid": 656, "tid": 14556, "ts": 64655970410.299, "ph": "X", "cat": "fee", "dur": 136218.7, "name": "_codecs.charmap_decode"}, {"pid": 656, "tid": 14556, "ts": 64655970407.4, "ph": "X", "cat": "fee", "dur": 136227.099, "name": "decode (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\encodings\\cp1252.py:22)"}, {"pid": 656, "tid": 14556, "ts": 64655942668.4, "ph": "X", "cat": "fee", "dur": 276956.899, "name": "_io.TextIOWrapper.read"}, {"pid": 656, "tid": 14556, "ts": 64656219630.3, "ph": "X", "cat": "fee", "dur": 45.1, "name": "_io.TextIOWrapper.__exit__"}, {"pid": 656, "tid": 14556, "ts": 64655942618.4, "ph": "X", "cat": "fee", "dur": 277058.299, "name": "readInData (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:47)"}, {"pid": 656, "tid": 14556, "ts": 64656219689.8, "ph": "X", "cat": "fee", "dur": 1380432.6, "name": "str.split"}, {"pid": 656, "tid": 14556, "ts": 64657600129.5, "ph": "X", "cat": "fee", "dur": 642309.8, "name": "str.join"}, {"pid": 656, "tid": 14556, "ts": 64658807261.5, "ph": "X", "cat": "fee", "dur": 17.3, "name": "builtins.isinstance"}, {"pid": 656, "tid": 14556, "ts": 64658807312.7, "ph": "X", "cat": "fee", "dur": 0.7, "name": "builtins.isinstance"}, {"pid": 656, "tid": 14556, "ts": 64658807327.6, "ph": "X", "cat": "fee", "dur": 1.299, "name": "builtins.isinstance"}, {"pid": 656, "tid": 14556, "ts": 64658807322.3, "ph": "X", "cat": "fee", "dur": 6.999, "name": "isstring (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:595)"}, {"pid": 656, "tid": 14556, "ts": 64658807338.5, "ph": "X", "cat": "fee", "dur": 0.399, "name": "builtins.isinstance"}, {"pid": 656, "tid": 14556, "ts": 64658807337.5, "ph": "X", "cat": "fee", "dur": 1.9, "name": "isstring (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:595)"}, {"pid": 656, "tid": 14556, "ts": 64658807361.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 656, "tid": 14556, "ts": 64658807376.8, "ph": "X", "cat": "fee", "dur": 6.999, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 656, "tid": 14556, "ts": 64658807358.8, "ph": "X", "cat": "fee", "dur": 25.499, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:224)"}, {"pid": 656, "tid": 14556, "ts": 64658807389.099, "ph": "X", "cat": "fee", "dur": 5.1, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:76)"}, {"pid": 656, "tid": 14556, "ts": 64658807405.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 656, "tid": 14556, "ts": 64658807403.9, "ph": "X", "cat": "fee", "dur": 2.599, "name": "tell (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:286)"}, {"pid": 656, "tid": 14556, "ts": 64658807411.699, "ph": "X", "cat": "fee", "dur": 2.5, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:111)"}, {"pid": 656, "tid": 14556, "ts": 64658807418.499, "ph": "X", "cat": "fee", "dur": 0.6, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 656, "tid": 14556, "ts": 64658807417.8, "ph": "X", "cat": "fee", "dur": 1.599, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 656, "tid": 14556, "ts": 64658807420.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 656, "tid": 14556, "ts": 64658807420.7, "ph": "X", "cat": "fee", "dur": 0.4, "name": "tell (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:286)"}, {"pid": 656, "tid": 14556, "ts": 64658807423.3, "ph": "X", "cat": "fee", "dur": 0.6, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 656, "tid": 14556, "ts": 64658807422.8, "ph": "X", "cat": "fee", "dur": 1.7, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 656, "tid": 14556, "ts": 64658807425.4, "ph": "X", "cat": "fee", "dur": 0.399, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 656, "tid": 14556, "ts": 64658807425.099, "ph": "X", "cat": "fee", "dur": 0.9, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 656, "tid": 14556, "ts": 64658807427.5, "ph": "X", "cat": "fee", "dur": 0.7, "name": "builtins.ord"}, {"pid": 656, "tid": 14556, "ts": 64658807428.899, "ph": "X", "cat": "fee", "dur": 0.6, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 656, "tid": 14556, "ts": 64658807428.6, "ph": "X", "cat": "fee", "dur": 1.2, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 656, "tid": 14556, "ts": 64658807430.5, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 656, "tid": 14556, "ts": 64658807430.3, "ph": "X", "cat": "fee", "dur": 0.899, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 656, "tid": 14556, "ts": 64658807431.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.ord"}, {"pid": 656, "tid": 14556, "ts": 64658807433.6, "ph": "X", "cat": "fee", "dur": 0.8, "name": "list.append"}, {"pid": 656, "tid": 14556, "ts": 64658807435.1, "ph": "X", "cat": "fee", "dur": 0.399, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 656, "tid": 14556, "ts": 64658807434.8, "ph": "X", "cat": "fee", "dur": 0.899, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 656, "tid": 14556, "ts": 64658807436.3, "ph": "X", "cat": "fee", "dur": 0.299, "name": "builtins.ord"}, {"pid": 656, "tid": 14556, "ts": 64658807437.4, "ph": "X", "cat": "fee", "dur": 0.6, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 656, "tid": 14556, "ts": 64658807437.0, "ph": "X", "cat": "fee", "dur": 1.2, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 656, "tid": 14556, "ts": 64658807438.9, "ph": "X", "cat": "fee", "dur": 1.9, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 656, "tid": 14556, "ts": 64658807438.6, "ph": "X", "cat": "fee", "dur": 2.399, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 656, "tid": 14556, "ts": 64658807441.4, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.ord"}, {"pid": 656, "tid": 14556, "ts": 64658807442.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 656, "tid": 14556, "ts": 64658807443.099, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 656, "tid": 14556, "ts": 64658807442.8, "ph": "X", "cat": "fee", "dur": 0.799, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 656, "tid": 14556, "ts": 64658807447.2, "ph": "X", "cat": "fee", "dur": 1.499, "name": "dict.get"}, {"pid": 656, "tid": 14556, "ts": 64658807448.9, "ph": "X", "cat": "fee", "dur": 1.1, "name": "dict.get"}, {"pid": 656, "tid": 14556, "ts": 64658807445.3, "ph": "X", "cat": "fee", "dur": 5.3, "name": "_class_escape (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:295)"}, {"pid": 656, "tid": 14556, "ts": 64658807451.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 656, "tid": 14556, "ts": 64658807452.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 656, "tid": 14556, "ts": 64658807453.1, "ph": "X", "cat": "fee", "dur": 0.399, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 656, "tid": 14556, "ts": 64658807452.8, "ph": "X", "cat": "fee", "dur": 0.899, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 656, "tid": 14556, "ts": 64658807456.7, "ph": "X", "cat": "fee", "dur": 3.2, "name": "type.fromkeys"}, {"pid": 656, "tid": 14556, "ts": 64658807454.999, "ph": "X", "cat": "fee", "dur": 8.6, "name": "_uniq (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:432)"}, {"pid": 656, "tid": 14556, "ts": 64658807463.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 656, "tid": 14556, "ts": 64658807466.1, "ph": "X", "cat": "fee", "dur": 0.7, "name": "list.insert"}, {"pid": 656, "tid": 14556, "ts": 64658807468.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 656, "tid": 14556, "ts": 64658807467.5, "ph": "X", "cat": "fee", "dur": 0.699, "name": "append (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:172)"}, {"pid": 656, "tid": 14556, "ts": 64658807469.1, "ph": "X", "cat": "fee", "dur": 2.7, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 656, "tid": 14556, "ts": 64658807468.8, "ph": "X", "cat": "fee", "dur": 3.199, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 656, "tid": 14556, "ts": 64658807473.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 656, "tid": 14556, "ts": 64658807473.5, "ph": "X", "cat": "fee", "dur": 0.4, "name": "tell (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:286)"}, {"pid": 656, "tid": 14556, "ts": 64658807477.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 656, "tid": 14556, "ts": 64658807477.4, "ph": "X", "cat": "fee", "dur": 0.599, "name": "__len__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:160)"}, {"pid": 656, "tid": 14556, "ts": 64658807482.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 656, "tid": 14556, "ts": 64658807484.0, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:111)"}, {"pid": 656, "tid": 14556, "ts": 64658807480.8, "ph": "X", "cat": "fee", "dur": 3.8, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 656, "tid": 14556, "ts": 64658807485.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 656, "tid": 14556, "ts": 64658807485.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__len__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:160)"}, {"pid": 656, "tid": 14556, "ts": 64658807486.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 656, "tid": 14556, "ts": 64658807486.0, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 656, "tid": 14556, "ts": 64658807487.82, "ph": "X", "cat": "fee", "dur": 0.18, "name": "builtins.isinstance"}, {"pid": 656, "tid": 14556, "ts": 64658807487.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 656, "tid": 14556, "ts": 64658807489.499, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 656, "tid": 14556, "ts": 64658807489.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 656, "tid": 14556, "ts": 64658807490.7, "ph": "X", "cat": "fee", "dur": 0.6, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 656, "tid": 14556, "ts": 64658807493.1, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__setitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:168)"}, {"pid": 656, "tid": 14556, "ts": 64658807496.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 656, "tid": 14556, "ts": 64658807495.599, "ph": "X", "cat": "fee", "dur": 0.62, "name": "__len__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:160)"}, {"pid": 656, "tid": 14556, "ts": 64658807495.299, "ph": "X", "cat": "fee", "dur": 1.1, "name": "builtins.len"}, {"pid": 656, "tid": 14556, "ts": 64658807501.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 656, "tid": 14556, "ts": 64658807501.6, "ph": "X", "cat": "fee", "dur": 0.299, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 656, "tid": 14556, "ts": 64658807408.899, "ph": "X", "cat": "fee", "dur": 93.7, "name": "_parse (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:493)"}, {"pid": 656, "tid": 14556, "ts": 64658807503.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "list.append"}, {"pid": 656, "tid": 14556, "ts": 64658807504.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 656, "tid": 14556, "ts": 64658807504.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 656, "tid": 14556, "ts": 64658807398.4, "ph": "X", "cat": "fee", "dur": 106.799, "name": "_parse_sub (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:435)"}, {"pid": 656, "tid": 14556, "ts": 64658807507.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 656, "tid": 14556, "ts": 64658807506.499, "ph": "X", "cat": "fee", "dur": 3.0, "name": "fix_flags (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:921)"}, {"pid": 656, "tid": 14556, "ts": 64658807348.2, "ph": "X", "cat": "fee", "dur": 162.4, "name": "parse (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:937)"}, {"pid": 656, "tid": 14556, "ts": 64658807519.7, "ph": "X", "cat": "fee", "dur": 2.099, "name": "builtins.min"}, {"pid": 656, "tid": 14556, "ts": 64658807522.199, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.min"}, {"pid": 656, "tid": 14556, "ts": 64658807516.9, "ph": "X", "cat": "fee", "dur": 5.799, "name": "getwidth (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:174)"}, {"pid": 656, "tid": 14556, "ts": 64658807524.199, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.min"}, {"pid": 656, "tid": 14556, "ts": 64658807524.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.min"}, {"pid": 656, "tid": 14556, "ts": 64658807514.8, "ph": "X", "cat": "fee", "dur": 10.3, "name": "getwidth (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:174)"}, {"pid": 656, "tid": 14556, "ts": 64658807530.6, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_get_iscased (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:453)"}, {"pid": 656, "tid": 14556, "ts": 64658807528.6, "ph": "X", "cat": "fee", "dur": 3.199, "name": "_get_literal_prefix (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:461)"}, {"pid": 656, "tid": 14556, "ts": 64658807535.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_get_iscased (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:453)"}, {"pid": 656, "tid": 14556, "ts": 64658807533.8, "ph": "X", "cat": "fee", "dur": 2.0, "name": "_get_charset_prefix (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:492)"}, {"pid": 656, "tid": 14556, "ts": 64658807536.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 656, "tid": 14556, "ts": 64658807536.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 656, "tid": 14556, "ts": 64658807536.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 656, "tid": 14556, "ts": 64658807537.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 656, "tid": 14556, "ts": 64658807537.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 656, "tid": 14556, "ts": 64658807537.5, "ph": "X", "cat": "fee", "dur": 0.399, "name": "builtins.min"}, {"pid": 656, "tid": 14556, "ts": 64658807538.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "list.append"}, {"pid": 656, "tid": 14556, "ts": 64658807538.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 656, "tid": 14556, "ts": 64658807513.9, "ph": "X", "cat": "fee", "dur": 24.899, "name": "_compile_info (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:536)"}, {"pid": 656, "tid": 14556, "ts": 64658807546.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 656, "tid": 14556, "ts": 64658807546.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__len__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:160)"}, {"pid": 656, "tid": 14556, "ts": 64658807546.3, "ph": "X", "cat": "fee", "dur": 0.8, "name": "builtins.len"}, {"pid": 656, "tid": 14556, "ts": 64658807547.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 656, "tid": 14556, "ts": 64658807547.799, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 656, "tid": 14556, "ts": 64658807545.999, "ph": "X", "cat": "fee", "dur": 2.7, "name": "_simple (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:423)"}, {"pid": 656, "tid": 14556, "ts": 64658807549.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 656, "tid": 14556, "ts": 64658807549.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 656, "tid": 14556, "ts": 64658807549.799, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 656, "tid": 14556, "ts": 64658807550.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 656, "tid": 14556, "ts": 64658807550.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "list.append"}, {"pid": 656, "tid": 14556, "ts": 64658807556.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 656, "tid": 14556, "ts": 64658807556.1, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 656, "tid": 14556, "ts": 64658807562.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 656, "tid": 14556, "ts": 64658807569.599, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 656, "tid": 14556, "ts": 64658807570.4, "ph": "X", "cat": "fee", "dur": 2.899, "name": "bytearray.find"}, {"pid": 656, "tid": 14556, "ts": 64658807573.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 656, "tid": 14556, "ts": 64658807573.899, "ph": "X", "cat": "fee", "dur": 0.3, "name": "bytearray.find"}, {"pid": 656, "tid": 14556, "ts": 64658807574.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 656, "tid": 14556, "ts": 64658807574.7, "ph": "X", "cat": "fee", "dur": 0.199, "name": "bytearray.find"}, {"pid": 656, "tid": 14556, "ts": 64658807575.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 656, "tid": 14556, "ts": 64658807575.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "bytearray.find"}, {"pid": 656, "tid": 14556, "ts": 64658807575.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 656, "tid": 14556, "ts": 64658807575.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "bytearray.find"}, {"pid": 656, "tid": 14556, "ts": 64658807576.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 656, "tid": 14556, "ts": 64658807577.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 656, "tid": 14556, "ts": 64658807578.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 656, "tid": 14556, "ts": 64658807578.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 656, "tid": 14556, "ts": 64658807558.199, "ph": "X", "cat": "fee", "dur": 20.5, "name": "_optimize_charset (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:276)"}, {"pid": 656, "tid": 14556, "ts": 64658807579.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 656, "tid": 14556, "ts": 64658807579.999, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 656, "tid": 14556, "ts": 64658807580.1, "ph": "X", "cat": "fee", "dur": 0.399, "name": "list.append"}, {"pid": 656, "tid": 14556, "ts": 64658807581.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 656, "tid": 14556, "ts": 64658807582.499, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 656, "tid": 14556, "ts": 64658807582.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 656, "tid": 14556, "ts": 64658807583.299, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 656, "tid": 14556, "ts": 64658807583.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 656, "tid": 14556, "ts": 64658807583.799, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 656, "tid": 14556, "ts": 64658807584.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 656, "tid": 14556, "ts": 64658807584.2, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 656, "tid": 14556, "ts": 64658807587.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 656, "tid": 14556, "ts": 64658807587.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 656, "tid": 14556, "ts": 64658807581.499, "ph": "X", "cat": "fee", "dur": 6.3, "name": "_compile_charset (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:249)"}, {"pid": 656, "tid": 14556, "ts": 64658807588.599, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 656, "tid": 14556, "ts": 64658807589.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 656, "tid": 14556, "ts": 64658807589.4, "ph": "X", "cat": "fee", "dur": 1.0, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 656, "tid": 14556, "ts": 64658807554.6, "ph": "X", "cat": "fee", "dur": 37.299, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:71)"}, {"pid": 656, "tid": 14556, "ts": 64658807592.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 656, "tid": 14556, "ts": 64658807592.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 656, "tid": 14556, "ts": 64658807541.0, "ph": "X", "cat": "fee", "dur": 52.099, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:71)"}, {"pid": 656, "tid": 14556, "ts": 64658807593.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 656, "tid": 14556, "ts": 64658807512.299, "ph": "X", "cat": "fee", "dur": 81.3, "name": "_code (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:598)"}, {"pid": 656, "tid": 14556, "ts": 64658807596.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 656, "tid": 14556, "ts": 64658807595.6, "ph": "X", "cat": "fee", "dur": 1.099, "name": "groups (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:81)"}, {"pid": 656, "tid": 14556, "ts": 64658807597.9, "ph": "X", "cat": "fee", "dur": 0.4, "name": "dict.items"}, {"pid": 656, "tid": 14556, "ts": 64658807600.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 656, "tid": 14556, "ts": 64658807600.7, "ph": "X", "cat": "fee", "dur": 0.299, "name": "groups (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:81)"}, {"pid": 656, "tid": 14556, "ts": 64658807602.5, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_sre.compile"}, {"pid": 656, "tid": 14556, "ts": 64658807334.7, "ph": "X", "cat": "fee", "dur": 271.099, "name": "compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:759)"}, {"pid": 656, "tid": 14556, "ts": 64658807612.1, "ph": "X", "cat": "fee", "dur": 1.7, "name": "builtins.isinstance"}, {"pid": 656, "tid": 14556, "ts": 64658807623.5, "ph": "X", "cat": "fee", "dur": 2.7, "name": "__new__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:670)"}, {"pid": 656, "tid": 14556, "ts": 64658807618.8, "ph": "X", "cat": "fee", "dur": 7.699, "name": "__call__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:358)"}, {"pid": 656, "tid": 14556, "ts": 64658807628.8, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__new__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:670)"}, {"pid": 656, "tid": 14556, "ts": 64658807628.3, "ph": "X", "cat": "fee", "dur": 1.099, "name": "__call__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:358)"}, {"pid": 656, "tid": 14556, "ts": 64658807610.6, "ph": "X", "cat": "fee", "dur": 19.0, "name": "__and__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:977)"}, {"pid": 656, "tid": 14556, "ts": 64658807630.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 656, "tid": 14556, "ts": 64658807254.0, "ph": "X", "cat": "fee", "dur": 377.5, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:289)"}, {"pid": 656, "tid": 14556, "ts": 64658807632.9, "ph": "X", "cat": "fee", "dur": 2735499.6, "name": "re.Pattern.sub"}, {"pid": 656, "tid": 14556, "ts": 64658807247.9, "ph": "X", "cat": "fee", "dur": 2735890.7, "name": "sub (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:203)"}, {"pid": 656, "tid": 14556, "ts": 64661543147.2, "ph": "X", "cat": "fee", "dur": 1371528.3, "name": "str.split"}, {"pid": 656, "tid": 14556, "ts": 64656219688.2, "ph": "X", "cat": "fee", "dur": 6712708.099, "name": "cleanAndTokenize (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:64)"}, {"pid": 656, "tid": 14556, "ts": 64662935129.9, "ph": "X", "cat": "fee", "dur": 1.799, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 656, "tid": 14556, "ts": 64662935148.7, "ph": "X", "cat": "fee", "dur": 0.6, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 656, "tid": 14556, "ts": 64662935159.499, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 656, "tid": 14556, "ts": 64662935157.1, "ph": "X", "cat": "fee", "dur": 6.699, "name": "_abc._abc_subclasscheck"}, {"pid": 656, "tid": 14556, "ts": 64662935156.6, "ph": "X", "cat": "fee", "dur": 7.4, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 656, "tid": 14556, "ts": 64662935168.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 656, "tid": 14556, "ts": 64662935165.1, "ph": "X", "cat": "fee", "dur": 4.199, "name": "_abc._abc_subclasscheck"}, {"pid": 656, "tid": 14556, "ts": 64662935165.0, "ph": "X", "cat": "fee", "dur": 4.4, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 656, "tid": 14556, "ts": 64662935171.6, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 656, "tid": 14556, "ts": 64662935169.8, "ph": "X", "cat": "fee", "dur": 3.0, "name": "_abc._abc_subclasscheck"}, {"pid": 656, "tid": 14556, "ts": 64662935169.7, "ph": "X", "cat": "fee", "dur": 3.3, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 656, "tid": 14556, "ts": 64662935176.699, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 656, "tid": 14556, "ts": 64662935173.399, "ph": "X", "cat": "fee", "dur": 4.3, "name": "_abc._abc_subclasscheck"}, {"pid": 656, "tid": 14556, "ts": 64662935173.3, "ph": "X", "cat": "fee", "dur": 4.42, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 656, "tid": 14556, "ts": 64662935180.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 656, "tid": 14556, "ts": 64662935178.2, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_abc._abc_subclasscheck"}, {"pid": 656, "tid": 14556, "ts": 64662935178.1, "ph": "X", "cat": "fee", "dur": 3.5, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 656, "tid": 14556, "ts": 64662935185.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 656, "tid": 14556, "ts": 64662935189.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 656, "tid": 14556, "ts": 64662935193.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 656, "tid": 14556, "ts": 64662935191.7, "ph": "X", "cat": "fee", "dur": 2.699, "name": "_abc._abc_subclasscheck"}, {"pid": 656, "tid": 14556, "ts": 64662935191.399, "ph": "X", "cat": "fee", "dur": 3.02, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 656, "tid": 14556, "ts": 64662935187.0, "ph": "X", "cat": "fee", "dur": 10.7, "name": "_abc._abc_subclasscheck"}, {"pid": 656, "tid": 14556, "ts": 64662935186.9, "ph": "X", "cat": "fee", "dur": 10.9, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 656, "tid": 14556, "ts": 64662935182.0, "ph": "X", "cat": "fee", "dur": 16.7, "name": "_abc._abc_subclasscheck"}, {"pid": 656, "tid": 14556, "ts": 64662935181.9, "ph": "X", "cat": "fee", "dur": 16.9, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 656, "tid": 14556, "ts": 64662935200.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 656, "tid": 14556, "ts": 64662935199.2, "ph": "X", "cat": "fee", "dur": 3.4, "name": "_abc._abc_subclasscheck"}, {"pid": 656, "tid": 14556, "ts": 64662935199.1, "ph": "X", "cat": "fee", "dur": 3.599, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 656, "tid": 14556, "ts": 64662935204.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 656, "tid": 14556, "ts": 64662935203.099, "ph": "X", "cat": "fee", "dur": 2.5, "name": "_abc._abc_subclasscheck"}, {"pid": 656, "tid": 14556, "ts": 64662935203.0, "ph": "X", "cat": "fee", "dur": 2.619, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 656, "tid": 14556, "ts": 64662935146.0, "ph": "X", "cat": "fee", "dur": 60.8, "name": "_abc._abc_subclasscheck"}, {"pid": 656, "tid": 14556, "ts": 64662935145.799, "ph": "X", "cat": "fee", "dur": 61.1, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 656, "tid": 14556, "ts": 64662935209.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 656, "tid": 14556, "ts": 64662935207.399, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_abc._abc_subclasscheck"}, {"pid": 656, "tid": 14556, "ts": 64662935207.3, "ph": "X", "cat": "fee", "dur": 3.5, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 656, "tid": 14556, "ts": 64662935122.999, "ph": "X", "cat": "fee", "dur": 88.3, "name": "_abc._abc_subclasscheck"}, {"pid": 656, "tid": 14556, "ts": 64662935122.8, "ph": "X", "cat": "fee", "dur": 88.599, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 656, "tid": 14556, "ts": 64662935103.699, "ph": "X", "cat": "fee", "dur": 108.4, "name": "_abc._abc_instancecheck"}, {"pid": 656, "tid": 14556, "ts": 64662935102.699, "ph": "X", "cat": "fee", "dur": 109.9, "name": "__instancecheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:117)"}, {"pid": 656, "tid": 14556, "ts": 64662935095.5, "ph": "X", "cat": "fee", "dur": 117.4, "name": "builtins.isinstance"}, {"pid": 656, "tid": 14556, "ts": 64662935214.8, "ph": "X", "cat": "fee", "dur": 1774769.9, "name": "_collections._count_elements"}, {"pid": 656, "tid": 14556, "ts": 64662935087.6, "ph": "X", "cat": "fee", "dur": 1774901.6, "name": "update (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:649)"}, {"pid": 656, "tid": 14556, "ts": 64662935066.6, "ph": "X", "cat": "fee", "dur": 1774926.8, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:581)"}, {"pid": 656, "tid": 14556, "ts": 64655942618.0, "ph": "X", "cat": "fee", "dur": 8767377.0, "name": "getWordCount (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:83)"}, {"pid": 656, "tid": 14556, "ts": 64664841621.899, "ph": "X", "cat": "fee", "dur": 2.0, "name": "time.perf_counter"}, {"pid": 656, "tid": 14556, "ts": 64664841627.7, "ph": "X", "cat": "fee", "dur": 1.6, "name": "nt.getpid"}, {"pid": 656, "tid": 14556, "ts": 64664841645.699, "ph": "X", "cat": "fee", "dur": 116.0, "name": "builtins.print"}, {"pid": 656, "tid": 14556, "ts": 64664841768.5, "ph": "X", "cat": "fee", "dur": 0.7, "name": "Counter.values"}, {"pid": 656, "tid": 14556, "ts": 64664841769.399, "ph": "X", "cat": "fee", "dur": 1927.3, "name": "builtins.sum"}, {"pid": 656, "tid": 14556, "ts": 64664843698.299, "ph": "X", "cat": "fee", "dur": 0.1, "name": "Counter.items"}, {"pid": 656, "tid": 14556, "ts": 64664841765.5, "ph": "X", "cat": "fee", "dur": 46999.3, "name": "getWordFrequencies (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:101)"}, {"pid": 656, "tid": 14556, "ts": 64655942557.3, "ph": "X", "cat": "fee", "dur": 8946210.299, "name": "getWordData (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:123)"}, {"pid": 656, "tid": 14556, "ts": 64655942556.9, "ph": "X", "cat": "fee", "dur": 8946213.5, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:202)"}, {"pid": 656, "tid": 14556, "ts": 64655942556.2, "ph": "X", "cat": "fee", "dur": 8946217.3, "name": "_process_chunk (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:193)"}, {"pid": 656, "tid": 14556, "ts": 64664888792.9, "ph": "X", "cat": "fee", "dur": 2.5, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:145)"}, {"pid": 656, "tid": 14556, "ts": 64664888836.6, "ph": "X", "cat": "fee", "dur": 1.7, "name": "dict.copy"}, {"pid": 656, "tid": 14556, "ts": 64664888839.6, "ph": "X", "cat": "fee", "dur": 3.0, "name": "dict.update"}, {"pid": 656, "tid": 14556, "ts": 64664888810.0, "ph": "X", "cat": "fee", "dur": 32.999, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 656, "tid": 14556, "ts": 64664888874.6, "ph": "X", "cat": "fee", "dur": 1.099, "name": "mappingproxy.get"}, {"pid": 656, "tid": 14556, "ts": 64664888876.6, "ph": "X", "cat": "fee", "dur": 2.6, "name": "builtins.hasattr"}, {"pid": 656, "tid": 14556, "ts": 64664888871.8, "ph": "X", "cat": "fee", "dur": 8.8, "name": "_slotnames (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\copyreg.py:103)"}, {"pid": 656, "tid": 14556, "ts": 64664888898.9, "ph": "X", "cat": "fee", "dur": 17838.6, "name": "__reduce__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:714)"}, {"pid": 656, "tid": 14556, "ts": 64664888843.999, "ph": "X", "cat": "fee", "dur": 106084.7, "name": "ForkingPickler.dump"}, {"pid": 656, "tid": 14556, "ts": 64665003141.5, "ph": "X", "cat": "fee", "dur": 2.199, "name": "_io.BytesIO.getbuffer"}, {"pid": 656, "tid": 14556, "ts": 64664888803.6, "ph": "X", "cat": "fee", "dur": 114340.5, "name": "dumps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:48)"}, {"pid": 656, "tid": 14556, "ts": 64665003151.0, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 656, "tid": 14556, "ts": 64665003155.2, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 656, "tid": 14556, "ts": 64665003159.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "builtins.len"}, {"pid": 656, "tid": 14556, "ts": 64665003167.299, "ph": "X", "cat": "fee", "dur": 1075.6, "name": "_winapi.WriteFile"}, {"pid": 656, "tid": 14556, "ts": 64665004251.099, "ph": "X", "cat": "fee", "dur": 1891.6, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 656, "tid": 14556, "ts": 64665006145.4, "ph": "X", "cat": "fee", "dur": 2.899, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 656, "tid": 14556, "ts": 64665006149.0, "ph": "X", "cat": "fee", "dur": 0.299, "name": "builtins.len"}, {"pid": 656, "tid": 14556, "ts": 64665003163.7, "ph": "X", "cat": "fee", "dur": 2985.8, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 656, "tid": 14556, "ts": 64665003149.299, "ph": "X", "cat": "fee", "dur": 3005.6, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 656, "tid": 14556, "ts": 64664888797.399, "ph": "X", "cat": "fee", "dur": 117358.3, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:370)"}, {"pid": 656, "tid": 14556, "ts": 64664888785.3, "ph": "X", "cat": "fee", "dur": 117589.5, "name": "_sendback_result (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:205)"}, {"pid": 656, "tid": 14556, "ts": 64665078123.0, "ph": "X", "cat": "fee", "dur": 2.7, "name": "_multiprocessing.SemLock.__enter__"}, {"pid": 656, "tid": 14556, "ts": 64665078121.5, "ph": "X", "cat": "fee", "dur": 4.599, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:94)"}, {"pid": 656, "tid": 14556, "ts": 64665078128.3, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 656, "tid": 14556, "ts": 64665078129.1, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 656, "tid": 14556, "ts": 64665078132.0, "ph": "X", "cat": "fee", "dur": 11.799, "name": "_winapi.ReadFile"}, {"pid": 656, "tid": 14556, "ts": 64665078145.899, "ph": "X", "cat": "fee", "dur": 14099993.7, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 656, "tid": 14556, "ts": 64679178150.099, "ph": "X", "cat": "fee", "dur": 6.3, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 656, "tid": 14556, "ts": 64679178162.5, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 656, "tid": 14556, "ts": 64679178163.1, "ph": "X", "cat": "fee", "dur": 0.899, "name": "_io.BytesIO.write"}, {"pid": 656, "tid": 14556, "ts": 64665078130.0, "ph": "X", "cat": "fee", "dur": 14100034.5, "name": "_recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:299)"}, {"pid": 656, "tid": 14556, "ts": 64679178171.7, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_io.BytesIO.getvalue"}, {"pid": 656, "tid": 14556, "ts": 64665078127.6, "ph": "X", "cat": "fee", "dur": 14100044.7, "name": "recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:213)"}, {"pid": 656, "tid": 14556, "ts": 64679178179.7, "ph": "X", "cat": "fee", "dur": 2.099, "name": "_multiprocessing.SemLock.__exit__"}, {"pid": 656, "tid": 14556, "ts": 64679178176.6, "ph": "X", "cat": "fee", "dur": 5.3, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:97)"}, {"pid": 656, "tid": 14556, "ts": 64679178184.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_multiprocessing.SemLock.release"}, {"pid": 656, "tid": 14556, "ts": 64679178186.599, "ph": "X", "cat": "fee", "dur": 4.1, "name": "_pickle.loads"}, {"pid": 656, "tid": 14556, "ts": 64665078118.499, "ph": "X", "cat": "fee", "dur": 14100072.4, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:98)"}, {"pid": 656, "tid": 14556, "ts": 64679178195.1, "ph": "X", "cat": "fee", "dur": 0.899, "name": "nt.getpid"}, {"pid": 656, "tid": 14556, "ts": 64679178217.299, "ph": "X", "cat": "fee", "dur": 1.4, "name": "dict.copy"}, {"pid": 656, "tid": 14556, "ts": 64679178220.0, "ph": "X", "cat": "fee", "dur": 2.7, "name": "dict.update"}, {"pid": 656, "tid": 14556, "ts": 64679178203.2, "ph": "X", "cat": "fee", "dur": 19.8, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 656, "tid": 14556, "ts": 64679178223.6, "ph": "X", "cat": "fee", "dur": 6.7, "name": "ForkingPickler.dump"}, {"pid": 656, "tid": 14556, "ts": 64679178231.3, "ph": "X", "cat": "fee", "dur": 0.899, "name": "_io.BytesIO.getbuffer"}, {"pid": 656, "tid": 14556, "ts": 64679178199.7, "ph": "X", "cat": "fee", "dur": 32.6, "name": "dumps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:48)"}, {"pid": 656, "tid": 14556, "ts": 64679178236.1, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 656, "tid": 14556, "ts": 64679178237.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 656, "tid": 14556, "ts": 64679178240.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.len"}, {"pid": 656, "tid": 14556, "ts": 64679178244.8, "ph": "X", "cat": "fee", "dur": 7.699, "name": "_winapi.WriteFile"}, {"pid": 656, "tid": 14556, "ts": 64679178253.799, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 656, "tid": 14556, "ts": 64679178254.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 656, "tid": 14556, "ts": 64679178243.0, "ph": "X", "cat": "fee", "dur": 11.5, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 656, "tid": 14556, "ts": 64679178234.9, "ph": "X", "cat": "fee", "dur": 20.7, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 656, "tid": 14556, "ts": 64679178196.7, "ph": "X", "cat": "fee", "dur": 59.099, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:370)"}, {"pid": 656, "tid": 14556, "ts": 64655942497.199, "ph": "X", "cat": "fee", "dur": 23235759.2, "name": "_process_worker (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:215)"}, {"pid": 656, "tid": 14556, "ts": 64655942494.8, "ph": "X", "cat": "fee", "dur": 23235762.7, "name": "run (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:103)"}, {"pid": 656, "tid": 14556, "ts": 64679178266.8, "ph": "X", "cat": "fee", "dur": 0.699, "name": "info (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:52)"}, {"pid": 656, "tid": 14556, "ts": 64679178268.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:48)"}, {"pid": 656, "tid": 14556, "ts": 64679178279.1, "ph": "X", "cat": "fee", "dur": 0.5, "name": "<lambda> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:284)"}, {"pid": 656, "tid": 14556, "ts": 64679178278.3, "ph": "X", "cat": "fee", "dur": 1.5, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:291)"}, {"pid": 656, "tid": 14556, "ts": 64679178280.6, "ph": "X", "cat": "fee", "dur": 0.9, "name": "list.sort"}, {"pid": 656, "tid": 14556, "ts": 64679178273.6, "ph": "X", "cat": "fee", "dur": 8.199, "name": "_run_finalizers (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:268)"}, {"pid": 656, "tid": 14556, "ts": 64679178283.3, "ph": "X", "cat": "fee", "dur": 0.7, "name": "current_process (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:37)"}, {"pid": 656, "tid": 14556, "ts": 64679178285.699, "ph": "X", "cat": "fee", "dur": 1.3, "name": "_cleanup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:61)"}, {"pid": 656, "tid": 14556, "ts": 64679178284.9, "ph": "X", "cat": "fee", "dur": 2.4, "name": "active_children (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:43)"}, {"pid": 656, "tid": 14556, "ts": 64679178287.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_cleanup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:61)"}, {"pid": 656, "tid": 14556, "ts": 64679178287.7, "ph": "X", "cat": "fee", "dur": 0.7, "name": "active_children (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:43)"}, {"pid": 656, "tid": 14556, "ts": 64679178288.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:48)"}, {"pid": 656, "tid": 14556, "ts": 64679178290.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "<lambda> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:282)"}, {"pid": 656, "tid": 14556, "ts": 64679178289.9, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:291)"}, {"pid": 656, "tid": 14556, "ts": 64679178290.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.sort"}, {"pid": 656, "tid": 14556, "ts": 64679178291.5, "ph": "X", "cat": "fee", "dur": 0.299, "name": "dict.get"}, {"pid": 656, "tid": 14556, "ts": 64679178292.299, "ph": "X", "cat": "fee", "dur": 0.2, "name": "sub_debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:44)"}, {"pid": 656, "tid": 14556, "ts": 64679178296.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "nt.getpid"}, {"pid": 656, "tid": 14556, "ts": 64679178297.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "sub_debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:44)"}, {"ph": "M", "pid": 7272, "tid": 7272, "name": "process_name", "args": {"name": "SpawnProcess-4"}}, {"ph": "M", "pid": 7272, "tid": 5700, "name": "thread_name", "args": {"name": "MainThread"}}, {"pid": 7272, "tid": 5700, "ts": 64655945138.299, "ph": "X", "cat": "fee", "dur": 1.3, "name": "_multiprocessing.SemLock.__enter__"}, {"pid": 7272, "tid": 5700, "ts": 64655945137.799, "ph": "X", "cat": "fee", "dur": 1.9, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:94)"}, {"pid": 7272, "tid": 5700, "ts": 64655945141.4, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 7272, "tid": 5700, "ts": 64655945142.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 7272, "tid": 5700, "ts": 64655945144.3, "ph": "X", "cat": "fee", "dur": 8.8, "name": "_winapi.ReadFile"}, {"pid": 7272, "tid": 5700, "ts": 64655945155.3, "ph": "X", "cat": "fee", "dur": 2.199, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 7272, "tid": 5700, "ts": 64655945159.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 7272, "tid": 5700, "ts": 64655945160.4, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_io.BytesIO.write"}, {"pid": 7272, "tid": 5700, "ts": 64655945161.4, "ph": "X", "cat": "fee", "dur": 6.299, "name": "_winapi.PeekNamedPipe"}, {"pid": 7272, "tid": 5700, "ts": 64655945168.4, "ph": "X", "cat": "fee", "dur": 2.2, "name": "_winapi.ReadFile"}, {"pid": 7272, "tid": 5700, "ts": 64655945170.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 7272, "tid": 5700, "ts": 64655945171.499, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 7272, "tid": 5700, "ts": 64655945171.62, "ph": "X", "cat": "fee", "dur": 0.48, "name": "_io.BytesIO.write"}, {"pid": 7272, "tid": 5700, "ts": 64655945158.6, "ph": "X", "cat": "fee", "dur": 13.599, "name": "_get_more_data (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:337)"}, {"pid": 7272, "tid": 5700, "ts": 64655945143.4, "ph": "X", "cat": "fee", "dur": 29.499, "name": "_recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:299)"}, {"pid": 7272, "tid": 5700, "ts": 64655945173.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_io.BytesIO.getvalue"}, {"pid": 7272, "tid": 5700, "ts": 64655945140.4, "ph": "X", "cat": "fee", "dur": 33.6, "name": "recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:213)"}, {"pid": 7272, "tid": 5700, "ts": 64655945175.4, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_multiprocessing.SemLock.__exit__"}, {"pid": 7272, "tid": 5700, "ts": 64655945175.0, "ph": "X", "cat": "fee", "dur": 0.9, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:97)"}, {"pid": 7272, "tid": 5700, "ts": 64655945176.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_multiprocessing.SemLock.release"}, {"pid": 7272, "tid": 5700, "ts": 64655945186.9, "ph": "X", "cat": "fee", "dur": 1.2, "name": "_rebuild_partial (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:225)"}, {"pid": 7272, "tid": 5700, "ts": 64655945177.599, "ph": "X", "cat": "fee", "dur": 13.6, "name": "_pickle.loads"}, {"pid": 7272, "tid": 5700, "ts": 64655945136.4, "ph": "X", "cat": "fee", "dur": 54.9, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:98)"}, {"pid": 7272, "tid": 5700, "ts": 64655945194.4, "ph": "X", "cat": "fee", "dur": 0.6, "name": "time.perf_counter"}, {"pid": 7272, "tid": 5700, "ts": 64655945195.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "nt.getpid"}, {"pid": 7272, "tid": 5700, "ts": 64655945196.3, "ph": "X", "cat": "fee", "dur": 49.9, "name": "builtins.print"}, {"pid": 7272, "tid": 5700, "ts": 64655945291.2, "ph": "X", "cat": "fee", "dur": 2.0, "name": "_locale._getdefaultlocale"}, {"pid": 7272, "tid": 5700, "ts": 64655945290.5, "ph": "X", "cat": "fee", "dur": 3.0, "name": "getpreferredencoding (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_bootlocale.py:11)"}, {"pid": 7272, "tid": 5700, "ts": 64655945296.0, "ph": "X", "cat": "fee", "dur": 0.399, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\codecs.py:260)"}, {"pid": 7272, "tid": 5700, "ts": 64655945248.2, "ph": "X", "cat": "fee", "dur": 49.6, "name": "io.open"}, {"pid": 7272, "tid": 5700, "ts": 64656105934.2, "ph": "X", "cat": "fee", "dur": 267423.7, "name": "_codecs.charmap_decode"}, {"pid": 7272, "tid": 5700, "ts": 64656105931.399, "ph": "X", "cat": "fee", "dur": 267428.9, "name": "decode (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\encodings\\cp1252.py:22)"}, {"pid": 7272, "tid": 5700, "ts": 64655945298.8, "ph": "X", "cat": "fee", "dur": 838826.599, "name": "_io.TextIOWrapper.read"}, {"pid": 7272, "tid": 5700, "ts": 64656784130.1, "ph": "X", "cat": "fee", "dur": 61.3, "name": "_io.TextIOWrapper.__exit__"}, {"pid": 7272, "tid": 5700, "ts": 64655945247.7, "ph": "X", "cat": "fee", "dur": 838945.1, "name": "readInData (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:47)"}, {"pid": 7272, "tid": 5700, "ts": 64656784208.9, "ph": "X", "cat": "fee", "dur": 3523855.1, "name": "str.split"}, {"pid": 7272, "tid": 5700, "ts": 64660308069.999, "ph": "X", "cat": "fee", "dur": 1499446.6, "name": "str.join"}, {"pid": 7272, "tid": 5700, "ts": 64663247288.7, "ph": "X", "cat": "fee", "dur": 6.499, "name": "builtins.isinstance"}, {"pid": 7272, "tid": 5700, "ts": 64663247309.1, "ph": "X", "cat": "fee", "dur": 0.4, "name": "builtins.isinstance"}, {"pid": 7272, "tid": 5700, "ts": 64663247313.699, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 7272, "tid": 5700, "ts": 64663247312.1, "ph": "X", "cat": "fee", "dur": 2.2, "name": "isstring (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:595)"}, {"pid": 7272, "tid": 5700, "ts": 64663247317.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 7272, "tid": 5700, "ts": 64663247317.1, "ph": "X", "cat": "fee", "dur": 0.3, "name": "isstring (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:595)"}, {"pid": 7272, "tid": 5700, "ts": 64663247324.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 7272, "tid": 5700, "ts": 64663247334.499, "ph": "X", "cat": "fee", "dur": 2.6, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 7272, "tid": 5700, "ts": 64663247324.099, "ph": "X", "cat": "fee", "dur": 13.1, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:224)"}, {"pid": 7272, "tid": 5700, "ts": 64663247341.0, "ph": "X", "cat": "fee", "dur": 2.899, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:76)"}, {"pid": 7272, "tid": 5700, "ts": 64663247351.1, "ph": "X", "cat": "fee", "dur": 0.399, "name": "builtins.len"}, {"pid": 7272, "tid": 5700, "ts": 64663247350.5, "ph": "X", "cat": "fee", "dur": 1.099, "name": "tell (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:286)"}, {"pid": 7272, "tid": 5700, "ts": 64663247354.9, "ph": "X", "cat": "fee", "dur": 1.6, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:111)"}, {"pid": 7272, "tid": 5700, "ts": 64663247359.599, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 7272, "tid": 5700, "ts": 64663247359.2, "ph": "X", "cat": "fee", "dur": 0.899, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 7272, "tid": 5700, "ts": 64663247360.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 7272, "tid": 5700, "ts": 64663247360.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "tell (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:286)"}, {"pid": 7272, "tid": 5700, "ts": 64663247362.5, "ph": "X", "cat": "fee", "dur": 0.399, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 7272, "tid": 5700, "ts": 64663247362.2, "ph": "X", "cat": "fee", "dur": 0.799, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 7272, "tid": 5700, "ts": 64663247363.5, "ph": "X", "cat": "fee", "dur": 0.399, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 7272, "tid": 5700, "ts": 64663247363.2, "ph": "X", "cat": "fee", "dur": 0.799, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 7272, "tid": 5700, "ts": 64663247365.3, "ph": "X", "cat": "fee", "dur": 0.6, "name": "builtins.ord"}, {"pid": 7272, "tid": 5700, "ts": 64663247366.4, "ph": "X", "cat": "fee", "dur": 0.299, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 7272, "tid": 5700, "ts": 64663247366.199, "ph": "X", "cat": "fee", "dur": 0.52, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 7272, "tid": 5700, "ts": 64663247367.3, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 7272, "tid": 5700, "ts": 64663247367.1, "ph": "X", "cat": "fee", "dur": 0.52, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 7272, "tid": 5700, "ts": 64663247367.9, "ph": "X", "cat": "fee", "dur": 0.299, "name": "builtins.ord"}, {"pid": 7272, "tid": 5700, "ts": 64663247370.2, "ph": "X", "cat": "fee", "dur": 0.799, "name": "list.append"}, {"pid": 7272, "tid": 5700, "ts": 64663247371.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 7272, "tid": 5700, "ts": 64663247371.2, "ph": "X", "cat": "fee", "dur": 0.6, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 7272, "tid": 5700, "ts": 64663247372.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.ord"}, {"pid": 7272, "tid": 5700, "ts": 64663247372.799, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 7272, "tid": 5700, "ts": 64663247372.499, "ph": "X", "cat": "fee", "dur": 0.72, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 7272, "tid": 5700, "ts": 64663247373.7, "ph": "X", "cat": "fee", "dur": 1.5, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 7272, "tid": 5700, "ts": 64663247373.5, "ph": "X", "cat": "fee", "dur": 1.72, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 7272, "tid": 5700, "ts": 64663247375.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.ord"}, {"pid": 7272, "tid": 5700, "ts": 64663247376.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 7272, "tid": 5700, "ts": 64663247376.599, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 7272, "tid": 5700, "ts": 64663247376.4, "ph": "X", "cat": "fee", "dur": 0.5, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 7272, "tid": 5700, "ts": 64663247380.399, "ph": "X", "cat": "fee", "dur": 0.9, "name": "dict.get"}, {"pid": 7272, "tid": 5700, "ts": 64663247381.6, "ph": "X", "cat": "fee", "dur": 0.5, "name": "dict.get"}, {"pid": 7272, "tid": 5700, "ts": 64663247378.4, "ph": "X", "cat": "fee", "dur": 4.099, "name": "_class_escape (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:295)"}, {"pid": 7272, "tid": 5700, "ts": 64663247382.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 7272, "tid": 5700, "ts": 64663247383.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 7272, "tid": 5700, "ts": 64663247384.0, "ph": "X", "cat": "fee", "dur": 0.199, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 7272, "tid": 5700, "ts": 64663247383.7, "ph": "X", "cat": "fee", "dur": 0.519, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 7272, "tid": 5700, "ts": 64663247386.8, "ph": "X", "cat": "fee", "dur": 3.1, "name": "type.fromkeys"}, {"pid": 7272, "tid": 5700, "ts": 64663247385.199, "ph": "X", "cat": "fee", "dur": 6.7, "name": "_uniq (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:432)"}, {"pid": 7272, "tid": 5700, "ts": 64663247392.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 7272, "tid": 5700, "ts": 64663247392.6, "ph": "X", "cat": "fee", "dur": 0.599, "name": "list.insert"}, {"pid": 7272, "tid": 5700, "ts": 64663247393.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 7272, "tid": 5700, "ts": 64663247393.7, "ph": "X", "cat": "fee", "dur": 0.4, "name": "append (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:172)"}, {"pid": 7272, "tid": 5700, "ts": 64663247394.6, "ph": "X", "cat": "fee", "dur": 2.899, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 7272, "tid": 5700, "ts": 64663247394.4, "ph": "X", "cat": "fee", "dur": 3.8, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 7272, "tid": 5700, "ts": 64663247399.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 7272, "tid": 5700, "ts": 64663247399.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "tell (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:286)"}, {"pid": 7272, "tid": 5700, "ts": 64663247403.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 7272, "tid": 5700, "ts": 64663247402.8, "ph": "X", "cat": "fee", "dur": 0.899, "name": "__len__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:160)"}, {"pid": 7272, "tid": 5700, "ts": 64663247407.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 7272, "tid": 5700, "ts": 64663247409.799, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:111)"}, {"pid": 7272, "tid": 5700, "ts": 64663247406.1, "ph": "X", "cat": "fee", "dur": 4.3, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 7272, "tid": 5700, "ts": 64663247411.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 7272, "tid": 5700, "ts": 64663247411.2, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__len__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:160)"}, {"pid": 7272, "tid": 5700, "ts": 64663247412.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.isinstance"}, {"pid": 7272, "tid": 5700, "ts": 64663247411.799, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 7272, "tid": 5700, "ts": 64663247413.099, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 7272, "tid": 5700, "ts": 64663247413.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 7272, "tid": 5700, "ts": 64663247416.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 7272, "tid": 5700, "ts": 64663247416.099, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 7272, "tid": 5700, "ts": 64663247417.2, "ph": "X", "cat": "fee", "dur": 0.899, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 7272, "tid": 5700, "ts": 64663247420.1, "ph": "X", "cat": "fee", "dur": 0.7, "name": "__setitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:168)"}, {"pid": 7272, "tid": 5700, "ts": 64663247422.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 7272, "tid": 5700, "ts": 64663247421.8, "ph": "X", "cat": "fee", "dur": 0.399, "name": "__len__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:160)"}, {"pid": 7272, "tid": 5700, "ts": 64663247421.5, "ph": "X", "cat": "fee", "dur": 0.899, "name": "builtins.len"}, {"pid": 7272, "tid": 5700, "ts": 64663247427.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 7272, "tid": 5700, "ts": 64663247427.499, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 7272, "tid": 5700, "ts": 64663247353.1, "ph": "X", "cat": "fee", "dur": 75.199, "name": "_parse (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:493)"}, {"pid": 7272, "tid": 5700, "ts": 64663247429.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 7272, "tid": 5700, "ts": 64663247429.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 7272, "tid": 5700, "ts": 64663247429.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 7272, "tid": 5700, "ts": 64663247346.6, "ph": "X", "cat": "fee", "dur": 83.4, "name": "_parse_sub (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:435)"}, {"pid": 7272, "tid": 5700, "ts": 64663247431.299, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 7272, "tid": 5700, "ts": 64663247430.9, "ph": "X", "cat": "fee", "dur": 2.3, "name": "fix_flags (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:921)"}, {"pid": 7272, "tid": 5700, "ts": 64663247319.9, "ph": "X", "cat": "fee", "dur": 113.699, "name": "parse (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:937)"}, {"pid": 7272, "tid": 5700, "ts": 64663247441.1, "ph": "X", "cat": "fee", "dur": 2.3, "name": "builtins.min"}, {"pid": 7272, "tid": 5700, "ts": 64663247443.499, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.min"}, {"pid": 7272, "tid": 5700, "ts": 64663247439.199, "ph": "X", "cat": "fee", "dur": 4.7, "name": "getwidth (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:174)"}, {"pid": 7272, "tid": 5700, "ts": 64663247445.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.min"}, {"pid": 7272, "tid": 5700, "ts": 64663247445.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.min"}, {"pid": 7272, "tid": 5700, "ts": 64663247437.2, "ph": "X", "cat": "fee", "dur": 8.999, "name": "getwidth (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:174)"}, {"pid": 7272, "tid": 5700, "ts": 64663247450.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_get_iscased (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:453)"}, {"pid": 7272, "tid": 5700, "ts": 64663247448.4, "ph": "X", "cat": "fee", "dur": 2.9, "name": "_get_literal_prefix (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:461)"}, {"pid": 7272, "tid": 5700, "ts": 64663247452.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_get_iscased (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:453)"}, {"pid": 7272, "tid": 5700, "ts": 64663247452.2, "ph": "X", "cat": "fee", "dur": 1.1, "name": "_get_charset_prefix (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:492)"}, {"pid": 7272, "tid": 5700, "ts": 64663247453.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 7272, "tid": 5700, "ts": 64663247453.899, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 7272, "tid": 5700, "ts": 64663247454.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 7272, "tid": 5700, "ts": 64663247454.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 7272, "tid": 5700, "ts": 64663247454.399, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 7272, "tid": 5700, "ts": 64663247454.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.min"}, {"pid": 7272, "tid": 5700, "ts": 64663247454.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 7272, "tid": 5700, "ts": 64663247454.899, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 7272, "tid": 5700, "ts": 64663247436.2, "ph": "X", "cat": "fee", "dur": 18.899, "name": "_compile_info (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:536)"}, {"pid": 7272, "tid": 5700, "ts": 64663247460.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 7272, "tid": 5700, "ts": 64663247460.6, "ph": "X", "cat": "fee", "dur": 0.22, "name": "__len__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:160)"}, {"pid": 7272, "tid": 5700, "ts": 64663247460.3, "ph": "X", "cat": "fee", "dur": 0.6, "name": "builtins.len"}, {"pid": 7272, "tid": 5700, "ts": 64663247461.499, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 7272, "tid": 5700, "ts": 64663247461.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 7272, "tid": 5700, "ts": 64663247460.1, "ph": "X", "cat": "fee", "dur": 2.0, "name": "_simple (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:423)"}, {"pid": 7272, "tid": 5700, "ts": 64663247462.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 7272, "tid": 5700, "ts": 64663247462.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 7272, "tid": 5700, "ts": 64663247462.64, "ph": "X", "cat": "fee", "dur": 0.06, "name": "list.append"}, {"pid": 7272, "tid": 5700, "ts": 64663247462.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 7272, "tid": 5700, "ts": 64663247462.92, "ph": "X", "cat": "fee", "dur": 0.28, "name": "list.append"}, {"pid": 7272, "tid": 5700, "ts": 64663247472.02, "ph": "X", "cat": "fee", "dur": 0.08, "name": "builtins.isinstance"}, {"pid": 7272, "tid": 5700, "ts": 64663247472.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 7272, "tid": 5700, "ts": 64663247477.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 7272, "tid": 5700, "ts": 64663247482.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 7272, "tid": 5700, "ts": 64663247483.2, "ph": "X", "cat": "fee", "dur": 2.5, "name": "bytearray.find"}, {"pid": 7272, "tid": 5700, "ts": 64663247485.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 7272, "tid": 5700, "ts": 64663247486.1, "ph": "X", "cat": "fee", "dur": 0.199, "name": "bytearray.find"}, {"pid": 7272, "tid": 5700, "ts": 64663247486.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 7272, "tid": 5700, "ts": 64663247486.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "bytearray.find"}, {"pid": 7272, "tid": 5700, "ts": 64663247486.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 7272, "tid": 5700, "ts": 64663247487.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "bytearray.find"}, {"pid": 7272, "tid": 5700, "ts": 64663247487.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 7272, "tid": 5700, "ts": 64663247487.4, "ph": "X", "cat": "fee", "dur": 0.199, "name": "bytearray.find"}, {"pid": 7272, "tid": 5700, "ts": 64663247488.099, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 7272, "tid": 5700, "ts": 64663247488.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 7272, "tid": 5700, "ts": 64663247489.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 7272, "tid": 5700, "ts": 64663247489.119, "ph": "X", "cat": "fee", "dur": 0.08, "name": "builtins.len"}, {"pid": 7272, "tid": 5700, "ts": 64663247473.2, "ph": "X", "cat": "fee", "dur": 16.099, "name": "_optimize_charset (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:276)"}, {"pid": 7272, "tid": 5700, "ts": 64663247490.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 7272, "tid": 5700, "ts": 64663247490.52, "ph": "X", "cat": "fee", "dur": 0.18, "name": "builtins.len"}, {"pid": 7272, "tid": 5700, "ts": 64663247490.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 7272, "tid": 5700, "ts": 64663247492.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 7272, "tid": 5700, "ts": 64663247492.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 7272, "tid": 5700, "ts": 64663247492.399, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 7272, "tid": 5700, "ts": 64663247492.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 7272, "tid": 5700, "ts": 64663247492.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 7272, "tid": 5700, "ts": 64663247492.8, "ph": "X", "cat": "fee", "dur": 0.3, "name": "list.append"}, {"pid": 7272, "tid": 5700, "ts": 64663247493.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 7272, "tid": 5700, "ts": 64663247493.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 7272, "tid": 5700, "ts": 64663247494.699, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 7272, "tid": 5700, "ts": 64663247495.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 7272, "tid": 5700, "ts": 64663247491.6, "ph": "X", "cat": "fee", "dur": 3.5, "name": "_compile_charset (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:249)"}, {"pid": 7272, "tid": 5700, "ts": 64663247495.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 7272, "tid": 5700, "ts": 64663247496.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 7272, "tid": 5700, "ts": 64663247495.9, "ph": "X", "cat": "fee", "dur": 1.4, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 7272, "tid": 5700, "ts": 64663247470.0, "ph": "X", "cat": "fee", "dur": 28.6, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:71)"}, {"pid": 7272, "tid": 5700, "ts": 64663247498.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 7272, "tid": 5700, "ts": 64663247498.999, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 7272, "tid": 5700, "ts": 64663247457.199, "ph": "X", "cat": "fee", "dur": 42.0, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:71)"}, {"pid": 7272, "tid": 5700, "ts": 64663247499.499, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 7272, "tid": 5700, "ts": 64663247435.1, "ph": "X", "cat": "fee", "dur": 64.5, "name": "_code (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:598)"}, {"pid": 7272, "tid": 5700, "ts": 64663247501.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 7272, "tid": 5700, "ts": 64663247500.8, "ph": "X", "cat": "fee", "dur": 0.499, "name": "groups (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:81)"}, {"pid": 7272, "tid": 5700, "ts": 64663247502.0, "ph": "X", "cat": "fee", "dur": 0.6, "name": "dict.items"}, {"pid": 7272, "tid": 5700, "ts": 64663247504.299, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 7272, "tid": 5700, "ts": 64663247504.2, "ph": "X", "cat": "fee", "dur": 0.139, "name": "groups (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:81)"}, {"pid": 7272, "tid": 5700, "ts": 64663247505.099, "ph": "X", "cat": "fee", "dur": 1.8, "name": "_sre.compile"}, {"pid": 7272, "tid": 5700, "ts": 64663247316.1, "ph": "X", "cat": "fee", "dur": 190.999, "name": "compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:759)"}, {"pid": 7272, "tid": 5700, "ts": 64663247511.8, "ph": "X", "cat": "fee", "dur": 0.5, "name": "builtins.isinstance"}, {"pid": 7272, "tid": 5700, "ts": 64663247519.1, "ph": "X", "cat": "fee", "dur": 1.899, "name": "__new__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:670)"}, {"pid": 7272, "tid": 5700, "ts": 64663247515.8, "ph": "X", "cat": "fee", "dur": 5.3, "name": "__call__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:358)"}, {"pid": 7272, "tid": 5700, "ts": 64663247522.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__new__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:670)"}, {"pid": 7272, "tid": 5700, "ts": 64663247521.9, "ph": "X", "cat": "fee", "dur": 0.6, "name": "__call__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:358)"}, {"pid": 7272, "tid": 5700, "ts": 64663247511.3, "ph": "X", "cat": "fee", "dur": 11.3, "name": "__and__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:977)"}, {"pid": 7272, "tid": 5700, "ts": 64663247523.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 7272, "tid": 5700, "ts": 64663247286.4, "ph": "X", "cat": "fee", "dur": 237.899, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:289)"}, {"pid": 7272, "tid": 5700, "ts": 64663247525.2, "ph": "X", "cat": "fee", "dur": 5083365.0, "name": "re.Pattern.sub"}, {"pid": 7272, "tid": 5700, "ts": 64663247283.799, "ph": "X", "cat": "fee", "dur": 5083621.0, "name": "sub (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:203)"}, {"pid": 7272, "tid": 5700, "ts": 64668330914.4, "ph": "X", "cat": "fee", "dur": 2645016.6, "name": "str.split"}, {"pid": 7272, "tid": 5700, "ts": 64656784207.199, "ph": "X", "cat": "fee", "dur": 14222773.6, "name": "cleanAndTokenize (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:64)"}, {"pid": 7272, "tid": 5700, "ts": 64671012650.1, "ph": "X", "cat": "fee", "dur": 1.0, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 7272, "tid": 5700, "ts": 64671012665.7, "ph": "X", "cat": "fee", "dur": 0.199, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 7272, "tid": 5700, "ts": 64671012682.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 7272, "tid": 5700, "ts": 64671012679.7, "ph": "X", "cat": "fee", "dur": 7.8, "name": "_abc._abc_subclasscheck"}, {"pid": 7272, "tid": 5700, "ts": 64671012678.6, "ph": "X", "cat": "fee", "dur": 8.999, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 7272, "tid": 5700, "ts": 64671012690.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 7272, "tid": 5700, "ts": 64671012688.699, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_abc._abc_subclasscheck"}, {"pid": 7272, "tid": 5700, "ts": 64671012688.6, "ph": "X", "cat": "fee", "dur": 3.419, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 7272, "tid": 5700, "ts": 64671012695.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 7272, "tid": 5700, "ts": 64671012692.4, "ph": "X", "cat": "fee", "dur": 11.7, "name": "_abc._abc_subclasscheck"}, {"pid": 7272, "tid": 5700, "ts": 64671012692.3, "ph": "X", "cat": "fee", "dur": 11.9, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 7272, "tid": 5700, "ts": 64671012707.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 7272, "tid": 5700, "ts": 64671012704.62, "ph": "X", "cat": "fee", "dur": 4.78, "name": "_abc._abc_subclasscheck"}, {"pid": 7272, "tid": 5700, "ts": 64671012704.6, "ph": "X", "cat": "fee", "dur": 4.899, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 7272, "tid": 5700, "ts": 64671012710.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 7272, "tid": 5700, "ts": 64671012709.8, "ph": "X", "cat": "fee", "dur": 1.799, "name": "_abc._abc_subclasscheck"}, {"pid": 7272, "tid": 5700, "ts": 64671012709.7, "ph": "X", "cat": "fee", "dur": 2.0, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 7272, "tid": 5700, "ts": 64671012714.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 7272, "tid": 5700, "ts": 64671012720.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 7272, "tid": 5700, "ts": 64671012723.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 7272, "tid": 5700, "ts": 64671012721.899, "ph": "X", "cat": "fee", "dur": 2.0, "name": "_abc._abc_subclasscheck"}, {"pid": 7272, "tid": 5700, "ts": 64671012721.7, "ph": "X", "cat": "fee", "dur": 2.219, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 7272, "tid": 5700, "ts": 64671012716.72, "ph": "X", "cat": "fee", "dur": 9.58, "name": "_abc._abc_subclasscheck"}, {"pid": 7272, "tid": 5700, "ts": 64671012716.7, "ph": "X", "cat": "fee", "dur": 9.7, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 7272, "tid": 5700, "ts": 64671012711.92, "ph": "X", "cat": "fee", "dur": 14.98, "name": "_abc._abc_subclasscheck"}, {"pid": 7272, "tid": 5700, "ts": 64671012711.9, "ph": "X", "cat": "fee", "dur": 15.099, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 7272, "tid": 5700, "ts": 64671012729.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 7272, "tid": 5700, "ts": 64671012727.3, "ph": "X", "cat": "fee", "dur": 3.3, "name": "_abc._abc_subclasscheck"}, {"pid": 7272, "tid": 5700, "ts": 64671012727.2, "ph": "X", "cat": "fee", "dur": 3.42, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 7272, "tid": 5700, "ts": 64671012732.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 7272, "tid": 5700, "ts": 64671012731.0, "ph": "X", "cat": "fee", "dur": 2.4, "name": "_abc._abc_subclasscheck"}, {"pid": 7272, "tid": 5700, "ts": 64671012730.9, "ph": "X", "cat": "fee", "dur": 2.52, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 7272, "tid": 5700, "ts": 64671012664.3, "ph": "X", "cat": "fee", "dur": 69.6, "name": "_abc._abc_subclasscheck"}, {"pid": 7272, "tid": 5700, "ts": 64671012664.2, "ph": "X", "cat": "fee", "dur": 69.8, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 7272, "tid": 5700, "ts": 64671012737.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 7272, "tid": 5700, "ts": 64671012734.32, "ph": "X", "cat": "fee", "dur": 3.98, "name": "_abc._abc_subclasscheck"}, {"pid": 7272, "tid": 5700, "ts": 64671012734.3, "ph": "X", "cat": "fee", "dur": 4.02, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 7272, "tid": 5700, "ts": 64671012642.8, "ph": "X", "cat": "fee", "dur": 95.7, "name": "_abc._abc_subclasscheck"}, {"pid": 7272, "tid": 5700, "ts": 64671012642.7, "ph": "X", "cat": "fee", "dur": 96.0, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 7272, "tid": 5700, "ts": 64671012625.099, "ph": "X", "cat": "fee", "dur": 114.0, "name": "_abc._abc_instancecheck"}, {"pid": 7272, "tid": 5700, "ts": 64671012624.1, "ph": "X", "cat": "fee", "dur": 115.1, "name": "__instancecheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:117)"}, {"pid": 7272, "tid": 5700, "ts": 64671012618.7, "ph": "X", "cat": "fee", "dur": 120.699, "name": "builtins.isinstance"}, {"pid": 7272, "tid": 5700, "ts": 64671012741.5, "ph": "X", "cat": "fee", "dur": 4226280.499, "name": "_collections._count_elements"}, {"pid": 7272, "tid": 5700, "ts": 64671012614.8, "ph": "X", "cat": "fee", "dur": 4226412.6, "name": "update (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:649)"}, {"pid": 7272, "tid": 5700, "ts": 64671012593.5, "ph": "X", "cat": "fee", "dur": 4226439.7, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:581)"}, {"pid": 7272, "tid": 5700, "ts": 64655945247.4, "ph": "X", "cat": "fee", "dur": 19293787.899, "name": "getWordCount (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:83)"}, {"pid": 7272, "tid": 5700, "ts": 64675799014.8, "ph": "X", "cat": "fee", "dur": 2.8, "name": "time.perf_counter"}, {"pid": 7272, "tid": 5700, "ts": 64675799022.599, "ph": "X", "cat": "fee", "dur": 2.8, "name": "nt.getpid"}, {"pid": 7272, "tid": 5700, "ts": 64675799050.4, "ph": "X", "cat": "fee", "dur": 425.3, "name": "builtins.print"}, {"pid": 7272, "tid": 5700, "ts": 64675799488.4, "ph": "X", "cat": "fee", "dur": 0.7, "name": "Counter.values"}, {"pid": 7272, "tid": 5700, "ts": 64675799489.2, "ph": "X", "cat": "fee", "dur": 6999.999, "name": "builtins.sum"}, {"pid": 7272, "tid": 5700, "ts": 64675806496.5, "ph": "X", "cat": "fee", "dur": 0.4, "name": "Counter.items"}, {"pid": 7272, "tid": 5700, "ts": 64675799483.7, "ph": "X", "cat": "fee", "dur": 183626.999, "name": "getWordFrequencies (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:101)"}, {"pid": 7272, "tid": 5700, "ts": 64655945194.0, "ph": "X", "cat": "fee", "dur": 20037919.999, "name": "getWordData (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:123)"}, {"pid": 7272, "tid": 5700, "ts": 64655945193.5, "ph": "X", "cat": "fee", "dur": 20037924.1, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:202)"}, {"pid": 7272, "tid": 5700, "ts": 64655945192.9, "ph": "X", "cat": "fee", "dur": 20037927.699, "name": "_process_chunk (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:193)"}, {"pid": 7272, "tid": 5700, "ts": 64675983140.2, "ph": "X", "cat": "fee", "dur": 1.399, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:145)"}, {"pid": 7272, "tid": 5700, "ts": 64675983174.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "dict.copy"}, {"pid": 7272, "tid": 5700, "ts": 64675983178.0, "ph": "X", "cat": "fee", "dur": 2.8, "name": "dict.update"}, {"pid": 7272, "tid": 5700, "ts": 64675983156.0, "ph": "X", "cat": "fee", "dur": 25.1, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 7272, "tid": 5700, "ts": 64675983212.0, "ph": "X", "cat": "fee", "dur": 0.9, "name": "mappingproxy.get"}, {"pid": 7272, "tid": 5700, "ts": 64675983213.8, "ph": "X", "cat": "fee", "dur": 2.3, "name": "builtins.hasattr"}, {"pid": 7272, "tid": 5700, "ts": 64675983209.5, "ph": "X", "cat": "fee", "dur": 8.399, "name": "_slotnames (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\copyreg.py:103)"}, {"pid": 7272, "tid": 5700, "ts": 64675983244.8, "ph": "X", "cat": "fee", "dur": 57729.599, "name": "__reduce__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:714)"}, {"pid": 7272, "tid": 5700, "ts": 64675983181.7, "ph": "X", "cat": "fee", "dur": 433442.199, "name": "ForkingPickler.dump"}, {"pid": 7272, "tid": 5700, "ts": 64676447204.1, "ph": "X", "cat": "fee", "dur": 4.699, "name": "_io.BytesIO.getbuffer"}, {"pid": 7272, "tid": 5700, "ts": 64675983149.999, "ph": "X", "cat": "fee", "dur": 464059.7, "name": "dumps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:48)"}, {"pid": 7272, "tid": 5700, "ts": 64676447225.999, "ph": "X", "cat": "fee", "dur": 0.9, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 7272, "tid": 5700, "ts": 64676447237.0, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 7272, "tid": 5700, "ts": 64676447244.799, "ph": "X", "cat": "fee", "dur": 0.9, "name": "builtins.len"}, {"pid": 7272, "tid": 5700, "ts": 64676447261.4, "ph": "X", "cat": "fee", "dur": 5043.299, "name": "_winapi.WriteFile"}, {"pid": 7272, "tid": 5700, "ts": 64676452316.9, "ph": "X", "cat": "fee", "dur": 8057.799, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 7272, "tid": 5700, "ts": 64676460380.4, "ph": "X", "cat": "fee", "dur": 4.399, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 7272, "tid": 5700, "ts": 64676460386.699, "ph": "X", "cat": "fee", "dur": 0.5, "name": "builtins.len"}, {"pid": 7272, "tid": 5700, "ts": 64676447253.2, "ph": "X", "cat": "fee", "dur": 13134.399, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 7272, "tid": 5700, "ts": 64676447224.1, "ph": "X", "cat": "fee", "dur": 13172.4, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 7272, "tid": 5700, "ts": 64675983144.399, "ph": "X", "cat": "fee", "dur": 477253.3, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:370)"}, {"pid": 7272, "tid": 5700, "ts": 64675983131.999, "ph": "X", "cat": "fee", "dur": 478087.7, "name": "_sendback_result (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:205)"}, {"pid": 7272, "tid": 5700, "ts": 64676672412.4, "ph": "X", "cat": "fee", "dur": 2505867.4, "name": "_multiprocessing.SemLock.__enter__"}, {"pid": 7272, "tid": 5700, "ts": 64676672409.0, "ph": "X", "cat": "fee", "dur": 2505871.899, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:94)"}, {"pid": 7272, "tid": 5700, "ts": 64679178284.699, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 7272, "tid": 5700, "ts": 64679178285.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 7272, "tid": 5700, "ts": 64679178288.2, "ph": "X", "cat": "fee", "dur": 6.2, "name": "_winapi.ReadFile"}, {"pid": 7272, "tid": 5700, "ts": 64679178295.5, "ph": "X", "cat": "fee", "dur": 1.7, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 7272, "tid": 5700, "ts": 64679178299.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 7272, "tid": 5700, "ts": 64679178299.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_io.BytesIO.write"}, {"pid": 7272, "tid": 5700, "ts": 64679178286.499, "ph": "X", "cat": "fee", "dur": 13.5, "name": "_recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:299)"}, {"pid": 7272, "tid": 5700, "ts": 64679178301.9, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_io.BytesIO.getvalue"}, {"pid": 7272, "tid": 5700, "ts": 64679178283.699, "ph": "X", "cat": "fee", "dur": 18.6, "name": "recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:213)"}, {"pid": 7272, "tid": 5700, "ts": 64679178304.6, "ph": "X", "cat": "fee", "dur": 1.5, "name": "_multiprocessing.SemLock.__exit__"}, {"pid": 7272, "tid": 5700, "ts": 64679178303.4, "ph": "X", "cat": "fee", "dur": 2.9, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:97)"}, {"pid": 7272, "tid": 5700, "ts": 64679178307.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_multiprocessing.SemLock.release"}, {"pid": 7272, "tid": 5700, "ts": 64679178308.5, "ph": "X", "cat": "fee", "dur": 2.2, "name": "_pickle.loads"}, {"pid": 7272, "tid": 5700, "ts": 64676672402.7, "ph": "X", "cat": "fee", "dur": 2505908.099, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:98)"}, {"pid": 7272, "tid": 5700, "ts": 64679178312.599, "ph": "X", "cat": "fee", "dur": 0.5, "name": "nt.getpid"}, {"pid": 7272, "tid": 5700, "ts": 64679178322.199, "ph": "X", "cat": "fee", "dur": 0.3, "name": "dict.copy"}, {"pid": 7272, "tid": 5700, "ts": 64679178323.1, "ph": "X", "cat": "fee", "dur": 0.899, "name": "dict.update"}, {"pid": 7272, "tid": 5700, "ts": 64679178316.1, "ph": "X", "cat": "fee", "dur": 8.0, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 7272, "tid": 5700, "ts": 64679178324.6, "ph": "X", "cat": "fee", "dur": 2.5, "name": "ForkingPickler.dump"}, {"pid": 7272, "tid": 5700, "ts": 64679178328.0, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_io.BytesIO.getbuffer"}, {"pid": 7272, "tid": 5700, "ts": 64679178314.8, "ph": "X", "cat": "fee", "dur": 13.7, "name": "dumps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:48)"}, {"pid": 7272, "tid": 5700, "ts": 64679178330.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 7272, "tid": 5700, "ts": 64679178331.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 7272, "tid": 5700, "ts": 64679178332.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 7272, "tid": 5700, "ts": 64679178334.5, "ph": "X", "cat": "fee", "dur": 3.4, "name": "_winapi.WriteFile"}, {"pid": 7272, "tid": 5700, "ts": 64679178338.4, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 7272, "tid": 5700, "ts": 64679178339.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 7272, "tid": 5700, "ts": 64679178334.0, "ph": "X", "cat": "fee", "dur": 5.199, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 7272, "tid": 5700, "ts": 64679178329.9, "ph": "X", "cat": "fee", "dur": 10.299, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 7272, "tid": 5700, "ts": 64679178313.599, "ph": "X", "cat": "fee", "dur": 26.9, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:370)"}, {"pid": 7272, "tid": 5700, "ts": 64655945135.2, "ph": "X", "cat": "fee", "dur": 23233205.7, "name": "_process_worker (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:215)"}, {"pid": 7272, "tid": 5700, "ts": 64655945133.8, "ph": "X", "cat": "fee", "dur": 23233207.5, "name": "run (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:103)"}, {"pid": 7272, "tid": 5700, "ts": 64679178349.5, "ph": "X", "cat": "fee", "dur": 0.599, "name": "info (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:52)"}, {"pid": 7272, "tid": 5700, "ts": 64679178351.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:48)"}, {"pid": 7272, "tid": 5700, "ts": 64679178356.4, "ph": "X", "cat": "fee", "dur": 0.5, "name": "<lambda> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:284)"}, {"pid": 7272, "tid": 5700, "ts": 64679178355.9, "ph": "X", "cat": "fee", "dur": 4.0, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:291)"}, {"pid": 7272, "tid": 5700, "ts": 64679178360.7, "ph": "X", "cat": "fee", "dur": 0.7, "name": "list.sort"}, {"pid": 7272, "tid": 5700, "ts": 64679178352.399, "ph": "X", "cat": "fee", "dur": 9.2, "name": "_run_finalizers (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:268)"}, {"pid": 7272, "tid": 5700, "ts": 64679178363.1, "ph": "X", "cat": "fee", "dur": 0.699, "name": "current_process (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:37)"}, {"pid": 7272, "tid": 5700, "ts": 64679178365.6, "ph": "X", "cat": "fee", "dur": 1.399, "name": "_cleanup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:61)"}, {"pid": 7272, "tid": 5700, "ts": 64679178364.7, "ph": "X", "cat": "fee", "dur": 2.5, "name": "active_children (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:43)"}, {"pid": 7272, "tid": 5700, "ts": 64679178367.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_cleanup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:61)"}, {"pid": 7272, "tid": 5700, "ts": 64679178367.599, "ph": "X", "cat": "fee", "dur": 0.5, "name": "active_children (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:43)"}, {"pid": 7272, "tid": 5700, "ts": 64679178368.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:48)"}, {"pid": 7272, "tid": 5700, "ts": 64679178369.899, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<lambda> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:282)"}, {"pid": 7272, "tid": 5700, "ts": 64679178369.599, "ph": "X", "cat": "fee", "dur": 0.7, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:291)"}, {"pid": 7272, "tid": 5700, "ts": 64679178370.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.sort"}, {"pid": 7272, "tid": 5700, "ts": 64679178371.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "dict.get"}, {"pid": 7272, "tid": 5700, "ts": 64679178371.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "sub_debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:44)"}, {"pid": 7272, "tid": 5700, "ts": 64679178375.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "nt.getpid"}, {"pid": 7272, "tid": 5700, "ts": 64679178376.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "sub_debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:44)"}, {"ph": "M", "pid": 7800, "tid": 7800, "name": "process_name", "args": {"name": "SpawnProcess-6"}}, {"ph": "M", "pid": 7800, "tid": 20072, "name": "thread_name", "args": {"name": "MainThread"}}, {"pid": 7800, "tid": 20072, "ts": 64655951730.8, "ph": "X", "cat": "fee", "dur": 1.3, "name": "_multiprocessing.SemLock.__enter__"}, {"pid": 7800, "tid": 20072, "ts": 64655951730.2, "ph": "X", "cat": "fee", "dur": 1.999, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:94)"}, {"pid": 7800, "tid": 20072, "ts": 64655951733.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 7800, "tid": 20072, "ts": 64655951734.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 7800, "tid": 20072, "ts": 64655951737.9, "ph": "X", "cat": "fee", "dur": 8.9, "name": "_winapi.ReadFile"}, {"pid": 7800, "tid": 20072, "ts": 64655951748.5, "ph": "X", "cat": "fee", "dur": 2.6, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 7800, "tid": 20072, "ts": 64655951752.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 7800, "tid": 20072, "ts": 64655951754.6, "ph": "X", "cat": "fee", "dur": 0.399, "name": "_io.BytesIO.write"}, {"pid": 7800, "tid": 20072, "ts": 64655951755.499, "ph": "X", "cat": "fee", "dur": 6.8, "name": "_winapi.PeekNamedPipe"}, {"pid": 7800, "tid": 20072, "ts": 64655951763.099, "ph": "X", "cat": "fee", "dur": 2.6, "name": "_winapi.ReadFile"}, {"pid": 7800, "tid": 20072, "ts": 64655951766.0, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 7800, "tid": 20072, "ts": 64655951766.899, "ph": "X", "cat": "fee", "dur": 0.1, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 7800, "tid": 20072, "ts": 64655951767.1, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_io.BytesIO.write"}, {"pid": 7800, "tid": 20072, "ts": 64655951752.4, "ph": "X", "cat": "fee", "dur": 15.2, "name": "_get_more_data (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:337)"}, {"pid": 7800, "tid": 20072, "ts": 64655951735.2, "ph": "X", "cat": "fee", "dur": 33.6, "name": "_recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:299)"}, {"pid": 7800, "tid": 20072, "ts": 64655951769.5, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_io.BytesIO.getvalue"}, {"pid": 7800, "tid": 20072, "ts": 64655951732.8, "ph": "X", "cat": "fee", "dur": 36.919, "name": "recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:213)"}, {"pid": 7800, "tid": 20072, "ts": 64655951770.9, "ph": "X", "cat": "fee", "dur": 0.599, "name": "_multiprocessing.SemLock.__exit__"}, {"pid": 7800, "tid": 20072, "ts": 64655951770.6, "ph": "X", "cat": "fee", "dur": 1.0, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:97)"}, {"pid": 7800, "tid": 20072, "ts": 64655951772.2, "ph": "X", "cat": "fee", "dur": 0.299, "name": "_multiprocessing.SemLock.release"}, {"pid": 7800, "tid": 20072, "ts": 64655951783.6, "ph": "X", "cat": "fee", "dur": 1.299, "name": "_rebuild_partial (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:225)"}, {"pid": 7800, "tid": 20072, "ts": 64655951773.2, "ph": "X", "cat": "fee", "dur": 15.1, "name": "_pickle.loads"}, {"pid": 7800, "tid": 20072, "ts": 64655951729.1, "ph": "X", "cat": "fee", "dur": 59.3, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:98)"}, {"pid": 7800, "tid": 20072, "ts": 64655951791.3, "ph": "X", "cat": "fee", "dur": 0.299, "name": "time.perf_counter"}, {"pid": 7800, "tid": 20072, "ts": 64655951791.8, "ph": "X", "cat": "fee", "dur": 0.299, "name": "nt.getpid"}, {"pid": 7800, "tid": 20072, "ts": 64655951792.8, "ph": "X", "cat": "fee", "dur": 58.399, "name": "builtins.print"}, {"pid": 7800, "tid": 20072, "ts": 64655951907.8, "ph": "X", "cat": "fee", "dur": 2.299, "name": "_locale._getdefaultlocale"}, {"pid": 7800, "tid": 20072, "ts": 64655951906.6, "ph": "X", "cat": "fee", "dur": 3.999, "name": "getpreferredencoding (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_bootlocale.py:11)"}, {"pid": 7800, "tid": 20072, "ts": 64655951914.5, "ph": "X", "cat": "fee", "dur": 0.399, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\codecs.py:260)"}, {"pid": 7800, "tid": 20072, "ts": 64655951854.7, "ph": "X", "cat": "fee", "dur": 62.6, "name": "io.open"}, {"pid": 7800, "tid": 20072, "ts": 64656123440.999, "ph": "X", "cat": "fee", "dur": 271043.9, "name": "_codecs.charmap_decode"}, {"pid": 7800, "tid": 20072, "ts": 64656123436.8, "ph": "X", "cat": "fee", "dur": 271050.6, "name": "decode (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\encodings\\cp1252.py:22)"}, {"pid": 7800, "tid": 20072, "ts": 64655951918.9, "ph": "X", "cat": "fee", "dur": 837794.299, "name": "_io.TextIOWrapper.read"}, {"pid": 7800, "tid": 20072, "ts": 64656789721.299, "ph": "X", "cat": "fee", "dur": 102.5, "name": "_io.TextIOWrapper.__exit__"}, {"pid": 7800, "tid": 20072, "ts": 64655951853.8, "ph": "X", "cat": "fee", "dur": 837971.6, "name": "readInData (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:47)"}, {"pid": 7800, "tid": 20072, "ts": 64656789863.1, "ph": "X", "cat": "fee", "dur": 3489164.599, "name": "str.split"}, {"pid": 7800, "tid": 20072, "ts": 64660279035.1, "ph": "X", "cat": "fee", "dur": 1493216.499, "name": "str.join"}, {"pid": 7800, "tid": 20072, "ts": 64663159222.7, "ph": "X", "cat": "fee", "dur": 7.9, "name": "builtins.isinstance"}, {"pid": 7800, "tid": 20072, "ts": 64663159244.0, "ph": "X", "cat": "fee", "dur": 0.399, "name": "builtins.isinstance"}, {"pid": 7800, "tid": 20072, "ts": 64663159250.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "builtins.isinstance"}, {"pid": 7800, "tid": 20072, "ts": 64663159248.199, "ph": "X", "cat": "fee", "dur": 2.9, "name": "isstring (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:595)"}, {"pid": 7800, "tid": 20072, "ts": 64663159254.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 7800, "tid": 20072, "ts": 64663159254.299, "ph": "X", "cat": "fee", "dur": 0.32, "name": "isstring (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:595)"}, {"pid": 7800, "tid": 20072, "ts": 64663159263.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.isinstance"}, {"pid": 7800, "tid": 20072, "ts": 64663159269.3, "ph": "X", "cat": "fee", "dur": 2.799, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 7800, "tid": 20072, "ts": 64663159263.6, "ph": "X", "cat": "fee", "dur": 8.699, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:224)"}, {"pid": 7800, "tid": 20072, "ts": 64663159276.5, "ph": "X", "cat": "fee", "dur": 3.1, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:76)"}, {"pid": 7800, "tid": 20072, "ts": 64663159286.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 7800, "tid": 20072, "ts": 64663159285.4, "ph": "X", "cat": "fee", "dur": 1.0, "name": "tell (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:286)"}, {"pid": 7800, "tid": 20072, "ts": 64663159288.7, "ph": "X", "cat": "fee", "dur": 2.4, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:111)"}, {"pid": 7800, "tid": 20072, "ts": 64663159295.0, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 7800, "tid": 20072, "ts": 64663159294.3, "ph": "X", "cat": "fee", "dur": 1.2, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 7800, "tid": 20072, "ts": 64663159296.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 7800, "tid": 20072, "ts": 64663159296.5, "ph": "X", "cat": "fee", "dur": 0.22, "name": "tell (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:286)"}, {"pid": 7800, "tid": 20072, "ts": 64663159298.1, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 7800, "tid": 20072, "ts": 64663159297.8, "ph": "X", "cat": "fee", "dur": 0.9, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 7800, "tid": 20072, "ts": 64663159299.1, "ph": "X", "cat": "fee", "dur": 0.4, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 7800, "tid": 20072, "ts": 64663159298.899, "ph": "X", "cat": "fee", "dur": 0.7, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 7800, "tid": 20072, "ts": 64663159301.2, "ph": "X", "cat": "fee", "dur": 0.8, "name": "builtins.ord"}, {"pid": 7800, "tid": 20072, "ts": 64663159302.5, "ph": "X", "cat": "fee", "dur": 0.599, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 7800, "tid": 20072, "ts": 64663159302.3, "ph": "X", "cat": "fee", "dur": 0.899, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 7800, "tid": 20072, "ts": 64663159303.6, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 7800, "tid": 20072, "ts": 64663159303.4, "ph": "X", "cat": "fee", "dur": 0.799, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 7800, "tid": 20072, "ts": 64663159304.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.ord"}, {"pid": 7800, "tid": 20072, "ts": 64663159306.499, "ph": "X", "cat": "fee", "dur": 0.5, "name": "list.append"}, {"pid": 7800, "tid": 20072, "ts": 64663159307.499, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 7800, "tid": 20072, "ts": 64663159307.3, "ph": "X", "cat": "fee", "dur": 0.399, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 7800, "tid": 20072, "ts": 64663159308.3, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.ord"}, {"pid": 7800, "tid": 20072, "ts": 64663159308.9, "ph": "X", "cat": "fee", "dur": 0.5, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 7800, "tid": 20072, "ts": 64663159308.7, "ph": "X", "cat": "fee", "dur": 0.72, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 7800, "tid": 20072, "ts": 64663159309.799, "ph": "X", "cat": "fee", "dur": 1.3, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 7800, "tid": 20072, "ts": 64663159309.7, "ph": "X", "cat": "fee", "dur": 1.5, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 7800, "tid": 20072, "ts": 64663159311.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.ord"}, {"pid": 7800, "tid": 20072, "ts": 64663159312.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 7800, "tid": 20072, "ts": 64663159312.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 7800, "tid": 20072, "ts": 64663159312.4, "ph": "X", "cat": "fee", "dur": 0.4, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 7800, "tid": 20072, "ts": 64663159316.099, "ph": "X", "cat": "fee", "dur": 0.9, "name": "dict.get"}, {"pid": 7800, "tid": 20072, "ts": 64663159317.399, "ph": "X", "cat": "fee", "dur": 3.1, "name": "dict.get"}, {"pid": 7800, "tid": 20072, "ts": 64663159314.4, "ph": "X", "cat": "fee", "dur": 6.6, "name": "_class_escape (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:295)"}, {"pid": 7800, "tid": 20072, "ts": 64663159321.4, "ph": "X", "cat": "fee", "dur": 0.1, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 7800, "tid": 20072, "ts": 64663159322.199, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 7800, "tid": 20072, "ts": 64663159322.6, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 7800, "tid": 20072, "ts": 64663159322.4, "ph": "X", "cat": "fee", "dur": 0.5, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 7800, "tid": 20072, "ts": 64663159325.1, "ph": "X", "cat": "fee", "dur": 3.1, "name": "type.fromkeys"}, {"pid": 7800, "tid": 20072, "ts": 64663159323.7, "ph": "X", "cat": "fee", "dur": 6.099, "name": "_uniq (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:432)"}, {"pid": 7800, "tid": 20072, "ts": 64663159329.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 7800, "tid": 20072, "ts": 64663159331.3, "ph": "X", "cat": "fee", "dur": 0.9, "name": "list.insert"}, {"pid": 7800, "tid": 20072, "ts": 64663159333.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 7800, "tid": 20072, "ts": 64663159332.8, "ph": "X", "cat": "fee", "dur": 0.5, "name": "append (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:172)"}, {"pid": 7800, "tid": 20072, "ts": 64663159333.9, "ph": "X", "cat": "fee", "dur": 2.099, "name": "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)"}, {"pid": 7800, "tid": 20072, "ts": 64663159333.7, "ph": "X", "cat": "fee", "dur": 2.5, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)"}, {"pid": 7800, "tid": 20072, "ts": 64663159337.1, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 7800, "tid": 20072, "ts": 64663159337.0, "ph": "X", "cat": "fee", "dur": 0.399, "name": "tell (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:286)"}, {"pid": 7800, "tid": 20072, "ts": 64663159341.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 7800, "tid": 20072, "ts": 64663159341.699, "ph": "X", "cat": "fee", "dur": 0.42, "name": "__len__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:160)"}, {"pid": 7800, "tid": 20072, "ts": 64663159345.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 7800, "tid": 20072, "ts": 64663159347.1, "ph": "X", "cat": "fee", "dur": 0.299, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:111)"}, {"pid": 7800, "tid": 20072, "ts": 64663159344.1, "ph": "X", "cat": "fee", "dur": 3.4, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 7800, "tid": 20072, "ts": 64663159348.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 7800, "tid": 20072, "ts": 64663159348.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__len__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:160)"}, {"pid": 7800, "tid": 20072, "ts": 64663159348.5, "ph": "X", "cat": "fee", "dur": 0.599, "name": "builtins.isinstance"}, {"pid": 7800, "tid": 20072, "ts": 64663159348.4, "ph": "X", "cat": "fee", "dur": 0.8, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 7800, "tid": 20072, "ts": 64663159349.82, "ph": "X", "cat": "fee", "dur": 0.08, "name": "builtins.isinstance"}, {"pid": 7800, "tid": 20072, "ts": 64663159349.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 7800, "tid": 20072, "ts": 64663159351.119, "ph": "X", "cat": "fee", "dur": 0.08, "name": "builtins.isinstance"}, {"pid": 7800, "tid": 20072, "ts": 64663159351.099, "ph": "X", "cat": "fee", "dur": 0.12, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 7800, "tid": 20072, "ts": 64663159351.599, "ph": "X", "cat": "fee", "dur": 0.5, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 7800, "tid": 20072, "ts": 64663159353.3, "ph": "X", "cat": "fee", "dur": 0.599, "name": "__setitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:168)"}, {"pid": 7800, "tid": 20072, "ts": 64663159355.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 7800, "tid": 20072, "ts": 64663159355.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__len__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:160)"}, {"pid": 7800, "tid": 20072, "ts": 64663159354.8, "ph": "X", "cat": "fee", "dur": 0.52, "name": "builtins.len"}, {"pid": 7800, "tid": 20072, "ts": 64663159359.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.isinstance"}, {"pid": 7800, "tid": 20072, "ts": 64663159359.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 7800, "tid": 20072, "ts": 64663159287.3, "ph": "X", "cat": "fee", "dur": 73.099, "name": "_parse (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:493)"}, {"pid": 7800, "tid": 20072, "ts": 64663159361.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 7800, "tid": 20072, "ts": 64663159361.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)"}, {"pid": 7800, "tid": 20072, "ts": 64663159361.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 7800, "tid": 20072, "ts": 64663159282.0, "ph": "X", "cat": "fee", "dur": 79.9, "name": "_parse_sub (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:435)"}, {"pid": 7800, "tid": 20072, "ts": 64663159364.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 7800, "tid": 20072, "ts": 64663159363.4, "ph": "X", "cat": "fee", "dur": 2.5, "name": "fix_flags (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:921)"}, {"pid": 7800, "tid": 20072, "ts": 64663159258.0, "ph": "X", "cat": "fee", "dur": 108.299, "name": "parse (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:937)"}, {"pid": 7800, "tid": 20072, "ts": 64663159373.0, "ph": "X", "cat": "fee", "dur": 2.699, "name": "builtins.min"}, {"pid": 7800, "tid": 20072, "ts": 64663159375.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.min"}, {"pid": 7800, "tid": 20072, "ts": 64663159371.8, "ph": "X", "cat": "fee", "dur": 4.399, "name": "getwidth (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:174)"}, {"pid": 7800, "tid": 20072, "ts": 64663159377.8, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.min"}, {"pid": 7800, "tid": 20072, "ts": 64663159378.0, "ph": "X", "cat": "fee", "dur": 0.199, "name": "builtins.min"}, {"pid": 7800, "tid": 20072, "ts": 64663159370.099, "ph": "X", "cat": "fee", "dur": 8.2, "name": "getwidth (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:174)"}, {"pid": 7800, "tid": 20072, "ts": 64663159382.299, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_get_iscased (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:453)"}, {"pid": 7800, "tid": 20072, "ts": 64663159380.999, "ph": "X", "cat": "fee", "dur": 2.3, "name": "_get_literal_prefix (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:461)"}, {"pid": 7800, "tid": 20072, "ts": 64663159385.1, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_get_iscased (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:453)"}, {"pid": 7800, "tid": 20072, "ts": 64663159384.299, "ph": "X", "cat": "fee", "dur": 1.3, "name": "_get_charset_prefix (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:492)"}, {"pid": 7800, "tid": 20072, "ts": 64663159386.099, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 7800, "tid": 20072, "ts": 64663159386.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 7800, "tid": 20072, "ts": 64663159386.4, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 7800, "tid": 20072, "ts": 64663159386.599, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 7800, "tid": 20072, "ts": 64663159386.7, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 7800, "tid": 20072, "ts": 64663159387.0, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.min"}, {"pid": 7800, "tid": 20072, "ts": 64663159387.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 7800, "tid": 20072, "ts": 64663159387.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 7800, "tid": 20072, "ts": 64663159369.099, "ph": "X", "cat": "fee", "dur": 18.6, "name": "_compile_info (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:536)"}, {"pid": 7800, "tid": 20072, "ts": 64663159393.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 7800, "tid": 20072, "ts": 64663159392.899, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__len__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:160)"}, {"pid": 7800, "tid": 20072, "ts": 64663159392.6, "ph": "X", "cat": "fee", "dur": 0.52, "name": "builtins.len"}, {"pid": 7800, "tid": 20072, "ts": 64663159393.6, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.isinstance"}, {"pid": 7800, "tid": 20072, "ts": 64663159393.5, "ph": "X", "cat": "fee", "dur": 0.299, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 7800, "tid": 20072, "ts": 64663159392.399, "ph": "X", "cat": "fee", "dur": 1.9, "name": "_simple (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:423)"}, {"pid": 7800, "tid": 20072, "ts": 64663159394.699, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 7800, "tid": 20072, "ts": 64663159394.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 7800, "tid": 20072, "ts": 64663159394.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 7800, "tid": 20072, "ts": 64663159395.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 7800, "tid": 20072, "ts": 64663159395.1, "ph": "X", "cat": "fee", "dur": 0.8, "name": "list.append"}, {"pid": 7800, "tid": 20072, "ts": 64663159404.82, "ph": "X", "cat": "fee", "dur": 0.08, "name": "builtins.isinstance"}, {"pid": 7800, "tid": 20072, "ts": 64663159404.8, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 7800, "tid": 20072, "ts": 64663159410.399, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 7800, "tid": 20072, "ts": 64663159414.999, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 7800, "tid": 20072, "ts": 64663159416.9, "ph": "X", "cat": "fee", "dur": 2.6, "name": "bytearray.find"}, {"pid": 7800, "tid": 20072, "ts": 64663159419.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 7800, "tid": 20072, "ts": 64663159419.9, "ph": "X", "cat": "fee", "dur": 0.2, "name": "bytearray.find"}, {"pid": 7800, "tid": 20072, "ts": 64663159420.299, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 7800, "tid": 20072, "ts": 64663159420.5, "ph": "X", "cat": "fee", "dur": 0.1, "name": "bytearray.find"}, {"pid": 7800, "tid": 20072, "ts": 64663159420.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 7800, "tid": 20072, "ts": 64663159420.799, "ph": "X", "cat": "fee", "dur": 0.2, "name": "bytearray.find"}, {"pid": 7800, "tid": 20072, "ts": 64663159421.1, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 7800, "tid": 20072, "ts": 64663159421.2, "ph": "X", "cat": "fee", "dur": 0.2, "name": "bytearray.find"}, {"pid": 7800, "tid": 20072, "ts": 64663159421.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 7800, "tid": 20072, "ts": 64663159422.2, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 7800, "tid": 20072, "ts": 64663159422.8, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 7800, "tid": 20072, "ts": 64663159422.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 7800, "tid": 20072, "ts": 64663159406.2, "ph": "X", "cat": "fee", "dur": 16.899, "name": "_optimize_charset (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:276)"}, {"pid": 7800, "tid": 20072, "ts": 64663159424.099, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 7800, "tid": 20072, "ts": 64663159424.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 7800, "tid": 20072, "ts": 64663159424.3, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 7800, "tid": 20072, "ts": 64663159425.4, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 7800, "tid": 20072, "ts": 64663159425.599, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 7800, "tid": 20072, "ts": 64663159425.899, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 7800, "tid": 20072, "ts": 64663159426.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 7800, "tid": 20072, "ts": 64663159426.2, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 7800, "tid": 20072, "ts": 64663159426.399, "ph": "X", "cat": "fee", "dur": 0.3, "name": "list.append"}, {"pid": 7800, "tid": 20072, "ts": 64663159426.8, "ph": "X", "cat": "fee", "dur": 0.099, "name": "list.append"}, {"pid": 7800, "tid": 20072, "ts": 64663159426.919, "ph": "X", "cat": "fee", "dur": 0.08, "name": "list.append"}, {"pid": 7800, "tid": 20072, "ts": 64663159428.899, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 7800, "tid": 20072, "ts": 64663159429.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 7800, "tid": 20072, "ts": 64663159424.8, "ph": "X", "cat": "fee", "dur": 4.42, "name": "_compile_charset (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:249)"}, {"pid": 7800, "tid": 20072, "ts": 64663159429.399, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 7800, "tid": 20072, "ts": 64663159430.02, "ph": "X", "cat": "fee", "dur": 0.079, "name": "builtins.isinstance"}, {"pid": 7800, "tid": 20072, "ts": 64663159430.0, "ph": "X", "cat": "fee", "dur": 0.799, "name": "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)"}, {"pid": 7800, "tid": 20072, "ts": 64663159402.6, "ph": "X", "cat": "fee", "dur": 29.9, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:71)"}, {"pid": 7800, "tid": 20072, "ts": 64663159432.9, "ph": "X", "cat": "fee", "dur": 0.02, "name": "list.append"}, {"pid": 7800, "tid": 20072, "ts": 64663159433.0, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 7800, "tid": 20072, "ts": 64663159389.399, "ph": "X", "cat": "fee", "dur": 43.8, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:71)"}, {"pid": 7800, "tid": 20072, "ts": 64663159433.499, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.append"}, {"pid": 7800, "tid": 20072, "ts": 64663159367.8, "ph": "X", "cat": "fee", "dur": 65.9, "name": "_code (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:598)"}, {"pid": 7800, "tid": 20072, "ts": 64663159435.499, "ph": "X", "cat": "fee", "dur": 0.1, "name": "builtins.len"}, {"pid": 7800, "tid": 20072, "ts": 64663159435.4, "ph": "X", "cat": "fee", "dur": 0.3, "name": "groups (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:81)"}, {"pid": 7800, "tid": 20072, "ts": 64663159436.2, "ph": "X", "cat": "fee", "dur": 0.6, "name": "dict.items"}, {"pid": 7800, "tid": 20072, "ts": 64663159438.5, "ph": "X", "cat": "fee", "dur": 0.02, "name": "builtins.len"}, {"pid": 7800, "tid": 20072, "ts": 64663159438.4, "ph": "X", "cat": "fee", "dur": 0.2, "name": "groups (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:81)"}, {"pid": 7800, "tid": 20072, "ts": 64663159439.5, "ph": "X", "cat": "fee", "dur": 2.4, "name": "_sre.compile"}, {"pid": 7800, "tid": 20072, "ts": 64663159253.4, "ph": "X", "cat": "fee", "dur": 188.699, "name": "compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:759)"}, {"pid": 7800, "tid": 20072, "ts": 64663159448.1, "ph": "X", "cat": "fee", "dur": 0.599, "name": "builtins.isinstance"}, {"pid": 7800, "tid": 20072, "ts": 64663159456.7, "ph": "X", "cat": "fee", "dur": 2.7, "name": "__new__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:670)"}, {"pid": 7800, "tid": 20072, "ts": 64663159452.9, "ph": "X", "cat": "fee", "dur": 6.699, "name": "__call__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:358)"}, {"pid": 7800, "tid": 20072, "ts": 64663159460.9, "ph": "X", "cat": "fee", "dur": 0.299, "name": "__new__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:670)"}, {"pid": 7800, "tid": 20072, "ts": 64663159460.599, "ph": "X", "cat": "fee", "dur": 0.62, "name": "__call__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:358)"}, {"pid": 7800, "tid": 20072, "ts": 64663159447.399, "ph": "X", "cat": "fee", "dur": 14.0, "name": "__and__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:977)"}, {"pid": 7800, "tid": 20072, "ts": 64663159461.7, "ph": "X", "cat": "fee", "dur": 0.2, "name": "builtins.len"}, {"pid": 7800, "tid": 20072, "ts": 64663159220.1, "ph": "X", "cat": "fee", "dur": 242.499, "name": "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:289)"}, {"pid": 7800, "tid": 20072, "ts": 64663159464.3, "ph": "X", "cat": "fee", "dur": 4912524.4, "name": "re.Pattern.sub"}, {"pid": 7800, "tid": 20072, "ts": 64663159217.4, "ph": "X", "cat": "fee", "dur": 4912781.0, "name": "sub (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:203)"}, {"pid": 7800, "tid": 20072, "ts": 64668072014.3, "ph": "X", "cat": "fee", "dur": 2463255.9, "name": "str.split"}, {"pid": 7800, "tid": 20072, "ts": 64656789858.5, "ph": "X", "cat": "fee", "dur": 13775056.199, "name": "cleanAndTokenize (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:64)"}, {"pid": 7800, "tid": 20072, "ts": 64670570510.5, "ph": "X", "cat": "fee", "dur": 3.8, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 7800, "tid": 20072, "ts": 64670570537.2, "ph": "X", "cat": "fee", "dur": 0.399, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 7800, "tid": 20072, "ts": 64670570549.099, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 7800, "tid": 20072, "ts": 64670570544.499, "ph": "X", "cat": "fee", "dur": 9.3, "name": "_abc._abc_subclasscheck"}, {"pid": 7800, "tid": 20072, "ts": 64670570543.9, "ph": "X", "cat": "fee", "dur": 10.1, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 7800, "tid": 20072, "ts": 64670570561.499, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 7800, "tid": 20072, "ts": 64670570555.399, "ph": "X", "cat": "fee", "dur": 10.0, "name": "_abc._abc_subclasscheck"}, {"pid": 7800, "tid": 20072, "ts": 64670570555.3, "ph": "X", "cat": "fee", "dur": 10.12, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 7800, "tid": 20072, "ts": 64670570570.0, "ph": "X", "cat": "fee", "dur": 0.099, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 7800, "tid": 20072, "ts": 64670570566.0, "ph": "X", "cat": "fee", "dur": 6.5, "name": "_abc._abc_subclasscheck"}, {"pid": 7800, "tid": 20072, "ts": 64670570565.9, "ph": "X", "cat": "fee", "dur": 6.9, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 7800, "tid": 20072, "ts": 64670570575.9, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 7800, "tid": 20072, "ts": 64670570573.3, "ph": "X", "cat": "fee", "dur": 4.2, "name": "_abc._abc_subclasscheck"}, {"pid": 7800, "tid": 20072, "ts": 64670570573.2, "ph": "X", "cat": "fee", "dur": 4.899, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 7800, "tid": 20072, "ts": 64670570582.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 7800, "tid": 20072, "ts": 64670570578.9, "ph": "X", "cat": "fee", "dur": 5.0, "name": "_abc._abc_subclasscheck"}, {"pid": 7800, "tid": 20072, "ts": 64670570578.8, "ph": "X", "cat": "fee", "dur": 5.119, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 7800, "tid": 20072, "ts": 64670570589.099, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 7800, "tid": 20072, "ts": 64670570600.1, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 7800, "tid": 20072, "ts": 64670570605.599, "ph": "X", "cat": "fee", "dur": 0.2, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 7800, "tid": 20072, "ts": 64670570603.0, "ph": "X", "cat": "fee", "dur": 4.4, "name": "_abc._abc_subclasscheck"}, {"pid": 7800, "tid": 20072, "ts": 64670570602.4, "ph": "X", "cat": "fee", "dur": 5.2, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 7800, "tid": 20072, "ts": 64670570593.8, "ph": "X", "cat": "fee", "dur": 21.699, "name": "_abc._abc_subclasscheck"}, {"pid": 7800, "tid": 20072, "ts": 64670570593.1, "ph": "X", "cat": "fee", "dur": 22.5, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 7800, "tid": 20072, "ts": 64670570584.4, "ph": "X", "cat": "fee", "dur": 31.9, "name": "_abc._abc_subclasscheck"}, {"pid": 7800, "tid": 20072, "ts": 64670570584.299, "ph": "X", "cat": "fee", "dur": 32.1, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 7800, "tid": 20072, "ts": 64670570619.6, "ph": "X", "cat": "fee", "dur": 0.199, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 7800, "tid": 20072, "ts": 64670570617.12, "ph": "X", "cat": "fee", "dur": 4.98, "name": "_abc._abc_subclasscheck"}, {"pid": 7800, "tid": 20072, "ts": 64670570617.1, "ph": "X", "cat": "fee", "dur": 5.02, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 7800, "tid": 20072, "ts": 64670570624.3, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 7800, "tid": 20072, "ts": 64670570622.52, "ph": "X", "cat": "fee", "dur": 2.38, "name": "_abc._abc_subclasscheck"}, {"pid": 7800, "tid": 20072, "ts": 64670570622.5, "ph": "X", "cat": "fee", "dur": 2.5, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 7800, "tid": 20072, "ts": 64670570532.2, "ph": "X", "cat": "fee", "dur": 93.3, "name": "_abc._abc_subclasscheck"}, {"pid": 7800, "tid": 20072, "ts": 64670570532.0, "ph": "X", "cat": "fee", "dur": 93.599, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 7800, "tid": 20072, "ts": 64670570629.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)"}, {"pid": 7800, "tid": 20072, "ts": 64670570626.12, "ph": "X", "cat": "fee", "dur": 3.579, "name": "_abc._abc_subclasscheck"}, {"pid": 7800, "tid": 20072, "ts": 64670570626.1, "ph": "X", "cat": "fee", "dur": 3.619, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 7800, "tid": 20072, "ts": 64670570499.0, "ph": "X", "cat": "fee", "dur": 131.199, "name": "_abc._abc_subclasscheck"}, {"pid": 7800, "tid": 20072, "ts": 64670570498.7, "ph": "X", "cat": "fee", "dur": 131.8, "name": "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)"}, {"pid": 7800, "tid": 20072, "ts": 64670570470.4, "ph": "X", "cat": "fee", "dur": 160.2, "name": "_abc._abc_instancecheck"}, {"pid": 7800, "tid": 20072, "ts": 64670570468.4, "ph": "X", "cat": "fee", "dur": 162.799, "name": "__instancecheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:117)"}, {"pid": 7800, "tid": 20072, "ts": 64670570456.7, "ph": "X", "cat": "fee", "dur": 175.2, "name": "builtins.isinstance"}, {"pid": 7800, "tid": 20072, "ts": 64670570633.8, "ph": "X", "cat": "fee", "dur": 4484901.899, "name": "_collections._count_elements"}, {"pid": 7800, "tid": 20072, "ts": 64670570447.699, "ph": "X", "cat": "fee", "dur": 4485093.4, "name": "update (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:649)"}, {"pid": 7800, "tid": 20072, "ts": 64670570425.0, "ph": "X", "cat": "fee", "dur": 4485122.0, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:581)"}, {"pid": 7800, "tid": 20072, "ts": 64655951852.9, "ph": "X", "cat": "fee", "dur": 19103695.799, "name": "getWordCount (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:83)"}, {"pid": 7800, "tid": 20072, "ts": 64675489073.799, "ph": "X", "cat": "fee", "dur": 2.8, "name": "time.perf_counter"}, {"pid": 7800, "tid": 20072, "ts": 64675489081.2, "ph": "X", "cat": "fee", "dur": 3.0, "name": "nt.getpid"}, {"pid": 7800, "tid": 20072, "ts": 64675489109.1, "ph": "X", "cat": "fee", "dur": 306.3, "name": "builtins.print"}, {"pid": 7800, "tid": 20072, "ts": 64675489426.8, "ph": "X", "cat": "fee", "dur": 0.7, "name": "Counter.values"}, {"pid": 7800, "tid": 20072, "ts": 64675489427.599, "ph": "X", "cat": "fee", "dur": 5131.9, "name": "builtins.sum"}, {"pid": 7800, "tid": 20072, "ts": 64675494562.7, "ph": "X", "cat": "fee", "dur": 0.3, "name": "Counter.items"}, {"pid": 7800, "tid": 20072, "ts": 64675489422.5, "ph": "X", "cat": "fee", "dur": 170429.6, "name": "getWordFrequencies (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:101)"}, {"pid": 7800, "tid": 20072, "ts": 64655951790.7, "ph": "X", "cat": "fee", "dur": 19708063.999, "name": "getWordData (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:123)"}, {"pid": 7800, "tid": 20072, "ts": 64655951790.2, "ph": "X", "cat": "fee", "dur": 19708067.2, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:202)"}, {"pid": 7800, "tid": 20072, "ts": 64655951789.6, "ph": "X", "cat": "fee", "dur": 19708070.7, "name": "_process_chunk (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:193)"}, {"pid": 7800, "tid": 20072, "ts": 64675659877.499, "ph": "X", "cat": "fee", "dur": 1.2, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:145)"}, {"pid": 7800, "tid": 20072, "ts": 64675659923.599, "ph": "X", "cat": "fee", "dur": 2.0, "name": "dict.copy"}, {"pid": 7800, "tid": 20072, "ts": 64675659927.1, "ph": "X", "cat": "fee", "dur": 3.0, "name": "dict.update"}, {"pid": 7800, "tid": 20072, "ts": 64675659893.0, "ph": "X", "cat": "fee", "dur": 37.399, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 7800, "tid": 20072, "ts": 64675659961.2, "ph": "X", "cat": "fee", "dur": 1.0, "name": "mappingproxy.get"}, {"pid": 7800, "tid": 20072, "ts": 64675659963.399, "ph": "X", "cat": "fee", "dur": 2.6, "name": "builtins.hasattr"}, {"pid": 7800, "tid": 20072, "ts": 64675659959.099, "ph": "X", "cat": "fee", "dur": 8.2, "name": "_slotnames (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\copyreg.py:103)"}, {"pid": 7800, "tid": 20072, "ts": 64675659986.999, "ph": "X", "cat": "fee", "dur": 56439.9, "name": "__reduce__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:714)"}, {"pid": 7800, "tid": 20072, "ts": 64675659931.4, "ph": "X", "cat": "fee", "dur": 359807.1, "name": "ForkingPickler.dump"}, {"pid": 7800, "tid": 20072, "ts": 64676053305.2, "ph": "X", "cat": "fee", "dur": 4.599, "name": "_io.BytesIO.getbuffer"}, {"pid": 7800, "tid": 20072, "ts": 64675659886.7, "ph": "X", "cat": "fee", "dur": 393423.999, "name": "dumps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:48)"}, {"pid": 7800, "tid": 20072, "ts": 64676053330.7, "ph": "X", "cat": "fee", "dur": 1.5, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 7800, "tid": 20072, "ts": 64676053343.0, "ph": "X", "cat": "fee", "dur": 0.6, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 7800, "tid": 20072, "ts": 64676053352.799, "ph": "X", "cat": "fee", "dur": 0.5, "name": "builtins.len"}, {"pid": 7800, "tid": 20072, "ts": 64676053366.999, "ph": "X", "cat": "fee", "dur": 5160.1, "name": "_winapi.WriteFile"}, {"pid": 7800, "tid": 20072, "ts": 64676058538.5, "ph": "X", "cat": "fee", "dur": 7891.499, "name": "_winapi.WaitForMultipleObjects"}, {"pid": 7800, "tid": 20072, "ts": 64676066440.3, "ph": "X", "cat": "fee", "dur": 5.3, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 7800, "tid": 20072, "ts": 64676066447.5, "ph": "X", "cat": "fee", "dur": 0.799, "name": "builtins.len"}, {"pid": 7800, "tid": 20072, "ts": 64676053360.2, "ph": "X", "cat": "fee", "dur": 13088.999, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 7800, "tid": 20072, "ts": 64676053328.6, "ph": "X", "cat": "fee", "dur": 13137.0, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 7800, "tid": 20072, "ts": 64675659881.0, "ph": "X", "cat": "fee", "dur": 406587.7, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:370)"}, {"pid": 7800, "tid": 20072, "ts": 64675659870.399, "ph": "X", "cat": "fee", "dur": 407596.5, "name": "_sendback_result (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:205)"}, {"pid": 7800, "tid": 20072, "ts": 64676321022.0, "ph": "X", "cat": "fee", "dur": 2857193.999, "name": "_multiprocessing.SemLock.__enter__"}, {"pid": 7800, "tid": 20072, "ts": 64676321019.7, "ph": "X", "cat": "fee", "dur": 2857197.5, "name": "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:94)"}, {"pid": 7800, "tid": 20072, "ts": 64679178222.0, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 7800, "tid": 20072, "ts": 64679178223.0, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)"}, {"pid": 7800, "tid": 20072, "ts": 64679178228.199, "ph": "X", "cat": "fee", "dur": 6.8, "name": "_winapi.ReadFile"}, {"pid": 7800, "tid": 20072, "ts": 64679178236.1, "ph": "X", "cat": "fee", "dur": 1.099, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 7800, "tid": 20072, "ts": 64679178239.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_winapi.Overlapped.getbuffer"}, {"pid": 7800, "tid": 20072, "ts": 64679178239.599, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_io.BytesIO.write"}, {"pid": 7800, "tid": 20072, "ts": 64679178223.8, "ph": "X", "cat": "fee", "dur": 16.2, "name": "_recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:299)"}, {"pid": 7800, "tid": 20072, "ts": 64679178242.2, "ph": "X", "cat": "fee", "dur": 0.199, "name": "_io.BytesIO.getvalue"}, {"pid": 7800, "tid": 20072, "ts": 64679178220.8, "ph": "X", "cat": "fee", "dur": 21.7, "name": "recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:213)"}, {"pid": 7800, "tid": 20072, "ts": 64679178244.399, "ph": "X", "cat": "fee", "dur": 1.7, "name": "_multiprocessing.SemLock.__exit__"}, {"pid": 7800, "tid": 20072, "ts": 64679178243.5, "ph": "X", "cat": "fee", "dur": 2.699, "name": "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:97)"}, {"pid": 7800, "tid": 20072, "ts": 64679178248.199, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_multiprocessing.SemLock.release"}, {"pid": 7800, "tid": 20072, "ts": 64679178249.4, "ph": "X", "cat": "fee", "dur": 1.9, "name": "_pickle.loads"}, {"pid": 7800, "tid": 20072, "ts": 64676321014.9, "ph": "X", "cat": "fee", "dur": 2857236.5, "name": "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:98)"}, {"pid": 7800, "tid": 20072, "ts": 64679178253.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "nt.getpid"}, {"pid": 7800, "tid": 20072, "ts": 64679178264.1, "ph": "X", "cat": "fee", "dur": 0.4, "name": "dict.copy"}, {"pid": 7800, "tid": 20072, "ts": 64679178265.4, "ph": "X", "cat": "fee", "dur": 1.0, "name": "dict.update"}, {"pid": 7800, "tid": 20072, "ts": 64679178258.3, "ph": "X", "cat": "fee", "dur": 8.2, "name": "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)"}, {"pid": 7800, "tid": 20072, "ts": 64679178267.0, "ph": "X", "cat": "fee", "dur": 2.599, "name": "ForkingPickler.dump"}, {"pid": 7800, "tid": 20072, "ts": 64679178270.2, "ph": "X", "cat": "fee", "dur": 0.5, "name": "_io.BytesIO.getbuffer"}, {"pid": 7800, "tid": 20072, "ts": 64679178256.4, "ph": "X", "cat": "fee", "dur": 14.32, "name": "dumps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:48)"}, {"pid": 7800, "tid": 20072, "ts": 64679178272.7, "ph": "X", "cat": "fee", "dur": 0.099, "name": "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)"}, {"pid": 7800, "tid": 20072, "ts": 64679178273.9, "ph": "X", "cat": "fee", "dur": 0.3, "name": "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)"}, {"pid": 7800, "tid": 20072, "ts": 64679178275.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 7800, "tid": 20072, "ts": 64679178277.599, "ph": "X", "cat": "fee", "dur": 3.7, "name": "_winapi.WriteFile"}, {"pid": 7800, "tid": 20072, "ts": 64679178281.899, "ph": "X", "cat": "fee", "dur": 0.4, "name": "_winapi.Overlapped.GetOverlappedResult"}, {"pid": 7800, "tid": 20072, "ts": 64679178282.6, "ph": "X", "cat": "fee", "dur": 0.099, "name": "builtins.len"}, {"pid": 7800, "tid": 20072, "ts": 64679178277.099, "ph": "X", "cat": "fee", "dur": 5.62, "name": "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)"}, {"pid": 7800, "tid": 20072, "ts": 64679178272.299, "ph": "X", "cat": "fee", "dur": 11.3, "name": "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)"}, {"pid": 7800, "tid": 20072, "ts": 64679178254.5, "ph": "X", "cat": "fee", "dur": 29.4, "name": "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:370)"}, {"pid": 7800, "tid": 20072, "ts": 64655951727.5, "ph": "X", "cat": "fee", "dur": 23226556.9, "name": "_process_worker (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:215)"}, {"pid": 7800, "tid": 20072, "ts": 64655951725.7, "ph": "X", "cat": "fee", "dur": 23226559.4, "name": "run (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:103)"}, {"pid": 7800, "tid": 20072, "ts": 64679178292.7, "ph": "X", "cat": "fee", "dur": 0.6, "name": "info (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:52)"}, {"pid": 7800, "tid": 20072, "ts": 64679178294.0, "ph": "X", "cat": "fee", "dur": 0.5, "name": "debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:48)"}, {"pid": 7800, "tid": 20072, "ts": 64679178300.4, "ph": "X", "cat": "fee", "dur": 0.4, "name": "<lambda> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:284)"}, {"pid": 7800, "tid": 20072, "ts": 64679178299.8, "ph": "X", "cat": "fee", "dur": 6.5, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:291)"}, {"pid": 7800, "tid": 20072, "ts": 64679178307.1, "ph": "X", "cat": "fee", "dur": 0.6, "name": "list.sort"}, {"pid": 7800, "tid": 20072, "ts": 64679178295.8, "ph": "X", "cat": "fee", "dur": 12.2, "name": "_run_finalizers (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:268)"}, {"pid": 7800, "tid": 20072, "ts": 64679178309.299, "ph": "X", "cat": "fee", "dur": 0.7, "name": "current_process (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:37)"}, {"pid": 7800, "tid": 20072, "ts": 64679178311.7, "ph": "X", "cat": "fee", "dur": 1.5, "name": "_cleanup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:61)"}, {"pid": 7800, "tid": 20072, "ts": 64679178310.7, "ph": "X", "cat": "fee", "dur": 2.8, "name": "active_children (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:43)"}, {"pid": 7800, "tid": 20072, "ts": 64679178314.099, "ph": "X", "cat": "fee", "dur": 0.2, "name": "_cleanup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:61)"}, {"pid": 7800, "tid": 20072, "ts": 64679178313.9, "ph": "X", "cat": "fee", "dur": 0.599, "name": "active_children (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:43)"}, {"pid": 7800, "tid": 20072, "ts": 64679178314.9, "ph": "X", "cat": "fee", "dur": 0.099, "name": "debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:48)"}, {"pid": 7800, "tid": 20072, "ts": 64679178316.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "<lambda> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:282)"}, {"pid": 7800, "tid": 20072, "ts": 64679178316.0, "ph": "X", "cat": "fee", "dur": 0.8, "name": "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:291)"}, {"pid": 7800, "tid": 20072, "ts": 64679178317.0, "ph": "X", "cat": "fee", "dur": 0.1, "name": "list.sort"}, {"pid": 7800, "tid": 20072, "ts": 64679178317.5, "ph": "X", "cat": "fee", "dur": 0.2, "name": "dict.get"}, {"pid": 7800, "tid": 20072, "ts": 64679178318.3, "ph": "X", "cat": "fee", "dur": 0.2, "name": "sub_debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:44)"}, {"pid": 7800, "tid": 20072, "ts": 64679178321.5, "ph": "X", "cat": "fee", "dur": 0.099, "name": "nt.getpid"}, {"pid": 7800, "tid": 20072, "ts": 64679178322.7, "ph": "X", "cat": "fee", "dur": 0.02, "name": "sub_debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:44)"}], "viztracer_metadata": {"overflow": false, "version": "0.15.1"}, "file_info": {"files": {"C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py": ["#\n# Module implementing synchronization primitives\n#\n# multiprocessing/synchronize.py\n#\n# Copyright (c) 2006-2008, R Oudkerk\n# Licensed to PSF under a Contributor Agreement.\n#\n\n__all__ = [\n    'Lock', 'RLock', 'Semaphore', 'BoundedSemaphore', 'Condition', 'Event'\n    ]\n\nimport threading\nimport sys\nimport tempfile\nimport _multiprocessing\nimport time\n\nfrom . import context\nfrom . import process\nfrom . import util\n\n# Try to import the mp.synchronize module cleanly, if it fails\n# raise ImportError for platforms lacking a working sem_open implementation.\n# See issue 3770\ntry:\n    from _multiprocessing import SemLock, sem_unlink\nexcept (ImportError):\n    raise ImportError(\"This platform lacks a functioning sem_open\" +\n                      \" implementation, therefore, the required\" +\n                      \" synchronization primitives needed will not\" +\n                      \" function, see issue 3770.\")\n\n#\n# Constants\n#\n\nRECURSIVE_MUTEX, SEMAPHORE = list(range(2))\nSEM_VALUE_MAX = _multiprocessing.SemLock.SEM_VALUE_MAX\n\n#\n# Base class for semaphores and mutexes; wraps `_multiprocessing.SemLock`\n#\n\nclass SemLock(object):\n\n    _rand = tempfile._RandomNameSequence()\n\n    def __init__(self, kind, value, maxvalue, *, ctx):\n        if ctx is None:\n            ctx = context._default_context.get_context()\n        name = ctx.get_start_method()\n        unlink_now = sys.platform == 'win32' or name == 'fork'\n        for i in range(100):\n            try:\n                sl = self._semlock = _multiprocessing.SemLock(\n                    kind, value, maxvalue, self._make_name(),\n                    unlink_now)\n            except FileExistsError:\n                pass\n            else:\n                break\n        else:\n            raise FileExistsError('cannot find name for semaphore')\n\n        util.debug('created semlock with handle %s' % sl.handle)\n        self._make_methods()\n\n        if sys.platform != 'win32':\n            def _after_fork(obj):\n                obj._semlock._after_fork()\n            util.register_after_fork(self, _after_fork)\n\n        if self._semlock.name is not None:\n            # We only get here if we are on Unix with forking\n            # disabled.  When the object is garbage collected or the\n            # process shuts down we unlink the semaphore name\n            from .resource_tracker import register\n            register(self._semlock.name, \"semaphore\")\n            util.Finalize(self, SemLock._cleanup, (self._semlock.name,),\n                          exitpriority=0)\n\n    @staticmethod\n    def _cleanup(name):\n        from .resource_tracker import unregister\n        sem_unlink(name)\n        unregister(name, \"semaphore\")\n\n    def _make_methods(self):\n        self.acquire = self._semlock.acquire\n        self.release = self._semlock.release\n\n    def __enter__(self):\n        return self._semlock.__enter__()\n\n    def __exit__(self, *args):\n        return self._semlock.__exit__(*args)\n\n    def __getstate__(self):\n        context.assert_spawning(self)\n        sl = self._semlock\n        if sys.platform == 'win32':\n            h = context.get_spawning_popen().duplicate_for_child(sl.handle)\n        else:\n            h = sl.handle\n        return (h, sl.kind, sl.maxvalue, sl.name)\n\n    def __setstate__(self, state):\n        self._semlock = _multiprocessing.SemLock._rebuild(*state)\n        util.debug('recreated blocker with handle %r' % state[0])\n        self._make_methods()\n\n    @staticmethod\n    def _make_name():\n        return '%s-%s' % (process.current_process()._config['semprefix'],\n                          next(SemLock._rand))\n\n#\n# Semaphore\n#\n\nclass Semaphore(SemLock):\n\n    def __init__(self, value=1, *, ctx):\n        SemLock.__init__(self, SEMAPHORE, value, SEM_VALUE_MAX, ctx=ctx)\n\n    def get_value(self):\n        return self._semlock._get_value()\n\n    def __repr__(self):\n        try:\n            value = self._semlock._get_value()\n        except Exception:\n            value = 'unknown'\n        return '<%s(value=%s)>' % (self.__class__.__name__, value)\n\n#\n# Bounded semaphore\n#\n\nclass BoundedSemaphore(Semaphore):\n\n    def __init__(self, value=1, *, ctx):\n        SemLock.__init__(self, SEMAPHORE, value, value, ctx=ctx)\n\n    def __repr__(self):\n        try:\n            value = self._semlock._get_value()\n        except Exception:\n            value = 'unknown'\n        return '<%s(value=%s, maxvalue=%s)>' % \\\n               (self.__class__.__name__, value, self._semlock.maxvalue)\n\n#\n# Non-recursive lock\n#\n\nclass Lock(SemLock):\n\n    def __init__(self, *, ctx):\n        SemLock.__init__(self, SEMAPHORE, 1, 1, ctx=ctx)\n\n    def __repr__(self):\n        try:\n            if self._semlock._is_mine():\n                name = process.current_process().name\n                if threading.current_thread().name != 'MainThread':\n                    name += '|' + threading.current_thread().name\n            elif self._semlock._get_value() == 1:\n                name = 'None'\n            elif self._semlock._count() > 0:\n                name = 'SomeOtherThread'\n            else:\n                name = 'SomeOtherProcess'\n        except Exception:\n            name = 'unknown'\n        return '<%s(owner=%s)>' % (self.__class__.__name__, name)\n\n#\n# Recursive lock\n#\n\nclass RLock(SemLock):\n\n    def __init__(self, *, ctx):\n        SemLock.__init__(self, RECURSIVE_MUTEX, 1, 1, ctx=ctx)\n\n    def __repr__(self):\n        try:\n            if self._semlock._is_mine():\n                name = process.current_process().name\n                if threading.current_thread().name != 'MainThread':\n                    name += '|' + threading.current_thread().name\n                count = self._semlock._count()\n            elif self._semlock._get_value() == 1:\n                name, count = 'None', 0\n            elif self._semlock._count() > 0:\n                name, count = 'SomeOtherThread', 'nonzero'\n            else:\n                name, count = 'SomeOtherProcess', 'nonzero'\n        except Exception:\n            name, count = 'unknown', 'unknown'\n        return '<%s(%s, %s)>' % (self.__class__.__name__, name, count)\n\n#\n# Condition variable\n#\n\nclass Condition(object):\n\n    def __init__(self, lock=None, *, ctx):\n        self._lock = lock or ctx.RLock()\n        self._sleeping_count = ctx.Semaphore(0)\n        self._woken_count = ctx.Semaphore(0)\n        self._wait_semaphore = ctx.Semaphore(0)\n        self._make_methods()\n\n    def __getstate__(self):\n        context.assert_spawning(self)\n        return (self._lock, self._sleeping_count,\n                self._woken_count, self._wait_semaphore)\n\n    def __setstate__(self, state):\n        (self._lock, self._sleeping_count,\n         self._woken_count, self._wait_semaphore) = state\n        self._make_methods()\n\n    def __enter__(self):\n        return self._lock.__enter__()\n\n    def __exit__(self, *args):\n        return self._lock.__exit__(*args)\n\n    def _make_methods(self):\n        self.acquire = self._lock.acquire\n        self.release = self._lock.release\n\n    def __repr__(self):\n        try:\n            num_waiters = (self._sleeping_count._semlock._get_value() -\n                           self._woken_count._semlock._get_value())\n        except Exception:\n            num_waiters = 'unknown'\n        return '<%s(%s, %s)>' % (self.__class__.__name__, self._lock, num_waiters)\n\n    def wait(self, timeout=None):\n        assert self._lock._semlock._is_mine(), \\\n               'must acquire() condition before using wait()'\n\n        # indicate that this thread is going to sleep\n        self._sleeping_count.release()\n\n        # release lock\n        count = self._lock._semlock._count()\n        for i in range(count):\n            self._lock.release()\n\n        try:\n            # wait for notification or timeout\n            return self._wait_semaphore.acquire(True, timeout)\n        finally:\n            # indicate that this thread has woken\n            self._woken_count.release()\n\n            # reacquire lock\n            for i in range(count):\n                self._lock.acquire()\n\n    def notify(self, n=1):\n        assert self._lock._semlock._is_mine(), 'lock is not owned'\n        assert not self._wait_semaphore.acquire(\n            False), ('notify: Should not have been able to acquire '\n                     + '_wait_semaphore')\n\n        # to take account of timeouts since last notify*() we subtract\n        # woken_count from sleeping_count and rezero woken_count\n        while self._woken_count.acquire(False):\n            res = self._sleeping_count.acquire(False)\n            assert res, ('notify: Bug in sleeping_count.acquire'\n                         + '- res should not be False')\n\n        sleepers = 0\n        while sleepers < n and self._sleeping_count.acquire(False):\n            self._wait_semaphore.release()        # wake up one sleeper\n            sleepers += 1\n\n        if sleepers:\n            for i in range(sleepers):\n                self._woken_count.acquire()       # wait for a sleeper to wake\n\n            # rezero wait_semaphore in case some timeouts just happened\n            while self._wait_semaphore.acquire(False):\n                pass\n\n    def notify_all(self):\n        self.notify(n=sys.maxsize)\n\n    def wait_for(self, predicate, timeout=None):\n        result = predicate()\n        if result:\n            return result\n        if timeout is not None:\n            endtime = time.monotonic() + timeout\n        else:\n            endtime = None\n            waittime = None\n        while not result:\n            if endtime is not None:\n                waittime = endtime - time.monotonic()\n                if waittime <= 0:\n                    break\n            self.wait(waittime)\n            result = predicate()\n        return result\n\n#\n# Event\n#\n\nclass Event(object):\n\n    def __init__(self, *, ctx):\n        self._cond = ctx.Condition(ctx.Lock())\n        self._flag = ctx.Semaphore(0)\n\n    def is_set(self):\n        with self._cond:\n            if self._flag.acquire(False):\n                self._flag.release()\n                return True\n            return False\n\n    def set(self):\n        with self._cond:\n            self._flag.acquire(False)\n            self._flag.release()\n            self._cond.notify_all()\n\n    def clear(self):\n        with self._cond:\n            self._flag.acquire(False)\n\n    def wait(self, timeout=None):\n        with self._cond:\n            if self._flag.acquire(False):\n                self._flag.release()\n            else:\n                self._cond.wait(timeout)\n\n            if self._flag.acquire(False):\n                self._flag.release()\n                return True\n            return False\n\n#\n# Barrier\n#\n\nclass Barrier(threading.Barrier):\n\n    def __init__(self, parties, action=None, timeout=None, *, ctx):\n        import struct\n        from .heap import BufferWrapper\n        wrapper = BufferWrapper(struct.calcsize('i') * 2)\n        cond = ctx.Condition()\n        self.__setstate__((parties, action, timeout, cond, wrapper))\n        self._state = 0\n        self._count = 0\n\n    def __setstate__(self, state):\n        (self._parties, self._action, self._timeout,\n         self._cond, self._wrapper) = state\n        self._array = self._wrapper.create_memoryview().cast('i')\n\n    def __getstate__(self):\n        return (self._parties, self._action, self._timeout,\n                self._cond, self._wrapper)\n\n    @property\n    def _state(self):\n        return self._array[0]\n\n    @_state.setter\n    def _state(self, value):\n        self._array[0] = value\n\n    @property\n    def _count(self):\n        return self._array[1]\n\n    @_count.setter\n    def _count(self, value):\n        self._array[1] = value\n", 394], "C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py": ["#\n# A higher level module for using sockets (or Windows named pipes)\n#\n# multiprocessing/connection.py\n#\n# Copyright (c) 2006-2008, R Oudkerk\n# Licensed to PSF under a Contributor Agreement.\n#\n\n__all__ = [ 'Client', 'Listener', 'Pipe', 'wait' ]\n\nimport io\nimport os\nimport sys\nimport socket\nimport struct\nimport time\nimport tempfile\nimport itertools\n\nimport _multiprocessing\n\nfrom . import util\n\nfrom . import AuthenticationError, BufferTooShort\nfrom .context import reduction\n_ForkingPickler = reduction.ForkingPickler\n\ntry:\n    import _winapi\n    from _winapi import WAIT_OBJECT_0, WAIT_ABANDONED_0, WAIT_TIMEOUT, INFINITE\nexcept ImportError:\n    if sys.platform == 'win32':\n        raise\n    _winapi = None\n\n#\n#\n#\n\nBUFSIZE = 8192\n# A very generous timeout when it comes to local connections...\nCONNECTION_TIMEOUT = 20.\n\n_mmap_counter = itertools.count()\n\ndefault_family = 'AF_INET'\nfamilies = ['AF_INET']\n\nif hasattr(socket, 'AF_UNIX'):\n    default_family = 'AF_UNIX'\n    families += ['AF_UNIX']\n\nif sys.platform == 'win32':\n    default_family = 'AF_PIPE'\n    families += ['AF_PIPE']\n\n\ndef _init_timeout(timeout=CONNECTION_TIMEOUT):\n    return time.monotonic() + timeout\n\ndef _check_timeout(t):\n    return time.monotonic() > t\n\n#\n#\n#\n\ndef arbitrary_address(family):\n    '''\n    Return an arbitrary free address for the given family\n    '''\n    if family == 'AF_INET':\n        return ('localhost', 0)\n    elif family == 'AF_UNIX':\n        # Prefer abstract sockets if possible to avoid problems with the address\n        # size.  When coding portable applications, some implementations have\n        # sun_path as short as 92 bytes in the sockaddr_un struct.\n        if util.abstract_sockets_supported:\n            return f\"\\0listener-{os.getpid()}-{next(_mmap_counter)}\"\n        return tempfile.mktemp(prefix='listener-', dir=util.get_temp_dir())\n    elif family == 'AF_PIPE':\n        return tempfile.mktemp(prefix=r'\\\\.\\pipe\\pyc-%d-%d-' %\n                               (os.getpid(), next(_mmap_counter)), dir=\"\")\n    else:\n        raise ValueError('unrecognized family')\n\ndef _validate_family(family):\n    '''\n    Checks if the family is valid for the current environment.\n    '''\n    if sys.platform != 'win32' and family == 'AF_PIPE':\n        raise ValueError('Family %s is not recognized.' % family)\n\n    if sys.platform == 'win32' and family == 'AF_UNIX':\n        # double check\n        if not hasattr(socket, family):\n            raise ValueError('Family %s is not recognized.' % family)\n\ndef address_type(address):\n    '''\n    Return the types of the address\n\n    This can be 'AF_INET', 'AF_UNIX', or 'AF_PIPE'\n    '''\n    if type(address) == tuple:\n        return 'AF_INET'\n    elif type(address) is str and address.startswith('\\\\\\\\'):\n        return 'AF_PIPE'\n    elif type(address) is str or util.is_abstract_socket_namespace(address):\n        return 'AF_UNIX'\n    else:\n        raise ValueError('address type of %r unrecognized' % address)\n\n#\n# Connection classes\n#\n\nclass _ConnectionBase:\n    _handle = None\n\n    def __init__(self, handle, readable=True, writable=True):\n        handle = handle.__index__()\n        if handle < 0:\n            raise ValueError(\"invalid handle\")\n        if not readable and not writable:\n            raise ValueError(\n                \"at least one of `readable` and `writable` must be True\")\n        self._handle = handle\n        self._readable = readable\n        self._writable = writable\n\n    # XXX should we use util.Finalize instead of a __del__?\n\n    def __del__(self):\n        if self._handle is not None:\n            self._close()\n\n    def _check_closed(self):\n        if self._handle is None:\n            raise OSError(\"handle is closed\")\n\n    def _check_readable(self):\n        if not self._readable:\n            raise OSError(\"connection is write-only\")\n\n    def _check_writable(self):\n        if not self._writable:\n            raise OSError(\"connection is read-only\")\n\n    def _bad_message_length(self):\n        if self._writable:\n            self._readable = False\n        else:\n            self.close()\n        raise OSError(\"bad message length\")\n\n    @property\n    def closed(self):\n        \"\"\"True if the connection is closed\"\"\"\n        return self._handle is None\n\n    @property\n    def readable(self):\n        \"\"\"True if the connection is readable\"\"\"\n        return self._readable\n\n    @property\n    def writable(self):\n        \"\"\"True if the connection is writable\"\"\"\n        return self._writable\n\n    def fileno(self):\n        \"\"\"File descriptor or handle of the connection\"\"\"\n        self._check_closed()\n        return self._handle\n\n    def close(self):\n        \"\"\"Close the connection\"\"\"\n        if self._handle is not None:\n            try:\n                self._close()\n            finally:\n                self._handle = None\n\n    def send_bytes(self, buf, offset=0, size=None):\n        \"\"\"Send the bytes data from a bytes-like object\"\"\"\n        self._check_closed()\n        self._check_writable()\n        m = memoryview(buf)\n        # HACK for byte-indexing of non-bytewise buffers (e.g. array.array)\n        if m.itemsize > 1:\n            m = memoryview(bytes(m))\n        n = len(m)\n        if offset < 0:\n            raise ValueError(\"offset is negative\")\n        if n < offset:\n            raise ValueError(\"buffer length < offset\")\n        if size is None:\n            size = n - offset\n        elif size < 0:\n            raise ValueError(\"size is negative\")\n        elif offset + size > n:\n            raise ValueError(\"buffer length < offset + size\")\n        self._send_bytes(m[offset:offset + size])\n\n    def send(self, obj):\n        \"\"\"Send a (picklable) object\"\"\"\n        self._check_closed()\n        self._check_writable()\n        self._send_bytes(_ForkingPickler.dumps(obj))\n\n    def recv_bytes(self, maxlength=None):\n        \"\"\"\n        Receive bytes data as a bytes object.\n        \"\"\"\n        self._check_closed()\n        self._check_readable()\n        if maxlength is not None and maxlength < 0:\n            raise ValueError(\"negative maxlength\")\n        buf = self._recv_bytes(maxlength)\n        if buf is None:\n            self._bad_message_length()\n        return buf.getvalue()\n\n    def recv_bytes_into(self, buf, offset=0):\n        \"\"\"\n        Receive bytes data into a writeable bytes-like object.\n        Return the number of bytes read.\n        \"\"\"\n        self._check_closed()\n        self._check_readable()\n        with memoryview(buf) as m:\n            # Get bytesize of arbitrary buffer\n            itemsize = m.itemsize\n            bytesize = itemsize * len(m)\n            if offset < 0:\n                raise ValueError(\"negative offset\")\n            elif offset > bytesize:\n                raise ValueError(\"offset too large\")\n            result = self._recv_bytes()\n            size = result.tell()\n            if bytesize < offset + size:\n                raise BufferTooShort(result.getvalue())\n            # Message can fit in dest\n            result.seek(0)\n            result.readinto(m[offset // itemsize :\n                              (offset + size) // itemsize])\n            return size\n\n    def recv(self):\n        \"\"\"Receive a (picklable) object\"\"\"\n        self._check_closed()\n        self._check_readable()\n        buf = self._recv_bytes()\n        return _ForkingPickler.loads(buf.getbuffer())\n\n    def poll(self, timeout=0.0):\n        \"\"\"Whether there is any input available to be read\"\"\"\n        self._check_closed()\n        self._check_readable()\n        return self._poll(timeout)\n\n    def __enter__(self):\n        return self\n\n    def __exit__(self, exc_type, exc_value, exc_tb):\n        self.close()\n\n\nif _winapi:\n\n    class PipeConnection(_ConnectionBase):\n        \"\"\"\n        Connection class based on a Windows named pipe.\n        Overlapped I/O is used, so the handles must have been created\n        with FILE_FLAG_OVERLAPPED.\n        \"\"\"\n        _got_empty_message = False\n\n        def _close(self, _CloseHandle=_winapi.CloseHandle):\n            _CloseHandle(self._handle)\n\n        def _send_bytes(self, buf):\n            ov, err = _winapi.WriteFile(self._handle, buf, overlapped=True)\n            try:\n                if err == _winapi.ERROR_IO_PENDING:\n                    waitres = _winapi.WaitForMultipleObjects(\n                        [ov.event], False, INFINITE)\n                    assert waitres == WAIT_OBJECT_0\n            except:\n                ov.cancel()\n                raise\n            finally:\n                nwritten, err = ov.GetOverlappedResult(True)\n            assert err == 0\n            assert nwritten == len(buf)\n\n        def _recv_bytes(self, maxsize=None):\n            if self._got_empty_message:\n                self._got_empty_message = False\n                return io.BytesIO()\n            else:\n                bsize = 128 if maxsize is None else min(maxsize, 128)\n                try:\n                    ov, err = _winapi.ReadFile(self._handle, bsize,\n                                                overlapped=True)\n                    try:\n                        if err == _winapi.ERROR_IO_PENDING:\n                            waitres = _winapi.WaitForMultipleObjects(\n                                [ov.event], False, INFINITE)\n                            assert waitres == WAIT_OBJECT_0\n                    except:\n                        ov.cancel()\n                        raise\n                    finally:\n                        nread, err = ov.GetOverlappedResult(True)\n                        if err == 0:\n                            f = io.BytesIO()\n                            f.write(ov.getbuffer())\n                            return f\n                        elif err == _winapi.ERROR_MORE_DATA:\n                            return self._get_more_data(ov, maxsize)\n                except OSError as e:\n                    if e.winerror == _winapi.ERROR_BROKEN_PIPE:\n                        raise EOFError\n                    else:\n                        raise\n            raise RuntimeError(\"shouldn't get here; expected KeyboardInterrupt\")\n\n        def _poll(self, timeout):\n            if (self._got_empty_message or\n                        _winapi.PeekNamedPipe(self._handle)[0] != 0):\n                return True\n            return bool(wait([self], timeout))\n\n        def _get_more_data(self, ov, maxsize):\n            buf = ov.getbuffer()\n            f = io.BytesIO()\n            f.write(buf)\n            left = _winapi.PeekNamedPipe(self._handle)[1]\n            assert left > 0\n            if maxsize is not None and len(buf) + left > maxsize:\n                self._bad_message_length()\n            ov, err = _winapi.ReadFile(self._handle, left, overlapped=True)\n            rbytes, err = ov.GetOverlappedResult(True)\n            assert err == 0\n            assert rbytes == left\n            f.write(ov.getbuffer())\n            return f\n\n\nclass Connection(_ConnectionBase):\n    \"\"\"\n    Connection class based on an arbitrary file descriptor (Unix only), or\n    a socket handle (Windows).\n    \"\"\"\n\n    if _winapi:\n        def _close(self, _close=_multiprocessing.closesocket):\n            _close(self._handle)\n        _write = _multiprocessing.send\n        _read = _multiprocessing.recv\n    else:\n        def _close(self, _close=os.close):\n            _close(self._handle)\n        _write = os.write\n        _read = os.read\n\n    def _send(self, buf, write=_write):\n        remaining = len(buf)\n        while True:\n            n = write(self._handle, buf)\n            remaining -= n\n            if remaining == 0:\n                break\n            buf = buf[n:]\n\n    def _recv(self, size, read=_read):\n        buf = io.BytesIO()\n        handle = self._handle\n        remaining = size\n        while remaining > 0:\n            chunk = read(handle, remaining)\n            n = len(chunk)\n            if n == 0:\n                if remaining == size:\n                    raise EOFError\n                else:\n                    raise OSError(\"got end of file during message\")\n            buf.write(chunk)\n            remaining -= n\n        return buf\n\n    def _send_bytes(self, buf):\n        n = len(buf)\n        if n > 0x7fffffff:\n            pre_header = struct.pack(\"!i\", -1)\n            header = struct.pack(\"!Q\", n)\n            self._send(pre_header)\n            self._send(header)\n            self._send(buf)\n        else:\n            # For wire compatibility with 3.7 and lower\n            header = struct.pack(\"!i\", n)\n            if n > 16384:\n                # The payload is large so Nagle's algorithm won't be triggered\n                # and we'd better avoid the cost of concatenation.\n                self._send(header)\n                self._send(buf)\n            else:\n                # Issue #20540: concatenate before sending, to avoid delays due\n                # to Nagle's algorithm on a TCP socket.\n                # Also note we want to avoid sending a 0-length buffer separately,\n                # to avoid \"broken pipe\" errors if the other end closed the pipe.\n                self._send(header + buf)\n\n    def _recv_bytes(self, maxsize=None):\n        buf = self._recv(4)\n        size, = struct.unpack(\"!i\", buf.getvalue())\n        if size == -1:\n            buf = self._recv(8)\n            size, = struct.unpack(\"!Q\", buf.getvalue())\n        if maxsize is not None and size > maxsize:\n            return None\n        return self._recv(size)\n\n    def _poll(self, timeout):\n        r = wait([self], timeout)\n        return bool(r)\n\n\n#\n# Public functions\n#\n\nclass Listener(object):\n    '''\n    Returns a listener object.\n\n    This is a wrapper for a bound socket which is 'listening' for\n    connections, or for a Windows named pipe.\n    '''\n    def __init__(self, address=None, family=None, backlog=1, authkey=None):\n        family = family or (address and address_type(address)) \\\n                 or default_family\n        address = address or arbitrary_address(family)\n\n        _validate_family(family)\n        if family == 'AF_PIPE':\n            self._listener = PipeListener(address, backlog)\n        else:\n            self._listener = SocketListener(address, family, backlog)\n\n        if authkey is not None and not isinstance(authkey, bytes):\n            raise TypeError('authkey should be a byte string')\n\n        self._authkey = authkey\n\n    def accept(self):\n        '''\n        Accept a connection on the bound socket or named pipe of `self`.\n\n        Returns a `Connection` object.\n        '''\n        if self._listener is None:\n            raise OSError('listener is closed')\n        c = self._listener.accept()\n        if self._authkey:\n            deliver_challenge(c, self._authkey)\n            answer_challenge(c, self._authkey)\n        return c\n\n    def close(self):\n        '''\n        Close the bound socket or named pipe of `self`.\n        '''\n        listener = self._listener\n        if listener is not None:\n            self._listener = None\n            listener.close()\n\n    @property\n    def address(self):\n        return self._listener._address\n\n    @property\n    def last_accepted(self):\n        return self._listener._last_accepted\n\n    def __enter__(self):\n        return self\n\n    def __exit__(self, exc_type, exc_value, exc_tb):\n        self.close()\n\n\ndef Client(address, family=None, authkey=None):\n    '''\n    Returns a connection to the address of a `Listener`\n    '''\n    family = family or address_type(address)\n    _validate_family(family)\n    if family == 'AF_PIPE':\n        c = PipeClient(address)\n    else:\n        c = SocketClient(address)\n\n    if authkey is not None and not isinstance(authkey, bytes):\n        raise TypeError('authkey should be a byte string')\n\n    if authkey is not None:\n        answer_challenge(c, authkey)\n        deliver_challenge(c, authkey)\n\n    return c\n\n\nif sys.platform != 'win32':\n\n    def Pipe(duplex=True):\n        '''\n        Returns pair of connection objects at either end of a pipe\n        '''\n        if duplex:\n            s1, s2 = socket.socketpair()\n            s1.setblocking(True)\n            s2.setblocking(True)\n            c1 = Connection(s1.detach())\n            c2 = Connection(s2.detach())\n        else:\n            fd1, fd2 = os.pipe()\n            c1 = Connection(fd1, writable=False)\n            c2 = Connection(fd2, readable=False)\n\n        return c1, c2\n\nelse:\n\n    def Pipe(duplex=True):\n        '''\n        Returns pair of connection objects at either end of a pipe\n        '''\n        address = arbitrary_address('AF_PIPE')\n        if duplex:\n            openmode = _winapi.PIPE_ACCESS_DUPLEX\n            access = _winapi.GENERIC_READ | _winapi.GENERIC_WRITE\n            obsize, ibsize = BUFSIZE, BUFSIZE\n        else:\n            openmode = _winapi.PIPE_ACCESS_INBOUND\n            access = _winapi.GENERIC_WRITE\n            obsize, ibsize = 0, BUFSIZE\n\n        h1 = _winapi.CreateNamedPipe(\n            address, openmode | _winapi.FILE_FLAG_OVERLAPPED |\n            _winapi.FILE_FLAG_FIRST_PIPE_INSTANCE,\n            _winapi.PIPE_TYPE_MESSAGE | _winapi.PIPE_READMODE_MESSAGE |\n            _winapi.PIPE_WAIT,\n            1, obsize, ibsize, _winapi.NMPWAIT_WAIT_FOREVER,\n            # default security descriptor: the handle cannot be inherited\n            _winapi.NULL\n            )\n        h2 = _winapi.CreateFile(\n            address, access, 0, _winapi.NULL, _winapi.OPEN_EXISTING,\n            _winapi.FILE_FLAG_OVERLAPPED, _winapi.NULL\n            )\n        _winapi.SetNamedPipeHandleState(\n            h2, _winapi.PIPE_READMODE_MESSAGE, None, None\n            )\n\n        overlapped = _winapi.ConnectNamedPipe(h1, overlapped=True)\n        _, err = overlapped.GetOverlappedResult(True)\n        assert err == 0\n\n        c1 = PipeConnection(h1, writable=duplex)\n        c2 = PipeConnection(h2, readable=duplex)\n\n        return c1, c2\n\n#\n# Definitions for connections based on sockets\n#\n\nclass SocketListener(object):\n    '''\n    Representation of a socket which is bound to an address and listening\n    '''\n    def __init__(self, address, family, backlog=1):\n        self._socket = socket.socket(getattr(socket, family))\n        try:\n            # SO_REUSEADDR has different semantics on Windows (issue #2550).\n            if os.name == 'posix':\n                self._socket.setsockopt(socket.SOL_SOCKET,\n                                        socket.SO_REUSEADDR, 1)\n            self._socket.setblocking(True)\n            self._socket.bind(address)\n            self._socket.listen(backlog)\n            self._address = self._socket.getsockname()\n        except OSError:\n            self._socket.close()\n            raise\n        self._family = family\n        self._last_accepted = None\n\n        if family == 'AF_UNIX' and not util.is_abstract_socket_namespace(address):\n            # Linux abstract socket namespaces do not need to be explicitly unlinked\n            self._unlink = util.Finalize(\n                self, os.unlink, args=(address,), exitpriority=0\n                )\n        else:\n            self._unlink = None\n\n    def accept(self):\n        s, self._last_accepted = self._socket.accept()\n        s.setblocking(True)\n        return Connection(s.detach())\n\n    def close(self):\n        try:\n            self._socket.close()\n        finally:\n            unlink = self._unlink\n            if unlink is not None:\n                self._unlink = None\n                unlink()\n\n\ndef SocketClient(address):\n    '''\n    Return a connection object connected to the socket given by `address`\n    '''\n    family = address_type(address)\n    with socket.socket( getattr(socket, family) ) as s:\n        s.setblocking(True)\n        s.connect(address)\n        return Connection(s.detach())\n\n#\n# Definitions for connections based on named pipes\n#\n\nif sys.platform == 'win32':\n\n    class PipeListener(object):\n        '''\n        Representation of a named pipe\n        '''\n        def __init__(self, address, backlog=None):\n            self._address = address\n            self._handle_queue = [self._new_handle(first=True)]\n\n            self._last_accepted = None\n            util.sub_debug('listener created with address=%r', self._address)\n            self.close = util.Finalize(\n                self, PipeListener._finalize_pipe_listener,\n                args=(self._handle_queue, self._address), exitpriority=0\n                )\n\n        def _new_handle(self, first=False):\n            flags = _winapi.PIPE_ACCESS_DUPLEX | _winapi.FILE_FLAG_OVERLAPPED\n            if first:\n                flags |= _winapi.FILE_FLAG_FIRST_PIPE_INSTANCE\n            return _winapi.CreateNamedPipe(\n                self._address, flags,\n                _winapi.PIPE_TYPE_MESSAGE | _winapi.PIPE_READMODE_MESSAGE |\n                _winapi.PIPE_WAIT,\n                _winapi.PIPE_UNLIMITED_INSTANCES, BUFSIZE, BUFSIZE,\n                _winapi.NMPWAIT_WAIT_FOREVER, _winapi.NULL\n                )\n\n        def accept(self):\n            self._handle_queue.append(self._new_handle())\n            handle = self._handle_queue.pop(0)\n            try:\n                ov = _winapi.ConnectNamedPipe(handle, overlapped=True)\n            except OSError as e:\n                if e.winerror != _winapi.ERROR_NO_DATA:\n                    raise\n                # ERROR_NO_DATA can occur if a client has already connected,\n                # written data and then disconnected -- see Issue 14725.\n            else:\n                try:\n                    res = _winapi.WaitForMultipleObjects(\n                        [ov.event], False, INFINITE)\n                except:\n                    ov.cancel()\n                    _winapi.CloseHandle(handle)\n                    raise\n                finally:\n                    _, err = ov.GetOverlappedResult(True)\n                    assert err == 0\n            return PipeConnection(handle)\n\n        @staticmethod\n        def _finalize_pipe_listener(queue, address):\n            util.sub_debug('closing listener with address=%r', address)\n            for handle in queue:\n                _winapi.CloseHandle(handle)\n\n    def PipeClient(address):\n        '''\n        Return a connection object connected to the pipe given by `address`\n        '''\n        t = _init_timeout()\n        while 1:\n            try:\n                _winapi.WaitNamedPipe(address, 1000)\n                h = _winapi.CreateFile(\n                    address, _winapi.GENERIC_READ | _winapi.GENERIC_WRITE,\n                    0, _winapi.NULL, _winapi.OPEN_EXISTING,\n                    _winapi.FILE_FLAG_OVERLAPPED, _winapi.NULL\n                    )\n            except OSError as e:\n                if e.winerror not in (_winapi.ERROR_SEM_TIMEOUT,\n                                      _winapi.ERROR_PIPE_BUSY) or _check_timeout(t):\n                    raise\n            else:\n                break\n        else:\n            raise\n\n        _winapi.SetNamedPipeHandleState(\n            h, _winapi.PIPE_READMODE_MESSAGE, None, None\n            )\n        return PipeConnection(h)\n\n#\n# Authentication stuff\n#\n\nMESSAGE_LENGTH = 20\n\nCHALLENGE = b'#CHALLENGE#'\nWELCOME = b'#WELCOME#'\nFAILURE = b'#FAILURE#'\n\ndef deliver_challenge(connection, authkey):\n    import hmac\n    if not isinstance(authkey, bytes):\n        raise ValueError(\n            \"Authkey must be bytes, not {0!s}\".format(type(authkey)))\n    message = os.urandom(MESSAGE_LENGTH)\n    connection.send_bytes(CHALLENGE + message)\n    digest = hmac.new(authkey, message, 'md5').digest()\n    response = connection.recv_bytes(256)        # reject large message\n    if response == digest:\n        connection.send_bytes(WELCOME)\n    else:\n        connection.send_bytes(FAILURE)\n        raise AuthenticationError('digest received was wrong')\n\ndef answer_challenge(connection, authkey):\n    import hmac\n    if not isinstance(authkey, bytes):\n        raise ValueError(\n            \"Authkey must be bytes, not {0!s}\".format(type(authkey)))\n    message = connection.recv_bytes(256)         # reject large message\n    assert message[:len(CHALLENGE)] == CHALLENGE, 'message = %r' % message\n    message = message[len(CHALLENGE):]\n    digest = hmac.new(authkey, message, 'md5').digest()\n    connection.send_bytes(digest)\n    response = connection.recv_bytes(256)        # reject large message\n    if response != WELCOME:\n        raise AuthenticationError('digest sent was rejected')\n\n#\n# Support for using xmlrpclib for serialization\n#\n\nclass ConnectionWrapper(object):\n    def __init__(self, conn, dumps, loads):\n        self._conn = conn\n        self._dumps = dumps\n        self._loads = loads\n        for attr in ('fileno', 'close', 'poll', 'recv_bytes', 'send_bytes'):\n            obj = getattr(conn, attr)\n            setattr(self, attr, obj)\n    def send(self, obj):\n        s = self._dumps(obj)\n        self._conn.send_bytes(s)\n    def recv(self):\n        s = self._conn.recv_bytes()\n        return self._loads(s)\n\ndef _xml_dumps(obj):\n    return xmlrpclib.dumps((obj,), None, None, None, 1).encode('utf-8')\n\ndef _xml_loads(s):\n    (obj,), method = xmlrpclib.loads(s.decode('utf-8'))\n    return obj\n\nclass XmlListener(Listener):\n    def accept(self):\n        global xmlrpclib\n        import xmlrpc.client as xmlrpclib\n        obj = Listener.accept(self)\n        return ConnectionWrapper(obj, _xml_dumps, _xml_loads)\n\ndef XmlClient(*args, **kwds):\n    global xmlrpclib\n    import xmlrpc.client as xmlrpclib\n    return ConnectionWrapper(Client(*args, **kwds), _xml_dumps, _xml_loads)\n\n#\n# Wait\n#\n\nif sys.platform == 'win32':\n\n    def _exhaustive_wait(handles, timeout):\n        # Return ALL handles which are currently signalled.  (Only\n        # returning the first signalled might create starvation issues.)\n        L = list(handles)\n        ready = []\n        while L:\n            res = _winapi.WaitForMultipleObjects(L, False, timeout)\n            if res == WAIT_TIMEOUT:\n                break\n            elif WAIT_OBJECT_0 <= res < WAIT_OBJECT_0 + len(L):\n                res -= WAIT_OBJECT_0\n            elif WAIT_ABANDONED_0 <= res < WAIT_ABANDONED_0 + len(L):\n                res -= WAIT_ABANDONED_0\n            else:\n                raise RuntimeError('Should not get here')\n            ready.append(L[res])\n            L = L[res+1:]\n            timeout = 0\n        return ready\n\n    _ready_errors = {_winapi.ERROR_BROKEN_PIPE, _winapi.ERROR_NETNAME_DELETED}\n\n    def wait(object_list, timeout=None):\n        '''\n        Wait till an object in object_list is ready/readable.\n\n        Returns list of those objects in object_list which are ready/readable.\n        '''\n        if timeout is None:\n            timeout = INFINITE\n        elif timeout < 0:\n            timeout = 0\n        else:\n            timeout = int(timeout * 1000 + 0.5)\n\n        object_list = list(object_list)\n        waithandle_to_obj = {}\n        ov_list = []\n        ready_objects = set()\n        ready_handles = set()\n\n        try:\n            for o in object_list:\n                try:\n                    fileno = getattr(o, 'fileno')\n                except AttributeError:\n                    waithandle_to_obj[o.__index__()] = o\n                else:\n                    # start an overlapped read of length zero\n                    try:\n                        ov, err = _winapi.ReadFile(fileno(), 0, True)\n                    except OSError as e:\n                        ov, err = None, e.winerror\n                        if err not in _ready_errors:\n                            raise\n                    if err == _winapi.ERROR_IO_PENDING:\n                        ov_list.append(ov)\n                        waithandle_to_obj[ov.event] = o\n                    else:\n                        # If o.fileno() is an overlapped pipe handle and\n                        # err == 0 then there is a zero length message\n                        # in the pipe, but it HAS NOT been consumed...\n                        if ov and sys.getwindowsversion()[:2] >= (6, 2):\n                            # ... except on Windows 8 and later, where\n                            # the message HAS been consumed.\n                            try:\n                                _, err = ov.GetOverlappedResult(False)\n                            except OSError as e:\n                                err = e.winerror\n                            if not err and hasattr(o, '_got_empty_message'):\n                                o._got_empty_message = True\n                        ready_objects.add(o)\n                        timeout = 0\n\n            ready_handles = _exhaustive_wait(waithandle_to_obj.keys(), timeout)\n        finally:\n            # request that overlapped reads stop\n            for ov in ov_list:\n                ov.cancel()\n\n            # wait for all overlapped reads to stop\n            for ov in ov_list:\n                try:\n                    _, err = ov.GetOverlappedResult(True)\n                except OSError as e:\n                    err = e.winerror\n                    if err not in _ready_errors:\n                        raise\n                if err != _winapi.ERROR_OPERATION_ABORTED:\n                    o = waithandle_to_obj[ov.event]\n                    ready_objects.add(o)\n                    if err == 0:\n                        # If o.fileno() is an overlapped pipe handle then\n                        # a zero length message HAS been consumed.\n                        if hasattr(o, '_got_empty_message'):\n                            o._got_empty_message = True\n\n        ready_objects.update(waithandle_to_obj[h] for h in ready_handles)\n        return [o for o in object_list if o in ready_objects]\n\nelse:\n\n    import selectors\n\n    # poll/select have the advantage of not requiring any extra file\n    # descriptor, contrarily to epoll/kqueue (also, they require a single\n    # syscall).\n    if hasattr(selectors, 'PollSelector'):\n        _WaitSelector = selectors.PollSelector\n    else:\n        _WaitSelector = selectors.SelectSelector\n\n    def wait(object_list, timeout=None):\n        '''\n        Wait till an object in object_list is ready/readable.\n\n        Returns list of those objects in object_list which are ready/readable.\n        '''\n        with _WaitSelector() as selector:\n            for obj in object_list:\n                selector.register(obj, selectors.EVENT_READ)\n\n            if timeout is not None:\n                deadline = time.monotonic() + timeout\n\n            while True:\n                ready = selector.select(timeout)\n                if ready:\n                    return [key.fileobj for (key, events) in ready]\n                else:\n                    if timeout is not None:\n                        timeout = deadline - time.monotonic()\n                        if timeout < 0:\n                            return ready\n\n#\n# Make connection and socket objects sharable if possible\n#\n\nif sys.platform == 'win32':\n    def reduce_connection(conn):\n        handle = conn.fileno()\n        with socket.fromfd(handle, socket.AF_INET, socket.SOCK_STREAM) as s:\n            from . import resource_sharer\n            ds = resource_sharer.DupSocket(s)\n            return rebuild_connection, (ds, conn.readable, conn.writable)\n    def rebuild_connection(ds, readable, writable):\n        sock = ds.detach()\n        return Connection(sock.detach(), readable, writable)\n    reduction.register(Connection, reduce_connection)\n\n    def reduce_pipe_connection(conn):\n        access = ((_winapi.FILE_GENERIC_READ if conn.readable else 0) |\n                  (_winapi.FILE_GENERIC_WRITE if conn.writable else 0))\n        dh = reduction.DupHandle(conn.fileno(), access)\n        return rebuild_pipe_connection, (dh, conn.readable, conn.writable)\n    def rebuild_pipe_connection(dh, readable, writable):\n        handle = dh.detach()\n        return PipeConnection(handle, readable, writable)\n    reduction.register(PipeConnection, reduce_pipe_connection)\n\nelse:\n    def reduce_connection(conn):\n        df = reduction.DupFd(conn.fileno())\n        return rebuild_connection, (df, conn.readable, conn.writable)\n    def rebuild_connection(df, readable, writable):\n        fd = df.detach()\n        return Connection(fd, readable, writable)\n    reduction.register(Connection, reduce_connection)\n", 978], "C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py": ["#\n# Module which deals with pickling of objects.\n#\n# multiprocessing/reduction.py\n#\n# Copyright (c) 2006-2008, R Oudkerk\n# Licensed to PSF under a Contributor Agreement.\n#\n\nfrom abc import ABCMeta\nimport copyreg\nimport functools\nimport io\nimport os\nimport pickle\nimport socket\nimport sys\n\nfrom . import context\n\n__all__ = ['send_handle', 'recv_handle', 'ForkingPickler', 'register', 'dump']\n\n\nHAVE_SEND_HANDLE = (sys.platform == 'win32' or\n                    (hasattr(socket, 'CMSG_LEN') and\n                     hasattr(socket, 'SCM_RIGHTS') and\n                     hasattr(socket.socket, 'sendmsg')))\n\n#\n# Pickler subclass\n#\n\nclass ForkingPickler(pickle.Pickler):\n    '''Pickler subclass used by multiprocessing.'''\n    _extra_reducers = {}\n    _copyreg_dispatch_table = copyreg.dispatch_table\n\n    def __init__(self, *args):\n        super().__init__(*args)\n        self.dispatch_table = self._copyreg_dispatch_table.copy()\n        self.dispatch_table.update(self._extra_reducers)\n\n    @classmethod\n    def register(cls, type, reduce):\n        '''Register a reduce function for a type.'''\n        cls._extra_reducers[type] = reduce\n\n    @classmethod\n    def dumps(cls, obj, protocol=None):\n        buf = io.BytesIO()\n        cls(buf, protocol).dump(obj)\n        return buf.getbuffer()\n\n    loads = pickle.loads\n\nregister = ForkingPickler.register\n\ndef dump(obj, file, protocol=None):\n    '''Replacement for pickle.dump() using ForkingPickler.'''\n    ForkingPickler(file, protocol).dump(obj)\n\n#\n# Platform specific definitions\n#\n\nif sys.platform == 'win32':\n    # Windows\n    __all__ += ['DupHandle', 'duplicate', 'steal_handle']\n    import _winapi\n\n    def duplicate(handle, target_process=None, inheritable=False,\n                  *, source_process=None):\n        '''Duplicate a handle.  (target_process is a handle not a pid!)'''\n        current_process = _winapi.GetCurrentProcess()\n        if source_process is None:\n            source_process = current_process\n        if target_process is None:\n            target_process = current_process\n        return _winapi.DuplicateHandle(\n            source_process, handle, target_process,\n            0, inheritable, _winapi.DUPLICATE_SAME_ACCESS)\n\n    def steal_handle(source_pid, handle):\n        '''Steal a handle from process identified by source_pid.'''\n        source_process_handle = _winapi.OpenProcess(\n            _winapi.PROCESS_DUP_HANDLE, False, source_pid)\n        try:\n            return _winapi.DuplicateHandle(\n                source_process_handle, handle,\n                _winapi.GetCurrentProcess(), 0, False,\n                _winapi.DUPLICATE_SAME_ACCESS | _winapi.DUPLICATE_CLOSE_SOURCE)\n        finally:\n            _winapi.CloseHandle(source_process_handle)\n\n    def send_handle(conn, handle, destination_pid):\n        '''Send a handle over a local connection.'''\n        dh = DupHandle(handle, _winapi.DUPLICATE_SAME_ACCESS, destination_pid)\n        conn.send(dh)\n\n    def recv_handle(conn):\n        '''Receive a handle over a local connection.'''\n        return conn.recv().detach()\n\n    class DupHandle(object):\n        '''Picklable wrapper for a handle.'''\n        def __init__(self, handle, access, pid=None):\n            if pid is None:\n                # We just duplicate the handle in the current process and\n                # let the receiving process steal the handle.\n                pid = os.getpid()\n            proc = _winapi.OpenProcess(_winapi.PROCESS_DUP_HANDLE, False, pid)\n            try:\n                self._handle = _winapi.DuplicateHandle(\n                    _winapi.GetCurrentProcess(),\n                    handle, proc, access, False, 0)\n            finally:\n                _winapi.CloseHandle(proc)\n            self._access = access\n            self._pid = pid\n\n        def detach(self):\n            '''Get the handle.  This should only be called once.'''\n            # retrieve handle from process which currently owns it\n            if self._pid == os.getpid():\n                # The handle has already been duplicated for this process.\n                return self._handle\n            # We must steal the handle from the process whose pid is self._pid.\n            proc = _winapi.OpenProcess(_winapi.PROCESS_DUP_HANDLE, False,\n                                       self._pid)\n            try:\n                return _winapi.DuplicateHandle(\n                    proc, self._handle, _winapi.GetCurrentProcess(),\n                    self._access, False, _winapi.DUPLICATE_CLOSE_SOURCE)\n            finally:\n                _winapi.CloseHandle(proc)\n\nelse:\n    # Unix\n    __all__ += ['DupFd', 'sendfds', 'recvfds']\n    import array\n\n    # On MacOSX we should acknowledge receipt of fds -- see Issue14669\n    ACKNOWLEDGE = sys.platform == 'darwin'\n\n    def sendfds(sock, fds):\n        '''Send an array of fds over an AF_UNIX socket.'''\n        fds = array.array('i', fds)\n        msg = bytes([len(fds) % 256])\n        sock.sendmsg([msg], [(socket.SOL_SOCKET, socket.SCM_RIGHTS, fds)])\n        if ACKNOWLEDGE and sock.recv(1) != b'A':\n            raise RuntimeError('did not receive acknowledgement of fd')\n\n    def recvfds(sock, size):\n        '''Receive an array of fds over an AF_UNIX socket.'''\n        a = array.array('i')\n        bytes_size = a.itemsize * size\n        msg, ancdata, flags, addr = sock.recvmsg(1, socket.CMSG_SPACE(bytes_size))\n        if not msg and not ancdata:\n            raise EOFError\n        try:\n            if ACKNOWLEDGE:\n                sock.send(b'A')\n            if len(ancdata) != 1:\n                raise RuntimeError('received %d items of ancdata' %\n                                   len(ancdata))\n            cmsg_level, cmsg_type, cmsg_data = ancdata[0]\n            if (cmsg_level == socket.SOL_SOCKET and\n                cmsg_type == socket.SCM_RIGHTS):\n                if len(cmsg_data) % a.itemsize != 0:\n                    raise ValueError\n                a.frombytes(cmsg_data)\n                if len(a) % 256 != msg[0]:\n                    raise AssertionError(\n                        \"Len is {0:n} but msg[0] is {1!r}\".format(\n                            len(a), msg[0]))\n                return list(a)\n        except (ValueError, IndexError):\n            pass\n        raise RuntimeError('Invalid data received')\n\n    def send_handle(conn, handle, destination_pid):\n        '''Send a handle over a local connection.'''\n        with socket.fromfd(conn.fileno(), socket.AF_UNIX, socket.SOCK_STREAM) as s:\n            sendfds(s, [handle])\n\n    def recv_handle(conn):\n        '''Receive a handle over a local connection.'''\n        with socket.fromfd(conn.fileno(), socket.AF_UNIX, socket.SOCK_STREAM) as s:\n            return recvfds(s, 1)[0]\n\n    def DupFd(fd):\n        '''Return a wrapper for an fd.'''\n        popen_obj = context.get_spawning_popen()\n        if popen_obj is not None:\n            return popen_obj.DupFd(popen_obj.duplicate_for_child(fd))\n        elif HAVE_SEND_HANDLE:\n            from . import resource_sharer\n            return resource_sharer.DupFd(fd)\n        else:\n            raise ValueError('SCM_RIGHTS appears not to be available')\n\n#\n# Try making some callable types picklable\n#\n\ndef _reduce_method(m):\n    if m.__self__ is None:\n        return getattr, (m.__class__, m.__func__.__name__)\n    else:\n        return getattr, (m.__self__, m.__func__.__name__)\nclass _C:\n    def f(self):\n        pass\nregister(type(_C().f), _reduce_method)\n\n\ndef _reduce_method_descriptor(m):\n    return getattr, (m.__objclass__, m.__name__)\nregister(type(list.append), _reduce_method_descriptor)\nregister(type(int.__add__), _reduce_method_descriptor)\n\n\ndef _reduce_partial(p):\n    return _rebuild_partial, (p.func, p.args, p.keywords or {})\ndef _rebuild_partial(func, args, keywords):\n    return functools.partial(func, *args, **keywords)\nregister(functools.partial, _reduce_partial)\n\n#\n# Make sockets picklable\n#\n\nif sys.platform == 'win32':\n    def _reduce_socket(s):\n        from .resource_sharer import DupSocket\n        return _rebuild_socket, (DupSocket(s),)\n    def _rebuild_socket(ds):\n        return ds.detach()\n    register(socket.socket, _reduce_socket)\n\nelse:\n    def _reduce_socket(s):\n        df = DupFd(s.fileno())\n        return _rebuild_socket, (df, s.family, s.type, s.proto)\n    def _rebuild_socket(df, family, type, proto):\n        fd = df.detach()\n        return socket.socket(family, type, proto, fileno=fd)\n    register(socket.socket, _reduce_socket)\n\n\nclass AbstractReducer(metaclass=ABCMeta):\n    '''Abstract base class for use in implementing a Reduction class\n    suitable for use in replacing the standard reduction mechanism\n    used in multiprocessing.'''\n    ForkingPickler = ForkingPickler\n    register = register\n    dump = dump\n    send_handle = send_handle\n    recv_handle = recv_handle\n\n    if sys.platform == 'win32':\n        steal_handle = steal_handle\n        duplicate = duplicate\n        DupHandle = DupHandle\n    else:\n        sendfds = sendfds\n        recvfds = recvfds\n        DupFd = DupFd\n\n    _reduce_method = _reduce_method\n    _reduce_method_descriptor = _reduce_method_descriptor\n    _rebuild_partial = _rebuild_partial\n    _reduce_socket = _reduce_socket\n    _rebuild_socket = _rebuild_socket\n\n    def __init__(self, *args):\n        register(type(_C().f), _reduce_method)\n        register(type(list.append), _reduce_method_descriptor)\n        register(type(int.__add__), _reduce_method_descriptor)\n        register(functools.partial, _reduce_partial)\n        register(socket.socket, _reduce_socket)\n", 281], "C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py": ["#\n# Module implementing queues\n#\n# multiprocessing/queues.py\n#\n# Copyright (c) 2006-2008, R Oudkerk\n# Licensed to PSF under a Contributor Agreement.\n#\n\n__all__ = ['Queue', 'SimpleQueue', 'JoinableQueue']\n\nimport sys\nimport os\nimport threading\nimport collections\nimport time\nimport types\nimport weakref\nimport errno\n\nfrom queue import Empty, Full\n\nimport _multiprocessing\n\nfrom . import connection\nfrom . import context\n_ForkingPickler = context.reduction.ForkingPickler\n\nfrom .util import debug, info, Finalize, register_after_fork, is_exiting\n\n#\n# Queue type using a pipe, buffer and thread\n#\n\nclass Queue(object):\n\n    def __init__(self, maxsize=0, *, ctx):\n        if maxsize <= 0:\n            # Can raise ImportError (see issues #3770 and #23400)\n            from .synchronize import SEM_VALUE_MAX as maxsize\n        self._maxsize = maxsize\n        self._reader, self._writer = connection.Pipe(duplex=False)\n        self._rlock = ctx.Lock()\n        self._opid = os.getpid()\n        if sys.platform == 'win32':\n            self._wlock = None\n        else:\n            self._wlock = ctx.Lock()\n        self._sem = ctx.BoundedSemaphore(maxsize)\n        # For use by concurrent.futures\n        self._ignore_epipe = False\n        self._reset()\n\n        if sys.platform != 'win32':\n            register_after_fork(self, Queue._after_fork)\n\n    def __getstate__(self):\n        context.assert_spawning(self)\n        return (self._ignore_epipe, self._maxsize, self._reader, self._writer,\n                self._rlock, self._wlock, self._sem, self._opid)\n\n    def __setstate__(self, state):\n        (self._ignore_epipe, self._maxsize, self._reader, self._writer,\n         self._rlock, self._wlock, self._sem, self._opid) = state\n        self._reset()\n\n    def _after_fork(self):\n        debug('Queue._after_fork()')\n        self._reset(after_fork=True)\n\n    def _reset(self, after_fork=False):\n        if after_fork:\n            self._notempty._at_fork_reinit()\n        else:\n            self._notempty = threading.Condition(threading.Lock())\n        self._buffer = collections.deque()\n        self._thread = None\n        self._jointhread = None\n        self._joincancelled = False\n        self._closed = False\n        self._close = None\n        self._send_bytes = self._writer.send_bytes\n        self._recv_bytes = self._reader.recv_bytes\n        self._poll = self._reader.poll\n\n    def put(self, obj, block=True, timeout=None):\n        if self._closed:\n            raise ValueError(f\"Queue {self!r} is closed\")\n        if not self._sem.acquire(block, timeout):\n            raise Full\n\n        with self._notempty:\n            if self._thread is None:\n                self._start_thread()\n            self._buffer.append(obj)\n            self._notempty.notify()\n\n    def get(self, block=True, timeout=None):\n        if self._closed:\n            raise ValueError(f\"Queue {self!r} is closed\")\n        if block and timeout is None:\n            with self._rlock:\n                res = self._recv_bytes()\n            self._sem.release()\n        else:\n            if block:\n                deadline = time.monotonic() + timeout\n            if not self._rlock.acquire(block, timeout):\n                raise Empty\n            try:\n                if block:\n                    timeout = deadline - time.monotonic()\n                    if not self._poll(timeout):\n                        raise Empty\n                elif not self._poll():\n                    raise Empty\n                res = self._recv_bytes()\n                self._sem.release()\n            finally:\n                self._rlock.release()\n        # unserialize the data after having released the lock\n        return _ForkingPickler.loads(res)\n\n    def qsize(self):\n        # Raises NotImplementedError on Mac OSX because of broken sem_getvalue()\n        return self._maxsize - self._sem._semlock._get_value()\n\n    def empty(self):\n        return not self._poll()\n\n    def full(self):\n        return self._sem._semlock._is_zero()\n\n    def get_nowait(self):\n        return self.get(False)\n\n    def put_nowait(self, obj):\n        return self.put(obj, False)\n\n    def close(self):\n        self._closed = True\n        try:\n            self._reader.close()\n        finally:\n            close = self._close\n            if close:\n                self._close = None\n                close()\n\n    def join_thread(self):\n        debug('Queue.join_thread()')\n        assert self._closed, \"Queue {0!r} not closed\".format(self)\n        if self._jointhread:\n            self._jointhread()\n\n    def cancel_join_thread(self):\n        debug('Queue.cancel_join_thread()')\n        self._joincancelled = True\n        try:\n            self._jointhread.cancel()\n        except AttributeError:\n            pass\n\n    def _start_thread(self):\n        debug('Queue._start_thread()')\n\n        # Start thread which transfers data from buffer to pipe\n        self._buffer.clear()\n        self._thread = threading.Thread(\n            target=Queue._feed,\n            args=(self._buffer, self._notempty, self._send_bytes,\n                  self._wlock, self._writer.close, self._ignore_epipe,\n                  self._on_queue_feeder_error, self._sem),\n            name='QueueFeederThread'\n        )\n        self._thread.daemon = True\n\n        debug('doing self._thread.start()')\n        self._thread.start()\n        debug('... done self._thread.start()')\n\n        if not self._joincancelled:\n            self._jointhread = Finalize(\n                self._thread, Queue._finalize_join,\n                [weakref.ref(self._thread)],\n                exitpriority=-5\n                )\n\n        # Send sentinel to the thread queue object when garbage collected\n        self._close = Finalize(\n            self, Queue._finalize_close,\n            [self._buffer, self._notempty],\n            exitpriority=10\n            )\n\n    @staticmethod\n    def _finalize_join(twr):\n        debug('joining queue thread')\n        thread = twr()\n        if thread is not None:\n            thread.join()\n            debug('... queue thread joined')\n        else:\n            debug('... queue thread already dead')\n\n    @staticmethod\n    def _finalize_close(buffer, notempty):\n        debug('telling queue thread to quit')\n        with notempty:\n            buffer.append(_sentinel)\n            notempty.notify()\n\n    @staticmethod\n    def _feed(buffer, notempty, send_bytes, writelock, close, ignore_epipe,\n              onerror, queue_sem):\n        debug('starting thread to feed data to pipe')\n        nacquire = notempty.acquire\n        nrelease = notempty.release\n        nwait = notempty.wait\n        bpopleft = buffer.popleft\n        sentinel = _sentinel\n        if sys.platform != 'win32':\n            wacquire = writelock.acquire\n            wrelease = writelock.release\n        else:\n            wacquire = None\n\n        while 1:\n            try:\n                nacquire()\n                try:\n                    if not buffer:\n                        nwait()\n                finally:\n                    nrelease()\n                try:\n                    while 1:\n                        obj = bpopleft()\n                        if obj is sentinel:\n                            debug('feeder thread got sentinel -- exiting')\n                            close()\n                            return\n\n                        # serialize the data before acquiring the lock\n                        obj = _ForkingPickler.dumps(obj)\n                        if wacquire is None:\n                            send_bytes(obj)\n                        else:\n                            wacquire()\n                            try:\n                                send_bytes(obj)\n                            finally:\n                                wrelease()\n                except IndexError:\n                    pass\n            except Exception as e:\n                if ignore_epipe and getattr(e, 'errno', 0) == errno.EPIPE:\n                    return\n                # Since this runs in a daemon thread the resources it uses\n                # may be become unusable while the process is cleaning up.\n                # We ignore errors which happen after the process has\n                # started to cleanup.\n                if is_exiting():\n                    info('error in queue thread: %s', e)\n                    return\n                else:\n                    # Since the object has not been sent in the queue, we need\n                    # to decrease the size of the queue. The error acts as\n                    # if the object had been silently removed from the queue\n                    # and this step is necessary to have a properly working\n                    # queue.\n                    queue_sem.release()\n                    onerror(e, obj)\n\n    @staticmethod\n    def _on_queue_feeder_error(e, obj):\n        \"\"\"\n        Private API hook called when feeding data in the background thread\n        raises an exception.  For overriding by concurrent.futures.\n        \"\"\"\n        import traceback\n        traceback.print_exc()\n\n\n_sentinel = object()\n\n#\n# A queue type which also supports join() and task_done() methods\n#\n# Note that if you do not call task_done() for each finished task then\n# eventually the counter's semaphore may overflow causing Bad Things\n# to happen.\n#\n\nclass JoinableQueue(Queue):\n\n    def __init__(self, maxsize=0, *, ctx):\n        Queue.__init__(self, maxsize, ctx=ctx)\n        self._unfinished_tasks = ctx.Semaphore(0)\n        self._cond = ctx.Condition()\n\n    def __getstate__(self):\n        return Queue.__getstate__(self) + (self._cond, self._unfinished_tasks)\n\n    def __setstate__(self, state):\n        Queue.__setstate__(self, state[:-2])\n        self._cond, self._unfinished_tasks = state[-2:]\n\n    def put(self, obj, block=True, timeout=None):\n        if self._closed:\n            raise ValueError(f\"Queue {self!r} is closed\")\n        if not self._sem.acquire(block, timeout):\n            raise Full\n\n        with self._notempty, self._cond:\n            if self._thread is None:\n                self._start_thread()\n            self._buffer.append(obj)\n            self._unfinished_tasks.release()\n            self._notempty.notify()\n\n    def task_done(self):\n        with self._cond:\n            if not self._unfinished_tasks.acquire(False):\n                raise ValueError('task_done() called too many times')\n            if self._unfinished_tasks._semlock._is_zero():\n                self._cond.notify_all()\n\n    def join(self):\n        with self._cond:\n            if not self._unfinished_tasks._semlock._is_zero():\n                self._cond.wait()\n\n#\n# Simplified Queue type -- really just a locked pipe\n#\n\nclass SimpleQueue(object):\n\n    def __init__(self, *, ctx):\n        self._reader, self._writer = connection.Pipe(duplex=False)\n        self._rlock = ctx.Lock()\n        self._poll = self._reader.poll\n        if sys.platform == 'win32':\n            self._wlock = None\n        else:\n            self._wlock = ctx.Lock()\n\n    def close(self):\n        self._reader.close()\n        self._writer.close()\n\n    def empty(self):\n        return not self._poll()\n\n    def __getstate__(self):\n        context.assert_spawning(self)\n        return (self._reader, self._writer, self._rlock, self._wlock)\n\n    def __setstate__(self, state):\n        (self._reader, self._writer, self._rlock, self._wlock) = state\n        self._poll = self._reader.poll\n\n    def get(self):\n        with self._rlock:\n            res = self._reader.recv_bytes()\n        # unserialize the data after having released the lock\n        return _ForkingPickler.loads(res)\n\n    def put(self, obj):\n        # serialize the data before acquiring the lock\n        obj = _ForkingPickler.dumps(obj)\n        if self._wlock is None:\n            # writes to a message oriented win32 pipe are atomic\n            self._writer.send_bytes(obj)\n        else:\n            with self._wlock:\n                self._writer.send_bytes(obj)\n\n    __class_getitem__ = classmethod(types.GenericAlias)\n", 380], "C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_bootlocale.py": ["\"\"\"A minimal subset of the locale module used at interpreter startup\n(imported by the _io module), in order to reduce startup time.\n\nDon't import directly from third-party code; use the `locale` module instead!\n\"\"\"\n\nimport sys\nimport _locale\n\nif sys.platform.startswith(\"win\"):\n    def getpreferredencoding(do_setlocale=True):\n        if sys.flags.utf8_mode:\n            return 'UTF-8'\n        return _locale._getdefaultlocale()[1]\nelse:\n    try:\n        _locale.CODESET\n    except AttributeError:\n        if hasattr(sys, 'getandroidapilevel'):\n            # On Android langinfo.h and CODESET are missing, and UTF-8 is\n            # always used in mbstowcs() and wcstombs().\n            def getpreferredencoding(do_setlocale=True):\n                return 'UTF-8'\n        else:\n            def getpreferredencoding(do_setlocale=True):\n                if sys.flags.utf8_mode:\n                    return 'UTF-8'\n                # This path for legacy systems needs the more complex\n                # getdefaultlocale() function, import the full locale module.\n                import locale\n                return locale.getpreferredencoding(do_setlocale)\n    else:\n        def getpreferredencoding(do_setlocale=True):\n            assert not do_setlocale\n            if sys.flags.utf8_mode:\n                return 'UTF-8'\n            result = _locale.nl_langinfo(_locale.CODESET)\n            if not result and sys.platform == 'darwin':\n                # nl_langinfo can return an empty string\n                # when the setting has an invalid value.\n                # Default to UTF-8 in that case because\n                # UTF-8 is the default charset on OSX and\n                # returning nothing will crash the\n                # interpreter.\n                result = 'UTF-8'\n            return result\n", 46], "C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\codecs.py": ["\"\"\" codecs -- Python Codec Registry, API and helpers.\n\n\nWritten by Marc-Andre Lemburg (mal@lemburg.com).\n\n(c) Copyright CNRI, All Rights Reserved. NO WARRANTY.\n\n\"\"\"\n\nimport builtins\nimport sys\n\n### Registry and builtin stateless codec functions\n\ntry:\n    from _codecs import *\nexcept ImportError as why:\n    raise SystemError('Failed to load the builtin codecs: %s' % why)\n\n__all__ = [\"register\", \"lookup\", \"open\", \"EncodedFile\", \"BOM\", \"BOM_BE\",\n           \"BOM_LE\", \"BOM32_BE\", \"BOM32_LE\", \"BOM64_BE\", \"BOM64_LE\",\n           \"BOM_UTF8\", \"BOM_UTF16\", \"BOM_UTF16_LE\", \"BOM_UTF16_BE\",\n           \"BOM_UTF32\", \"BOM_UTF32_LE\", \"BOM_UTF32_BE\",\n           \"CodecInfo\", \"Codec\", \"IncrementalEncoder\", \"IncrementalDecoder\",\n           \"StreamReader\", \"StreamWriter\",\n           \"StreamReaderWriter\", \"StreamRecoder\",\n           \"getencoder\", \"getdecoder\", \"getincrementalencoder\",\n           \"getincrementaldecoder\", \"getreader\", \"getwriter\",\n           \"encode\", \"decode\", \"iterencode\", \"iterdecode\",\n           \"strict_errors\", \"ignore_errors\", \"replace_errors\",\n           \"xmlcharrefreplace_errors\",\n           \"backslashreplace_errors\", \"namereplace_errors\",\n           \"register_error\", \"lookup_error\"]\n\n### Constants\n\n#\n# Byte Order Mark (BOM = ZERO WIDTH NO-BREAK SPACE = U+FEFF)\n# and its possible byte string values\n# for UTF8/UTF16/UTF32 output and little/big endian machines\n#\n\n# UTF-8\nBOM_UTF8 = b'\\xef\\xbb\\xbf'\n\n# UTF-16, little endian\nBOM_LE = BOM_UTF16_LE = b'\\xff\\xfe'\n\n# UTF-16, big endian\nBOM_BE = BOM_UTF16_BE = b'\\xfe\\xff'\n\n# UTF-32, little endian\nBOM_UTF32_LE = b'\\xff\\xfe\\x00\\x00'\n\n# UTF-32, big endian\nBOM_UTF32_BE = b'\\x00\\x00\\xfe\\xff'\n\nif sys.byteorder == 'little':\n\n    # UTF-16, native endianness\n    BOM = BOM_UTF16 = BOM_UTF16_LE\n\n    # UTF-32, native endianness\n    BOM_UTF32 = BOM_UTF32_LE\n\nelse:\n\n    # UTF-16, native endianness\n    BOM = BOM_UTF16 = BOM_UTF16_BE\n\n    # UTF-32, native endianness\n    BOM_UTF32 = BOM_UTF32_BE\n\n# Old broken names (don't use in new code)\nBOM32_LE = BOM_UTF16_LE\nBOM32_BE = BOM_UTF16_BE\nBOM64_LE = BOM_UTF32_LE\nBOM64_BE = BOM_UTF32_BE\n\n\n### Codec base classes (defining the API)\n\nclass CodecInfo(tuple):\n    \"\"\"Codec details when looking up the codec registry\"\"\"\n\n    # Private API to allow Python 3.4 to blacklist the known non-Unicode\n    # codecs in the standard library. A more general mechanism to\n    # reliably distinguish test encodings from other codecs will hopefully\n    # be defined for Python 3.5\n    #\n    # See http://bugs.python.org/issue19619\n    _is_text_encoding = True # Assume codecs are text encodings by default\n\n    def __new__(cls, encode, decode, streamreader=None, streamwriter=None,\n        incrementalencoder=None, incrementaldecoder=None, name=None,\n        *, _is_text_encoding=None):\n        self = tuple.__new__(cls, (encode, decode, streamreader, streamwriter))\n        self.name = name\n        self.encode = encode\n        self.decode = decode\n        self.incrementalencoder = incrementalencoder\n        self.incrementaldecoder = incrementaldecoder\n        self.streamwriter = streamwriter\n        self.streamreader = streamreader\n        if _is_text_encoding is not None:\n            self._is_text_encoding = _is_text_encoding\n        return self\n\n    def __repr__(self):\n        return \"<%s.%s object for encoding %s at %#x>\" % \\\n                (self.__class__.__module__, self.__class__.__qualname__,\n                 self.name, id(self))\n\nclass Codec:\n\n    \"\"\" Defines the interface for stateless encoders/decoders.\n\n        The .encode()/.decode() methods may use different error\n        handling schemes by providing the errors argument. These\n        string values are predefined:\n\n         'strict' - raise a ValueError error (or a subclass)\n         'ignore' - ignore the character and continue with the next\n         'replace' - replace with a suitable replacement character;\n                    Python will use the official U+FFFD REPLACEMENT\n                    CHARACTER for the builtin Unicode codecs on\n                    decoding and '?' on encoding.\n         'surrogateescape' - replace with private code points U+DCnn.\n         'xmlcharrefreplace' - Replace with the appropriate XML\n                               character reference (only for encoding).\n         'backslashreplace'  - Replace with backslashed escape sequences.\n         'namereplace'       - Replace with \\\\N{...} escape sequences\n                               (only for encoding).\n\n        The set of allowed values can be extended via register_error.\n\n    \"\"\"\n    def encode(self, input, errors='strict'):\n\n        \"\"\" Encodes the object input and returns a tuple (output\n            object, length consumed).\n\n            errors defines the error handling to apply. It defaults to\n            'strict' handling.\n\n            The method may not store state in the Codec instance. Use\n            StreamWriter for codecs which have to keep state in order to\n            make encoding efficient.\n\n            The encoder must be able to handle zero length input and\n            return an empty object of the output object type in this\n            situation.\n\n        \"\"\"\n        raise NotImplementedError\n\n    def decode(self, input, errors='strict'):\n\n        \"\"\" Decodes the object input and returns a tuple (output\n            object, length consumed).\n\n            input must be an object which provides the bf_getreadbuf\n            buffer slot. Python strings, buffer objects and memory\n            mapped files are examples of objects providing this slot.\n\n            errors defines the error handling to apply. It defaults to\n            'strict' handling.\n\n            The method may not store state in the Codec instance. Use\n            StreamReader for codecs which have to keep state in order to\n            make decoding efficient.\n\n            The decoder must be able to handle zero length input and\n            return an empty object of the output object type in this\n            situation.\n\n        \"\"\"\n        raise NotImplementedError\n\nclass IncrementalEncoder(object):\n    \"\"\"\n    An IncrementalEncoder encodes an input in multiple steps. The input can\n    be passed piece by piece to the encode() method. The IncrementalEncoder\n    remembers the state of the encoding process between calls to encode().\n    \"\"\"\n    def __init__(self, errors='strict'):\n        \"\"\"\n        Creates an IncrementalEncoder instance.\n\n        The IncrementalEncoder may use different error handling schemes by\n        providing the errors keyword argument. See the module docstring\n        for a list of possible values.\n        \"\"\"\n        self.errors = errors\n        self.buffer = \"\"\n\n    def encode(self, input, final=False):\n        \"\"\"\n        Encodes input and returns the resulting object.\n        \"\"\"\n        raise NotImplementedError\n\n    def reset(self):\n        \"\"\"\n        Resets the encoder to the initial state.\n        \"\"\"\n\n    def getstate(self):\n        \"\"\"\n        Return the current state of the encoder.\n        \"\"\"\n        return 0\n\n    def setstate(self, state):\n        \"\"\"\n        Set the current state of the encoder. state must have been\n        returned by getstate().\n        \"\"\"\n\nclass BufferedIncrementalEncoder(IncrementalEncoder):\n    \"\"\"\n    This subclass of IncrementalEncoder can be used as the baseclass for an\n    incremental encoder if the encoder must keep some of the output in a\n    buffer between calls to encode().\n    \"\"\"\n    def __init__(self, errors='strict'):\n        IncrementalEncoder.__init__(self, errors)\n        # unencoded input that is kept between calls to encode()\n        self.buffer = \"\"\n\n    def _buffer_encode(self, input, errors, final):\n        # Overwrite this method in subclasses: It must encode input\n        # and return an (output, length consumed) tuple\n        raise NotImplementedError\n\n    def encode(self, input, final=False):\n        # encode input (taking the buffer into account)\n        data = self.buffer + input\n        (result, consumed) = self._buffer_encode(data, self.errors, final)\n        # keep unencoded input until the next call\n        self.buffer = data[consumed:]\n        return result\n\n    def reset(self):\n        IncrementalEncoder.reset(self)\n        self.buffer = \"\"\n\n    def getstate(self):\n        return self.buffer or 0\n\n    def setstate(self, state):\n        self.buffer = state or \"\"\n\nclass IncrementalDecoder(object):\n    \"\"\"\n    An IncrementalDecoder decodes an input in multiple steps. The input can\n    be passed piece by piece to the decode() method. The IncrementalDecoder\n    remembers the state of the decoding process between calls to decode().\n    \"\"\"\n    def __init__(self, errors='strict'):\n        \"\"\"\n        Create an IncrementalDecoder instance.\n\n        The IncrementalDecoder may use different error handling schemes by\n        providing the errors keyword argument. See the module docstring\n        for a list of possible values.\n        \"\"\"\n        self.errors = errors\n\n    def decode(self, input, final=False):\n        \"\"\"\n        Decode input and returns the resulting object.\n        \"\"\"\n        raise NotImplementedError\n\n    def reset(self):\n        \"\"\"\n        Reset the decoder to the initial state.\n        \"\"\"\n\n    def getstate(self):\n        \"\"\"\n        Return the current state of the decoder.\n\n        This must be a (buffered_input, additional_state_info) tuple.\n        buffered_input must be a bytes object containing bytes that\n        were passed to decode() that have not yet been converted.\n        additional_state_info must be a non-negative integer\n        representing the state of the decoder WITHOUT yet having\n        processed the contents of buffered_input.  In the initial state\n        and after reset(), getstate() must return (b\"\", 0).\n        \"\"\"\n        return (b\"\", 0)\n\n    def setstate(self, state):\n        \"\"\"\n        Set the current state of the decoder.\n\n        state must have been returned by getstate().  The effect of\n        setstate((b\"\", 0)) must be equivalent to reset().\n        \"\"\"\n\nclass BufferedIncrementalDecoder(IncrementalDecoder):\n    \"\"\"\n    This subclass of IncrementalDecoder can be used as the baseclass for an\n    incremental decoder if the decoder must be able to handle incomplete\n    byte sequences.\n    \"\"\"\n    def __init__(self, errors='strict'):\n        IncrementalDecoder.__init__(self, errors)\n        # undecoded input that is kept between calls to decode()\n        self.buffer = b\"\"\n\n    def _buffer_decode(self, input, errors, final):\n        # Overwrite this method in subclasses: It must decode input\n        # and return an (output, length consumed) tuple\n        raise NotImplementedError\n\n    def decode(self, input, final=False):\n        # decode input (taking the buffer into account)\n        data = self.buffer + input\n        (result, consumed) = self._buffer_decode(data, self.errors, final)\n        # keep undecoded input until the next call\n        self.buffer = data[consumed:]\n        return result\n\n    def reset(self):\n        IncrementalDecoder.reset(self)\n        self.buffer = b\"\"\n\n    def getstate(self):\n        # additional state info is always 0\n        return (self.buffer, 0)\n\n    def setstate(self, state):\n        # ignore additional state info\n        self.buffer = state[0]\n\n#\n# The StreamWriter and StreamReader class provide generic working\n# interfaces which can be used to implement new encoding submodules\n# very easily. See encodings/utf_8.py for an example on how this is\n# done.\n#\n\nclass StreamWriter(Codec):\n\n    def __init__(self, stream, errors='strict'):\n\n        \"\"\" Creates a StreamWriter instance.\n\n            stream must be a file-like object open for writing.\n\n            The StreamWriter may use different error handling\n            schemes by providing the errors keyword argument. These\n            parameters are predefined:\n\n             'strict' - raise a ValueError (or a subclass)\n             'ignore' - ignore the character and continue with the next\n             'replace'- replace with a suitable replacement character\n             'xmlcharrefreplace' - Replace with the appropriate XML\n                                   character reference.\n             'backslashreplace'  - Replace with backslashed escape\n                                   sequences.\n             'namereplace'       - Replace with \\\\N{...} escape sequences.\n\n            The set of allowed parameter values can be extended via\n            register_error.\n        \"\"\"\n        self.stream = stream\n        self.errors = errors\n\n    def write(self, object):\n\n        \"\"\" Writes the object's contents encoded to self.stream.\n        \"\"\"\n        data, consumed = self.encode(object, self.errors)\n        self.stream.write(data)\n\n    def writelines(self, list):\n\n        \"\"\" Writes the concatenated list of strings to the stream\n            using .write().\n        \"\"\"\n        self.write(''.join(list))\n\n    def reset(self):\n\n        \"\"\" Resets the codec buffers used for keeping internal state.\n\n            Calling this method should ensure that the data on the\n            output is put into a clean state, that allows appending\n            of new fresh data without having to rescan the whole\n            stream to recover state.\n\n        \"\"\"\n        pass\n\n    def seek(self, offset, whence=0):\n        self.stream.seek(offset, whence)\n        if whence == 0 and offset == 0:\n            self.reset()\n\n    def __getattr__(self, name,\n                    getattr=getattr):\n\n        \"\"\" Inherit all other methods from the underlying stream.\n        \"\"\"\n        return getattr(self.stream, name)\n\n    def __enter__(self):\n        return self\n\n    def __exit__(self, type, value, tb):\n        self.stream.close()\n\n###\n\nclass StreamReader(Codec):\n\n    charbuffertype = str\n\n    def __init__(self, stream, errors='strict'):\n\n        \"\"\" Creates a StreamReader instance.\n\n            stream must be a file-like object open for reading.\n\n            The StreamReader may use different error handling\n            schemes by providing the errors keyword argument. These\n            parameters are predefined:\n\n             'strict' - raise a ValueError (or a subclass)\n             'ignore' - ignore the character and continue with the next\n             'replace'- replace with a suitable replacement character\n             'backslashreplace' - Replace with backslashed escape sequences;\n\n            The set of allowed parameter values can be extended via\n            register_error.\n        \"\"\"\n        self.stream = stream\n        self.errors = errors\n        self.bytebuffer = b\"\"\n        self._empty_charbuffer = self.charbuffertype()\n        self.charbuffer = self._empty_charbuffer\n        self.linebuffer = None\n\n    def decode(self, input, errors='strict'):\n        raise NotImplementedError\n\n    def read(self, size=-1, chars=-1, firstline=False):\n\n        \"\"\" Decodes data from the stream self.stream and returns the\n            resulting object.\n\n            chars indicates the number of decoded code points or bytes to\n            return. read() will never return more data than requested,\n            but it might return less, if there is not enough available.\n\n            size indicates the approximate maximum number of decoded\n            bytes or code points to read for decoding. The decoder\n            can modify this setting as appropriate. The default value\n            -1 indicates to read and decode as much as possible.  size\n            is intended to prevent having to decode huge files in one\n            step.\n\n            If firstline is true, and a UnicodeDecodeError happens\n            after the first line terminator in the input only the first line\n            will be returned, the rest of the input will be kept until the\n            next call to read().\n\n            The method should use a greedy read strategy, meaning that\n            it should read as much data as is allowed within the\n            definition of the encoding and the given size, e.g.  if\n            optional encoding endings or state markers are available\n            on the stream, these should be read too.\n        \"\"\"\n        # If we have lines cached, first merge them back into characters\n        if self.linebuffer:\n            self.charbuffer = self._empty_charbuffer.join(self.linebuffer)\n            self.linebuffer = None\n\n        if chars < 0:\n            # For compatibility with other read() methods that take a\n            # single argument\n            chars = size\n\n        # read until we get the required number of characters (if available)\n        while True:\n            # can the request be satisfied from the character buffer?\n            if chars >= 0:\n                if len(self.charbuffer) >= chars:\n                    break\n            # we need more data\n            if size < 0:\n                newdata = self.stream.read()\n            else:\n                newdata = self.stream.read(size)\n            # decode bytes (those remaining from the last call included)\n            data = self.bytebuffer + newdata\n            if not data:\n                break\n            try:\n                newchars, decodedbytes = self.decode(data, self.errors)\n            except UnicodeDecodeError as exc:\n                if firstline:\n                    newchars, decodedbytes = \\\n                        self.decode(data[:exc.start], self.errors)\n                    lines = newchars.splitlines(keepends=True)\n                    if len(lines)<=1:\n                        raise\n                else:\n                    raise\n            # keep undecoded bytes until the next call\n            self.bytebuffer = data[decodedbytes:]\n            # put new characters in the character buffer\n            self.charbuffer += newchars\n            # there was no data available\n            if not newdata:\n                break\n        if chars < 0:\n            # Return everything we've got\n            result = self.charbuffer\n            self.charbuffer = self._empty_charbuffer\n        else:\n            # Return the first chars characters\n            result = self.charbuffer[:chars]\n            self.charbuffer = self.charbuffer[chars:]\n        return result\n\n    def readline(self, size=None, keepends=True):\n\n        \"\"\" Read one line from the input stream and return the\n            decoded data.\n\n            size, if given, is passed as size argument to the\n            read() method.\n\n        \"\"\"\n        # If we have lines cached from an earlier read, return\n        # them unconditionally\n        if self.linebuffer:\n            line = self.linebuffer[0]\n            del self.linebuffer[0]\n            if len(self.linebuffer) == 1:\n                # revert to charbuffer mode; we might need more data\n                # next time\n                self.charbuffer = self.linebuffer[0]\n                self.linebuffer = None\n            if not keepends:\n                line = line.splitlines(keepends=False)[0]\n            return line\n\n        readsize = size or 72\n        line = self._empty_charbuffer\n        # If size is given, we call read() only once\n        while True:\n            data = self.read(readsize, firstline=True)\n            if data:\n                # If we're at a \"\\r\" read one extra character (which might\n                # be a \"\\n\") to get a proper line ending. If the stream is\n                # temporarily exhausted we return the wrong line ending.\n                if (isinstance(data, str) and data.endswith(\"\\r\")) or \\\n                   (isinstance(data, bytes) and data.endswith(b\"\\r\")):\n                    data += self.read(size=1, chars=1)\n\n            line += data\n            lines = line.splitlines(keepends=True)\n            if lines:\n                if len(lines) > 1:\n                    # More than one line result; the first line is a full line\n                    # to return\n                    line = lines[0]\n                    del lines[0]\n                    if len(lines) > 1:\n                        # cache the remaining lines\n                        lines[-1] += self.charbuffer\n                        self.linebuffer = lines\n                        self.charbuffer = None\n                    else:\n                        # only one remaining line, put it back into charbuffer\n                        self.charbuffer = lines[0] + self.charbuffer\n                    if not keepends:\n                        line = line.splitlines(keepends=False)[0]\n                    break\n                line0withend = lines[0]\n                line0withoutend = lines[0].splitlines(keepends=False)[0]\n                if line0withend != line0withoutend: # We really have a line end\n                    # Put the rest back together and keep it until the next call\n                    self.charbuffer = self._empty_charbuffer.join(lines[1:]) + \\\n                                      self.charbuffer\n                    if keepends:\n                        line = line0withend\n                    else:\n                        line = line0withoutend\n                    break\n            # we didn't get anything or this was our only try\n            if not data or size is not None:\n                if line and not keepends:\n                    line = line.splitlines(keepends=False)[0]\n                break\n            if readsize < 8000:\n                readsize *= 2\n        return line\n\n    def readlines(self, sizehint=None, keepends=True):\n\n        \"\"\" Read all lines available on the input stream\n            and return them as a list.\n\n            Line breaks are implemented using the codec's decoder\n            method and are included in the list entries.\n\n            sizehint, if given, is ignored since there is no efficient\n            way to finding the true end-of-line.\n\n        \"\"\"\n        data = self.read()\n        return data.splitlines(keepends)\n\n    def reset(self):\n\n        \"\"\" Resets the codec buffers used for keeping internal state.\n\n            Note that no stream repositioning should take place.\n            This method is primarily intended to be able to recover\n            from decoding errors.\n\n        \"\"\"\n        self.bytebuffer = b\"\"\n        self.charbuffer = self._empty_charbuffer\n        self.linebuffer = None\n\n    def seek(self, offset, whence=0):\n        \"\"\" Set the input stream's current position.\n\n            Resets the codec buffers used for keeping state.\n        \"\"\"\n        self.stream.seek(offset, whence)\n        self.reset()\n\n    def __next__(self):\n\n        \"\"\" Return the next decoded line from the input stream.\"\"\"\n        line = self.readline()\n        if line:\n            return line\n        raise StopIteration\n\n    def __iter__(self):\n        return self\n\n    def __getattr__(self, name,\n                    getattr=getattr):\n\n        \"\"\" Inherit all other methods from the underlying stream.\n        \"\"\"\n        return getattr(self.stream, name)\n\n    def __enter__(self):\n        return self\n\n    def __exit__(self, type, value, tb):\n        self.stream.close()\n\n###\n\nclass StreamReaderWriter:\n\n    \"\"\" StreamReaderWriter instances allow wrapping streams which\n        work in both read and write modes.\n\n        The design is such that one can use the factory functions\n        returned by the codec.lookup() function to construct the\n        instance.\n\n    \"\"\"\n    # Optional attributes set by the file wrappers below\n    encoding = 'unknown'\n\n    def __init__(self, stream, Reader, Writer, errors='strict'):\n\n        \"\"\" Creates a StreamReaderWriter instance.\n\n            stream must be a Stream-like object.\n\n            Reader, Writer must be factory functions or classes\n            providing the StreamReader, StreamWriter interface resp.\n\n            Error handling is done in the same way as defined for the\n            StreamWriter/Readers.\n\n        \"\"\"\n        self.stream = stream\n        self.reader = Reader(stream, errors)\n        self.writer = Writer(stream, errors)\n        self.errors = errors\n\n    def read(self, size=-1):\n\n        return self.reader.read(size)\n\n    def readline(self, size=None):\n\n        return self.reader.readline(size)\n\n    def readlines(self, sizehint=None):\n\n        return self.reader.readlines(sizehint)\n\n    def __next__(self):\n\n        \"\"\" Return the next decoded line from the input stream.\"\"\"\n        return next(self.reader)\n\n    def __iter__(self):\n        return self\n\n    def write(self, data):\n\n        return self.writer.write(data)\n\n    def writelines(self, list):\n\n        return self.writer.writelines(list)\n\n    def reset(self):\n\n        self.reader.reset()\n        self.writer.reset()\n\n    def seek(self, offset, whence=0):\n        self.stream.seek(offset, whence)\n        self.reader.reset()\n        if whence == 0 and offset == 0:\n            self.writer.reset()\n\n    def __getattr__(self, name,\n                    getattr=getattr):\n\n        \"\"\" Inherit all other methods from the underlying stream.\n        \"\"\"\n        return getattr(self.stream, name)\n\n    # these are needed to make \"with StreamReaderWriter(...)\" work properly\n\n    def __enter__(self):\n        return self\n\n    def __exit__(self, type, value, tb):\n        self.stream.close()\n\n###\n\nclass StreamRecoder:\n\n    \"\"\" StreamRecoder instances translate data from one encoding to another.\n\n        They use the complete set of APIs returned by the\n        codecs.lookup() function to implement their task.\n\n        Data written to the StreamRecoder is first decoded into an\n        intermediate format (depending on the \"decode\" codec) and then\n        written to the underlying stream using an instance of the provided\n        Writer class.\n\n        In the other direction, data is read from the underlying stream using\n        a Reader instance and then encoded and returned to the caller.\n\n    \"\"\"\n    # Optional attributes set by the file wrappers below\n    data_encoding = 'unknown'\n    file_encoding = 'unknown'\n\n    def __init__(self, stream, encode, decode, Reader, Writer,\n                 errors='strict'):\n\n        \"\"\" Creates a StreamRecoder instance which implements a two-way\n            conversion: encode and decode work on the frontend (the\n            data visible to .read() and .write()) while Reader and Writer\n            work on the backend (the data in stream).\n\n            You can use these objects to do transparent\n            transcodings from e.g. latin-1 to utf-8 and back.\n\n            stream must be a file-like object.\n\n            encode and decode must adhere to the Codec interface; Reader and\n            Writer must be factory functions or classes providing the\n            StreamReader and StreamWriter interfaces resp.\n\n            Error handling is done in the same way as defined for the\n            StreamWriter/Readers.\n\n        \"\"\"\n        self.stream = stream\n        self.encode = encode\n        self.decode = decode\n        self.reader = Reader(stream, errors)\n        self.writer = Writer(stream, errors)\n        self.errors = errors\n\n    def read(self, size=-1):\n\n        data = self.reader.read(size)\n        data, bytesencoded = self.encode(data, self.errors)\n        return data\n\n    def readline(self, size=None):\n\n        if size is None:\n            data = self.reader.readline()\n        else:\n            data = self.reader.readline(size)\n        data, bytesencoded = self.encode(data, self.errors)\n        return data\n\n    def readlines(self, sizehint=None):\n\n        data = self.reader.read()\n        data, bytesencoded = self.encode(data, self.errors)\n        return data.splitlines(keepends=True)\n\n    def __next__(self):\n\n        \"\"\" Return the next decoded line from the input stream.\"\"\"\n        data = next(self.reader)\n        data, bytesencoded = self.encode(data, self.errors)\n        return data\n\n    def __iter__(self):\n        return self\n\n    def write(self, data):\n\n        data, bytesdecoded = self.decode(data, self.errors)\n        return self.writer.write(data)\n\n    def writelines(self, list):\n\n        data = b''.join(list)\n        data, bytesdecoded = self.decode(data, self.errors)\n        return self.writer.write(data)\n\n    def reset(self):\n\n        self.reader.reset()\n        self.writer.reset()\n\n    def seek(self, offset, whence=0):\n        # Seeks must be propagated to both the readers and writers\n        # as they might need to reset their internal buffers.\n        self.reader.seek(offset, whence)\n        self.writer.seek(offset, whence)\n\n    def __getattr__(self, name,\n                    getattr=getattr):\n\n        \"\"\" Inherit all other methods from the underlying stream.\n        \"\"\"\n        return getattr(self.stream, name)\n\n    def __enter__(self):\n        return self\n\n    def __exit__(self, type, value, tb):\n        self.stream.close()\n\n### Shortcuts\n\ndef open(filename, mode='r', encoding=None, errors='strict', buffering=-1):\n\n    \"\"\" Open an encoded file using the given mode and return\n        a wrapped version providing transparent encoding/decoding.\n\n        Note: The wrapped version will only accept the object format\n        defined by the codecs, i.e. Unicode objects for most builtin\n        codecs. Output is also codec dependent and will usually be\n        Unicode as well.\n\n        Underlying encoded files are always opened in binary mode.\n        The default file mode is 'r', meaning to open the file in read mode.\n\n        encoding specifies the encoding which is to be used for the\n        file.\n\n        errors may be given to define the error handling. It defaults\n        to 'strict' which causes ValueErrors to be raised in case an\n        encoding error occurs.\n\n        buffering has the same meaning as for the builtin open() API.\n        It defaults to -1 which means that the default buffer size will\n        be used.\n\n        The returned wrapped file object provides an extra attribute\n        .encoding which allows querying the used encoding. This\n        attribute is only available if an encoding was specified as\n        parameter.\n\n    \"\"\"\n    if encoding is not None and \\\n       'b' not in mode:\n        # Force opening of the file in binary mode\n        mode = mode + 'b'\n    file = builtins.open(filename, mode, buffering)\n    if encoding is None:\n        return file\n\n    try:\n        info = lookup(encoding)\n        srw = StreamReaderWriter(file, info.streamreader, info.streamwriter, errors)\n        # Add attributes to simplify introspection\n        srw.encoding = encoding\n        return srw\n    except:\n        file.close()\n        raise\n\ndef EncodedFile(file, data_encoding, file_encoding=None, errors='strict'):\n\n    \"\"\" Return a wrapped version of file which provides transparent\n        encoding translation.\n\n        Data written to the wrapped file is decoded according\n        to the given data_encoding and then encoded to the underlying\n        file using file_encoding. The intermediate data type\n        will usually be Unicode but depends on the specified codecs.\n\n        Bytes read from the file are decoded using file_encoding and then\n        passed back to the caller encoded using data_encoding.\n\n        If file_encoding is not given, it defaults to data_encoding.\n\n        errors may be given to define the error handling. It defaults\n        to 'strict' which causes ValueErrors to be raised in case an\n        encoding error occurs.\n\n        The returned wrapped file object provides two extra attributes\n        .data_encoding and .file_encoding which reflect the given\n        parameters of the same name. The attributes can be used for\n        introspection by Python programs.\n\n    \"\"\"\n    if file_encoding is None:\n        file_encoding = data_encoding\n    data_info = lookup(data_encoding)\n    file_info = lookup(file_encoding)\n    sr = StreamRecoder(file, data_info.encode, data_info.decode,\n                       file_info.streamreader, file_info.streamwriter, errors)\n    # Add attributes to simplify introspection\n    sr.data_encoding = data_encoding\n    sr.file_encoding = file_encoding\n    return sr\n\n### Helpers for codec lookup\n\ndef getencoder(encoding):\n\n    \"\"\" Lookup up the codec for the given encoding and return\n        its encoder function.\n\n        Raises a LookupError in case the encoding cannot be found.\n\n    \"\"\"\n    return lookup(encoding).encode\n\ndef getdecoder(encoding):\n\n    \"\"\" Lookup up the codec for the given encoding and return\n        its decoder function.\n\n        Raises a LookupError in case the encoding cannot be found.\n\n    \"\"\"\n    return lookup(encoding).decode\n\ndef getincrementalencoder(encoding):\n\n    \"\"\" Lookup up the codec for the given encoding and return\n        its IncrementalEncoder class or factory function.\n\n        Raises a LookupError in case the encoding cannot be found\n        or the codecs doesn't provide an incremental encoder.\n\n    \"\"\"\n    encoder = lookup(encoding).incrementalencoder\n    if encoder is None:\n        raise LookupError(encoding)\n    return encoder\n\ndef getincrementaldecoder(encoding):\n\n    \"\"\" Lookup up the codec for the given encoding and return\n        its IncrementalDecoder class or factory function.\n\n        Raises a LookupError in case the encoding cannot be found\n        or the codecs doesn't provide an incremental decoder.\n\n    \"\"\"\n    decoder = lookup(encoding).incrementaldecoder\n    if decoder is None:\n        raise LookupError(encoding)\n    return decoder\n\ndef getreader(encoding):\n\n    \"\"\" Lookup up the codec for the given encoding and return\n        its StreamReader class or factory function.\n\n        Raises a LookupError in case the encoding cannot be found.\n\n    \"\"\"\n    return lookup(encoding).streamreader\n\ndef getwriter(encoding):\n\n    \"\"\" Lookup up the codec for the given encoding and return\n        its StreamWriter class or factory function.\n\n        Raises a LookupError in case the encoding cannot be found.\n\n    \"\"\"\n    return lookup(encoding).streamwriter\n\ndef iterencode(iterator, encoding, errors='strict', **kwargs):\n    \"\"\"\n    Encoding iterator.\n\n    Encodes the input strings from the iterator using an IncrementalEncoder.\n\n    errors and kwargs are passed through to the IncrementalEncoder\n    constructor.\n    \"\"\"\n    encoder = getincrementalencoder(encoding)(errors, **kwargs)\n    for input in iterator:\n        output = encoder.encode(input)\n        if output:\n            yield output\n    output = encoder.encode(\"\", True)\n    if output:\n        yield output\n\ndef iterdecode(iterator, encoding, errors='strict', **kwargs):\n    \"\"\"\n    Decoding iterator.\n\n    Decodes the input strings from the iterator using an IncrementalDecoder.\n\n    errors and kwargs are passed through to the IncrementalDecoder\n    constructor.\n    \"\"\"\n    decoder = getincrementaldecoder(encoding)(errors, **kwargs)\n    for input in iterator:\n        output = decoder.decode(input)\n        if output:\n            yield output\n    output = decoder.decode(b\"\", True)\n    if output:\n        yield output\n\n### Helpers for charmap-based codecs\n\ndef make_identity_dict(rng):\n\n    \"\"\" make_identity_dict(rng) -> dict\n\n        Return a dictionary where elements of the rng sequence are\n        mapped to themselves.\n\n    \"\"\"\n    return {i:i for i in rng}\n\ndef make_encoding_map(decoding_map):\n\n    \"\"\" Creates an encoding map from a decoding map.\n\n        If a target mapping in the decoding map occurs multiple\n        times, then that target is mapped to None (undefined mapping),\n        causing an exception when encountered by the charmap codec\n        during translation.\n\n        One example where this happens is cp875.py which decodes\n        multiple character to \\\\u001a.\n\n    \"\"\"\n    m = {}\n    for k,v in decoding_map.items():\n        if not v in m:\n            m[v] = k\n        else:\n            m[v] = None\n    return m\n\n### error handlers\n\ntry:\n    strict_errors = lookup_error(\"strict\")\n    ignore_errors = lookup_error(\"ignore\")\n    replace_errors = lookup_error(\"replace\")\n    xmlcharrefreplace_errors = lookup_error(\"xmlcharrefreplace\")\n    backslashreplace_errors = lookup_error(\"backslashreplace\")\n    namereplace_errors = lookup_error(\"namereplace\")\nexcept LookupError:\n    # In --disable-unicode builds, these error handler are missing\n    strict_errors = None\n    ignore_errors = None\n    replace_errors = None\n    xmlcharrefreplace_errors = None\n    backslashreplace_errors = None\n    namereplace_errors = None\n\n# Tell modulefinder that using codecs probably needs the encodings\n# package\n_false = 0\nif _false:\n    import encodings\n\n### Tests\n\nif __name__ == '__main__':\n\n    # Make stdout translate Latin-1 output into UTF-8 output\n    sys.stdout = EncodedFile(sys.stdout, 'latin-1', 'utf-8')\n\n    # Have stdin translate Latin-1 input into UTF-8 input\n    sys.stdin = EncodedFile(sys.stdin, 'utf-8', 'latin-1')\n", 1126], "C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\encodings\\cp1252.py": ["\"\"\" Python Character Mapping Codec cp1252 generated from 'MAPPINGS/VENDORS/MICSFT/WINDOWS/CP1252.TXT' with gencodec.py.\n\n\"\"\"#\"\n\nimport codecs\n\n### Codec APIs\n\nclass Codec(codecs.Codec):\n\n    def encode(self,input,errors='strict'):\n        return codecs.charmap_encode(input,errors,encoding_table)\n\n    def decode(self,input,errors='strict'):\n        return codecs.charmap_decode(input,errors,decoding_table)\n\nclass IncrementalEncoder(codecs.IncrementalEncoder):\n    def encode(self, input, final=False):\n        return codecs.charmap_encode(input,self.errors,encoding_table)[0]\n\nclass IncrementalDecoder(codecs.IncrementalDecoder):\n    def decode(self, input, final=False):\n        return codecs.charmap_decode(input,self.errors,decoding_table)[0]\n\nclass StreamWriter(Codec,codecs.StreamWriter):\n    pass\n\nclass StreamReader(Codec,codecs.StreamReader):\n    pass\n\n### encodings module API\n\ndef getregentry():\n    return codecs.CodecInfo(\n        name='cp1252',\n        encode=Codec().encode,\n        decode=Codec().decode,\n        incrementalencoder=IncrementalEncoder,\n        incrementaldecoder=IncrementalDecoder,\n        streamreader=StreamReader,\n        streamwriter=StreamWriter,\n    )\n\n\n### Decoding Table\n\ndecoding_table = (\n    '\\x00'     #  0x00 -> NULL\n    '\\x01'     #  0x01 -> START OF HEADING\n    '\\x02'     #  0x02 -> START OF TEXT\n    '\\x03'     #  0x03 -> END OF TEXT\n    '\\x04'     #  0x04 -> END OF TRANSMISSION\n    '\\x05'     #  0x05 -> ENQUIRY\n    '\\x06'     #  0x06 -> ACKNOWLEDGE\n    '\\x07'     #  0x07 -> BELL\n    '\\x08'     #  0x08 -> BACKSPACE\n    '\\t'       #  0x09 -> HORIZONTAL TABULATION\n    '\\n'       #  0x0A -> LINE FEED\n    '\\x0b'     #  0x0B -> VERTICAL TABULATION\n    '\\x0c'     #  0x0C -> FORM FEED\n    '\\r'       #  0x0D -> CARRIAGE RETURN\n    '\\x0e'     #  0x0E -> SHIFT OUT\n    '\\x0f'     #  0x0F -> SHIFT IN\n    '\\x10'     #  0x10 -> DATA LINK ESCAPE\n    '\\x11'     #  0x11 -> DEVICE CONTROL ONE\n    '\\x12'     #  0x12 -> DEVICE CONTROL TWO\n    '\\x13'     #  0x13 -> DEVICE CONTROL THREE\n    '\\x14'     #  0x14 -> DEVICE CONTROL FOUR\n    '\\x15'     #  0x15 -> NEGATIVE ACKNOWLEDGE\n    '\\x16'     #  0x16 -> SYNCHRONOUS IDLE\n    '\\x17'     #  0x17 -> END OF TRANSMISSION BLOCK\n    '\\x18'     #  0x18 -> CANCEL\n    '\\x19'     #  0x19 -> END OF MEDIUM\n    '\\x1a'     #  0x1A -> SUBSTITUTE\n    '\\x1b'     #  0x1B -> ESCAPE\n    '\\x1c'     #  0x1C -> FILE SEPARATOR\n    '\\x1d'     #  0x1D -> GROUP SEPARATOR\n    '\\x1e'     #  0x1E -> RECORD SEPARATOR\n    '\\x1f'     #  0x1F -> UNIT SEPARATOR\n    ' '        #  0x20 -> SPACE\n    '!'        #  0x21 -> EXCLAMATION MARK\n    '\"'        #  0x22 -> QUOTATION MARK\n    '#'        #  0x23 -> NUMBER SIGN\n    '$'        #  0x24 -> DOLLAR SIGN\n    '%'        #  0x25 -> PERCENT SIGN\n    '&'        #  0x26 -> AMPERSAND\n    \"'\"        #  0x27 -> APOSTROPHE\n    '('        #  0x28 -> LEFT PARENTHESIS\n    ')'        #  0x29 -> RIGHT PARENTHESIS\n    '*'        #  0x2A -> ASTERISK\n    '+'        #  0x2B -> PLUS SIGN\n    ','        #  0x2C -> COMMA\n    '-'        #  0x2D -> HYPHEN-MINUS\n    '.'        #  0x2E -> FULL STOP\n    '/'        #  0x2F -> SOLIDUS\n    '0'        #  0x30 -> DIGIT ZERO\n    '1'        #  0x31 -> DIGIT ONE\n    '2'        #  0x32 -> DIGIT TWO\n    '3'        #  0x33 -> DIGIT THREE\n    '4'        #  0x34 -> DIGIT FOUR\n    '5'        #  0x35 -> DIGIT FIVE\n    '6'        #  0x36 -> DIGIT SIX\n    '7'        #  0x37 -> DIGIT SEVEN\n    '8'        #  0x38 -> DIGIT EIGHT\n    '9'        #  0x39 -> DIGIT NINE\n    ':'        #  0x3A -> COLON\n    ';'        #  0x3B -> SEMICOLON\n    '<'        #  0x3C -> LESS-THAN SIGN\n    '='        #  0x3D -> EQUALS SIGN\n    '>'        #  0x3E -> GREATER-THAN SIGN\n    '?'        #  0x3F -> QUESTION MARK\n    '@'        #  0x40 -> COMMERCIAL AT\n    'A'        #  0x41 -> LATIN CAPITAL LETTER A\n    'B'        #  0x42 -> LATIN CAPITAL LETTER B\n    'C'        #  0x43 -> LATIN CAPITAL LETTER C\n    'D'        #  0x44 -> LATIN CAPITAL LETTER D\n    'E'        #  0x45 -> LATIN CAPITAL LETTER E\n    'F'        #  0x46 -> LATIN CAPITAL LETTER F\n    'G'        #  0x47 -> LATIN CAPITAL LETTER G\n    'H'        #  0x48 -> LATIN CAPITAL LETTER H\n    'I'        #  0x49 -> LATIN CAPITAL LETTER I\n    'J'        #  0x4A -> LATIN CAPITAL LETTER J\n    'K'        #  0x4B -> LATIN CAPITAL LETTER K\n    'L'        #  0x4C -> LATIN CAPITAL LETTER L\n    'M'        #  0x4D -> LATIN CAPITAL LETTER M\n    'N'        #  0x4E -> LATIN CAPITAL LETTER N\n    'O'        #  0x4F -> LATIN CAPITAL LETTER O\n    'P'        #  0x50 -> LATIN CAPITAL LETTER P\n    'Q'        #  0x51 -> LATIN CAPITAL LETTER Q\n    'R'        #  0x52 -> LATIN CAPITAL LETTER R\n    'S'        #  0x53 -> LATIN CAPITAL LETTER S\n    'T'        #  0x54 -> LATIN CAPITAL LETTER T\n    'U'        #  0x55 -> LATIN CAPITAL LETTER U\n    'V'        #  0x56 -> LATIN CAPITAL LETTER V\n    'W'        #  0x57 -> LATIN CAPITAL LETTER W\n    'X'        #  0x58 -> LATIN CAPITAL LETTER X\n    'Y'        #  0x59 -> LATIN CAPITAL LETTER Y\n    'Z'        #  0x5A -> LATIN CAPITAL LETTER Z\n    '['        #  0x5B -> LEFT SQUARE BRACKET\n    '\\\\'       #  0x5C -> REVERSE SOLIDUS\n    ']'        #  0x5D -> RIGHT SQUARE BRACKET\n    '^'        #  0x5E -> CIRCUMFLEX ACCENT\n    '_'        #  0x5F -> LOW LINE\n    '`'        #  0x60 -> GRAVE ACCENT\n    'a'        #  0x61 -> LATIN SMALL LETTER A\n    'b'        #  0x62 -> LATIN SMALL LETTER B\n    'c'        #  0x63 -> LATIN SMALL LETTER C\n    'd'        #  0x64 -> LATIN SMALL LETTER D\n    'e'        #  0x65 -> LATIN SMALL LETTER E\n    'f'        #  0x66 -> LATIN SMALL LETTER F\n    'g'        #  0x67 -> LATIN SMALL LETTER G\n    'h'        #  0x68 -> LATIN SMALL LETTER H\n    'i'        #  0x69 -> LATIN SMALL LETTER I\n    'j'        #  0x6A -> LATIN SMALL LETTER J\n    'k'        #  0x6B -> LATIN SMALL LETTER K\n    'l'        #  0x6C -> LATIN SMALL LETTER L\n    'm'        #  0x6D -> LATIN SMALL LETTER M\n    'n'        #  0x6E -> LATIN SMALL LETTER N\n    'o'        #  0x6F -> LATIN SMALL LETTER O\n    'p'        #  0x70 -> LATIN SMALL LETTER P\n    'q'        #  0x71 -> LATIN SMALL LETTER Q\n    'r'        #  0x72 -> LATIN SMALL LETTER R\n    's'        #  0x73 -> LATIN SMALL LETTER S\n    't'        #  0x74 -> LATIN SMALL LETTER T\n    'u'        #  0x75 -> LATIN SMALL LETTER U\n    'v'        #  0x76 -> LATIN SMALL LETTER V\n    'w'        #  0x77 -> LATIN SMALL LETTER W\n    'x'        #  0x78 -> LATIN SMALL LETTER X\n    'y'        #  0x79 -> LATIN SMALL LETTER Y\n    'z'        #  0x7A -> LATIN SMALL LETTER Z\n    '{'        #  0x7B -> LEFT CURLY BRACKET\n    '|'        #  0x7C -> VERTICAL LINE\n    '}'        #  0x7D -> RIGHT CURLY BRACKET\n    '~'        #  0x7E -> TILDE\n    '\\x7f'     #  0x7F -> DELETE\n    '\\u20ac'   #  0x80 -> EURO SIGN\n    '\\ufffe'   #  0x81 -> UNDEFINED\n    '\\u201a'   #  0x82 -> SINGLE LOW-9 QUOTATION MARK\n    '\\u0192'   #  0x83 -> LATIN SMALL LETTER F WITH HOOK\n    '\\u201e'   #  0x84 -> DOUBLE LOW-9 QUOTATION MARK\n    '\\u2026'   #  0x85 -> HORIZONTAL ELLIPSIS\n    '\\u2020'   #  0x86 -> DAGGER\n    '\\u2021'   #  0x87 -> DOUBLE DAGGER\n    '\\u02c6'   #  0x88 -> MODIFIER LETTER CIRCUMFLEX ACCENT\n    '\\u2030'   #  0x89 -> PER MILLE SIGN\n    '\\u0160'   #  0x8A -> LATIN CAPITAL LETTER S WITH CARON\n    '\\u2039'   #  0x8B -> SINGLE LEFT-POINTING ANGLE QUOTATION MARK\n    '\\u0152'   #  0x8C -> LATIN CAPITAL LIGATURE OE\n    '\\ufffe'   #  0x8D -> UNDEFINED\n    '\\u017d'   #  0x8E -> LATIN CAPITAL LETTER Z WITH CARON\n    '\\ufffe'   #  0x8F -> UNDEFINED\n    '\\ufffe'   #  0x90 -> UNDEFINED\n    '\\u2018'   #  0x91 -> LEFT SINGLE QUOTATION MARK\n    '\\u2019'   #  0x92 -> RIGHT SINGLE QUOTATION MARK\n    '\\u201c'   #  0x93 -> LEFT DOUBLE QUOTATION MARK\n    '\\u201d'   #  0x94 -> RIGHT DOUBLE QUOTATION MARK\n    '\\u2022'   #  0x95 -> BULLET\n    '\\u2013'   #  0x96 -> EN DASH\n    '\\u2014'   #  0x97 -> EM DASH\n    '\\u02dc'   #  0x98 -> SMALL TILDE\n    '\\u2122'   #  0x99 -> TRADE MARK SIGN\n    '\\u0161'   #  0x9A -> LATIN SMALL LETTER S WITH CARON\n    '\\u203a'   #  0x9B -> SINGLE RIGHT-POINTING ANGLE QUOTATION MARK\n    '\\u0153'   #  0x9C -> LATIN SMALL LIGATURE OE\n    '\\ufffe'   #  0x9D -> UNDEFINED\n    '\\u017e'   #  0x9E -> LATIN SMALL LETTER Z WITH CARON\n    '\\u0178'   #  0x9F -> LATIN CAPITAL LETTER Y WITH DIAERESIS\n    '\\xa0'     #  0xA0 -> NO-BREAK SPACE\n    '\\xa1'     #  0xA1 -> INVERTED EXCLAMATION MARK\n    '\\xa2'     #  0xA2 -> CENT SIGN\n    '\\xa3'     #  0xA3 -> POUND SIGN\n    '\\xa4'     #  0xA4 -> CURRENCY SIGN\n    '\\xa5'     #  0xA5 -> YEN SIGN\n    '\\xa6'     #  0xA6 -> BROKEN BAR\n    '\\xa7'     #  0xA7 -> SECTION SIGN\n    '\\xa8'     #  0xA8 -> DIAERESIS\n    '\\xa9'     #  0xA9 -> COPYRIGHT SIGN\n    '\\xaa'     #  0xAA -> FEMININE ORDINAL INDICATOR\n    '\\xab'     #  0xAB -> LEFT-POINTING DOUBLE ANGLE QUOTATION MARK\n    '\\xac'     #  0xAC -> NOT SIGN\n    '\\xad'     #  0xAD -> SOFT HYPHEN\n    '\\xae'     #  0xAE -> REGISTERED SIGN\n    '\\xaf'     #  0xAF -> MACRON\n    '\\xb0'     #  0xB0 -> DEGREE SIGN\n    '\\xb1'     #  0xB1 -> PLUS-MINUS SIGN\n    '\\xb2'     #  0xB2 -> SUPERSCRIPT TWO\n    '\\xb3'     #  0xB3 -> SUPERSCRIPT THREE\n    '\\xb4'     #  0xB4 -> ACUTE ACCENT\n    '\\xb5'     #  0xB5 -> MICRO SIGN\n    '\\xb6'     #  0xB6 -> PILCROW SIGN\n    '\\xb7'     #  0xB7 -> MIDDLE DOT\n    '\\xb8'     #  0xB8 -> CEDILLA\n    '\\xb9'     #  0xB9 -> SUPERSCRIPT ONE\n    '\\xba'     #  0xBA -> MASCULINE ORDINAL INDICATOR\n    '\\xbb'     #  0xBB -> RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK\n    '\\xbc'     #  0xBC -> VULGAR FRACTION ONE QUARTER\n    '\\xbd'     #  0xBD -> VULGAR FRACTION ONE HALF\n    '\\xbe'     #  0xBE -> VULGAR FRACTION THREE QUARTERS\n    '\\xbf'     #  0xBF -> INVERTED QUESTION MARK\n    '\\xc0'     #  0xC0 -> LATIN CAPITAL LETTER A WITH GRAVE\n    '\\xc1'     #  0xC1 -> LATIN CAPITAL LETTER A WITH ACUTE\n    '\\xc2'     #  0xC2 -> LATIN CAPITAL LETTER A WITH CIRCUMFLEX\n    '\\xc3'     #  0xC3 -> LATIN CAPITAL LETTER A WITH TILDE\n    '\\xc4'     #  0xC4 -> LATIN CAPITAL LETTER A WITH DIAERESIS\n    '\\xc5'     #  0xC5 -> LATIN CAPITAL LETTER A WITH RING ABOVE\n    '\\xc6'     #  0xC6 -> LATIN CAPITAL LETTER AE\n    '\\xc7'     #  0xC7 -> LATIN CAPITAL LETTER C WITH CEDILLA\n    '\\xc8'     #  0xC8 -> LATIN CAPITAL LETTER E WITH GRAVE\n    '\\xc9'     #  0xC9 -> LATIN CAPITAL LETTER E WITH ACUTE\n    '\\xca'     #  0xCA -> LATIN CAPITAL LETTER E WITH CIRCUMFLEX\n    '\\xcb'     #  0xCB -> LATIN CAPITAL LETTER E WITH DIAERESIS\n    '\\xcc'     #  0xCC -> LATIN CAPITAL LETTER I WITH GRAVE\n    '\\xcd'     #  0xCD -> LATIN CAPITAL LETTER I WITH ACUTE\n    '\\xce'     #  0xCE -> LATIN CAPITAL LETTER I WITH CIRCUMFLEX\n    '\\xcf'     #  0xCF -> LATIN CAPITAL LETTER I WITH DIAERESIS\n    '\\xd0'     #  0xD0 -> LATIN CAPITAL LETTER ETH\n    '\\xd1'     #  0xD1 -> LATIN CAPITAL LETTER N WITH TILDE\n    '\\xd2'     #  0xD2 -> LATIN CAPITAL LETTER O WITH GRAVE\n    '\\xd3'     #  0xD3 -> LATIN CAPITAL LETTER O WITH ACUTE\n    '\\xd4'     #  0xD4 -> LATIN CAPITAL LETTER O WITH CIRCUMFLEX\n    '\\xd5'     #  0xD5 -> LATIN CAPITAL LETTER O WITH TILDE\n    '\\xd6'     #  0xD6 -> LATIN CAPITAL LETTER O WITH DIAERESIS\n    '\\xd7'     #  0xD7 -> MULTIPLICATION SIGN\n    '\\xd8'     #  0xD8 -> LATIN CAPITAL LETTER O WITH STROKE\n    '\\xd9'     #  0xD9 -> LATIN CAPITAL LETTER U WITH GRAVE\n    '\\xda'     #  0xDA -> LATIN CAPITAL LETTER U WITH ACUTE\n    '\\xdb'     #  0xDB -> LATIN CAPITAL LETTER U WITH CIRCUMFLEX\n    '\\xdc'     #  0xDC -> LATIN CAPITAL LETTER U WITH DIAERESIS\n    '\\xdd'     #  0xDD -> LATIN CAPITAL LETTER Y WITH ACUTE\n    '\\xde'     #  0xDE -> LATIN CAPITAL LETTER THORN\n    '\\xdf'     #  0xDF -> LATIN SMALL LETTER SHARP S\n    '\\xe0'     #  0xE0 -> LATIN SMALL LETTER A WITH GRAVE\n    '\\xe1'     #  0xE1 -> LATIN SMALL LETTER A WITH ACUTE\n    '\\xe2'     #  0xE2 -> LATIN SMALL LETTER A WITH CIRCUMFLEX\n    '\\xe3'     #  0xE3 -> LATIN SMALL LETTER A WITH TILDE\n    '\\xe4'     #  0xE4 -> LATIN SMALL LETTER A WITH DIAERESIS\n    '\\xe5'     #  0xE5 -> LATIN SMALL LETTER A WITH RING ABOVE\n    '\\xe6'     #  0xE6 -> LATIN SMALL LETTER AE\n    '\\xe7'     #  0xE7 -> LATIN SMALL LETTER C WITH CEDILLA\n    '\\xe8'     #  0xE8 -> LATIN SMALL LETTER E WITH GRAVE\n    '\\xe9'     #  0xE9 -> LATIN SMALL LETTER E WITH ACUTE\n    '\\xea'     #  0xEA -> LATIN SMALL LETTER E WITH CIRCUMFLEX\n    '\\xeb'     #  0xEB -> LATIN SMALL LETTER E WITH DIAERESIS\n    '\\xec'     #  0xEC -> LATIN SMALL LETTER I WITH GRAVE\n    '\\xed'     #  0xED -> LATIN SMALL LETTER I WITH ACUTE\n    '\\xee'     #  0xEE -> LATIN SMALL LETTER I WITH CIRCUMFLEX\n    '\\xef'     #  0xEF -> LATIN SMALL LETTER I WITH DIAERESIS\n    '\\xf0'     #  0xF0 -> LATIN SMALL LETTER ETH\n    '\\xf1'     #  0xF1 -> LATIN SMALL LETTER N WITH TILDE\n    '\\xf2'     #  0xF2 -> LATIN SMALL LETTER O WITH GRAVE\n    '\\xf3'     #  0xF3 -> LATIN SMALL LETTER O WITH ACUTE\n    '\\xf4'     #  0xF4 -> LATIN SMALL LETTER O WITH CIRCUMFLEX\n    '\\xf5'     #  0xF5 -> LATIN SMALL LETTER O WITH TILDE\n    '\\xf6'     #  0xF6 -> LATIN SMALL LETTER O WITH DIAERESIS\n    '\\xf7'     #  0xF7 -> DIVISION SIGN\n    '\\xf8'     #  0xF8 -> LATIN SMALL LETTER O WITH STROKE\n    '\\xf9'     #  0xF9 -> LATIN SMALL LETTER U WITH GRAVE\n    '\\xfa'     #  0xFA -> LATIN SMALL LETTER U WITH ACUTE\n    '\\xfb'     #  0xFB -> LATIN SMALL LETTER U WITH CIRCUMFLEX\n    '\\xfc'     #  0xFC -> LATIN SMALL LETTER U WITH DIAERESIS\n    '\\xfd'     #  0xFD -> LATIN SMALL LETTER Y WITH ACUTE\n    '\\xfe'     #  0xFE -> LATIN SMALL LETTER THORN\n    '\\xff'     #  0xFF -> LATIN SMALL LETTER Y WITH DIAERESIS\n)\n\n### Encoding table\nencoding_table=codecs.charmap_build(decoding_table)\n", 307], "C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py": ["'''\nCS337 Spring 2022 - Operating Systems Prof. Al Madi\nProject 5 - Multitasking\nmultitasking_code_4.py\nMatthew Bass\n03/13/2022\n\nThis is a file to count the words and do other functions with the the\nreddit's comments data. It is based off my fastest serial code which is\nserial_code_4.py\n\nAnother version much more simplified\n\nRefactored to process all the files one at a time\n\nIt does the following:\n    - Read in the Reddit comments files\n\n    - Count each word\n\n    - Print the 10 most common words in each file\n\n    - Print the frequency of a given word in each year to observe word trends\n      (frequency = word_count / number_of_words)\n\n    - Time your \u201ccommon word\u201d and \u201cword trend\u201d code reliably for comparison\n'''\n\nimport os\nimport re\nimport time\nfrom concurrent.futures import ProcessPoolExecutor\nfrom collections import Counter\nfrom itertools import repeat\n\n'''\nHelper FunctionS\n'''\n\n\n\n'''\nFunctions to parse the raw data and clean it\n'''\n\n\ndef readInData(data_file: str, data_path: str) -> str:\n    '''\n    A Function to read in the raw data from the file as a string\n\n    Args:\n        data_file (str): the name of the file\n        data_path (str): the path to the file\n\n    Returns:\n        data (str): the raw string of the data\n\n    '''\n    with open(data_path+data_file, 'r') as file:\n        data = file.read()\n    return data\n\n\ndef cleanAndTokenize(data: str) -> list:\n    '''\n    A Function to clean and tokenize the raw string\n    Args:\n        data (str): the raw string of the data\n\n    Returns:\n        tokens (list): a list of the cleaned word tokens\n\n    '''\n    # Remove extra spaces, tabs, and line breaks\n    data = \" \".join(data.split())\n\n    # keep only words\n    data = re.sub(r\"[^A-Za-z\\s]+\", \"\", data).split(\" \")\n    return data\n\n\n\ndef getWordCount(data_file: str, data_path: str) -> Counter:\n    '''\n    A Function to get the word count from specified file\n\n    Args:\n        data_file (str): the name of the file\n        data_path (str): the path to the file\n\n    Returns:\n        word_count(Counter): A counter of the files word count\n\n\n    '''\n    data = readInData(data_file,data_path)\n    data = cleanAndTokenize(data)\n    return Counter(data)\n\n\ndef getWordFrequencies(word_count: Counter) -> dict:\n    '''\n    A Function to get the word frequency from the counter\n\n    Args:\n        word_count (Counter):\n\n    Returns:\n        word_frequencies (dict): a dict of the word frequencies\n    '''\n    # Initialize word frequencies dict\n    word_frequencies = {}\n\n    # Get the total word count\n    total_count = sum(word_count.values())\n\n    for word, count in word_count.items():\n        word_frequencies[word] = (count / total_count)\n\n    return word_frequencies\n\n\ndef getWordData(data_file: str, data_path: str, debug = True) -> dict:\n    '''\n    Main running function to get all the word count data\n    :param data_file: the name of the file\n    :param data_path: the path to the file\n    :param debug: Bool if true debug staatement printed\n\n    :return word_data: a tuple of the word counts and word frequencies\n    '''\n\n\n    if debug:\n        t_start_time = time.perf_counter()\n        print(f\"START getWordData {data_file} pid : {os.getpid()}\")\n\n    # Get the word counter\n    word_count = getWordCount(data_file,data_path)\n\n    if debug:\n        t_end_time = time.perf_counter()\n        t_total_time = t_end_time - t_start_time\n        print(f\"\\nEND getWordData {data_file} pid : {os.getpid()}! \" +\n              f\"\\n\\tIt took {t_total_time} sec(s) to run in total!\\n\")\n\n    # Get the word frequencies\n    word_frequencies = getWordFrequencies(word_count)\n\n    # Make the word data object\n    word_data = (word_count, word_frequencies)\n\n    return word_data\n\n\ndef printTopNWords(files_data: dict, top_n_words: int = 10):\n    '''\n    A Function to print out the top N words over the years\n    Args:\n        files_data ():\n        top_n_words ():\n\n    Returns:\n\n    '''\n\n    # Get the top words from all the years\n    top_words = {}\n    for file_name, data in files_data.items():\n        n_words = data[0].most_common(top_n_words)\n\n        top_words[re.sub(\"[^0-9]\", \"\", file_name)] = n_words\n\n    print(f\"\\nThe top {top_n_words} words for each year (word, count)\")\n    print(f\"In Order Top: {[x+1 for x in range(top_n_words)]}\")\n    for year, tw in top_words.items():\n        print(f\"{year.upper()}. {tw}\")\n\n\n    return\n\ndef printWordFrequencyOverYears(files_data: dict, word: str):\n    '''\n    A Function to print out the top N words over the years\n    Args:\n        files_data (dict): the dict of word data\n        word (str): the word whos frequency to print out\n\n    Returns:\n\n    '''\n\n    # Get the word frequency from over the years\n    word_freq = {}\n    for file_name, data in files_data.items():\n        word_freqs = data[1]\n\n        # If the word is in the frequencies for that year add it\n        if word in word_freqs.keys():\n\n            word_freq[re.sub(\"[^0-9]\", \"\", file_name)] = word_freqs[word]\n\n        #if it isnt the frequency is 0\n        else:\n            word_freq[re.sub(\"[^0-9]\", \"\", file_name)] = 0\n\n    # Print the Header\n    print(f\"\\n The frequency of {word} over the years is:\")\n    print(f\"\\t {word_freq}\")\n    return\n\n\ndef runWordCounter(thread_count: int = None,\n                   process_count: int = None,\n                   debug: bool = True) -> dict:\n    '''\n    Main function to run the word counter\n\n    Timing of funtions will be done in nanoseconds\n\n    :param data_type: a str of the data type to use. Valid types list, np, gpu\n    :return: a dictionary of all the files raw strings\n    '''\n\n    # Check that process number and thread count are there\n    if thread_count is None:\n        print(f\"\\nError no thread count was entered!!\")\n        print(f\"Setting thread_count to machines core count {os.cpu_count()}!\")\n        thread_count = os.cpu_count()\n    if process_count is None:\n        print(f\"\\nError no process count was entered!!\")\n        print(f\"Setting process_count to machines core count {os.cpu_count()}!\")\n        process_count = os.cpu_count()\n\n    # if Debug print the function and pid\n    if debug: print(f\"\\nrunWordCounter pid : {os.getpid()}\")\n\n\n    # Get the current file directory path of the file.\n    dir_path = os.path.dirname(os.path.realpath(__file__))\n\n    # Make the filepath the reddit comments (data) path\n\n    data_path = os.path.join(dir_path, os.path.normcase(\"data/\"))\n\n    # Get all the data files\n    data_files = os.listdir(data_path)\n\n    getWordData_start_time = time.perf_counter()\n\n\n\n    # Use the concurrent futers process pool context manager to start\n    # multiprocess pool with desired number of processes\n    with ProcessPoolExecutor(process_count) as p:\n        word_data_list = p.map(getWordData,\n                               data_files,\n                               repeat(data_path))\n    # Make the word count dicts\n    files_data = {}\n    for data_file, dat in zip(data_files, word_data_list):\n        files_data[data_file] = dat\n\n\n    getWordData_end_time = time.perf_counter()\n    getWordData_total_time = getWordData_end_time - getWordData_start_time\n    print(f\"\\nWord Counter  is done! \" +\n          f\"\\n\\tIt took {getWordData_total_time} sec(s) to run in total!\\n\")\n\n    # Print the top 10 words\n    printTopNWords(files_data)\n\n    # Print word frequency of the\n    printWordFrequencyOverYears(files_data, \"the\")\n\n    return\n\n\n# Main function to run the script\ndef main():\n\n\n    runWordCounter()\n    return\n\n\nif __name__ == \"__main__\":\n    main()\n", 288], "C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py": ["#\n# Secret Labs' Regular Expression Engine\n#\n# convert template to internal format\n#\n# Copyright (c) 1997-2001 by Secret Labs AB.  All rights reserved.\n#\n# See the sre.py file for information on usage and redistribution.\n#\n\n\"\"\"Internal support module for sre\"\"\"\n\nimport _sre\nimport sre_parse\nfrom sre_constants import *\n\nassert _sre.MAGIC == MAGIC, \"SRE module mismatch\"\n\n_LITERAL_CODES = {LITERAL, NOT_LITERAL}\n_REPEATING_CODES = {REPEAT, MIN_REPEAT, MAX_REPEAT}\n_SUCCESS_CODES = {SUCCESS, FAILURE}\n_ASSERT_CODES = {ASSERT, ASSERT_NOT}\n_UNIT_CODES = _LITERAL_CODES | {ANY, IN}\n\n# Sets of lowercase characters which have the same uppercase.\n_equivalences = (\n    # LATIN SMALL LETTER I, LATIN SMALL LETTER DOTLESS I\n    (0x69, 0x131), # i\u0131\n    # LATIN SMALL LETTER S, LATIN SMALL LETTER LONG S\n    (0x73, 0x17f), # s\u017f\n    # MICRO SIGN, GREEK SMALL LETTER MU\n    (0xb5, 0x3bc), # \u00b5\u03bc\n    # COMBINING GREEK YPOGEGRAMMENI, GREEK SMALL LETTER IOTA, GREEK PROSGEGRAMMENI\n    (0x345, 0x3b9, 0x1fbe), # \\u0345\u03b9\u1fbe\n    # GREEK SMALL LETTER IOTA WITH DIALYTIKA AND TONOS, GREEK SMALL LETTER IOTA WITH DIALYTIKA AND OXIA\n    (0x390, 0x1fd3), # \u0390\u1fd3\n    # GREEK SMALL LETTER UPSILON WITH DIALYTIKA AND TONOS, GREEK SMALL LETTER UPSILON WITH DIALYTIKA AND OXIA\n    (0x3b0, 0x1fe3), # \u03b0\u1fe3\n    # GREEK SMALL LETTER BETA, GREEK BETA SYMBOL\n    (0x3b2, 0x3d0), # \u03b2\u03d0\n    # GREEK SMALL LETTER EPSILON, GREEK LUNATE EPSILON SYMBOL\n    (0x3b5, 0x3f5), # \u03b5\u03f5\n    # GREEK SMALL LETTER THETA, GREEK THETA SYMBOL\n    (0x3b8, 0x3d1), # \u03b8\u03d1\n    # GREEK SMALL LETTER KAPPA, GREEK KAPPA SYMBOL\n    (0x3ba, 0x3f0), # \u03ba\u03f0\n    # GREEK SMALL LETTER PI, GREEK PI SYMBOL\n    (0x3c0, 0x3d6), # \u03c0\u03d6\n    # GREEK SMALL LETTER RHO, GREEK RHO SYMBOL\n    (0x3c1, 0x3f1), # \u03c1\u03f1\n    # GREEK SMALL LETTER FINAL SIGMA, GREEK SMALL LETTER SIGMA\n    (0x3c2, 0x3c3), # \u03c2\u03c3\n    # GREEK SMALL LETTER PHI, GREEK PHI SYMBOL\n    (0x3c6, 0x3d5), # \u03c6\u03d5\n    # LATIN SMALL LETTER S WITH DOT ABOVE, LATIN SMALL LETTER LONG S WITH DOT ABOVE\n    (0x1e61, 0x1e9b), # \u1e61\u1e9b\n    # LATIN SMALL LIGATURE LONG S T, LATIN SMALL LIGATURE ST\n    (0xfb05, 0xfb06), # \ufb05\ufb06\n)\n\n# Maps the lowercase code to lowercase codes which have the same uppercase.\n_ignorecase_fixes = {i: tuple(j for j in t if i != j)\n                     for t in _equivalences for i in t}\n\ndef _combine_flags(flags, add_flags, del_flags,\n                   TYPE_FLAGS=sre_parse.TYPE_FLAGS):\n    if add_flags & TYPE_FLAGS:\n        flags &= ~TYPE_FLAGS\n    return (flags | add_flags) & ~del_flags\n\ndef _compile(code, pattern, flags):\n    # internal: compile a (sub)pattern\n    emit = code.append\n    _len = len\n    LITERAL_CODES = _LITERAL_CODES\n    REPEATING_CODES = _REPEATING_CODES\n    SUCCESS_CODES = _SUCCESS_CODES\n    ASSERT_CODES = _ASSERT_CODES\n    iscased = None\n    tolower = None\n    fixes = None\n    if flags & SRE_FLAG_IGNORECASE and not flags & SRE_FLAG_LOCALE:\n        if flags & SRE_FLAG_UNICODE:\n            iscased = _sre.unicode_iscased\n            tolower = _sre.unicode_tolower\n            fixes = _ignorecase_fixes\n        else:\n            iscased = _sre.ascii_iscased\n            tolower = _sre.ascii_tolower\n    for op, av in pattern:\n        if op in LITERAL_CODES:\n            if not flags & SRE_FLAG_IGNORECASE:\n                emit(op)\n                emit(av)\n            elif flags & SRE_FLAG_LOCALE:\n                emit(OP_LOCALE_IGNORE[op])\n                emit(av)\n            elif not iscased(av):\n                emit(op)\n                emit(av)\n            else:\n                lo = tolower(av)\n                if not fixes:  # ascii\n                    emit(OP_IGNORE[op])\n                    emit(lo)\n                elif lo not in fixes:\n                    emit(OP_UNICODE_IGNORE[op])\n                    emit(lo)\n                else:\n                    emit(IN_UNI_IGNORE)\n                    skip = _len(code); emit(0)\n                    if op is NOT_LITERAL:\n                        emit(NEGATE)\n                    for k in (lo,) + fixes[lo]:\n                        emit(LITERAL)\n                        emit(k)\n                    emit(FAILURE)\n                    code[skip] = _len(code) - skip\n        elif op is IN:\n            charset, hascased = _optimize_charset(av, iscased, tolower, fixes)\n            if flags & SRE_FLAG_IGNORECASE and flags & SRE_FLAG_LOCALE:\n                emit(IN_LOC_IGNORE)\n            elif not hascased:\n                emit(IN)\n            elif not fixes:  # ascii\n                emit(IN_IGNORE)\n            else:\n                emit(IN_UNI_IGNORE)\n            skip = _len(code); emit(0)\n            _compile_charset(charset, flags, code)\n            code[skip] = _len(code) - skip\n        elif op is ANY:\n            if flags & SRE_FLAG_DOTALL:\n                emit(ANY_ALL)\n            else:\n                emit(ANY)\n        elif op in REPEATING_CODES:\n            if flags & SRE_FLAG_TEMPLATE:\n                raise error(\"internal: unsupported template operator %r\" % (op,))\n            if _simple(av[2]):\n                if op is MAX_REPEAT:\n                    emit(REPEAT_ONE)\n                else:\n                    emit(MIN_REPEAT_ONE)\n                skip = _len(code); emit(0)\n                emit(av[0])\n                emit(av[1])\n                _compile(code, av[2], flags)\n                emit(SUCCESS)\n                code[skip] = _len(code) - skip\n            else:\n                emit(REPEAT)\n                skip = _len(code); emit(0)\n                emit(av[0])\n                emit(av[1])\n                _compile(code, av[2], flags)\n                code[skip] = _len(code) - skip\n                if op is MAX_REPEAT:\n                    emit(MAX_UNTIL)\n                else:\n                    emit(MIN_UNTIL)\n        elif op is SUBPATTERN:\n            group, add_flags, del_flags, p = av\n            if group:\n                emit(MARK)\n                emit((group-1)*2)\n            # _compile_info(code, p, _combine_flags(flags, add_flags, del_flags))\n            _compile(code, p, _combine_flags(flags, add_flags, del_flags))\n            if group:\n                emit(MARK)\n                emit((group-1)*2+1)\n        elif op in SUCCESS_CODES:\n            emit(op)\n        elif op in ASSERT_CODES:\n            emit(op)\n            skip = _len(code); emit(0)\n            if av[0] >= 0:\n                emit(0) # look ahead\n            else:\n                lo, hi = av[1].getwidth()\n                if lo != hi:\n                    raise error(\"look-behind requires fixed-width pattern\")\n                emit(lo) # look behind\n            _compile(code, av[1], flags)\n            emit(SUCCESS)\n            code[skip] = _len(code) - skip\n        elif op is CALL:\n            emit(op)\n            skip = _len(code); emit(0)\n            _compile(code, av, flags)\n            emit(SUCCESS)\n            code[skip] = _len(code) - skip\n        elif op is AT:\n            emit(op)\n            if flags & SRE_FLAG_MULTILINE:\n                av = AT_MULTILINE.get(av, av)\n            if flags & SRE_FLAG_LOCALE:\n                av = AT_LOCALE.get(av, av)\n            elif flags & SRE_FLAG_UNICODE:\n                av = AT_UNICODE.get(av, av)\n            emit(av)\n        elif op is BRANCH:\n            emit(op)\n            tail = []\n            tailappend = tail.append\n            for av in av[1]:\n                skip = _len(code); emit(0)\n                # _compile_info(code, av, flags)\n                _compile(code, av, flags)\n                emit(JUMP)\n                tailappend(_len(code)); emit(0)\n                code[skip] = _len(code) - skip\n            emit(FAILURE) # end of branch\n            for tail in tail:\n                code[tail] = _len(code) - tail\n        elif op is CATEGORY:\n            emit(op)\n            if flags & SRE_FLAG_LOCALE:\n                av = CH_LOCALE[av]\n            elif flags & SRE_FLAG_UNICODE:\n                av = CH_UNICODE[av]\n            emit(av)\n        elif op is GROUPREF:\n            if not flags & SRE_FLAG_IGNORECASE:\n                emit(op)\n            elif flags & SRE_FLAG_LOCALE:\n                emit(GROUPREF_LOC_IGNORE)\n            elif not fixes:  # ascii\n                emit(GROUPREF_IGNORE)\n            else:\n                emit(GROUPREF_UNI_IGNORE)\n            emit(av-1)\n        elif op is GROUPREF_EXISTS:\n            emit(op)\n            emit(av[0]-1)\n            skipyes = _len(code); emit(0)\n            _compile(code, av[1], flags)\n            if av[2]:\n                emit(JUMP)\n                skipno = _len(code); emit(0)\n                code[skipyes] = _len(code) - skipyes + 1\n                _compile(code, av[2], flags)\n                code[skipno] = _len(code) - skipno\n            else:\n                code[skipyes] = _len(code) - skipyes + 1\n        else:\n            raise error(\"internal: unsupported operand type %r\" % (op,))\n\ndef _compile_charset(charset, flags, code):\n    # compile charset subprogram\n    emit = code.append\n    for op, av in charset:\n        emit(op)\n        if op is NEGATE:\n            pass\n        elif op is LITERAL:\n            emit(av)\n        elif op is RANGE or op is RANGE_UNI_IGNORE:\n            emit(av[0])\n            emit(av[1])\n        elif op is CHARSET:\n            code.extend(av)\n        elif op is BIGCHARSET:\n            code.extend(av)\n        elif op is CATEGORY:\n            if flags & SRE_FLAG_LOCALE:\n                emit(CH_LOCALE[av])\n            elif flags & SRE_FLAG_UNICODE:\n                emit(CH_UNICODE[av])\n            else:\n                emit(av)\n        else:\n            raise error(\"internal: unsupported set operator %r\" % (op,))\n    emit(FAILURE)\n\ndef _optimize_charset(charset, iscased=None, fixup=None, fixes=None):\n    # internal: optimize character set\n    out = []\n    tail = []\n    charmap = bytearray(256)\n    hascased = False\n    for op, av in charset:\n        while True:\n            try:\n                if op is LITERAL:\n                    if fixup:\n                        lo = fixup(av)\n                        charmap[lo] = 1\n                        if fixes and lo in fixes:\n                            for k in fixes[lo]:\n                                charmap[k] = 1\n                        if not hascased and iscased(av):\n                            hascased = True\n                    else:\n                        charmap[av] = 1\n                elif op is RANGE:\n                    r = range(av[0], av[1]+1)\n                    if fixup:\n                        if fixes:\n                            for i in map(fixup, r):\n                                charmap[i] = 1\n                                if i in fixes:\n                                    for k in fixes[i]:\n                                        charmap[k] = 1\n                        else:\n                            for i in map(fixup, r):\n                                charmap[i] = 1\n                        if not hascased:\n                            hascased = any(map(iscased, r))\n                    else:\n                        for i in r:\n                            charmap[i] = 1\n                elif op is NEGATE:\n                    out.append((op, av))\n                else:\n                    tail.append((op, av))\n            except IndexError:\n                if len(charmap) == 256:\n                    # character set contains non-UCS1 character codes\n                    charmap += b'\\0' * 0xff00\n                    continue\n                # Character set contains non-BMP character codes.\n                if fixup:\n                    hascased = True\n                    # There are only two ranges of cased non-BMP characters:\n                    # 10400-1044F (Deseret) and 118A0-118DF (Warang Citi),\n                    # and for both ranges RANGE_UNI_IGNORE works.\n                    if op is RANGE:\n                        op = RANGE_UNI_IGNORE\n                tail.append((op, av))\n            break\n\n    # compress character map\n    runs = []\n    q = 0\n    while True:\n        p = charmap.find(1, q)\n        if p < 0:\n            break\n        if len(runs) >= 2:\n            runs = None\n            break\n        q = charmap.find(0, p)\n        if q < 0:\n            runs.append((p, len(charmap)))\n            break\n        runs.append((p, q))\n    if runs is not None:\n        # use literal/range\n        for p, q in runs:\n            if q - p == 1:\n                out.append((LITERAL, p))\n            else:\n                out.append((RANGE, (p, q - 1)))\n        out += tail\n        # if the case was changed or new representation is more compact\n        if hascased or len(out) < len(charset):\n            return out, hascased\n        # else original character set is good enough\n        return charset, hascased\n\n    # use bitmap\n    if len(charmap) == 256:\n        data = _mk_bitmap(charmap)\n        out.append((CHARSET, data))\n        out += tail\n        return out, hascased\n\n    # To represent a big charset, first a bitmap of all characters in the\n    # set is constructed. Then, this bitmap is sliced into chunks of 256\n    # characters, duplicate chunks are eliminated, and each chunk is\n    # given a number. In the compiled expression, the charset is\n    # represented by a 32-bit word sequence, consisting of one word for\n    # the number of different chunks, a sequence of 256 bytes (64 words)\n    # of chunk numbers indexed by their original chunk position, and a\n    # sequence of 256-bit chunks (8 words each).\n\n    # Compression is normally good: in a typical charset, large ranges of\n    # Unicode will be either completely excluded (e.g. if only cyrillic\n    # letters are to be matched), or completely included (e.g. if large\n    # subranges of Kanji match). These ranges will be represented by\n    # chunks of all one-bits or all zero-bits.\n\n    # Matching can be also done efficiently: the more significant byte of\n    # the Unicode character is an index into the chunk number, and the\n    # less significant byte is a bit index in the chunk (just like the\n    # CHARSET matching).\n\n    charmap = bytes(charmap) # should be hashable\n    comps = {}\n    mapping = bytearray(256)\n    block = 0\n    data = bytearray()\n    for i in range(0, 65536, 256):\n        chunk = charmap[i: i + 256]\n        if chunk in comps:\n            mapping[i // 256] = comps[chunk]\n        else:\n            mapping[i // 256] = comps[chunk] = block\n            block += 1\n            data += chunk\n    data = _mk_bitmap(data)\n    data[0:0] = [block] + _bytes_to_codes(mapping)\n    out.append((BIGCHARSET, data))\n    out += tail\n    return out, hascased\n\n_CODEBITS = _sre.CODESIZE * 8\nMAXCODE = (1 << _CODEBITS) - 1\n_BITS_TRANS = b'0' + b'1' * 255\ndef _mk_bitmap(bits, _CODEBITS=_CODEBITS, _int=int):\n    s = bits.translate(_BITS_TRANS)[::-1]\n    return [_int(s[i - _CODEBITS: i], 2)\n            for i in range(len(s), 0, -_CODEBITS)]\n\ndef _bytes_to_codes(b):\n    # Convert block indices to word array\n    a = memoryview(b).cast('I')\n    assert a.itemsize == _sre.CODESIZE\n    assert len(a) * a.itemsize == len(b)\n    return a.tolist()\n\ndef _simple(p):\n    # check if this subpattern is a \"simple\" operator\n    if len(p) != 1:\n        return False\n    op, av = p[0]\n    if op is SUBPATTERN:\n        return av[0] is None and _simple(av[-1])\n    return op in _UNIT_CODES\n\ndef _generate_overlap_table(prefix):\n    \"\"\"\n    Generate an overlap table for the following prefix.\n    An overlap table is a table of the same size as the prefix which\n    informs about the potential self-overlap for each index in the prefix:\n    - if overlap[i] == 0, prefix[i:] can't overlap prefix[0:...]\n    - if overlap[i] == k with 0 < k <= i, prefix[i-k+1:i+1] overlaps with\n      prefix[0:k]\n    \"\"\"\n    table = [0] * len(prefix)\n    for i in range(1, len(prefix)):\n        idx = table[i - 1]\n        while prefix[i] != prefix[idx]:\n            if idx == 0:\n                table[i] = 0\n                break\n            idx = table[idx - 1]\n        else:\n            table[i] = idx + 1\n    return table\n\ndef _get_iscased(flags):\n    if not flags & SRE_FLAG_IGNORECASE:\n        return None\n    elif flags & SRE_FLAG_UNICODE:\n        return _sre.unicode_iscased\n    else:\n        return _sre.ascii_iscased\n\ndef _get_literal_prefix(pattern, flags):\n    # look for literal prefix\n    prefix = []\n    prefixappend = prefix.append\n    prefix_skip = None\n    iscased = _get_iscased(flags)\n    for op, av in pattern.data:\n        if op is LITERAL:\n            if iscased and iscased(av):\n                break\n            prefixappend(av)\n        elif op is SUBPATTERN:\n            group, add_flags, del_flags, p = av\n            flags1 = _combine_flags(flags, add_flags, del_flags)\n            if flags1 & SRE_FLAG_IGNORECASE and flags1 & SRE_FLAG_LOCALE:\n                break\n            prefix1, prefix_skip1, got_all = _get_literal_prefix(p, flags1)\n            if prefix_skip is None:\n                if group is not None:\n                    prefix_skip = len(prefix)\n                elif prefix_skip1 is not None:\n                    prefix_skip = len(prefix) + prefix_skip1\n            prefix.extend(prefix1)\n            if not got_all:\n                break\n        else:\n            break\n    else:\n        return prefix, prefix_skip, True\n    return prefix, prefix_skip, False\n\ndef _get_charset_prefix(pattern, flags):\n    while True:\n        if not pattern.data:\n            return None\n        op, av = pattern.data[0]\n        if op is not SUBPATTERN:\n            break\n        group, add_flags, del_flags, pattern = av\n        flags = _combine_flags(flags, add_flags, del_flags)\n        if flags & SRE_FLAG_IGNORECASE and flags & SRE_FLAG_LOCALE:\n            return None\n\n    iscased = _get_iscased(flags)\n    if op is LITERAL:\n        if iscased and iscased(av):\n            return None\n        return [(op, av)]\n    elif op is BRANCH:\n        charset = []\n        charsetappend = charset.append\n        for p in av[1]:\n            if not p:\n                return None\n            op, av = p[0]\n            if op is LITERAL and not (iscased and iscased(av)):\n                charsetappend((op, av))\n            else:\n                return None\n        return charset\n    elif op is IN:\n        charset = av\n        if iscased:\n            for op, av in charset:\n                if op is LITERAL:\n                    if iscased(av):\n                        return None\n                elif op is RANGE:\n                    if av[1] > 0xffff:\n                        return None\n                    if any(map(iscased, range(av[0], av[1]+1))):\n                        return None\n        return charset\n    return None\n\ndef _compile_info(code, pattern, flags):\n    # internal: compile an info block.  in the current version,\n    # this contains min/max pattern width, and an optional literal\n    # prefix or a character map\n    lo, hi = pattern.getwidth()\n    if hi > MAXCODE:\n        hi = MAXCODE\n    if lo == 0:\n        code.extend([INFO, 4, 0, lo, hi])\n        return\n    # look for a literal prefix\n    prefix = []\n    prefix_skip = 0\n    charset = [] # not used\n    if not (flags & SRE_FLAG_IGNORECASE and flags & SRE_FLAG_LOCALE):\n        # look for literal prefix\n        prefix, prefix_skip, got_all = _get_literal_prefix(pattern, flags)\n        # if no prefix, look for charset prefix\n        if not prefix:\n            charset = _get_charset_prefix(pattern, flags)\n##     if prefix:\n##         print(\"*** PREFIX\", prefix, prefix_skip)\n##     if charset:\n##         print(\"*** CHARSET\", charset)\n    # add an info block\n    emit = code.append\n    emit(INFO)\n    skip = len(code); emit(0)\n    # literal flag\n    mask = 0\n    if prefix:\n        mask = SRE_INFO_PREFIX\n        if prefix_skip is None and got_all:\n            mask = mask | SRE_INFO_LITERAL\n    elif charset:\n        mask = mask | SRE_INFO_CHARSET\n    emit(mask)\n    # pattern length\n    if lo < MAXCODE:\n        emit(lo)\n    else:\n        emit(MAXCODE)\n        prefix = prefix[:MAXCODE]\n    emit(min(hi, MAXCODE))\n    # add literal prefix\n    if prefix:\n        emit(len(prefix)) # length\n        if prefix_skip is None:\n            prefix_skip =  len(prefix)\n        emit(prefix_skip) # skip\n        code.extend(prefix)\n        # generate overlap table\n        code.extend(_generate_overlap_table(prefix))\n    elif charset:\n        charset, hascased = _optimize_charset(charset)\n        assert not hascased\n        _compile_charset(charset, flags, code)\n    code[skip] = len(code) - skip\n\ndef isstring(obj):\n    return isinstance(obj, (str, bytes))\n\ndef _code(p, flags):\n\n    flags = p.state.flags | flags\n    code = []\n\n    # compile info block\n    _compile_info(code, p, flags)\n\n    # compile the pattern\n    _compile(code, p.data, flags)\n\n    code.append(SUCCESS)\n\n    return code\n\ndef _hex_code(code):\n    return '[%s]' % ', '.join('%#0*x' % (_sre.CODESIZE*2+2, x) for x in code)\n\ndef dis(code):\n    import sys\n\n    labels = set()\n    level = 0\n    offset_width = len(str(len(code) - 1))\n\n    def dis_(start, end):\n        def print_(*args, to=None):\n            if to is not None:\n                labels.add(to)\n                args += ('(to %d)' % (to,),)\n            print('%*d%s ' % (offset_width, start, ':' if start in labels else '.'),\n                  end='  '*(level-1))\n            print(*args)\n\n        def print_2(*args):\n            print(end=' '*(offset_width + 2*level))\n            print(*args)\n\n        nonlocal level\n        level += 1\n        i = start\n        while i < end:\n            start = i\n            op = code[i]\n            i += 1\n            op = OPCODES[op]\n            if op in (SUCCESS, FAILURE, ANY, ANY_ALL,\n                      MAX_UNTIL, MIN_UNTIL, NEGATE):\n                print_(op)\n            elif op in (LITERAL, NOT_LITERAL,\n                        LITERAL_IGNORE, NOT_LITERAL_IGNORE,\n                        LITERAL_UNI_IGNORE, NOT_LITERAL_UNI_IGNORE,\n                        LITERAL_LOC_IGNORE, NOT_LITERAL_LOC_IGNORE):\n                arg = code[i]\n                i += 1\n                print_(op, '%#02x (%r)' % (arg, chr(arg)))\n            elif op is AT:\n                arg = code[i]\n                i += 1\n                arg = str(ATCODES[arg])\n                assert arg[:3] == 'AT_'\n                print_(op, arg[3:])\n            elif op is CATEGORY:\n                arg = code[i]\n                i += 1\n                arg = str(CHCODES[arg])\n                assert arg[:9] == 'CATEGORY_'\n                print_(op, arg[9:])\n            elif op in (IN, IN_IGNORE, IN_UNI_IGNORE, IN_LOC_IGNORE):\n                skip = code[i]\n                print_(op, skip, to=i+skip)\n                dis_(i+1, i+skip)\n                i += skip\n            elif op in (RANGE, RANGE_UNI_IGNORE):\n                lo, hi = code[i: i+2]\n                i += 2\n                print_(op, '%#02x %#02x (%r-%r)' % (lo, hi, chr(lo), chr(hi)))\n            elif op is CHARSET:\n                print_(op, _hex_code(code[i: i + 256//_CODEBITS]))\n                i += 256//_CODEBITS\n            elif op is BIGCHARSET:\n                arg = code[i]\n                i += 1\n                mapping = list(b''.join(x.to_bytes(_sre.CODESIZE, sys.byteorder)\n                                        for x in code[i: i + 256//_sre.CODESIZE]))\n                print_(op, arg, mapping)\n                i += 256//_sre.CODESIZE\n                level += 1\n                for j in range(arg):\n                    print_2(_hex_code(code[i: i + 256//_CODEBITS]))\n                    i += 256//_CODEBITS\n                level -= 1\n            elif op in (MARK, GROUPREF, GROUPREF_IGNORE, GROUPREF_UNI_IGNORE,\n                        GROUPREF_LOC_IGNORE):\n                arg = code[i]\n                i += 1\n                print_(op, arg)\n            elif op is JUMP:\n                skip = code[i]\n                print_(op, skip, to=i+skip)\n                i += 1\n            elif op is BRANCH:\n                skip = code[i]\n                print_(op, skip, to=i+skip)\n                while skip:\n                    dis_(i+1, i+skip)\n                    i += skip\n                    start = i\n                    skip = code[i]\n                    if skip:\n                        print_('branch', skip, to=i+skip)\n                    else:\n                        print_(FAILURE)\n                i += 1\n            elif op in (REPEAT, REPEAT_ONE, MIN_REPEAT_ONE):\n                skip, min, max = code[i: i+3]\n                if max == MAXREPEAT:\n                    max = 'MAXREPEAT'\n                print_(op, skip, min, max, to=i+skip)\n                dis_(i+3, i+skip)\n                i += skip\n            elif op is GROUPREF_EXISTS:\n                arg, skip = code[i: i+2]\n                print_(op, arg, skip, to=i+skip)\n                i += 2\n            elif op in (ASSERT, ASSERT_NOT):\n                skip, arg = code[i: i+2]\n                print_(op, skip, arg, to=i+skip)\n                dis_(i+2, i+skip)\n                i += skip\n            elif op is INFO:\n                skip, flags, min, max = code[i: i+4]\n                if max == MAXREPEAT:\n                    max = 'MAXREPEAT'\n                print_(op, skip, bin(flags), min, max, to=i+skip)\n                start = i+4\n                if flags & SRE_INFO_PREFIX:\n                    prefix_len, prefix_skip = code[i+4: i+6]\n                    print_2('  prefix_skip', prefix_skip)\n                    start = i + 6\n                    prefix = code[start: start+prefix_len]\n                    print_2('  prefix',\n                            '[%s]' % ', '.join('%#02x' % x for x in prefix),\n                            '(%r)' % ''.join(map(chr, prefix)))\n                    start += prefix_len\n                    print_2('  overlap', code[start: start+prefix_len])\n                    start += prefix_len\n                if flags & SRE_INFO_CHARSET:\n                    level += 1\n                    print_2('in')\n                    dis_(start, i+skip)\n                    level -= 1\n                i += skip\n            else:\n                raise ValueError(op)\n\n        level -= 1\n\n    dis_(0, len(code))\n\n\ndef compile(p, flags=0):\n    # internal: convert pattern list to internal format\n\n    if isstring(p):\n        pattern = p\n        p = sre_parse.parse(p, flags)\n    else:\n        pattern = None\n\n    code = _code(p, flags)\n\n    if flags & SRE_FLAG_DEBUG:\n        print()\n        dis(code)\n\n    # map in either direction\n    groupindex = p.state.groupdict\n    indexgroup = [None] * p.state.groups\n    for k, i in groupindex.items():\n        indexgroup[i] = k\n\n    return _sre.compile(\n        pattern, flags | p.state.flags, code,\n        p.state.groups-1,\n        groupindex, tuple(indexgroup)\n        )\n", 784], "C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py": ["#\n# Secret Labs' Regular Expression Engine\n#\n# convert re-style regular expression to sre pattern\n#\n# Copyright (c) 1998-2001 by Secret Labs AB.  All rights reserved.\n#\n# See the sre.py file for information on usage and redistribution.\n#\n\n\"\"\"Internal support module for sre\"\"\"\n\n# XXX: show string offset and offending character for all errors\n\nfrom sre_constants import *\n\nSPECIAL_CHARS = \".\\\\[{()*+?^$|\"\nREPEAT_CHARS = \"*+?{\"\n\nDIGITS = frozenset(\"0123456789\")\n\nOCTDIGITS = frozenset(\"01234567\")\nHEXDIGITS = frozenset(\"0123456789abcdefABCDEF\")\nASCIILETTERS = frozenset(\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\")\n\nWHITESPACE = frozenset(\" \\t\\n\\r\\v\\f\")\n\n_REPEATCODES = frozenset({MIN_REPEAT, MAX_REPEAT})\n_UNITCODES = frozenset({ANY, RANGE, IN, LITERAL, NOT_LITERAL, CATEGORY})\n\nESCAPES = {\n    r\"\\a\": (LITERAL, ord(\"\\a\")),\n    r\"\\b\": (LITERAL, ord(\"\\b\")),\n    r\"\\f\": (LITERAL, ord(\"\\f\")),\n    r\"\\n\": (LITERAL, ord(\"\\n\")),\n    r\"\\r\": (LITERAL, ord(\"\\r\")),\n    r\"\\t\": (LITERAL, ord(\"\\t\")),\n    r\"\\v\": (LITERAL, ord(\"\\v\")),\n    r\"\\\\\": (LITERAL, ord(\"\\\\\"))\n}\n\nCATEGORIES = {\n    r\"\\A\": (AT, AT_BEGINNING_STRING), # start of string\n    r\"\\b\": (AT, AT_BOUNDARY),\n    r\"\\B\": (AT, AT_NON_BOUNDARY),\n    r\"\\d\": (IN, [(CATEGORY, CATEGORY_DIGIT)]),\n    r\"\\D\": (IN, [(CATEGORY, CATEGORY_NOT_DIGIT)]),\n    r\"\\s\": (IN, [(CATEGORY, CATEGORY_SPACE)]),\n    r\"\\S\": (IN, [(CATEGORY, CATEGORY_NOT_SPACE)]),\n    r\"\\w\": (IN, [(CATEGORY, CATEGORY_WORD)]),\n    r\"\\W\": (IN, [(CATEGORY, CATEGORY_NOT_WORD)]),\n    r\"\\Z\": (AT, AT_END_STRING), # end of string\n}\n\nFLAGS = {\n    # standard flags\n    \"i\": SRE_FLAG_IGNORECASE,\n    \"L\": SRE_FLAG_LOCALE,\n    \"m\": SRE_FLAG_MULTILINE,\n    \"s\": SRE_FLAG_DOTALL,\n    \"x\": SRE_FLAG_VERBOSE,\n    # extensions\n    \"a\": SRE_FLAG_ASCII,\n    \"t\": SRE_FLAG_TEMPLATE,\n    \"u\": SRE_FLAG_UNICODE,\n}\n\nTYPE_FLAGS = SRE_FLAG_ASCII | SRE_FLAG_LOCALE | SRE_FLAG_UNICODE\nGLOBAL_FLAGS = SRE_FLAG_DEBUG | SRE_FLAG_TEMPLATE\n\nclass Verbose(Exception):\n    pass\n\nclass State:\n    # keeps track of state for parsing\n    def __init__(self):\n        self.flags = 0\n        self.groupdict = {}\n        self.groupwidths = [None]  # group 0\n        self.lookbehindgroups = None\n    @property\n    def groups(self):\n        return len(self.groupwidths)\n    def opengroup(self, name=None):\n        gid = self.groups\n        self.groupwidths.append(None)\n        if self.groups > MAXGROUPS:\n            raise error(\"too many groups\")\n        if name is not None:\n            ogid = self.groupdict.get(name, None)\n            if ogid is not None:\n                raise error(\"redefinition of group name %r as group %d; \"\n                            \"was group %d\" % (name, gid,  ogid))\n            self.groupdict[name] = gid\n        return gid\n    def closegroup(self, gid, p):\n        self.groupwidths[gid] = p.getwidth()\n    def checkgroup(self, gid):\n        return gid < self.groups and self.groupwidths[gid] is not None\n\n    def checklookbehindgroup(self, gid, source):\n        if self.lookbehindgroups is not None:\n            if not self.checkgroup(gid):\n                raise source.error('cannot refer to an open group')\n            if gid >= self.lookbehindgroups:\n                raise source.error('cannot refer to group defined in the same '\n                                   'lookbehind subpattern')\n\nclass SubPattern:\n    # a subpattern, in intermediate form\n    def __init__(self, state, data=None):\n        self.state = state\n        if data is None:\n            data = []\n        self.data = data\n        self.width = None\n\n    def dump(self, level=0):\n        nl = True\n        seqtypes = (tuple, list)\n        for op, av in self.data:\n            print(level*\"  \" + str(op), end='')\n            if op is IN:\n                # member sublanguage\n                print()\n                for op, a in av:\n                    print((level+1)*\"  \" + str(op), a)\n            elif op is BRANCH:\n                print()\n                for i, a in enumerate(av[1]):\n                    if i:\n                        print(level*\"  \" + \"OR\")\n                    a.dump(level+1)\n            elif op is GROUPREF_EXISTS:\n                condgroup, item_yes, item_no = av\n                print('', condgroup)\n                item_yes.dump(level+1)\n                if item_no:\n                    print(level*\"  \" + \"ELSE\")\n                    item_no.dump(level+1)\n            elif isinstance(av, seqtypes):\n                nl = False\n                for a in av:\n                    if isinstance(a, SubPattern):\n                        if not nl:\n                            print()\n                        a.dump(level+1)\n                        nl = True\n                    else:\n                        if not nl:\n                            print(' ', end='')\n                        print(a, end='')\n                        nl = False\n                if not nl:\n                    print()\n            else:\n                print('', av)\n    def __repr__(self):\n        return repr(self.data)\n    def __len__(self):\n        return len(self.data)\n    def __delitem__(self, index):\n        del self.data[index]\n    def __getitem__(self, index):\n        if isinstance(index, slice):\n            return SubPattern(self.state, self.data[index])\n        return self.data[index]\n    def __setitem__(self, index, code):\n        self.data[index] = code\n    def insert(self, index, code):\n        self.data.insert(index, code)\n    def append(self, code):\n        self.data.append(code)\n    def getwidth(self):\n        # determine the width (min, max) for this subpattern\n        if self.width is not None:\n            return self.width\n        lo = hi = 0\n        for op, av in self.data:\n            if op is BRANCH:\n                i = MAXREPEAT - 1\n                j = 0\n                for av in av[1]:\n                    l, h = av.getwidth()\n                    i = min(i, l)\n                    j = max(j, h)\n                lo = lo + i\n                hi = hi + j\n            elif op is CALL:\n                i, j = av.getwidth()\n                lo = lo + i\n                hi = hi + j\n            elif op is SUBPATTERN:\n                i, j = av[-1].getwidth()\n                lo = lo + i\n                hi = hi + j\n            elif op in _REPEATCODES:\n                i, j = av[2].getwidth()\n                lo = lo + i * av[0]\n                hi = hi + j * av[1]\n            elif op in _UNITCODES:\n                lo = lo + 1\n                hi = hi + 1\n            elif op is GROUPREF:\n                i, j = self.state.groupwidths[av]\n                lo = lo + i\n                hi = hi + j\n            elif op is GROUPREF_EXISTS:\n                i, j = av[1].getwidth()\n                if av[2] is not None:\n                    l, h = av[2].getwidth()\n                    i = min(i, l)\n                    j = max(j, h)\n                else:\n                    i = 0\n                lo = lo + i\n                hi = hi + j\n            elif op is SUCCESS:\n                break\n        self.width = min(lo, MAXREPEAT - 1), min(hi, MAXREPEAT)\n        return self.width\n\nclass Tokenizer:\n    def __init__(self, string):\n        self.istext = isinstance(string, str)\n        self.string = string\n        if not self.istext:\n            string = str(string, 'latin1')\n        self.decoded_string = string\n        self.index = 0\n        self.next = None\n        self.__next()\n    def __next(self):\n        index = self.index\n        try:\n            char = self.decoded_string[index]\n        except IndexError:\n            self.next = None\n            return\n        if char == \"\\\\\":\n            index += 1\n            try:\n                char += self.decoded_string[index]\n            except IndexError:\n                raise error(\"bad escape (end of pattern)\",\n                            self.string, len(self.string) - 1) from None\n        self.index = index + 1\n        self.next = char\n    def match(self, char):\n        if char == self.next:\n            self.__next()\n            return True\n        return False\n    def get(self):\n        this = self.next\n        self.__next()\n        return this\n    def getwhile(self, n, charset):\n        result = ''\n        for _ in range(n):\n            c = self.next\n            if c not in charset:\n                break\n            result += c\n            self.__next()\n        return result\n    def getuntil(self, terminator, name):\n        result = ''\n        while True:\n            c = self.next\n            self.__next()\n            if c is None:\n                if not result:\n                    raise self.error(\"missing \" + name)\n                raise self.error(\"missing %s, unterminated name\" % terminator,\n                                 len(result))\n            if c == terminator:\n                if not result:\n                    raise self.error(\"missing \" + name, 1)\n                break\n            result += c\n        return result\n    @property\n    def pos(self):\n        return self.index - len(self.next or '')\n    def tell(self):\n        return self.index - len(self.next or '')\n    def seek(self, index):\n        self.index = index\n        self.__next()\n\n    def error(self, msg, offset=0):\n        return error(msg, self.string, self.tell() - offset)\n\ndef _class_escape(source, escape):\n    # handle escape code inside character class\n    code = ESCAPES.get(escape)\n    if code:\n        return code\n    code = CATEGORIES.get(escape)\n    if code and code[0] is IN:\n        return code\n    try:\n        c = escape[1:2]\n        if c == \"x\":\n            # hexadecimal escape (exactly two digits)\n            escape += source.getwhile(2, HEXDIGITS)\n            if len(escape) != 4:\n                raise source.error(\"incomplete escape %s\" % escape, len(escape))\n            return LITERAL, int(escape[2:], 16)\n        elif c == \"u\" and source.istext:\n            # unicode escape (exactly four digits)\n            escape += source.getwhile(4, HEXDIGITS)\n            if len(escape) != 6:\n                raise source.error(\"incomplete escape %s\" % escape, len(escape))\n            return LITERAL, int(escape[2:], 16)\n        elif c == \"U\" and source.istext:\n            # unicode escape (exactly eight digits)\n            escape += source.getwhile(8, HEXDIGITS)\n            if len(escape) != 10:\n                raise source.error(\"incomplete escape %s\" % escape, len(escape))\n            c = int(escape[2:], 16)\n            chr(c) # raise ValueError for invalid code\n            return LITERAL, c\n        elif c == \"N\" and source.istext:\n            import unicodedata\n            # named unicode escape e.g. \\N{EM DASH}\n            if not source.match('{'):\n                raise source.error(\"missing {\")\n            charname = source.getuntil('}', 'character name')\n            try:\n                c = ord(unicodedata.lookup(charname))\n            except KeyError:\n                raise source.error(\"undefined character name %r\" % charname,\n                                   len(charname) + len(r'\\N{}'))\n            return LITERAL, c\n        elif c in OCTDIGITS:\n            # octal escape (up to three digits)\n            escape += source.getwhile(2, OCTDIGITS)\n            c = int(escape[1:], 8)\n            if c > 0o377:\n                raise source.error('octal escape value %s outside of '\n                                   'range 0-0o377' % escape, len(escape))\n            return LITERAL, c\n        elif c in DIGITS:\n            raise ValueError\n        if len(escape) == 2:\n            if c in ASCIILETTERS:\n                raise source.error('bad escape %s' % escape, len(escape))\n            return LITERAL, ord(escape[1])\n    except ValueError:\n        pass\n    raise source.error(\"bad escape %s\" % escape, len(escape))\n\ndef _escape(source, escape, state):\n    # handle escape code in expression\n    code = CATEGORIES.get(escape)\n    if code:\n        return code\n    code = ESCAPES.get(escape)\n    if code:\n        return code\n    try:\n        c = escape[1:2]\n        if c == \"x\":\n            # hexadecimal escape\n            escape += source.getwhile(2, HEXDIGITS)\n            if len(escape) != 4:\n                raise source.error(\"incomplete escape %s\" % escape, len(escape))\n            return LITERAL, int(escape[2:], 16)\n        elif c == \"u\" and source.istext:\n            # unicode escape (exactly four digits)\n            escape += source.getwhile(4, HEXDIGITS)\n            if len(escape) != 6:\n                raise source.error(\"incomplete escape %s\" % escape, len(escape))\n            return LITERAL, int(escape[2:], 16)\n        elif c == \"U\" and source.istext:\n            # unicode escape (exactly eight digits)\n            escape += source.getwhile(8, HEXDIGITS)\n            if len(escape) != 10:\n                raise source.error(\"incomplete escape %s\" % escape, len(escape))\n            c = int(escape[2:], 16)\n            chr(c) # raise ValueError for invalid code\n            return LITERAL, c\n        elif c == \"N\" and source.istext:\n            import unicodedata\n            # named unicode escape e.g. \\N{EM DASH}\n            if not source.match('{'):\n                raise source.error(\"missing {\")\n            charname = source.getuntil('}', 'character name')\n            try:\n                c = ord(unicodedata.lookup(charname))\n            except KeyError:\n                raise source.error(\"undefined character name %r\" % charname,\n                                   len(charname) + len(r'\\N{}'))\n            return LITERAL, c\n        elif c == \"0\":\n            # octal escape\n            escape += source.getwhile(2, OCTDIGITS)\n            return LITERAL, int(escape[1:], 8)\n        elif c in DIGITS:\n            # octal escape *or* decimal group reference (sigh)\n            if source.next in DIGITS:\n                escape += source.get()\n                if (escape[1] in OCTDIGITS and escape[2] in OCTDIGITS and\n                    source.next in OCTDIGITS):\n                    # got three octal digits; this is an octal escape\n                    escape += source.get()\n                    c = int(escape[1:], 8)\n                    if c > 0o377:\n                        raise source.error('octal escape value %s outside of '\n                                           'range 0-0o377' % escape,\n                                           len(escape))\n                    return LITERAL, c\n            # not an octal escape, so this is a group reference\n            group = int(escape[1:])\n            if group < state.groups:\n                if not state.checkgroup(group):\n                    raise source.error(\"cannot refer to an open group\",\n                                       len(escape))\n                state.checklookbehindgroup(group, source)\n                return GROUPREF, group\n            raise source.error(\"invalid group reference %d\" % group, len(escape) - 1)\n        if len(escape) == 2:\n            if c in ASCIILETTERS:\n                raise source.error(\"bad escape %s\" % escape, len(escape))\n            return LITERAL, ord(escape[1])\n    except ValueError:\n        pass\n    raise source.error(\"bad escape %s\" % escape, len(escape))\n\ndef _uniq(items):\n    return list(dict.fromkeys(items))\n\ndef _parse_sub(source, state, verbose, nested):\n    # parse an alternation: a|b|c\n\n    items = []\n    itemsappend = items.append\n    sourcematch = source.match\n    start = source.tell()\n    while True:\n        itemsappend(_parse(source, state, verbose, nested + 1,\n                           not nested and not items))\n        if not sourcematch(\"|\"):\n            break\n\n    if len(items) == 1:\n        return items[0]\n\n    subpattern = SubPattern(state)\n\n    # check if all items share a common prefix\n    while True:\n        prefix = None\n        for item in items:\n            if not item:\n                break\n            if prefix is None:\n                prefix = item[0]\n            elif item[0] != prefix:\n                break\n        else:\n            # all subitems start with a common \"prefix\".\n            # move it out of the branch\n            for item in items:\n                del item[0]\n            subpattern.append(prefix)\n            continue # check next one\n        break\n\n    # check if the branch can be replaced by a character set\n    set = []\n    for item in items:\n        if len(item) != 1:\n            break\n        op, av = item[0]\n        if op is LITERAL:\n            set.append((op, av))\n        elif op is IN and av[0][0] is not NEGATE:\n            set.extend(av)\n        else:\n            break\n    else:\n        # we can store this as a character set instead of a\n        # branch (the compiler may optimize this even more)\n        subpattern.append((IN, _uniq(set)))\n        return subpattern\n\n    subpattern.append((BRANCH, (None, items)))\n    return subpattern\n\ndef _parse(source, state, verbose, nested, first=False):\n    # parse a simple pattern\n    subpattern = SubPattern(state)\n\n    # precompute constants into local variables\n    subpatternappend = subpattern.append\n    sourceget = source.get\n    sourcematch = source.match\n    _len = len\n    _ord = ord\n\n    while True:\n\n        this = source.next\n        if this is None:\n            break # end of pattern\n        if this in \"|)\":\n            break # end of subpattern\n        sourceget()\n\n        if verbose:\n            # skip whitespace and comments\n            if this in WHITESPACE:\n                continue\n            if this == \"#\":\n                while True:\n                    this = sourceget()\n                    if this is None or this == \"\\n\":\n                        break\n                continue\n\n        if this[0] == \"\\\\\":\n            code = _escape(source, this, state)\n            subpatternappend(code)\n\n        elif this not in SPECIAL_CHARS:\n            subpatternappend((LITERAL, _ord(this)))\n\n        elif this == \"[\":\n            here = source.tell() - 1\n            # character set\n            set = []\n            setappend = set.append\n##          if sourcematch(\":\"):\n##              pass # handle character classes\n            if source.next == '[':\n                import warnings\n                warnings.warn(\n                    'Possible nested set at position %d' % source.tell(),\n                    FutureWarning, stacklevel=nested + 6\n                )\n            negate = sourcematch(\"^\")\n            # check remaining characters\n            while True:\n                this = sourceget()\n                if this is None:\n                    raise source.error(\"unterminated character set\",\n                                       source.tell() - here)\n                if this == \"]\" and set:\n                    break\n                elif this[0] == \"\\\\\":\n                    code1 = _class_escape(source, this)\n                else:\n                    if set and this in '-&~|' and source.next == this:\n                        import warnings\n                        warnings.warn(\n                            'Possible set %s at position %d' % (\n                                'difference' if this == '-' else\n                                'intersection' if this == '&' else\n                                'symmetric difference' if this == '~' else\n                                'union',\n                                source.tell() - 1),\n                            FutureWarning, stacklevel=nested + 6\n                        )\n                    code1 = LITERAL, _ord(this)\n                if sourcematch(\"-\"):\n                    # potential range\n                    that = sourceget()\n                    if that is None:\n                        raise source.error(\"unterminated character set\",\n                                           source.tell() - here)\n                    if that == \"]\":\n                        if code1[0] is IN:\n                            code1 = code1[1][0]\n                        setappend(code1)\n                        setappend((LITERAL, _ord(\"-\")))\n                        break\n                    if that[0] == \"\\\\\":\n                        code2 = _class_escape(source, that)\n                    else:\n                        if that == '-':\n                            import warnings\n                            warnings.warn(\n                                'Possible set difference at position %d' % (\n                                    source.tell() - 2),\n                                FutureWarning, stacklevel=nested + 6\n                            )\n                        code2 = LITERAL, _ord(that)\n                    if code1[0] != LITERAL or code2[0] != LITERAL:\n                        msg = \"bad character range %s-%s\" % (this, that)\n                        raise source.error(msg, len(this) + 1 + len(that))\n                    lo = code1[1]\n                    hi = code2[1]\n                    if hi < lo:\n                        msg = \"bad character range %s-%s\" % (this, that)\n                        raise source.error(msg, len(this) + 1 + len(that))\n                    setappend((RANGE, (lo, hi)))\n                else:\n                    if code1[0] is IN:\n                        code1 = code1[1][0]\n                    setappend(code1)\n\n            set = _uniq(set)\n            # XXX: <fl> should move set optimization to compiler!\n            if _len(set) == 1 and set[0][0] is LITERAL:\n                # optimization\n                if negate:\n                    subpatternappend((NOT_LITERAL, set[0][1]))\n                else:\n                    subpatternappend(set[0])\n            else:\n                if negate:\n                    set.insert(0, (NEGATE, None))\n                # charmap optimization can't be added here because\n                # global flags still are not known\n                subpatternappend((IN, set))\n\n        elif this in REPEAT_CHARS:\n            # repeat previous item\n            here = source.tell()\n            if this == \"?\":\n                min, max = 0, 1\n            elif this == \"*\":\n                min, max = 0, MAXREPEAT\n\n            elif this == \"+\":\n                min, max = 1, MAXREPEAT\n            elif this == \"{\":\n                if source.next == \"}\":\n                    subpatternappend((LITERAL, _ord(this)))\n                    continue\n\n                min, max = 0, MAXREPEAT\n                lo = hi = \"\"\n                while source.next in DIGITS:\n                    lo += sourceget()\n                if sourcematch(\",\"):\n                    while source.next in DIGITS:\n                        hi += sourceget()\n                else:\n                    hi = lo\n                if not sourcematch(\"}\"):\n                    subpatternappend((LITERAL, _ord(this)))\n                    source.seek(here)\n                    continue\n\n                if lo:\n                    min = int(lo)\n                    if min >= MAXREPEAT:\n                        raise OverflowError(\"the repetition number is too large\")\n                if hi:\n                    max = int(hi)\n                    if max >= MAXREPEAT:\n                        raise OverflowError(\"the repetition number is too large\")\n                    if max < min:\n                        raise source.error(\"min repeat greater than max repeat\",\n                                           source.tell() - here)\n            else:\n                raise AssertionError(\"unsupported quantifier %r\" % (char,))\n            # figure out which item to repeat\n            if subpattern:\n                item = subpattern[-1:]\n            else:\n                item = None\n            if not item or item[0][0] is AT:\n                raise source.error(\"nothing to repeat\",\n                                   source.tell() - here + len(this))\n            if item[0][0] in _REPEATCODES:\n                raise source.error(\"multiple repeat\",\n                                   source.tell() - here + len(this))\n            if item[0][0] is SUBPATTERN:\n                group, add_flags, del_flags, p = item[0][1]\n                if group is None and not add_flags and not del_flags:\n                    item = p\n            if sourcematch(\"?\"):\n                subpattern[-1] = (MIN_REPEAT, (min, max, item))\n            else:\n                subpattern[-1] = (MAX_REPEAT, (min, max, item))\n\n        elif this == \".\":\n            subpatternappend((ANY, None))\n\n        elif this == \"(\":\n            start = source.tell() - 1\n            group = True\n            name = None\n            add_flags = 0\n            del_flags = 0\n            if sourcematch(\"?\"):\n                # options\n                char = sourceget()\n                if char is None:\n                    raise source.error(\"unexpected end of pattern\")\n                if char == \"P\":\n                    # python extensions\n                    if sourcematch(\"<\"):\n                        # named group: skip forward to end of name\n                        name = source.getuntil(\">\", \"group name\")\n                        if not name.isidentifier():\n                            msg = \"bad character in group name %r\" % name\n                            raise source.error(msg, len(name) + 1)\n                    elif sourcematch(\"=\"):\n                        # named backreference\n                        name = source.getuntil(\")\", \"group name\")\n                        if not name.isidentifier():\n                            msg = \"bad character in group name %r\" % name\n                            raise source.error(msg, len(name) + 1)\n                        gid = state.groupdict.get(name)\n                        if gid is None:\n                            msg = \"unknown group name %r\" % name\n                            raise source.error(msg, len(name) + 1)\n                        if not state.checkgroup(gid):\n                            raise source.error(\"cannot refer to an open group\",\n                                               len(name) + 1)\n                        state.checklookbehindgroup(gid, source)\n                        subpatternappend((GROUPREF, gid))\n                        continue\n\n                    else:\n                        char = sourceget()\n                        if char is None:\n                            raise source.error(\"unexpected end of pattern\")\n                        raise source.error(\"unknown extension ?P\" + char,\n                                           len(char) + 2)\n                elif char == \":\":\n                    # non-capturing group\n                    group = None\n                elif char == \"#\":\n                    # comment\n                    while True:\n                        if source.next is None:\n                            raise source.error(\"missing ), unterminated comment\",\n                                               source.tell() - start)\n                        if sourceget() == \")\":\n                            break\n                    continue\n\n                elif char in \"=!<\":\n                    # lookahead assertions\n                    dir = 1\n                    if char == \"<\":\n                        char = sourceget()\n                        if char is None:\n                            raise source.error(\"unexpected end of pattern\")\n                        if char not in \"=!\":\n                            raise source.error(\"unknown extension ?<\" + char,\n                                               len(char) + 2)\n                        dir = -1 # lookbehind\n                        lookbehindgroups = state.lookbehindgroups\n                        if lookbehindgroups is None:\n                            state.lookbehindgroups = state.groups\n                    p = _parse_sub(source, state, verbose, nested + 1)\n                    if dir < 0:\n                        if lookbehindgroups is None:\n                            state.lookbehindgroups = None\n                    if not sourcematch(\")\"):\n                        raise source.error(\"missing ), unterminated subpattern\",\n                                           source.tell() - start)\n                    if char == \"=\":\n                        subpatternappend((ASSERT, (dir, p)))\n                    else:\n                        subpatternappend((ASSERT_NOT, (dir, p)))\n                    continue\n\n                elif char == \"(\":\n                    # conditional backreference group\n                    condname = source.getuntil(\")\", \"group name\")\n                    if condname.isidentifier():\n                        condgroup = state.groupdict.get(condname)\n                        if condgroup is None:\n                            msg = \"unknown group name %r\" % condname\n                            raise source.error(msg, len(condname) + 1)\n                    else:\n                        try:\n                            condgroup = int(condname)\n                            if condgroup < 0:\n                                raise ValueError\n                        except ValueError:\n                            msg = \"bad character in group name %r\" % condname\n                            raise source.error(msg, len(condname) + 1) from None\n                        if not condgroup:\n                            raise source.error(\"bad group number\",\n                                               len(condname) + 1)\n                        if condgroup >= MAXGROUPS:\n                            msg = \"invalid group reference %d\" % condgroup\n                            raise source.error(msg, len(condname) + 1)\n                    state.checklookbehindgroup(condgroup, source)\n                    item_yes = _parse(source, state, verbose, nested + 1)\n                    if source.match(\"|\"):\n                        item_no = _parse(source, state, verbose, nested + 1)\n                        if source.next == \"|\":\n                            raise source.error(\"conditional backref with more than two branches\")\n                    else:\n                        item_no = None\n                    if not source.match(\")\"):\n                        raise source.error(\"missing ), unterminated subpattern\",\n                                           source.tell() - start)\n                    subpatternappend((GROUPREF_EXISTS, (condgroup, item_yes, item_no)))\n                    continue\n\n                elif char in FLAGS or char == \"-\":\n                    # flags\n                    flags = _parse_flags(source, state, char)\n                    if flags is None:  # global flags\n                        if not first or subpattern:\n                            import warnings\n                            warnings.warn(\n                                'Flags not at the start of the expression %r%s' % (\n                                    source.string[:20],  # truncate long regexes\n                                    ' (truncated)' if len(source.string) > 20 else '',\n                                ),\n                                DeprecationWarning, stacklevel=nested + 6\n                            )\n                        if (state.flags & SRE_FLAG_VERBOSE) and not verbose:\n                            raise Verbose\n                        continue\n\n                    add_flags, del_flags = flags\n                    group = None\n                else:\n                    raise source.error(\"unknown extension ?\" + char,\n                                       len(char) + 1)\n\n            # parse group contents\n            if group is not None:\n                try:\n                    group = state.opengroup(name)\n                except error as err:\n                    raise source.error(err.msg, len(name) + 1) from None\n            sub_verbose = ((verbose or (add_flags & SRE_FLAG_VERBOSE)) and\n                           not (del_flags & SRE_FLAG_VERBOSE))\n            p = _parse_sub(source, state, sub_verbose, nested + 1)\n            if not source.match(\")\"):\n                raise source.error(\"missing ), unterminated subpattern\",\n                                   source.tell() - start)\n            if group is not None:\n                state.closegroup(group, p)\n            subpatternappend((SUBPATTERN, (group, add_flags, del_flags, p)))\n\n        elif this == \"^\":\n            subpatternappend((AT, AT_BEGINNING))\n\n        elif this == \"$\":\n            subpatternappend((AT, AT_END))\n\n        else:\n            raise AssertionError(\"unsupported special character %r\" % (char,))\n\n    # unpack non-capturing groups\n    for i in range(len(subpattern))[::-1]:\n        op, av = subpattern[i]\n        if op is SUBPATTERN:\n            group, add_flags, del_flags, p = av\n            if group is None and not add_flags and not del_flags:\n                subpattern[i: i+1] = p\n\n    return subpattern\n\ndef _parse_flags(source, state, char):\n    sourceget = source.get\n    add_flags = 0\n    del_flags = 0\n    if char != \"-\":\n        while True:\n            flag = FLAGS[char]\n            if source.istext:\n                if char == 'L':\n                    msg = \"bad inline flags: cannot use 'L' flag with a str pattern\"\n                    raise source.error(msg)\n            else:\n                if char == 'u':\n                    msg = \"bad inline flags: cannot use 'u' flag with a bytes pattern\"\n                    raise source.error(msg)\n            add_flags |= flag\n            if (flag & TYPE_FLAGS) and (add_flags & TYPE_FLAGS) != flag:\n                msg = \"bad inline flags: flags 'a', 'u' and 'L' are incompatible\"\n                raise source.error(msg)\n            char = sourceget()\n            if char is None:\n                raise source.error(\"missing -, : or )\")\n            if char in \")-:\":\n                break\n            if char not in FLAGS:\n                msg = \"unknown flag\" if char.isalpha() else \"missing -, : or )\"\n                raise source.error(msg, len(char))\n    if char == \")\":\n        state.flags |= add_flags\n        return None\n    if add_flags & GLOBAL_FLAGS:\n        raise source.error(\"bad inline flags: cannot turn on global flag\", 1)\n    if char == \"-\":\n        char = sourceget()\n        if char is None:\n            raise source.error(\"missing flag\")\n        if char not in FLAGS:\n            msg = \"unknown flag\" if char.isalpha() else \"missing flag\"\n            raise source.error(msg, len(char))\n        while True:\n            flag = FLAGS[char]\n            if flag & TYPE_FLAGS:\n                msg = \"bad inline flags: cannot turn off flags 'a', 'u' and 'L'\"\n                raise source.error(msg)\n            del_flags |= flag\n            char = sourceget()\n            if char is None:\n                raise source.error(\"missing :\")\n            if char == \":\":\n                break\n            if char not in FLAGS:\n                msg = \"unknown flag\" if char.isalpha() else \"missing :\"\n                raise source.error(msg, len(char))\n    assert char == \":\"\n    if del_flags & GLOBAL_FLAGS:\n        raise source.error(\"bad inline flags: cannot turn off global flag\", 1)\n    if add_flags & del_flags:\n        raise source.error(\"bad inline flags: flag turned on and off\", 1)\n    return add_flags, del_flags\n\ndef fix_flags(src, flags):\n    # Check and fix flags according to the type of pattern (str or bytes)\n    if isinstance(src, str):\n        if flags & SRE_FLAG_LOCALE:\n            raise ValueError(\"cannot use LOCALE flag with a str pattern\")\n        if not flags & SRE_FLAG_ASCII:\n            flags |= SRE_FLAG_UNICODE\n        elif flags & SRE_FLAG_UNICODE:\n            raise ValueError(\"ASCII and UNICODE flags are incompatible\")\n    else:\n        if flags & SRE_FLAG_UNICODE:\n            raise ValueError(\"cannot use UNICODE flag with a bytes pattern\")\n        if flags & SRE_FLAG_LOCALE and flags & SRE_FLAG_ASCII:\n            raise ValueError(\"ASCII and LOCALE flags are incompatible\")\n    return flags\n\ndef parse(str, flags=0, state=None):\n    # parse 're' pattern into list of (opcode, argument) tuples\n\n    source = Tokenizer(str)\n\n    if state is None:\n        state = State()\n    state.flags = flags\n    state.str = str\n\n    try:\n        p = _parse_sub(source, state, flags & SRE_FLAG_VERBOSE, 0)\n    except Verbose:\n        # the VERBOSE flag was switched on inside the pattern.  to be\n        # on the safe side, we'll parse the whole thing again...\n        state = State()\n        state.flags = flags | SRE_FLAG_VERBOSE\n        state.str = str\n        source.seek(0)\n        p = _parse_sub(source, state, True, 0)\n\n    p.state.flags = fix_flags(str, p.state.flags)\n\n    if source.next is not None:\n        assert source.next == \")\"\n        raise source.error(\"unbalanced parenthesis\")\n\n    if flags & SRE_FLAG_DEBUG:\n        p.dump()\n\n    return p\n\ndef parse_template(source, state):\n    # parse 're' replacement string into list of literals and\n    # group references\n    s = Tokenizer(source)\n    sget = s.get\n    groups = []\n    literals = []\n    literal = []\n    lappend = literal.append\n    def addgroup(index, pos):\n        if index > state.groups:\n            raise s.error(\"invalid group reference %d\" % index, pos)\n        if literal:\n            literals.append(''.join(literal))\n            del literal[:]\n        groups.append((len(literals), index))\n        literals.append(None)\n    groupindex = state.groupindex\n    while True:\n        this = sget()\n        if this is None:\n            break # end of replacement string\n        if this[0] == \"\\\\\":\n            # group\n            c = this[1]\n            if c == \"g\":\n                name = \"\"\n                if not s.match(\"<\"):\n                    raise s.error(\"missing <\")\n                name = s.getuntil(\">\", \"group name\")\n                if name.isidentifier():\n                    try:\n                        index = groupindex[name]\n                    except KeyError:\n                        raise IndexError(\"unknown group name %r\" % name)\n                else:\n                    try:\n                        index = int(name)\n                        if index < 0:\n                            raise ValueError\n                    except ValueError:\n                        raise s.error(\"bad character in group name %r\" % name,\n                                      len(name) + 1) from None\n                    if index >= MAXGROUPS:\n                        raise s.error(\"invalid group reference %d\" % index,\n                                      len(name) + 1)\n                addgroup(index, len(name) + 1)\n            elif c == \"0\":\n                if s.next in OCTDIGITS:\n                    this += sget()\n                    if s.next in OCTDIGITS:\n                        this += sget()\n                lappend(chr(int(this[1:], 8) & 0xff))\n            elif c in DIGITS:\n                isoctal = False\n                if s.next in DIGITS:\n                    this += sget()\n                    if (c in OCTDIGITS and this[2] in OCTDIGITS and\n                        s.next in OCTDIGITS):\n                        this += sget()\n                        isoctal = True\n                        c = int(this[1:], 8)\n                        if c > 0o377:\n                            raise s.error('octal escape value %s outside of '\n                                          'range 0-0o377' % this, len(this))\n                        lappend(chr(c))\n                if not isoctal:\n                    addgroup(int(this[1:]), len(this) - 1)\n            else:\n                try:\n                    this = chr(ESCAPES[this][1])\n                except KeyError:\n                    if c in ASCIILETTERS:\n                        raise s.error('bad escape %s' % this, len(this))\n                lappend(this)\n        else:\n            lappend(this)\n    if literal:\n        literals.append(''.join(literal))\n    if not isinstance(source, str):\n        # The tokenizer implicitly decodes bytes objects as latin-1, we must\n        # therefore re-encode the final representation.\n        literals = [None if s is None else s.encode('latin-1') for s in literals]\n    return groups, literals\n\ndef expand_template(template, match):\n    g = match.group\n    empty = match.string[:0]\n    groups, literals = template\n    literals = literals[:]\n    try:\n        for index, group in groups:\n            literals[index] = g(group) or empty\n    except IndexError:\n        raise error(\"invalid group reference %d\" % index)\n    return empty.join(literals)\n", 1064], "C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py": ["import sys\nfrom types import MappingProxyType, DynamicClassAttribute\n\n\n__all__ = [\n        'EnumMeta',\n        'Enum', 'IntEnum', 'Flag', 'IntFlag',\n        'auto', 'unique',\n        ]\n\n\ndef _is_descriptor(obj):\n    \"\"\"\n    Returns True if obj is a descriptor, False otherwise.\n    \"\"\"\n    return (\n            hasattr(obj, '__get__') or\n            hasattr(obj, '__set__') or\n            hasattr(obj, '__delete__')\n            )\n\ndef _is_dunder(name):\n    \"\"\"\n    Returns True if a __dunder__ name, False otherwise.\n    \"\"\"\n    return (\n            len(name) > 4 and\n            name[:2] == name[-2:] == '__' and\n            name[2] != '_' and\n            name[-3] != '_'\n            )\n\ndef _is_sunder(name):\n    \"\"\"\n    Returns True if a _sunder_ name, False otherwise.\n    \"\"\"\n    return (\n            len(name) > 2 and\n            name[0] == name[-1] == '_' and\n            name[1:2] != '_' and\n            name[-2:-1] != '_'\n            )\n\ndef _is_private(cls_name, name):\n    # do not use `re` as `re` imports `enum`\n    pattern = '_%s__' % (cls_name, )\n    if (\n            len(name) >= 5\n            and name.startswith(pattern)\n            and name[len(pattern)] != '_'\n            and (name[-1] != '_' or name[-2] != '_')\n        ):\n        return True\n    else:\n        return False\n\ndef _make_class_unpicklable(cls):\n    \"\"\"\n    Make the given class un-picklable.\n    \"\"\"\n    def _break_on_call_reduce(self, proto):\n        raise TypeError('%r cannot be pickled' % self)\n    cls.__reduce_ex__ = _break_on_call_reduce\n    cls.__module__ = '<unknown>'\n\n_auto_null = object()\nclass auto:\n    \"\"\"\n    Instances are replaced with an appropriate value in Enum class suites.\n    \"\"\"\n    value = _auto_null\n\n\nclass _EnumDict(dict):\n    \"\"\"\n    Track enum member order and ensure member names are not reused.\n\n    EnumMeta will use the names found in self._member_names as the\n    enumeration member names.\n    \"\"\"\n    def __init__(self):\n        super().__init__()\n        self._member_names = []\n        self._last_values = []\n        self._ignore = []\n        self._auto_called = False\n\n    def __setitem__(self, key, value):\n        \"\"\"\n        Changes anything not dundered or not a descriptor.\n\n        If an enum member name is used twice, an error is raised; duplicate\n        values are not checked for.\n\n        Single underscore (sunder) names are reserved.\n        \"\"\"\n        if _is_private(self._cls_name, key):\n            import warnings\n            warnings.warn(\n                    \"private variables, such as %r, will be normal attributes in 3.10\"\n                        % (key, ),\n                    DeprecationWarning,\n                    stacklevel=2,\n                    )\n        if _is_sunder(key):\n            if key not in (\n                    '_order_', '_create_pseudo_member_',\n                    '_generate_next_value_', '_missing_', '_ignore_',\n                    ):\n                raise ValueError('_names_ are reserved for future Enum use')\n            if key == '_generate_next_value_':\n                # check if members already defined as auto()\n                if self._auto_called:\n                    raise TypeError(\"_generate_next_value_ must be defined before members\")\n                setattr(self, '_generate_next_value', value)\n            elif key == '_ignore_':\n                if isinstance(value, str):\n                    value = value.replace(',',' ').split()\n                else:\n                    value = list(value)\n                self._ignore = value\n                already = set(value) & set(self._member_names)\n                if already:\n                    raise ValueError(\n                            '_ignore_ cannot specify already set names: %r'\n                            % (already, )\n                            )\n        elif _is_dunder(key):\n            if key == '__order__':\n                key = '_order_'\n        elif key in self._member_names:\n            # descriptor overwriting an enum?\n            raise TypeError('Attempted to reuse key: %r' % key)\n        elif key in self._ignore:\n            pass\n        elif not _is_descriptor(value):\n            if key in self:\n                # enum overwriting a descriptor?\n                raise TypeError('%r already defined as: %r' % (key, self[key]))\n            if isinstance(value, auto):\n                if value.value == _auto_null:\n                    value.value = self._generate_next_value(\n                            key,\n                            1,\n                            len(self._member_names),\n                            self._last_values[:],\n                            )\n                    self._auto_called = True\n                value = value.value\n            self._member_names.append(key)\n            self._last_values.append(value)\n        super().__setitem__(key, value)\n\n\n# Dummy value for Enum as EnumMeta explicitly checks for it, but of course\n# until EnumMeta finishes running the first time the Enum class doesn't exist.\n# This is also why there are checks in EnumMeta like `if Enum is not None`\nEnum = None\n\nclass EnumMeta(type):\n    \"\"\"\n    Metaclass for Enum\n    \"\"\"\n    @classmethod\n    def __prepare__(metacls, cls, bases, **kwds):\n        # check that previous enum members do not exist\n        metacls._check_for_existing_members(cls, bases)\n        # create the namespace dict\n        enum_dict = _EnumDict()\n        enum_dict._cls_name = cls\n        # inherit previous flags and _generate_next_value_ function\n        member_type, first_enum = metacls._get_mixins_(cls, bases)\n        if first_enum is not None:\n            enum_dict['_generate_next_value_'] = getattr(\n                    first_enum, '_generate_next_value_', None,\n                    )\n        return enum_dict\n\n    def __new__(metacls, cls, bases, classdict, **kwds):\n        # an Enum class is final once enumeration items have been defined; it\n        # cannot be mixed with other types (int, float, etc.) if it has an\n        # inherited __new__ unless a new __new__ is defined (or the resulting\n        # class will fail).\n        #\n        # remove any keys listed in _ignore_\n        classdict.setdefault('_ignore_', []).append('_ignore_')\n        ignore = classdict['_ignore_']\n        for key in ignore:\n            classdict.pop(key, None)\n        member_type, first_enum = metacls._get_mixins_(cls, bases)\n        __new__, save_new, use_args = metacls._find_new_(\n                classdict, member_type, first_enum,\n                )\n\n        # save enum items into separate mapping so they don't get baked into\n        # the new class\n        enum_members = {k: classdict[k] for k in classdict._member_names}\n        for name in classdict._member_names:\n            del classdict[name]\n\n        # adjust the sunders\n        _order_ = classdict.pop('_order_', None)\n\n        # check for illegal enum names (any others?)\n        invalid_names = set(enum_members) & {'mro', ''}\n        if invalid_names:\n            raise ValueError('Invalid enum member name: {0}'.format(\n                ','.join(invalid_names)))\n\n        # create a default docstring if one has not been provided\n        if '__doc__' not in classdict:\n            classdict['__doc__'] = 'An enumeration.'\n\n        enum_class = super().__new__(metacls, cls, bases, classdict, **kwds)\n        enum_class._member_names_ = []               # names in definition order\n        enum_class._member_map_ = {}                 # name->value map\n        enum_class._member_type_ = member_type\n\n        # save DynamicClassAttribute attributes from super classes so we know\n        # if we can take the shortcut of storing members in the class dict\n        dynamic_attributes = {\n                k for c in enum_class.mro()\n                for k, v in c.__dict__.items()\n                if isinstance(v, DynamicClassAttribute)\n                }\n\n        # Reverse value->name map for hashable values.\n        enum_class._value2member_map_ = {}\n\n        # If a custom type is mixed into the Enum, and it does not know how\n        # to pickle itself, pickle.dumps will succeed but pickle.loads will\n        # fail.  Rather than have the error show up later and possibly far\n        # from the source, sabotage the pickle protocol for this class so\n        # that pickle.dumps also fails.\n        #\n        # However, if the new class implements its own __reduce_ex__, do not\n        # sabotage -- it's on them to make sure it works correctly.  We use\n        # __reduce_ex__ instead of any of the others as it is preferred by\n        # pickle over __reduce__, and it handles all pickle protocols.\n        if '__reduce_ex__' not in classdict:\n            if member_type is not object:\n                methods = ('__getnewargs_ex__', '__getnewargs__',\n                        '__reduce_ex__', '__reduce__')\n                if not any(m in member_type.__dict__ for m in methods):\n                    if '__new__' in classdict:\n                        # too late, sabotage\n                        _make_class_unpicklable(enum_class)\n                    else:\n                        # final attempt to verify that pickling would work:\n                        # travel mro until __new__ is found, checking for\n                        # __reduce__ and friends along the way -- if any of them\n                        # are found before/when __new__ is found, pickling should\n                        # work\n                        sabotage = None\n                        for chain in bases:\n                            for base in chain.__mro__:\n                                if base is object:\n                                    continue\n                                elif any(m in base.__dict__ for m in methods):\n                                    # found one, we're good\n                                    sabotage = False\n                                    break\n                                elif '__new__' in base.__dict__:\n                                    # not good\n                                    sabotage = True\n                                    break\n                            if sabotage is not None:\n                                break\n                        if sabotage:\n                            _make_class_unpicklable(enum_class)\n        # instantiate them, checking for duplicates as we go\n        # we instantiate first instead of checking for duplicates first in case\n        # a custom __new__ is doing something funky with the values -- such as\n        # auto-numbering ;)\n        for member_name in classdict._member_names:\n            value = enum_members[member_name]\n            if not isinstance(value, tuple):\n                args = (value, )\n            else:\n                args = value\n            if member_type is tuple:   # special case for tuple enums\n                args = (args, )     # wrap it one more time\n            if not use_args:\n                enum_member = __new__(enum_class)\n                if not hasattr(enum_member, '_value_'):\n                    enum_member._value_ = value\n            else:\n                enum_member = __new__(enum_class, *args)\n                if not hasattr(enum_member, '_value_'):\n                    if member_type is object:\n                        enum_member._value_ = value\n                    else:\n                        enum_member._value_ = member_type(*args)\n            value = enum_member._value_\n            enum_member._name_ = member_name\n            enum_member.__objclass__ = enum_class\n            enum_member.__init__(*args)\n            # If another member with the same value was already defined, the\n            # new member becomes an alias to the existing one.\n            for name, canonical_member in enum_class._member_map_.items():\n                if canonical_member._value_ == enum_member._value_:\n                    enum_member = canonical_member\n                    break\n            else:\n                # Aliases don't appear in member names (only in __members__).\n                enum_class._member_names_.append(member_name)\n            # performance boost for any member that would not shadow\n            # a DynamicClassAttribute\n            if member_name not in dynamic_attributes:\n                setattr(enum_class, member_name, enum_member)\n            # now add to _member_map_\n            enum_class._member_map_[member_name] = enum_member\n            try:\n                # This may fail if value is not hashable. We can't add the value\n                # to the map, and by-value lookups for this value will be\n                # linear.\n                enum_class._value2member_map_[value] = enum_member\n            except TypeError:\n                pass\n\n        # double check that repr and friends are not the mixin's or various\n        # things break (such as pickle)\n        # however, if the method is defined in the Enum itself, don't replace\n        # it\n        for name in ('__repr__', '__str__', '__format__', '__reduce_ex__'):\n            if name in classdict:\n                continue\n            class_method = getattr(enum_class, name)\n            obj_method = getattr(member_type, name, None)\n            enum_method = getattr(first_enum, name, None)\n            if obj_method is not None and obj_method is class_method:\n                setattr(enum_class, name, enum_method)\n\n        # replace any other __new__ with our own (as long as Enum is not None,\n        # anyway) -- again, this is to support pickle\n        if Enum is not None:\n            # if the user defined their own __new__, save it before it gets\n            # clobbered in case they subclass later\n            if save_new:\n                enum_class.__new_member__ = __new__\n            enum_class.__new__ = Enum.__new__\n\n        # py3 support for definition order (helps keep py2/py3 code in sync)\n        if _order_ is not None:\n            if isinstance(_order_, str):\n                _order_ = _order_.replace(',', ' ').split()\n            if _order_ != enum_class._member_names_:\n                raise TypeError('member order does not match _order_')\n\n        return enum_class\n\n    def __bool__(self):\n        \"\"\"\n        classes/types should always be True.\n        \"\"\"\n        return True\n\n    def __call__(cls, value, names=None, *, module=None, qualname=None, type=None, start=1):\n        \"\"\"\n        Either returns an existing member, or creates a new enum class.\n\n        This method is used both when an enum class is given a value to match\n        to an enumeration member (i.e. Color(3)) and for the functional API\n        (i.e. Color = Enum('Color', names='RED GREEN BLUE')).\n\n        When used for the functional API:\n\n        `value` will be the name of the new class.\n\n        `names` should be either a string of white-space/comma delimited names\n        (values will start at `start`), or an iterator/mapping of name, value pairs.\n\n        `module` should be set to the module this class is being created in;\n        if it is not set, an attempt to find that module will be made, but if\n        it fails the class will not be picklable.\n\n        `qualname` should be set to the actual location this class can be found\n        at in its module; by default it is set to the global scope.  If this is\n        not correct, unpickling will fail in some circumstances.\n\n        `type`, if set, will be mixed in as the first base class.\n        \"\"\"\n        if names is None:  # simple value lookup\n            return cls.__new__(cls, value)\n        # otherwise, functional API: we're creating a new Enum type\n        return cls._create_(\n                value,\n                names,\n                module=module,\n                qualname=qualname,\n                type=type,\n                start=start,\n                )\n\n    def __contains__(cls, member):\n        if not isinstance(member, Enum):\n            raise TypeError(\n                \"unsupported operand type(s) for 'in': '%s' and '%s'\" % (\n                    type(member).__qualname__, cls.__class__.__qualname__))\n        return isinstance(member, cls) and member._name_ in cls._member_map_\n\n    def __delattr__(cls, attr):\n        # nicer error message when someone tries to delete an attribute\n        # (see issue19025).\n        if attr in cls._member_map_:\n            raise AttributeError(\"%s: cannot delete Enum member.\" % cls.__name__)\n        super().__delattr__(attr)\n\n    def __dir__(self):\n        return (\n                ['__class__', '__doc__', '__members__', '__module__']\n                + self._member_names_\n                )\n\n    def __getattr__(cls, name):\n        \"\"\"\n        Return the enum member matching `name`\n\n        We use __getattr__ instead of descriptors or inserting into the enum\n        class' __dict__ in order to support `name` and `value` being both\n        properties for enum members (which live in the class' __dict__) and\n        enum members themselves.\n        \"\"\"\n        if _is_dunder(name):\n            raise AttributeError(name)\n        try:\n            return cls._member_map_[name]\n        except KeyError:\n            raise AttributeError(name) from None\n\n    def __getitem__(cls, name):\n        return cls._member_map_[name]\n\n    def __iter__(cls):\n        \"\"\"\n        Returns members in definition order.\n        \"\"\"\n        return (cls._member_map_[name] for name in cls._member_names_)\n\n    def __len__(cls):\n        return len(cls._member_names_)\n\n    @property\n    def __members__(cls):\n        \"\"\"\n        Returns a mapping of member name->value.\n\n        This mapping lists all enum members, including aliases. Note that this\n        is a read-only view of the internal mapping.\n        \"\"\"\n        return MappingProxyType(cls._member_map_)\n\n    def __repr__(cls):\n        return \"<enum %r>\" % cls.__name__\n\n    def __reversed__(cls):\n        \"\"\"\n        Returns members in reverse definition order.\n        \"\"\"\n        return (cls._member_map_[name] for name in reversed(cls._member_names_))\n\n    def __setattr__(cls, name, value):\n        \"\"\"\n        Block attempts to reassign Enum members.\n\n        A simple assignment to the class namespace only changes one of the\n        several possible ways to get an Enum member from the Enum class,\n        resulting in an inconsistent Enumeration.\n        \"\"\"\n        member_map = cls.__dict__.get('_member_map_', {})\n        if name in member_map:\n            raise AttributeError('Cannot reassign members.')\n        super().__setattr__(name, value)\n\n    def _create_(cls, class_name, names, *, module=None, qualname=None, type=None, start=1):\n        \"\"\"\n        Convenience method to create a new Enum class.\n\n        `names` can be:\n\n        * A string containing member names, separated either with spaces or\n          commas.  Values are incremented by 1 from `start`.\n        * An iterable of member names.  Values are incremented by 1 from `start`.\n        * An iterable of (member name, value) pairs.\n        * A mapping of member name -> value pairs.\n        \"\"\"\n        metacls = cls.__class__\n        bases = (cls, ) if type is None else (type, cls)\n        _, first_enum = cls._get_mixins_(cls, bases)\n        classdict = metacls.__prepare__(class_name, bases)\n\n        # special processing needed for names?\n        if isinstance(names, str):\n            names = names.replace(',', ' ').split()\n        if isinstance(names, (tuple, list)) and names and isinstance(names[0], str):\n            original_names, names = names, []\n            last_values = []\n            for count, name in enumerate(original_names):\n                value = first_enum._generate_next_value_(name, start, count, last_values[:])\n                last_values.append(value)\n                names.append((name, value))\n\n        # Here, names is either an iterable of (name, value) or a mapping.\n        for item in names:\n            if isinstance(item, str):\n                member_name, member_value = item, names[item]\n            else:\n                member_name, member_value = item\n            classdict[member_name] = member_value\n        enum_class = metacls.__new__(metacls, class_name, bases, classdict)\n\n        # TODO: replace the frame hack if a blessed way to know the calling\n        # module is ever developed\n        if module is None:\n            try:\n                module = sys._getframe(2).f_globals['__name__']\n            except (AttributeError, ValueError, KeyError):\n                pass\n        if module is None:\n            _make_class_unpicklable(enum_class)\n        else:\n            enum_class.__module__ = module\n        if qualname is not None:\n            enum_class.__qualname__ = qualname\n\n        return enum_class\n\n    def _convert_(cls, name, module, filter, source=None):\n        \"\"\"\n        Create a new Enum subclass that replaces a collection of global constants\n        \"\"\"\n        # convert all constants from source (or module) that pass filter() to\n        # a new Enum called name, and export the enum and its members back to\n        # module;\n        # also, replace the __reduce_ex__ method so unpickling works in\n        # previous Python versions\n        module_globals = vars(sys.modules[module])\n        if source:\n            source = vars(source)\n        else:\n            source = module_globals\n        # _value2member_map_ is populated in the same order every time\n        # for a consistent reverse mapping of number to name when there\n        # are multiple names for the same number.\n        members = [\n                (name, value)\n                for name, value in source.items()\n                if filter(name)]\n        try:\n            # sort by value\n            members.sort(key=lambda t: (t[1], t[0]))\n        except TypeError:\n            # unless some values aren't comparable, in which case sort by name\n            members.sort(key=lambda t: t[0])\n        cls = cls(name, members, module=module)\n        cls.__reduce_ex__ = _reduce_ex_by_name\n        module_globals.update(cls.__members__)\n        module_globals[name] = cls\n        return cls\n\n    @staticmethod\n    def _check_for_existing_members(class_name, bases):\n        for chain in bases:\n            for base in chain.__mro__:\n                if issubclass(base, Enum) and base._member_names_:\n                    raise TypeError(\n                            \"%s: cannot extend enumeration %r\"\n                            % (class_name, base.__name__)\n                            )\n\n    @staticmethod\n    def _get_mixins_(class_name, bases):\n        \"\"\"\n        Returns the type for creating enum members, and the first inherited\n        enum class.\n\n        bases: the tuple of bases that was given to __new__\n        \"\"\"\n        if not bases:\n            return object, Enum\n\n        def _find_data_type(bases):\n            data_types = set()\n            for chain in bases:\n                candidate = None\n                for base in chain.__mro__:\n                    if base is object:\n                        continue\n                    elif issubclass(base, Enum):\n                        if base._member_type_ is not object:\n                            data_types.add(base._member_type_)\n                            break\n                    elif '__new__' in base.__dict__:\n                        if issubclass(base, Enum):\n                            continue\n                        data_types.add(candidate or base)\n                        break\n                    else:\n                        candidate = candidate or base\n            if len(data_types) > 1:\n                raise TypeError('%r: too many data types: %r' % (class_name, data_types))\n            elif data_types:\n                return data_types.pop()\n            else:\n                return None\n\n        # ensure final parent class is an Enum derivative, find any concrete\n        # data type, and check that Enum has no members\n        first_enum = bases[-1]\n        if not issubclass(first_enum, Enum):\n            raise TypeError(\"new enumerations should be created as \"\n                    \"`EnumName([mixin_type, ...] [data_type,] enum_type)`\")\n        member_type = _find_data_type(bases) or object\n        if first_enum._member_names_:\n            raise TypeError(\"Cannot extend enumerations\")\n        return member_type, first_enum\n\n    @staticmethod\n    def _find_new_(classdict, member_type, first_enum):\n        \"\"\"\n        Returns the __new__ to be used for creating the enum members.\n\n        classdict: the class dictionary given to __new__\n        member_type: the data type whose __new__ will be used by default\n        first_enum: enumeration to check for an overriding __new__\n        \"\"\"\n        # now find the correct __new__, checking to see of one was defined\n        # by the user; also check earlier enum classes in case a __new__ was\n        # saved as __new_member__\n        __new__ = classdict.get('__new__', None)\n\n        # should __new__ be saved as __new_member__ later?\n        save_new = __new__ is not None\n\n        if __new__ is None:\n            # check all possibles for __new_member__ before falling back to\n            # __new__\n            for method in ('__new_member__', '__new__'):\n                for possible in (member_type, first_enum):\n                    target = getattr(possible, method, None)\n                    if target not in {\n                            None,\n                            None.__new__,\n                            object.__new__,\n                            Enum.__new__,\n                            }:\n                        __new__ = target\n                        break\n                if __new__ is not None:\n                    break\n            else:\n                __new__ = object.__new__\n\n        # if a non-object.__new__ is used then whatever value/tuple was\n        # assigned to the enum member name will be passed to __new__ and to the\n        # new enum member's __init__\n        if __new__ is object.__new__:\n            use_args = False\n        else:\n            use_args = True\n        return __new__, save_new, use_args\n\n\nclass Enum(metaclass=EnumMeta):\n    \"\"\"\n    Generic enumeration.\n\n    Derive from this class to define new enumerations.\n    \"\"\"\n    def __new__(cls, value):\n        # all enum instances are actually created during class construction\n        # without calling this method; this method is called by the metaclass'\n        # __call__ (i.e. Color(3) ), and by pickle\n        if type(value) is cls:\n            # For lookups like Color(Color.RED)\n            return value\n        # by-value search for a matching enum member\n        # see if it's in the reverse mapping (for hashable values)\n        try:\n            return cls._value2member_map_[value]\n        except KeyError:\n            # Not found, no need to do long O(n) search\n            pass\n        except TypeError:\n            # not there, now do long search -- O(n) behavior\n            for member in cls._member_map_.values():\n                if member._value_ == value:\n                    return member\n        # still not found -- try _missing_ hook\n        try:\n            exc = None\n            result = cls._missing_(value)\n        except Exception as e:\n            exc = e\n            result = None\n        try:\n            if isinstance(result, cls):\n                return result\n            else:\n                ve_exc = ValueError(\"%r is not a valid %s\" % (value, cls.__qualname__))\n                if result is None and exc is None:\n                    raise ve_exc\n                elif exc is None:\n                    exc = TypeError(\n                            'error in %s._missing_: returned %r instead of None or a valid member'\n                            % (cls.__name__, result)\n                            )\n                exc.__context__ = ve_exc\n                raise exc\n        finally:\n            # ensure all variables that could hold an exception are destroyed\n            exc = None\n            ve_exc = None\n\n    def _generate_next_value_(name, start, count, last_values):\n        \"\"\"\n        Generate the next value when not given.\n\n        name: the name of the member\n        start: the initial start value or None\n        count: the number of existing members\n        last_value: the last value assigned or None\n        \"\"\"\n        for last_value in reversed(last_values):\n            try:\n                return last_value + 1\n            except TypeError:\n                pass\n        else:\n            return start\n\n    @classmethod\n    def _missing_(cls, value):\n        return None\n\n    def __repr__(self):\n        return \"<%s.%s: %r>\" % (\n                self.__class__.__name__, self._name_, self._value_)\n\n    def __str__(self):\n        return \"%s.%s\" % (self.__class__.__name__, self._name_)\n\n    def __dir__(self):\n        \"\"\"\n        Returns all members and all public methods\n        \"\"\"\n        added_behavior = [\n                m\n                for cls in self.__class__.mro()\n                for m in cls.__dict__\n                if m[0] != '_' and m not in self._member_map_\n                ] + [m for m in self.__dict__ if m[0] != '_']\n        return (['__class__', '__doc__', '__module__'] + added_behavior)\n\n    def __format__(self, format_spec):\n        \"\"\"\n        Returns format using actual value type unless __str__ has been overridden.\n        \"\"\"\n        # mixed-in Enums should use the mixed-in type's __format__, otherwise\n        # we can get strange results with the Enum name showing up instead of\n        # the value\n\n        # pure Enum branch, or branch with __str__ explicitly overridden\n        str_overridden = type(self).__str__ not in (Enum.__str__, Flag.__str__)\n        if self._member_type_ is object or str_overridden:\n            cls = str\n            val = str(self)\n        # mix-in branch\n        else:\n            cls = self._member_type_\n            val = self._value_\n        return cls.__format__(val, format_spec)\n\n    def __hash__(self):\n        return hash(self._name_)\n\n    def __reduce_ex__(self, proto):\n        return self.__class__, (self._value_, )\n\n    # DynamicClassAttribute is used to provide access to the `name` and\n    # `value` properties of enum members while keeping some measure of\n    # protection from modification, while still allowing for an enumeration\n    # to have members named `name` and `value`.  This works because enumeration\n    # members are not set directly on the enum class -- __getattr__ is\n    # used to look them up.\n\n    @DynamicClassAttribute\n    def name(self):\n        \"\"\"The name of the Enum member.\"\"\"\n        return self._name_\n\n    @DynamicClassAttribute\n    def value(self):\n        \"\"\"The value of the Enum member.\"\"\"\n        return self._value_\n\n\nclass IntEnum(int, Enum):\n    \"\"\"Enum where members are also (and must be) ints\"\"\"\n\n\ndef _reduce_ex_by_name(self, proto):\n    return self.name\n\nclass Flag(Enum):\n    \"\"\"\n    Support for flags\n    \"\"\"\n\n    def _generate_next_value_(name, start, count, last_values):\n        \"\"\"\n        Generate the next value when not given.\n\n        name: the name of the member\n        start: the initial start value or None\n        count: the number of existing members\n        last_value: the last value assigned or None\n        \"\"\"\n        if not count:\n            return start if start is not None else 1\n        for last_value in reversed(last_values):\n            try:\n                high_bit = _high_bit(last_value)\n                break\n            except Exception:\n                raise TypeError('Invalid Flag value: %r' % last_value) from None\n        return 2 ** (high_bit+1)\n\n    @classmethod\n    def _missing_(cls, value):\n        \"\"\"\n        Returns member (possibly creating it) if one can be found for value.\n        \"\"\"\n        original_value = value\n        if value < 0:\n            value = ~value\n        possible_member = cls._create_pseudo_member_(value)\n        if original_value < 0:\n            possible_member = ~possible_member\n        return possible_member\n\n    @classmethod\n    def _create_pseudo_member_(cls, value):\n        \"\"\"\n        Create a composite member iff value contains only members.\n        \"\"\"\n        pseudo_member = cls._value2member_map_.get(value, None)\n        if pseudo_member is None:\n            # verify all bits are accounted for\n            _, extra_flags = _decompose(cls, value)\n            if extra_flags:\n                raise ValueError(\"%r is not a valid %s\" % (value, cls.__qualname__))\n            # construct a singleton enum pseudo-member\n            pseudo_member = object.__new__(cls)\n            pseudo_member._name_ = None\n            pseudo_member._value_ = value\n            # use setdefault in case another thread already created a composite\n            # with this value\n            pseudo_member = cls._value2member_map_.setdefault(value, pseudo_member)\n        return pseudo_member\n\n    def __contains__(self, other):\n        \"\"\"\n        Returns True if self has at least the same flags set as other.\n        \"\"\"\n        if not isinstance(other, self.__class__):\n            raise TypeError(\n                \"unsupported operand type(s) for 'in': '%s' and '%s'\" % (\n                    type(other).__qualname__, self.__class__.__qualname__))\n        return other._value_ & self._value_ == other._value_\n\n    def __repr__(self):\n        cls = self.__class__\n        if self._name_ is not None:\n            return '<%s.%s: %r>' % (cls.__name__, self._name_, self._value_)\n        members, uncovered = _decompose(cls, self._value_)\n        return '<%s.%s: %r>' % (\n                cls.__name__,\n                '|'.join([str(m._name_ or m._value_) for m in members]),\n                self._value_,\n                )\n\n    def __str__(self):\n        cls = self.__class__\n        if self._name_ is not None:\n            return '%s.%s' % (cls.__name__, self._name_)\n        members, uncovered = _decompose(cls, self._value_)\n        if len(members) == 1 and members[0]._name_ is None:\n            return '%s.%r' % (cls.__name__, members[0]._value_)\n        else:\n            return '%s.%s' % (\n                    cls.__name__,\n                    '|'.join([str(m._name_ or m._value_) for m in members]),\n                    )\n\n    def __bool__(self):\n        return bool(self._value_)\n\n    def __or__(self, other):\n        if not isinstance(other, self.__class__):\n            return NotImplemented\n        return self.__class__(self._value_ | other._value_)\n\n    def __and__(self, other):\n        if not isinstance(other, self.__class__):\n            return NotImplemented\n        return self.__class__(self._value_ & other._value_)\n\n    def __xor__(self, other):\n        if not isinstance(other, self.__class__):\n            return NotImplemented\n        return self.__class__(self._value_ ^ other._value_)\n\n    def __invert__(self):\n        members, uncovered = _decompose(self.__class__, self._value_)\n        inverted = self.__class__(0)\n        for m in self.__class__:\n            if m not in members and not (m._value_ & self._value_):\n                inverted = inverted | m\n        return self.__class__(inverted)\n\n\nclass IntFlag(int, Flag):\n    \"\"\"\n    Support for integer-based Flags\n    \"\"\"\n\n    @classmethod\n    def _missing_(cls, value):\n        \"\"\"\n        Returns member (possibly creating it) if one can be found for value.\n        \"\"\"\n        if not isinstance(value, int):\n            raise ValueError(\"%r is not a valid %s\" % (value, cls.__qualname__))\n        new_member = cls._create_pseudo_member_(value)\n        return new_member\n\n    @classmethod\n    def _create_pseudo_member_(cls, value):\n        \"\"\"\n        Create a composite member iff value contains only members.\n        \"\"\"\n        pseudo_member = cls._value2member_map_.get(value, None)\n        if pseudo_member is None:\n            need_to_create = [value]\n            # get unaccounted for bits\n            _, extra_flags = _decompose(cls, value)\n            # timer = 10\n            while extra_flags:\n                # timer -= 1\n                bit = _high_bit(extra_flags)\n                flag_value = 2 ** bit\n                if (flag_value not in cls._value2member_map_ and\n                        flag_value not in need_to_create\n                        ):\n                    need_to_create.append(flag_value)\n                if extra_flags == -flag_value:\n                    extra_flags = 0\n                else:\n                    extra_flags ^= flag_value\n            for value in reversed(need_to_create):\n                # construct singleton pseudo-members\n                pseudo_member = int.__new__(cls, value)\n                pseudo_member._name_ = None\n                pseudo_member._value_ = value\n                # use setdefault in case another thread already created a composite\n                # with this value\n                pseudo_member = cls._value2member_map_.setdefault(value, pseudo_member)\n        return pseudo_member\n\n    def __or__(self, other):\n        if not isinstance(other, (self.__class__, int)):\n            return NotImplemented\n        result = self.__class__(self._value_ | self.__class__(other)._value_)\n        return result\n\n    def __and__(self, other):\n        if not isinstance(other, (self.__class__, int)):\n            return NotImplemented\n        return self.__class__(self._value_ & self.__class__(other)._value_)\n\n    def __xor__(self, other):\n        if not isinstance(other, (self.__class__, int)):\n            return NotImplemented\n        return self.__class__(self._value_ ^ self.__class__(other)._value_)\n\n    __ror__ = __or__\n    __rand__ = __and__\n    __rxor__ = __xor__\n\n    def __invert__(self):\n        result = self.__class__(~self._value_)\n        return result\n\n\ndef _high_bit(value):\n    \"\"\"\n    returns index of highest bit, or -1 if value is zero or negative\n    \"\"\"\n    return value.bit_length() - 1\n\ndef unique(enumeration):\n    \"\"\"\n    Class decorator for enumerations ensuring unique member values.\n    \"\"\"\n    duplicates = []\n    for name, member in enumeration.__members__.items():\n        if name != member.name:\n            duplicates.append((name, member.name))\n    if duplicates:\n        alias_details = ', '.join(\n                [\"%s -> %s\" % (alias, name) for (alias, name) in duplicates])\n        raise ValueError('duplicate values found in %r: %s' %\n                (enumeration, alias_details))\n    return enumeration\n\ndef _decompose(flag, value):\n    \"\"\"\n    Extract all members from the value.\n    \"\"\"\n    # _decompose is only called if the value is not named\n    not_covered = value\n    negative = value < 0\n    members = []\n    for member in flag:\n        member_value = member.value\n        if member_value and member_value & value == member_value:\n            members.append(member)\n            not_covered &= ~member_value\n    if not negative:\n        tmp = not_covered\n        while tmp:\n            flag_value = 2 ** _high_bit(tmp)\n            if flag_value in flag._value2member_map_:\n                members.append(flag._value2member_map_[flag_value])\n                not_covered &= ~flag_value\n            tmp &= ~flag_value\n    if not members and value in flag._value2member_map_:\n        members.append(flag._value2member_map_[value])\n    members.sort(key=lambda m: m._value_, reverse=True)\n    if len(members) > 1 and members[0].value == value:\n        # we have the breakdown, don't need the value member itself\n        members.pop(0)\n    return members, not_covered\n", 1044], "C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py": ["#\n# Secret Labs' Regular Expression Engine\n#\n# re-compatible interface for the sre matching engine\n#\n# Copyright (c) 1998-2001 by Secret Labs AB.  All rights reserved.\n#\n# This version of the SRE library can be redistributed under CNRI's\n# Python 1.6 license.  For any other use, please contact Secret Labs\n# AB (info@pythonware.com).\n#\n# Portions of this engine have been developed in cooperation with\n# CNRI.  Hewlett-Packard provided funding for 1.6 integration and\n# other compatibility work.\n#\n\nr\"\"\"Support for regular expressions (RE).\n\nThis module provides regular expression matching operations similar to\nthose found in Perl.  It supports both 8-bit and Unicode strings; both\nthe pattern and the strings being processed can contain null bytes and\ncharacters outside the US ASCII range.\n\nRegular expressions can contain both special and ordinary characters.\nMost ordinary characters, like \"A\", \"a\", or \"0\", are the simplest\nregular expressions; they simply match themselves.  You can\nconcatenate ordinary characters, so last matches the string 'last'.\n\nThe special characters are:\n    \".\"      Matches any character except a newline.\n    \"^\"      Matches the start of the string.\n    \"$\"      Matches the end of the string or just before the newline at\n             the end of the string.\n    \"*\"      Matches 0 or more (greedy) repetitions of the preceding RE.\n             Greedy means that it will match as many repetitions as possible.\n    \"+\"      Matches 1 or more (greedy) repetitions of the preceding RE.\n    \"?\"      Matches 0 or 1 (greedy) of the preceding RE.\n    *?,+?,?? Non-greedy versions of the previous three special characters.\n    {m,n}    Matches from m to n repetitions of the preceding RE.\n    {m,n}?   Non-greedy version of the above.\n    \"\\\\\"     Either escapes special characters or signals a special sequence.\n    []       Indicates a set of characters.\n             A \"^\" as the first character indicates a complementing set.\n    \"|\"      A|B, creates an RE that will match either A or B.\n    (...)    Matches the RE inside the parentheses.\n             The contents can be retrieved or matched later in the string.\n    (?aiLmsux) The letters set the corresponding flags defined below.\n    (?:...)  Non-grouping version of regular parentheses.\n    (?P<name>...) The substring matched by the group is accessible by name.\n    (?P=name)     Matches the text matched earlier by the group named name.\n    (?#...)  A comment; ignored.\n    (?=...)  Matches if ... matches next, but doesn't consume the string.\n    (?!...)  Matches if ... doesn't match next.\n    (?<=...) Matches if preceded by ... (must be fixed length).\n    (?<!...) Matches if not preceded by ... (must be fixed length).\n    (?(id/name)yes|no) Matches yes pattern if the group with id/name matched,\n                       the (optional) no pattern otherwise.\n\nThe special sequences consist of \"\\\\\" and a character from the list\nbelow.  If the ordinary character is not on the list, then the\nresulting RE will match the second character.\n    \\number  Matches the contents of the group of the same number.\n    \\A       Matches only at the start of the string.\n    \\Z       Matches only at the end of the string.\n    \\b       Matches the empty string, but only at the start or end of a word.\n    \\B       Matches the empty string, but not at the start or end of a word.\n    \\d       Matches any decimal digit; equivalent to the set [0-9] in\n             bytes patterns or string patterns with the ASCII flag.\n             In string patterns without the ASCII flag, it will match the whole\n             range of Unicode digits.\n    \\D       Matches any non-digit character; equivalent to [^\\d].\n    \\s       Matches any whitespace character; equivalent to [ \\t\\n\\r\\f\\v] in\n             bytes patterns or string patterns with the ASCII flag.\n             In string patterns without the ASCII flag, it will match the whole\n             range of Unicode whitespace characters.\n    \\S       Matches any non-whitespace character; equivalent to [^\\s].\n    \\w       Matches any alphanumeric character; equivalent to [a-zA-Z0-9_]\n             in bytes patterns or string patterns with the ASCII flag.\n             In string patterns without the ASCII flag, it will match the\n             range of Unicode alphanumeric characters (letters plus digits\n             plus underscore).\n             With LOCALE, it will match the set [0-9_] plus characters defined\n             as letters for the current locale.\n    \\W       Matches the complement of \\w.\n    \\\\       Matches a literal backslash.\n\nThis module exports the following functions:\n    match     Match a regular expression pattern to the beginning of a string.\n    fullmatch Match a regular expression pattern to all of a string.\n    search    Search a string for the presence of a pattern.\n    sub       Substitute occurrences of a pattern found in a string.\n    subn      Same as sub, but also return the number of substitutions made.\n    split     Split a string by the occurrences of a pattern.\n    findall   Find all occurrences of a pattern in a string.\n    finditer  Return an iterator yielding a Match object for each match.\n    compile   Compile a pattern into a Pattern object.\n    purge     Clear the regular expression cache.\n    escape    Backslash all non-alphanumerics in a string.\n\nEach function other than purge and escape can take an optional 'flags' argument\nconsisting of one or more of the following module constants, joined by \"|\".\nA, L, and U are mutually exclusive.\n    A  ASCII       For string patterns, make \\w, \\W, \\b, \\B, \\d, \\D\n                   match the corresponding ASCII character categories\n                   (rather than the whole Unicode categories, which is the\n                   default).\n                   For bytes patterns, this flag is the only available\n                   behaviour and needn't be specified.\n    I  IGNORECASE  Perform case-insensitive matching.\n    L  LOCALE      Make \\w, \\W, \\b, \\B, dependent on the current locale.\n    M  MULTILINE   \"^\" matches the beginning of lines (after a newline)\n                   as well as the string.\n                   \"$\" matches the end of lines (before a newline) as well\n                   as the end of the string.\n    S  DOTALL      \".\" matches any character at all, including the newline.\n    X  VERBOSE     Ignore whitespace and comments for nicer looking RE's.\n    U  UNICODE     For compatibility only. Ignored for string patterns (it\n                   is the default), and forbidden for bytes patterns.\n\nThis module also defines an exception 'error'.\n\n\"\"\"\n\nimport enum\nimport sre_compile\nimport sre_parse\nimport functools\ntry:\n    import _locale\nexcept ImportError:\n    _locale = None\n\n\n# public symbols\n__all__ = [\n    \"match\", \"fullmatch\", \"search\", \"sub\", \"subn\", \"split\",\n    \"findall\", \"finditer\", \"compile\", \"purge\", \"template\", \"escape\",\n    \"error\", \"Pattern\", \"Match\", \"A\", \"I\", \"L\", \"M\", \"S\", \"X\", \"U\",\n    \"ASCII\", \"IGNORECASE\", \"LOCALE\", \"MULTILINE\", \"DOTALL\", \"VERBOSE\",\n    \"UNICODE\",\n]\n\n__version__ = \"2.2.1\"\n\nclass RegexFlag(enum.IntFlag):\n    ASCII = A = sre_compile.SRE_FLAG_ASCII # assume ascii \"locale\"\n    IGNORECASE = I = sre_compile.SRE_FLAG_IGNORECASE # ignore case\n    LOCALE = L = sre_compile.SRE_FLAG_LOCALE # assume current 8-bit locale\n    UNICODE = U = sre_compile.SRE_FLAG_UNICODE # assume unicode \"locale\"\n    MULTILINE = M = sre_compile.SRE_FLAG_MULTILINE # make anchors look for newline\n    DOTALL = S = sre_compile.SRE_FLAG_DOTALL # make dot match newline\n    VERBOSE = X = sre_compile.SRE_FLAG_VERBOSE # ignore whitespace and comments\n    # sre extensions (experimental, don't rely on these)\n    TEMPLATE = T = sre_compile.SRE_FLAG_TEMPLATE # disable backtracking\n    DEBUG = sre_compile.SRE_FLAG_DEBUG # dump pattern after compilation\n\n    def __repr__(self):\n        if self._name_ is not None:\n            return f're.{self._name_}'\n        value = self._value_\n        members = []\n        negative = value < 0\n        if negative:\n            value = ~value\n        for m in self.__class__:\n            if value & m._value_:\n                value &= ~m._value_\n                members.append(f're.{m._name_}')\n        if value:\n            members.append(hex(value))\n        res = '|'.join(members)\n        if negative:\n            if len(members) > 1:\n                res = f'~({res})'\n            else:\n                res = f'~{res}'\n        return res\n    __str__ = object.__str__\n\nglobals().update(RegexFlag.__members__)\n\n# sre exception\nerror = sre_compile.error\n\n# --------------------------------------------------------------------\n# public interface\n\ndef match(pattern, string, flags=0):\n    \"\"\"Try to apply the pattern at the start of the string, returning\n    a Match object, or None if no match was found.\"\"\"\n    return _compile(pattern, flags).match(string)\n\ndef fullmatch(pattern, string, flags=0):\n    \"\"\"Try to apply the pattern to all of the string, returning\n    a Match object, or None if no match was found.\"\"\"\n    return _compile(pattern, flags).fullmatch(string)\n\ndef search(pattern, string, flags=0):\n    \"\"\"Scan through string looking for a match to the pattern, returning\n    a Match object, or None if no match was found.\"\"\"\n    return _compile(pattern, flags).search(string)\n\ndef sub(pattern, repl, string, count=0, flags=0):\n    \"\"\"Return the string obtained by replacing the leftmost\n    non-overlapping occurrences of the pattern in string by the\n    replacement repl.  repl can be either a string or a callable;\n    if a string, backslash escapes in it are processed.  If it is\n    a callable, it's passed the Match object and must return\n    a replacement string to be used.\"\"\"\n    return _compile(pattern, flags).sub(repl, string, count)\n\ndef subn(pattern, repl, string, count=0, flags=0):\n    \"\"\"Return a 2-tuple containing (new_string, number).\n    new_string is the string obtained by replacing the leftmost\n    non-overlapping occurrences of the pattern in the source\n    string by the replacement repl.  number is the number of\n    substitutions that were made. repl can be either a string or a\n    callable; if a string, backslash escapes in it are processed.\n    If it is a callable, it's passed the Match object and must\n    return a replacement string to be used.\"\"\"\n    return _compile(pattern, flags).subn(repl, string, count)\n\ndef split(pattern, string, maxsplit=0, flags=0):\n    \"\"\"Split the source string by the occurrences of the pattern,\n    returning a list containing the resulting substrings.  If\n    capturing parentheses are used in pattern, then the text of all\n    groups in the pattern are also returned as part of the resulting\n    list.  If maxsplit is nonzero, at most maxsplit splits occur,\n    and the remainder of the string is returned as the final element\n    of the list.\"\"\"\n    return _compile(pattern, flags).split(string, maxsplit)\n\ndef findall(pattern, string, flags=0):\n    \"\"\"Return a list of all non-overlapping matches in the string.\n\n    If one or more capturing groups are present in the pattern, return\n    a list of groups; this will be a list of tuples if the pattern\n    has more than one group.\n\n    Empty matches are included in the result.\"\"\"\n    return _compile(pattern, flags).findall(string)\n\ndef finditer(pattern, string, flags=0):\n    \"\"\"Return an iterator over all non-overlapping matches in the\n    string.  For each match, the iterator returns a Match object.\n\n    Empty matches are included in the result.\"\"\"\n    return _compile(pattern, flags).finditer(string)\n\ndef compile(pattern, flags=0):\n    \"Compile a regular expression pattern, returning a Pattern object.\"\n    return _compile(pattern, flags)\n\ndef purge():\n    \"Clear the regular expression caches\"\n    _cache.clear()\n    _compile_repl.cache_clear()\n\ndef template(pattern, flags=0):\n    \"Compile a template pattern, returning a Pattern object\"\n    return _compile(pattern, flags|T)\n\n# SPECIAL_CHARS\n# closing ')', '}' and ']'\n# '-' (a range in character set)\n# '&', '~', (extended character set operations)\n# '#' (comment) and WHITESPACE (ignored) in verbose mode\n_special_chars_map = {i: '\\\\' + chr(i) for i in b'()[]{}?*+-|^$\\\\.&~# \\t\\n\\r\\v\\f'}\n\ndef escape(pattern):\n    \"\"\"\n    Escape special characters in a string.\n    \"\"\"\n    if isinstance(pattern, str):\n        return pattern.translate(_special_chars_map)\n    else:\n        pattern = str(pattern, 'latin1')\n        return pattern.translate(_special_chars_map).encode('latin1')\n\nPattern = type(sre_compile.compile('', 0))\nMatch = type(sre_compile.compile('', 0).match(''))\n\n# --------------------------------------------------------------------\n# internals\n\n_cache = {}  # ordered!\n\n_MAXCACHE = 512\ndef _compile(pattern, flags):\n    # internal: compile pattern\n    if isinstance(flags, RegexFlag):\n        flags = flags.value\n    try:\n        return _cache[type(pattern), pattern, flags]\n    except KeyError:\n        pass\n    if isinstance(pattern, Pattern):\n        if flags:\n            raise ValueError(\n                \"cannot process flags argument with a compiled pattern\")\n        return pattern\n    if not sre_compile.isstring(pattern):\n        raise TypeError(\"first argument must be string or compiled pattern\")\n    p = sre_compile.compile(pattern, flags)\n    if not (flags & DEBUG):\n        if len(_cache) >= _MAXCACHE:\n            # Drop the oldest item\n            try:\n                del _cache[next(iter(_cache))]\n            except (StopIteration, RuntimeError, KeyError):\n                pass\n        _cache[type(pattern), pattern, flags] = p\n    return p\n\n@functools.lru_cache(_MAXCACHE)\ndef _compile_repl(repl, pattern):\n    # internal: compile replacement pattern\n    return sre_parse.parse_template(repl, pattern)\n\ndef _expand(pattern, match, template):\n    # internal: Match.expand implementation hook\n    template = sre_parse.parse_template(template, pattern)\n    return sre_parse.expand_template(template, match)\n\ndef _subx(pattern, template):\n    # internal: Pattern.sub/subn implementation helper\n    template = _compile_repl(template, pattern)\n    if not template[0] and len(template[1]) == 1:\n        # literal replacement\n        return template[1][0]\n    def filter(match, template=template):\n        return sre_parse.expand_template(template, match)\n    return filter\n\n# register myself for pickling\n\nimport copyreg\n\ndef _pickle(p):\n    return _compile, (p.pattern, p.flags)\n\ncopyreg.pickle(Pattern, _pickle, _compile)\n\n# --------------------------------------------------------------------\n# experimental stuff (see python-dev discussions for details)\n\nclass Scanner:\n    def __init__(self, lexicon, flags=0):\n        from sre_constants import BRANCH, SUBPATTERN\n        if isinstance(flags, RegexFlag):\n            flags = flags.value\n        self.lexicon = lexicon\n        # combine phrases into a compound pattern\n        p = []\n        s = sre_parse.State()\n        s.flags = flags\n        for phrase, action in lexicon:\n            gid = s.opengroup()\n            p.append(sre_parse.SubPattern(s, [\n                (SUBPATTERN, (gid, 0, 0, sre_parse.parse(phrase, flags))),\n                ]))\n            s.closegroup(gid, p[-1])\n        p = sre_parse.SubPattern(s, [(BRANCH, (None, p))])\n        self.scanner = sre_compile.compile(p)\n    def scan(self, string):\n        result = []\n        append = result.append\n        match = self.scanner.scanner(string).match\n        i = 0\n        while True:\n            m = match()\n            if not m:\n                break\n            j = m.end()\n            if i == j:\n                break\n            action = self.lexicon[m.lastindex-1][1]\n            if callable(action):\n                self.match = m\n                action = action(self, m.group())\n            if action is not None:\n                append(action)\n            i = j\n        return result, string[i:]\n", 384], "C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py": ["# Copyright 2007 Google, Inc. All Rights Reserved.\n# Licensed to PSF under a Contributor Agreement.\n\n\"\"\"Abstract Base Classes (ABCs) for collections, according to PEP 3119.\n\nUnit tests are in test_collections.\n\"\"\"\n\nfrom abc import ABCMeta, abstractmethod\nimport sys\n\nGenericAlias = type(list[int])\nEllipsisType = type(...)\ndef _f(): pass\nFunctionType = type(_f)\ndel _f\n\n__all__ = [\"Awaitable\", \"Coroutine\",\n           \"AsyncIterable\", \"AsyncIterator\", \"AsyncGenerator\",\n           \"Hashable\", \"Iterable\", \"Iterator\", \"Generator\", \"Reversible\",\n           \"Sized\", \"Container\", \"Callable\", \"Collection\",\n           \"Set\", \"MutableSet\",\n           \"Mapping\", \"MutableMapping\",\n           \"MappingView\", \"KeysView\", \"ItemsView\", \"ValuesView\",\n           \"Sequence\", \"MutableSequence\",\n           \"ByteString\",\n           ]\n\n# This module has been renamed from collections.abc to _collections_abc to\n# speed up interpreter startup. Some of the types such as MutableMapping are\n# required early but collections module imports a lot of other modules.\n# See issue #19218\n__name__ = \"collections.abc\"\n\n# Private list of types that we want to register with the various ABCs\n# so that they will pass tests like:\n#       it = iter(somebytearray)\n#       assert isinstance(it, Iterable)\n# Note:  in other implementations, these types might not be distinct\n# and they may have their own implementation specific types that\n# are not included on this list.\nbytes_iterator = type(iter(b''))\nbytearray_iterator = type(iter(bytearray()))\n#callable_iterator = ???\ndict_keyiterator = type(iter({}.keys()))\ndict_valueiterator = type(iter({}.values()))\ndict_itemiterator = type(iter({}.items()))\nlist_iterator = type(iter([]))\nlist_reverseiterator = type(iter(reversed([])))\nrange_iterator = type(iter(range(0)))\nlongrange_iterator = type(iter(range(1 << 1000)))\nset_iterator = type(iter(set()))\nstr_iterator = type(iter(\"\"))\ntuple_iterator = type(iter(()))\nzip_iterator = type(iter(zip()))\n## views ##\ndict_keys = type({}.keys())\ndict_values = type({}.values())\ndict_items = type({}.items())\n## misc ##\nmappingproxy = type(type.__dict__)\ngenerator = type((lambda: (yield))())\n## coroutine ##\nasync def _coro(): pass\n_coro = _coro()\ncoroutine = type(_coro)\n_coro.close()  # Prevent ResourceWarning\ndel _coro\n## asynchronous generator ##\nasync def _ag(): yield\n_ag = _ag()\nasync_generator = type(_ag)\ndel _ag\n\n\n### ONE-TRICK PONIES ###\n\ndef _check_methods(C, *methods):\n    mro = C.__mro__\n    for method in methods:\n        for B in mro:\n            if method in B.__dict__:\n                if B.__dict__[method] is None:\n                    return NotImplemented\n                break\n        else:\n            return NotImplemented\n    return True\n\nclass Hashable(metaclass=ABCMeta):\n\n    __slots__ = ()\n\n    @abstractmethod\n    def __hash__(self):\n        return 0\n\n    @classmethod\n    def __subclasshook__(cls, C):\n        if cls is Hashable:\n            return _check_methods(C, \"__hash__\")\n        return NotImplemented\n\n\nclass Awaitable(metaclass=ABCMeta):\n\n    __slots__ = ()\n\n    @abstractmethod\n    def __await__(self):\n        yield\n\n    @classmethod\n    def __subclasshook__(cls, C):\n        if cls is Awaitable:\n            return _check_methods(C, \"__await__\")\n        return NotImplemented\n\n    __class_getitem__ = classmethod(GenericAlias)\n\n\nclass Coroutine(Awaitable):\n\n    __slots__ = ()\n\n    @abstractmethod\n    def send(self, value):\n        \"\"\"Send a value into the coroutine.\n        Return next yielded value or raise StopIteration.\n        \"\"\"\n        raise StopIteration\n\n    @abstractmethod\n    def throw(self, typ, val=None, tb=None):\n        \"\"\"Raise an exception in the coroutine.\n        Return next yielded value or raise StopIteration.\n        \"\"\"\n        if val is None:\n            if tb is None:\n                raise typ\n            val = typ()\n        if tb is not None:\n            val = val.with_traceback(tb)\n        raise val\n\n    def close(self):\n        \"\"\"Raise GeneratorExit inside coroutine.\n        \"\"\"\n        try:\n            self.throw(GeneratorExit)\n        except (GeneratorExit, StopIteration):\n            pass\n        else:\n            raise RuntimeError(\"coroutine ignored GeneratorExit\")\n\n    @classmethod\n    def __subclasshook__(cls, C):\n        if cls is Coroutine:\n            return _check_methods(C, '__await__', 'send', 'throw', 'close')\n        return NotImplemented\n\n\nCoroutine.register(coroutine)\n\n\nclass AsyncIterable(metaclass=ABCMeta):\n\n    __slots__ = ()\n\n    @abstractmethod\n    def __aiter__(self):\n        return AsyncIterator()\n\n    @classmethod\n    def __subclasshook__(cls, C):\n        if cls is AsyncIterable:\n            return _check_methods(C, \"__aiter__\")\n        return NotImplemented\n\n    __class_getitem__ = classmethod(GenericAlias)\n\n\nclass AsyncIterator(AsyncIterable):\n\n    __slots__ = ()\n\n    @abstractmethod\n    async def __anext__(self):\n        \"\"\"Return the next item or raise StopAsyncIteration when exhausted.\"\"\"\n        raise StopAsyncIteration\n\n    def __aiter__(self):\n        return self\n\n    @classmethod\n    def __subclasshook__(cls, C):\n        if cls is AsyncIterator:\n            return _check_methods(C, \"__anext__\", \"__aiter__\")\n        return NotImplemented\n\n\nclass AsyncGenerator(AsyncIterator):\n\n    __slots__ = ()\n\n    async def __anext__(self):\n        \"\"\"Return the next item from the asynchronous generator.\n        When exhausted, raise StopAsyncIteration.\n        \"\"\"\n        return await self.asend(None)\n\n    @abstractmethod\n    async def asend(self, value):\n        \"\"\"Send a value into the asynchronous generator.\n        Return next yielded value or raise StopAsyncIteration.\n        \"\"\"\n        raise StopAsyncIteration\n\n    @abstractmethod\n    async def athrow(self, typ, val=None, tb=None):\n        \"\"\"Raise an exception in the asynchronous generator.\n        Return next yielded value or raise StopAsyncIteration.\n        \"\"\"\n        if val is None:\n            if tb is None:\n                raise typ\n            val = typ()\n        if tb is not None:\n            val = val.with_traceback(tb)\n        raise val\n\n    async def aclose(self):\n        \"\"\"Raise GeneratorExit inside coroutine.\n        \"\"\"\n        try:\n            await self.athrow(GeneratorExit)\n        except (GeneratorExit, StopAsyncIteration):\n            pass\n        else:\n            raise RuntimeError(\"asynchronous generator ignored GeneratorExit\")\n\n    @classmethod\n    def __subclasshook__(cls, C):\n        if cls is AsyncGenerator:\n            return _check_methods(C, '__aiter__', '__anext__',\n                                  'asend', 'athrow', 'aclose')\n        return NotImplemented\n\n\nAsyncGenerator.register(async_generator)\n\n\nclass Iterable(metaclass=ABCMeta):\n\n    __slots__ = ()\n\n    @abstractmethod\n    def __iter__(self):\n        while False:\n            yield None\n\n    @classmethod\n    def __subclasshook__(cls, C):\n        if cls is Iterable:\n            return _check_methods(C, \"__iter__\")\n        return NotImplemented\n\n    __class_getitem__ = classmethod(GenericAlias)\n\n\nclass Iterator(Iterable):\n\n    __slots__ = ()\n\n    @abstractmethod\n    def __next__(self):\n        'Return the next item from the iterator. When exhausted, raise StopIteration'\n        raise StopIteration\n\n    def __iter__(self):\n        return self\n\n    @classmethod\n    def __subclasshook__(cls, C):\n        if cls is Iterator:\n            return _check_methods(C, '__iter__', '__next__')\n        return NotImplemented\n\n\nIterator.register(bytes_iterator)\nIterator.register(bytearray_iterator)\n#Iterator.register(callable_iterator)\nIterator.register(dict_keyiterator)\nIterator.register(dict_valueiterator)\nIterator.register(dict_itemiterator)\nIterator.register(list_iterator)\nIterator.register(list_reverseiterator)\nIterator.register(range_iterator)\nIterator.register(longrange_iterator)\nIterator.register(set_iterator)\nIterator.register(str_iterator)\nIterator.register(tuple_iterator)\nIterator.register(zip_iterator)\n\n\nclass Reversible(Iterable):\n\n    __slots__ = ()\n\n    @abstractmethod\n    def __reversed__(self):\n        while False:\n            yield None\n\n    @classmethod\n    def __subclasshook__(cls, C):\n        if cls is Reversible:\n            return _check_methods(C, \"__reversed__\", \"__iter__\")\n        return NotImplemented\n\n\nclass Generator(Iterator):\n\n    __slots__ = ()\n\n    def __next__(self):\n        \"\"\"Return the next item from the generator.\n        When exhausted, raise StopIteration.\n        \"\"\"\n        return self.send(None)\n\n    @abstractmethod\n    def send(self, value):\n        \"\"\"Send a value into the generator.\n        Return next yielded value or raise StopIteration.\n        \"\"\"\n        raise StopIteration\n\n    @abstractmethod\n    def throw(self, typ, val=None, tb=None):\n        \"\"\"Raise an exception in the generator.\n        Return next yielded value or raise StopIteration.\n        \"\"\"\n        if val is None:\n            if tb is None:\n                raise typ\n            val = typ()\n        if tb is not None:\n            val = val.with_traceback(tb)\n        raise val\n\n    def close(self):\n        \"\"\"Raise GeneratorExit inside generator.\n        \"\"\"\n        try:\n            self.throw(GeneratorExit)\n        except (GeneratorExit, StopIteration):\n            pass\n        else:\n            raise RuntimeError(\"generator ignored GeneratorExit\")\n\n    @classmethod\n    def __subclasshook__(cls, C):\n        if cls is Generator:\n            return _check_methods(C, '__iter__', '__next__',\n                                  'send', 'throw', 'close')\n        return NotImplemented\n\n\nGenerator.register(generator)\n\n\nclass Sized(metaclass=ABCMeta):\n\n    __slots__ = ()\n\n    @abstractmethod\n    def __len__(self):\n        return 0\n\n    @classmethod\n    def __subclasshook__(cls, C):\n        if cls is Sized:\n            return _check_methods(C, \"__len__\")\n        return NotImplemented\n\n\nclass Container(metaclass=ABCMeta):\n\n    __slots__ = ()\n\n    @abstractmethod\n    def __contains__(self, x):\n        return False\n\n    @classmethod\n    def __subclasshook__(cls, C):\n        if cls is Container:\n            return _check_methods(C, \"__contains__\")\n        return NotImplemented\n\n    __class_getitem__ = classmethod(GenericAlias)\n\n\nclass Collection(Sized, Iterable, Container):\n\n    __slots__ = ()\n\n    @classmethod\n    def __subclasshook__(cls, C):\n        if cls is Collection:\n            return _check_methods(C,  \"__len__\", \"__iter__\", \"__contains__\")\n        return NotImplemented\n\n\nclass _CallableGenericAlias(GenericAlias):\n    \"\"\" Represent `Callable[argtypes, resulttype]`.\n\n    This sets ``__args__`` to a tuple containing the flattened``argtypes``\n    followed by ``resulttype``.\n\n    Example: ``Callable[[int, str], float]`` sets ``__args__`` to\n    ``(int, str, float)``.\n    \"\"\"\n\n    __slots__ = ()\n\n    def __new__(cls, origin, args):\n        try:\n            return cls.__create_ga(origin, args)\n        except TypeError as exc:\n            import warnings\n            warnings.warn(f'{str(exc)} '\n                          f'(This will raise a TypeError in Python 3.10.)',\n                          DeprecationWarning)\n            return GenericAlias(origin, args)\n\n    @classmethod\n    def __create_ga(cls, origin, args):\n        if not isinstance(args, tuple) or len(args) != 2:\n            raise TypeError(\n                \"Callable must be used as Callable[[arg, ...], result].\")\n        t_args, t_result = args\n        if isinstance(t_args, (list, tuple)):\n            ga_args = tuple(t_args) + (t_result,)\n        # This relaxes what t_args can be on purpose to allow things like\n        # PEP 612 ParamSpec.  Responsibility for whether a user is using\n        # Callable[...] properly is deferred to static type checkers.\n        else:\n            ga_args = args\n        return super().__new__(cls, origin, ga_args)\n\n    def __repr__(self):\n        if len(self.__args__) == 2 and self.__args__[0] is Ellipsis:\n            return super().__repr__()\n        return (f'collections.abc.Callable'\n                f'[[{\", \".join([_type_repr(a) for a in self.__args__[:-1]])}], '\n                f'{_type_repr(self.__args__[-1])}]')\n\n    def __reduce__(self):\n        args = self.__args__\n        if not (len(args) == 2 and args[0] is Ellipsis):\n            args = list(args[:-1]), args[-1]\n        return _CallableGenericAlias, (Callable, args)\n\n    def __getitem__(self, item):\n        # Called during TypeVar substitution, returns the custom subclass\n        # rather than the default types.GenericAlias object.\n        ga = super().__getitem__(item)\n        args = ga.__args__\n        t_result = args[-1]\n        t_args = args[:-1]\n        args = (t_args, t_result)\n        return _CallableGenericAlias(Callable, args)\n\n\ndef _type_repr(obj):\n    \"\"\"Return the repr() of an object, special-casing types (internal helper).\n\n    Copied from :mod:`typing` since collections.abc\n    shouldn't depend on that module.\n    \"\"\"\n    if isinstance(obj, GenericAlias):\n        return repr(obj)\n    if isinstance(obj, type):\n        if obj.__module__ == 'builtins':\n            return obj.__qualname__\n        return f'{obj.__module__}.{obj.__qualname__}'\n    if obj is Ellipsis:\n        return '...'\n    if isinstance(obj, FunctionType):\n        return obj.__name__\n    return repr(obj)\n\n\nclass Callable(metaclass=ABCMeta):\n\n    __slots__ = ()\n\n    @abstractmethod\n    def __call__(self, *args, **kwds):\n        return False\n\n    @classmethod\n    def __subclasshook__(cls, C):\n        if cls is Callable:\n            return _check_methods(C, \"__call__\")\n        return NotImplemented\n\n    __class_getitem__ = classmethod(_CallableGenericAlias)\n\n\n### SETS ###\n\n\nclass Set(Collection):\n\n    \"\"\"A set is a finite, iterable container.\n\n    This class provides concrete generic implementations of all\n    methods except for __contains__, __iter__ and __len__.\n\n    To override the comparisons (presumably for speed, as the\n    semantics are fixed), redefine __le__ and __ge__,\n    then the other operations will automatically follow suit.\n    \"\"\"\n\n    __slots__ = ()\n\n    def __le__(self, other):\n        if not isinstance(other, Set):\n            return NotImplemented\n        if len(self) > len(other):\n            return False\n        for elem in self:\n            if elem not in other:\n                return False\n        return True\n\n    def __lt__(self, other):\n        if not isinstance(other, Set):\n            return NotImplemented\n        return len(self) < len(other) and self.__le__(other)\n\n    def __gt__(self, other):\n        if not isinstance(other, Set):\n            return NotImplemented\n        return len(self) > len(other) and self.__ge__(other)\n\n    def __ge__(self, other):\n        if not isinstance(other, Set):\n            return NotImplemented\n        if len(self) < len(other):\n            return False\n        for elem in other:\n            if elem not in self:\n                return False\n        return True\n\n    def __eq__(self, other):\n        if not isinstance(other, Set):\n            return NotImplemented\n        return len(self) == len(other) and self.__le__(other)\n\n    @classmethod\n    def _from_iterable(cls, it):\n        '''Construct an instance of the class from any iterable input.\n\n        Must override this method if the class constructor signature\n        does not accept an iterable for an input.\n        '''\n        return cls(it)\n\n    def __and__(self, other):\n        if not isinstance(other, Iterable):\n            return NotImplemented\n        return self._from_iterable(value for value in other if value in self)\n\n    __rand__ = __and__\n\n    def isdisjoint(self, other):\n        'Return True if two sets have a null intersection.'\n        for value in other:\n            if value in self:\n                return False\n        return True\n\n    def __or__(self, other):\n        if not isinstance(other, Iterable):\n            return NotImplemented\n        chain = (e for s in (self, other) for e in s)\n        return self._from_iterable(chain)\n\n    __ror__ = __or__\n\n    def __sub__(self, other):\n        if not isinstance(other, Set):\n            if not isinstance(other, Iterable):\n                return NotImplemented\n            other = self._from_iterable(other)\n        return self._from_iterable(value for value in self\n                                   if value not in other)\n\n    def __rsub__(self, other):\n        if not isinstance(other, Set):\n            if not isinstance(other, Iterable):\n                return NotImplemented\n            other = self._from_iterable(other)\n        return self._from_iterable(value for value in other\n                                   if value not in self)\n\n    def __xor__(self, other):\n        if not isinstance(other, Set):\n            if not isinstance(other, Iterable):\n                return NotImplemented\n            other = self._from_iterable(other)\n        return (self - other) | (other - self)\n\n    __rxor__ = __xor__\n\n    def _hash(self):\n        \"\"\"Compute the hash value of a set.\n\n        Note that we don't define __hash__: not all sets are hashable.\n        But if you define a hashable set type, its __hash__ should\n        call this function.\n\n        This must be compatible __eq__.\n\n        All sets ought to compare equal if they contain the same\n        elements, regardless of how they are implemented, and\n        regardless of the order of the elements; so there's not much\n        freedom for __eq__ or __hash__.  We match the algorithm used\n        by the built-in frozenset type.\n        \"\"\"\n        MAX = sys.maxsize\n        MASK = 2 * MAX + 1\n        n = len(self)\n        h = 1927868237 * (n + 1)\n        h &= MASK\n        for x in self:\n            hx = hash(x)\n            h ^= (hx ^ (hx << 16) ^ 89869747)  * 3644798167\n            h &= MASK\n        h ^= (h >> 11) ^ (h >> 25)\n        h = h * 69069 + 907133923\n        h &= MASK\n        if h > MAX:\n            h -= MASK + 1\n        if h == -1:\n            h = 590923713\n        return h\n\n\nSet.register(frozenset)\n\n\nclass MutableSet(Set):\n    \"\"\"A mutable set is a finite, iterable container.\n\n    This class provides concrete generic implementations of all\n    methods except for __contains__, __iter__, __len__,\n    add(), and discard().\n\n    To override the comparisons (presumably for speed, as the\n    semantics are fixed), all you have to do is redefine __le__ and\n    then the other operations will automatically follow suit.\n    \"\"\"\n\n    __slots__ = ()\n\n    @abstractmethod\n    def add(self, value):\n        \"\"\"Add an element.\"\"\"\n        raise NotImplementedError\n\n    @abstractmethod\n    def discard(self, value):\n        \"\"\"Remove an element.  Do not raise an exception if absent.\"\"\"\n        raise NotImplementedError\n\n    def remove(self, value):\n        \"\"\"Remove an element. If not a member, raise a KeyError.\"\"\"\n        if value not in self:\n            raise KeyError(value)\n        self.discard(value)\n\n    def pop(self):\n        \"\"\"Return the popped value.  Raise KeyError if empty.\"\"\"\n        it = iter(self)\n        try:\n            value = next(it)\n        except StopIteration:\n            raise KeyError from None\n        self.discard(value)\n        return value\n\n    def clear(self):\n        \"\"\"This is slow (creates N new iterators!) but effective.\"\"\"\n        try:\n            while True:\n                self.pop()\n        except KeyError:\n            pass\n\n    def __ior__(self, it):\n        for value in it:\n            self.add(value)\n        return self\n\n    def __iand__(self, it):\n        for value in (self - it):\n            self.discard(value)\n        return self\n\n    def __ixor__(self, it):\n        if it is self:\n            self.clear()\n        else:\n            if not isinstance(it, Set):\n                it = self._from_iterable(it)\n            for value in it:\n                if value in self:\n                    self.discard(value)\n                else:\n                    self.add(value)\n        return self\n\n    def __isub__(self, it):\n        if it is self:\n            self.clear()\n        else:\n            for value in it:\n                self.discard(value)\n        return self\n\n\nMutableSet.register(set)\n\n\n### MAPPINGS ###\n\n\nclass Mapping(Collection):\n\n    __slots__ = ()\n\n    \"\"\"A Mapping is a generic container for associating key/value\n    pairs.\n\n    This class provides concrete generic implementations of all\n    methods except for __getitem__, __iter__, and __len__.\n\n    \"\"\"\n\n    @abstractmethod\n    def __getitem__(self, key):\n        raise KeyError\n\n    def get(self, key, default=None):\n        'D.get(k[,d]) -> D[k] if k in D, else d.  d defaults to None.'\n        try:\n            return self[key]\n        except KeyError:\n            return default\n\n    def __contains__(self, key):\n        try:\n            self[key]\n        except KeyError:\n            return False\n        else:\n            return True\n\n    def keys(self):\n        \"D.keys() -> a set-like object providing a view on D's keys\"\n        return KeysView(self)\n\n    def items(self):\n        \"D.items() -> a set-like object providing a view on D's items\"\n        return ItemsView(self)\n\n    def values(self):\n        \"D.values() -> an object providing a view on D's values\"\n        return ValuesView(self)\n\n    def __eq__(self, other):\n        if not isinstance(other, Mapping):\n            return NotImplemented\n        return dict(self.items()) == dict(other.items())\n\n    __reversed__ = None\n\n\nMapping.register(mappingproxy)\n\n\nclass MappingView(Sized):\n\n    __slots__ = '_mapping',\n\n    def __init__(self, mapping):\n        self._mapping = mapping\n\n    def __len__(self):\n        return len(self._mapping)\n\n    def __repr__(self):\n        return '{0.__class__.__name__}({0._mapping!r})'.format(self)\n\n    __class_getitem__ = classmethod(GenericAlias)\n\n\nclass KeysView(MappingView, Set):\n\n    __slots__ = ()\n\n    @classmethod\n    def _from_iterable(self, it):\n        return set(it)\n\n    def __contains__(self, key):\n        return key in self._mapping\n\n    def __iter__(self):\n        yield from self._mapping\n\n\nKeysView.register(dict_keys)\n\n\nclass ItemsView(MappingView, Set):\n\n    __slots__ = ()\n\n    @classmethod\n    def _from_iterable(self, it):\n        return set(it)\n\n    def __contains__(self, item):\n        key, value = item\n        try:\n            v = self._mapping[key]\n        except KeyError:\n            return False\n        else:\n            return v is value or v == value\n\n    def __iter__(self):\n        for key in self._mapping:\n            yield (key, self._mapping[key])\n\n\nItemsView.register(dict_items)\n\n\nclass ValuesView(MappingView, Collection):\n\n    __slots__ = ()\n\n    def __contains__(self, value):\n        for key in self._mapping:\n            v = self._mapping[key]\n            if v is value or v == value:\n                return True\n        return False\n\n    def __iter__(self):\n        for key in self._mapping:\n            yield self._mapping[key]\n\n\nValuesView.register(dict_values)\n\n\nclass MutableMapping(Mapping):\n\n    __slots__ = ()\n\n    \"\"\"A MutableMapping is a generic container for associating\n    key/value pairs.\n\n    This class provides concrete generic implementations of all\n    methods except for __getitem__, __setitem__, __delitem__,\n    __iter__, and __len__.\n\n    \"\"\"\n\n    @abstractmethod\n    def __setitem__(self, key, value):\n        raise KeyError\n\n    @abstractmethod\n    def __delitem__(self, key):\n        raise KeyError\n\n    __marker = object()\n\n    def pop(self, key, default=__marker):\n        '''D.pop(k[,d]) -> v, remove specified key and return the corresponding value.\n          If key is not found, d is returned if given, otherwise KeyError is raised.\n        '''\n        try:\n            value = self[key]\n        except KeyError:\n            if default is self.__marker:\n                raise\n            return default\n        else:\n            del self[key]\n            return value\n\n    def popitem(self):\n        '''D.popitem() -> (k, v), remove and return some (key, value) pair\n           as a 2-tuple; but raise KeyError if D is empty.\n        '''\n        try:\n            key = next(iter(self))\n        except StopIteration:\n            raise KeyError from None\n        value = self[key]\n        del self[key]\n        return key, value\n\n    def clear(self):\n        'D.clear() -> None.  Remove all items from D.'\n        try:\n            while True:\n                self.popitem()\n        except KeyError:\n            pass\n\n    def update(self, other=(), /, **kwds):\n        ''' D.update([E, ]**F) -> None.  Update D from mapping/iterable E and F.\n            If E present and has a .keys() method, does:     for k in E: D[k] = E[k]\n            If E present and lacks .keys() method, does:     for (k, v) in E: D[k] = v\n            In either case, this is followed by: for k, v in F.items(): D[k] = v\n        '''\n        if isinstance(other, Mapping):\n            for key in other:\n                self[key] = other[key]\n        elif hasattr(other, \"keys\"):\n            for key in other.keys():\n                self[key] = other[key]\n        else:\n            for key, value in other:\n                self[key] = value\n        for key, value in kwds.items():\n            self[key] = value\n\n    def setdefault(self, key, default=None):\n        'D.setdefault(k[,d]) -> D.get(k,d), also set D[k]=d if k not in D'\n        try:\n            return self[key]\n        except KeyError:\n            self[key] = default\n        return default\n\n\nMutableMapping.register(dict)\n\n\n### SEQUENCES ###\n\n\nclass Sequence(Reversible, Collection):\n\n    \"\"\"All the operations on a read-only sequence.\n\n    Concrete subclasses must override __new__ or __init__,\n    __getitem__, and __len__.\n    \"\"\"\n\n    __slots__ = ()\n\n    @abstractmethod\n    def __getitem__(self, index):\n        raise IndexError\n\n    def __iter__(self):\n        i = 0\n        try:\n            while True:\n                v = self[i]\n                yield v\n                i += 1\n        except IndexError:\n            return\n\n    def __contains__(self, value):\n        for v in self:\n            if v is value or v == value:\n                return True\n        return False\n\n    def __reversed__(self):\n        for i in reversed(range(len(self))):\n            yield self[i]\n\n    def index(self, value, start=0, stop=None):\n        '''S.index(value, [start, [stop]]) -> integer -- return first index of value.\n           Raises ValueError if the value is not present.\n\n           Supporting start and stop arguments is optional, but\n           recommended.\n        '''\n        if start is not None and start < 0:\n            start = max(len(self) + start, 0)\n        if stop is not None and stop < 0:\n            stop += len(self)\n\n        i = start\n        while stop is None or i < stop:\n            try:\n                v = self[i]\n                if v is value or v == value:\n                    return i\n            except IndexError:\n                break\n            i += 1\n        raise ValueError\n\n    def count(self, value):\n        'S.count(value) -> integer -- return number of occurrences of value'\n        return sum(1 for v in self if v is value or v == value)\n\n\nSequence.register(tuple)\nSequence.register(str)\nSequence.register(range)\nSequence.register(memoryview)\n\n\nclass ByteString(Sequence):\n\n    \"\"\"This unifies bytes and bytearray.\n\n    XXX Should add all their methods.\n    \"\"\"\n\n    __slots__ = ()\n\nByteString.register(bytes)\nByteString.register(bytearray)\n\n\nclass MutableSequence(Sequence):\n\n    __slots__ = ()\n\n    \"\"\"All the operations on a read-write sequence.\n\n    Concrete subclasses must provide __new__ or __init__,\n    __getitem__, __setitem__, __delitem__, __len__, and insert().\n\n    \"\"\"\n\n    @abstractmethod\n    def __setitem__(self, index, value):\n        raise IndexError\n\n    @abstractmethod\n    def __delitem__(self, index):\n        raise IndexError\n\n    @abstractmethod\n    def insert(self, index, value):\n        'S.insert(index, value) -- insert value before index'\n        raise IndexError\n\n    def append(self, value):\n        'S.append(value) -- append value to the end of the sequence'\n        self.insert(len(self), value)\n\n    def clear(self):\n        'S.clear() -> None -- remove all items from S'\n        try:\n            while True:\n                self.pop()\n        except IndexError:\n            pass\n\n    def reverse(self):\n        'S.reverse() -- reverse *IN PLACE*'\n        n = len(self)\n        for i in range(n//2):\n            self[i], self[n-i-1] = self[n-i-1], self[i]\n\n    def extend(self, values):\n        'S.extend(iterable) -- extend sequence by appending elements from the iterable'\n        if values is self:\n            values = list(values)\n        for v in values:\n            self.append(v)\n\n    def pop(self, index=-1):\n        '''S.pop([index]) -> item -- remove and return item at index (default last).\n           Raise IndexError if list is empty or index is out of range.\n        '''\n        v = self[index]\n        del self[index]\n        return v\n\n    def remove(self, value):\n        '''S.remove(value) -- remove first occurrence of value.\n           Raise ValueError if the value is not present.\n        '''\n        del self[self.index(value)]\n\n    def __iadd__(self, values):\n        self.extend(values)\n        return self\n\n\nMutableSequence.register(list)\nMutableSequence.register(bytearray)  # Multiply inheriting, see ByteString\n", 1116], "C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py": ["# Copyright 2007 Google, Inc. All Rights Reserved.\n# Licensed to PSF under a Contributor Agreement.\n\n\"\"\"Abstract Base Classes (ABCs) according to PEP 3119.\"\"\"\n\n\ndef abstractmethod(funcobj):\n    \"\"\"A decorator indicating abstract methods.\n\n    Requires that the metaclass is ABCMeta or derived from it.  A\n    class that has a metaclass derived from ABCMeta cannot be\n    instantiated unless all of its abstract methods are overridden.\n    The abstract methods can be called using any of the normal\n    'super' call mechanisms.  abstractmethod() may be used to declare\n    abstract methods for properties and descriptors.\n\n    Usage:\n\n        class C(metaclass=ABCMeta):\n            @abstractmethod\n            def my_abstract_method(self, ...):\n                ...\n    \"\"\"\n    funcobj.__isabstractmethod__ = True\n    return funcobj\n\n\nclass abstractclassmethod(classmethod):\n    \"\"\"A decorator indicating abstract classmethods.\n\n    Deprecated, use 'classmethod' with 'abstractmethod' instead:\n\n        class C(ABC):\n            @classmethod\n            @abstractmethod\n            def my_abstract_classmethod(cls, ...):\n                ...\n\n    \"\"\"\n\n    __isabstractmethod__ = True\n\n    def __init__(self, callable):\n        callable.__isabstractmethod__ = True\n        super().__init__(callable)\n\n\nclass abstractstaticmethod(staticmethod):\n    \"\"\"A decorator indicating abstract staticmethods.\n\n    Deprecated, use 'staticmethod' with 'abstractmethod' instead:\n\n        class C(ABC):\n            @staticmethod\n            @abstractmethod\n            def my_abstract_staticmethod(...):\n                ...\n\n    \"\"\"\n\n    __isabstractmethod__ = True\n\n    def __init__(self, callable):\n        callable.__isabstractmethod__ = True\n        super().__init__(callable)\n\n\nclass abstractproperty(property):\n    \"\"\"A decorator indicating abstract properties.\n\n    Deprecated, use 'property' with 'abstractmethod' instead:\n\n        class C(ABC):\n            @property\n            @abstractmethod\n            def my_abstract_property(self):\n                ...\n\n    \"\"\"\n\n    __isabstractmethod__ = True\n\n\ntry:\n    from _abc import (get_cache_token, _abc_init, _abc_register,\n                      _abc_instancecheck, _abc_subclasscheck, _get_dump,\n                      _reset_registry, _reset_caches)\nexcept ImportError:\n    from _py_abc import ABCMeta, get_cache_token\n    ABCMeta.__module__ = 'abc'\nelse:\n    class ABCMeta(type):\n        \"\"\"Metaclass for defining Abstract Base Classes (ABCs).\n\n        Use this metaclass to create an ABC.  An ABC can be subclassed\n        directly, and then acts as a mix-in class.  You can also register\n        unrelated concrete classes (even built-in classes) and unrelated\n        ABCs as 'virtual subclasses' -- these and their descendants will\n        be considered subclasses of the registering ABC by the built-in\n        issubclass() function, but the registering ABC won't show up in\n        their MRO (Method Resolution Order) nor will method\n        implementations defined by the registering ABC be callable (not\n        even via super()).\n        \"\"\"\n        def __new__(mcls, name, bases, namespace, **kwargs):\n            cls = super().__new__(mcls, name, bases, namespace, **kwargs)\n            _abc_init(cls)\n            return cls\n\n        def register(cls, subclass):\n            \"\"\"Register a virtual subclass of an ABC.\n\n            Returns the subclass, to allow usage as a class decorator.\n            \"\"\"\n            return _abc_register(cls, subclass)\n\n        def __instancecheck__(cls, instance):\n            \"\"\"Override for isinstance(instance, cls).\"\"\"\n            return _abc_instancecheck(cls, instance)\n\n        def __subclasscheck__(cls, subclass):\n            \"\"\"Override for issubclass(subclass, cls).\"\"\"\n            return _abc_subclasscheck(cls, subclass)\n\n        def _dump_registry(cls, file=None):\n            \"\"\"Debug helper to print the ABC registry.\"\"\"\n            print(f\"Class: {cls.__module__}.{cls.__qualname__}\", file=file)\n            print(f\"Inv. counter: {get_cache_token()}\", file=file)\n            (_abc_registry, _abc_cache, _abc_negative_cache,\n             _abc_negative_cache_version) = _get_dump(cls)\n            print(f\"_abc_registry: {_abc_registry!r}\", file=file)\n            print(f\"_abc_cache: {_abc_cache!r}\", file=file)\n            print(f\"_abc_negative_cache: {_abc_negative_cache!r}\", file=file)\n            print(f\"_abc_negative_cache_version: {_abc_negative_cache_version!r}\",\n                  file=file)\n\n        def _abc_registry_clear(cls):\n            \"\"\"Clear the registry (for debugging or testing).\"\"\"\n            _reset_registry(cls)\n\n        def _abc_caches_clear(cls):\n            \"\"\"Clear the caches (for debugging or testing).\"\"\"\n            _reset_caches(cls)\n\n\nclass ABC(metaclass=ABCMeta):\n    \"\"\"Helper class that provides a standard way to create an ABC using\n    inheritance.\n    \"\"\"\n    __slots__ = ()\n", 150], "C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py": ["'''This module implements specialized container datatypes providing\nalternatives to Python's general purpose built-in containers, dict,\nlist, set, and tuple.\n\n* namedtuple   factory function for creating tuple subclasses with named fields\n* deque        list-like container with fast appends and pops on either end\n* ChainMap     dict-like class for creating a single view of multiple mappings\n* Counter      dict subclass for counting hashable objects\n* OrderedDict  dict subclass that remembers the order entries were added\n* defaultdict  dict subclass that calls a factory function to supply missing values\n* UserDict     wrapper around dictionary objects for easier dict subclassing\n* UserList     wrapper around list objects for easier list subclassing\n* UserString   wrapper around string objects for easier string subclassing\n\n'''\n\n__all__ = [\n    'ChainMap',\n    'Counter',\n    'OrderedDict',\n    'UserDict',\n    'UserList',\n    'UserString',\n    'defaultdict',\n    'deque',\n    'namedtuple',\n]\n\nimport _collections_abc\nimport heapq as _heapq\nimport sys as _sys\n\nfrom itertools import chain as _chain\nfrom itertools import repeat as _repeat\nfrom itertools import starmap as _starmap\nfrom keyword import iskeyword as _iskeyword\nfrom operator import eq as _eq\nfrom operator import itemgetter as _itemgetter\nfrom reprlib import recursive_repr as _recursive_repr\nfrom _weakref import proxy as _proxy\n\ntry:\n    from _collections import deque\nexcept ImportError:\n    pass\nelse:\n    _collections_abc.MutableSequence.register(deque)\n\ntry:\n    from _collections import defaultdict\nexcept ImportError:\n    pass\n\n\ndef __getattr__(name):\n    # For backwards compatibility, continue to make the collections ABCs\n    # through Python 3.6 available through the collections module.\n    # Note, no new collections ABCs were added in Python 3.7\n    if name in _collections_abc.__all__:\n        obj = getattr(_collections_abc, name)\n        import warnings\n        warnings.warn(\"Using or importing the ABCs from 'collections' instead \"\n                      \"of from 'collections.abc' is deprecated since Python 3.3, \"\n                      \"and in 3.10 it will stop working\",\n                      DeprecationWarning, stacklevel=2)\n        globals()[name] = obj\n        return obj\n    raise AttributeError(f'module {__name__!r} has no attribute {name!r}')\n\n\n################################################################################\n### OrderedDict\n################################################################################\n\nclass _OrderedDictKeysView(_collections_abc.KeysView):\n\n    def __reversed__(self):\n        yield from reversed(self._mapping)\n\nclass _OrderedDictItemsView(_collections_abc.ItemsView):\n\n    def __reversed__(self):\n        for key in reversed(self._mapping):\n            yield (key, self._mapping[key])\n\nclass _OrderedDictValuesView(_collections_abc.ValuesView):\n\n    def __reversed__(self):\n        for key in reversed(self._mapping):\n            yield self._mapping[key]\n\nclass _Link(object):\n    __slots__ = 'prev', 'next', 'key', '__weakref__'\n\nclass OrderedDict(dict):\n    'Dictionary that remembers insertion order'\n    # An inherited dict maps keys to values.\n    # The inherited dict provides __getitem__, __len__, __contains__, and get.\n    # The remaining methods are order-aware.\n    # Big-O running times for all methods are the same as regular dictionaries.\n\n    # The internal self.__map dict maps keys to links in a doubly linked list.\n    # The circular doubly linked list starts and ends with a sentinel element.\n    # The sentinel element never gets deleted (this simplifies the algorithm).\n    # The sentinel is in self.__hardroot with a weakref proxy in self.__root.\n    # The prev links are weakref proxies (to prevent circular references).\n    # Individual links are kept alive by the hard reference in self.__map.\n    # Those hard references disappear when a key is deleted from an OrderedDict.\n\n    def __init__(self, other=(), /, **kwds):\n        '''Initialize an ordered dictionary.  The signature is the same as\n        regular dictionaries.  Keyword argument order is preserved.\n        '''\n        try:\n            self.__root\n        except AttributeError:\n            self.__hardroot = _Link()\n            self.__root = root = _proxy(self.__hardroot)\n            root.prev = root.next = root\n            self.__map = {}\n        self.__update(other, **kwds)\n\n    def __setitem__(self, key, value,\n                    dict_setitem=dict.__setitem__, proxy=_proxy, Link=_Link):\n        'od.__setitem__(i, y) <==> od[i]=y'\n        # Setting a new item creates a new link at the end of the linked list,\n        # and the inherited dictionary is updated with the new key/value pair.\n        if key not in self:\n            self.__map[key] = link = Link()\n            root = self.__root\n            last = root.prev\n            link.prev, link.next, link.key = last, root, key\n            last.next = link\n            root.prev = proxy(link)\n        dict_setitem(self, key, value)\n\n    def __delitem__(self, key, dict_delitem=dict.__delitem__):\n        'od.__delitem__(y) <==> del od[y]'\n        # Deleting an existing item uses self.__map to find the link which gets\n        # removed by updating the links in the predecessor and successor nodes.\n        dict_delitem(self, key)\n        link = self.__map.pop(key)\n        link_prev = link.prev\n        link_next = link.next\n        link_prev.next = link_next\n        link_next.prev = link_prev\n        link.prev = None\n        link.next = None\n\n    def __iter__(self):\n        'od.__iter__() <==> iter(od)'\n        # Traverse the linked list in order.\n        root = self.__root\n        curr = root.next\n        while curr is not root:\n            yield curr.key\n            curr = curr.next\n\n    def __reversed__(self):\n        'od.__reversed__() <==> reversed(od)'\n        # Traverse the linked list in reverse order.\n        root = self.__root\n        curr = root.prev\n        while curr is not root:\n            yield curr.key\n            curr = curr.prev\n\n    def clear(self):\n        'od.clear() -> None.  Remove all items from od.'\n        root = self.__root\n        root.prev = root.next = root\n        self.__map.clear()\n        dict.clear(self)\n\n    def popitem(self, last=True):\n        '''Remove and return a (key, value) pair from the dictionary.\n\n        Pairs are returned in LIFO order if last is true or FIFO order if false.\n        '''\n        if not self:\n            raise KeyError('dictionary is empty')\n        root = self.__root\n        if last:\n            link = root.prev\n            link_prev = link.prev\n            link_prev.next = root\n            root.prev = link_prev\n        else:\n            link = root.next\n            link_next = link.next\n            root.next = link_next\n            link_next.prev = root\n        key = link.key\n        del self.__map[key]\n        value = dict.pop(self, key)\n        return key, value\n\n    def move_to_end(self, key, last=True):\n        '''Move an existing element to the end (or beginning if last is false).\n\n        Raise KeyError if the element does not exist.\n        '''\n        link = self.__map[key]\n        link_prev = link.prev\n        link_next = link.next\n        soft_link = link_next.prev\n        link_prev.next = link_next\n        link_next.prev = link_prev\n        root = self.__root\n        if last:\n            last = root.prev\n            link.prev = last\n            link.next = root\n            root.prev = soft_link\n            last.next = link\n        else:\n            first = root.next\n            link.prev = root\n            link.next = first\n            first.prev = soft_link\n            root.next = link\n\n    def __sizeof__(self):\n        sizeof = _sys.getsizeof\n        n = len(self) + 1                       # number of links including root\n        size = sizeof(self.__dict__)            # instance dictionary\n        size += sizeof(self.__map) * 2          # internal dict and inherited dict\n        size += sizeof(self.__hardroot) * n     # link objects\n        size += sizeof(self.__root) * n         # proxy objects\n        return size\n\n    update = __update = _collections_abc.MutableMapping.update\n\n    def keys(self):\n        \"D.keys() -> a set-like object providing a view on D's keys\"\n        return _OrderedDictKeysView(self)\n\n    def items(self):\n        \"D.items() -> a set-like object providing a view on D's items\"\n        return _OrderedDictItemsView(self)\n\n    def values(self):\n        \"D.values() -> an object providing a view on D's values\"\n        return _OrderedDictValuesView(self)\n\n    __ne__ = _collections_abc.MutableMapping.__ne__\n\n    __marker = object()\n\n    def pop(self, key, default=__marker):\n        '''od.pop(k[,d]) -> v, remove specified key and return the corresponding\n        value.  If key is not found, d is returned if given, otherwise KeyError\n        is raised.\n\n        '''\n        if key in self:\n            result = self[key]\n            del self[key]\n            return result\n        if default is self.__marker:\n            raise KeyError(key)\n        return default\n\n    def setdefault(self, key, default=None):\n        '''Insert key with a value of default if key is not in the dictionary.\n\n        Return the value for key if key is in the dictionary, else default.\n        '''\n        if key in self:\n            return self[key]\n        self[key] = default\n        return default\n\n    @_recursive_repr()\n    def __repr__(self):\n        'od.__repr__() <==> repr(od)'\n        if not self:\n            return '%s()' % (self.__class__.__name__,)\n        return '%s(%r)' % (self.__class__.__name__, list(self.items()))\n\n    def __reduce__(self):\n        'Return state information for pickling'\n        inst_dict = vars(self).copy()\n        for k in vars(OrderedDict()):\n            inst_dict.pop(k, None)\n        return self.__class__, (), inst_dict or None, None, iter(self.items())\n\n    def copy(self):\n        'od.copy() -> a shallow copy of od'\n        return self.__class__(self)\n\n    @classmethod\n    def fromkeys(cls, iterable, value=None):\n        '''Create a new ordered dictionary with keys from iterable and values set to value.\n        '''\n        self = cls()\n        for key in iterable:\n            self[key] = value\n        return self\n\n    def __eq__(self, other):\n        '''od.__eq__(y) <==> od==y.  Comparison to another OD is order-sensitive\n        while comparison to a regular mapping is order-insensitive.\n\n        '''\n        if isinstance(other, OrderedDict):\n            return dict.__eq__(self, other) and all(map(_eq, self, other))\n        return dict.__eq__(self, other)\n\n    def __ior__(self, other):\n        self.update(other)\n        return self\n\n    def __or__(self, other):\n        if not isinstance(other, dict):\n            return NotImplemented\n        new = self.__class__(self)\n        new.update(other)\n        return new\n\n    def __ror__(self, other):\n        if not isinstance(other, dict):\n            return NotImplemented\n        new = self.__class__(other)\n        new.update(self)\n        return new\n\n\ntry:\n    from _collections import OrderedDict\nexcept ImportError:\n    # Leave the pure Python version in place.\n    pass\n\n\n################################################################################\n### namedtuple\n################################################################################\n\ntry:\n    from _collections import _tuplegetter\nexcept ImportError:\n    _tuplegetter = lambda index, doc: property(_itemgetter(index), doc=doc)\n\ndef namedtuple(typename, field_names, *, rename=False, defaults=None, module=None):\n    \"\"\"Returns a new subclass of tuple with named fields.\n\n    >>> Point = namedtuple('Point', ['x', 'y'])\n    >>> Point.__doc__                   # docstring for the new class\n    'Point(x, y)'\n    >>> p = Point(11, y=22)             # instantiate with positional args or keywords\n    >>> p[0] + p[1]                     # indexable like a plain tuple\n    33\n    >>> x, y = p                        # unpack like a regular tuple\n    >>> x, y\n    (11, 22)\n    >>> p.x + p.y                       # fields also accessible by name\n    33\n    >>> d = p._asdict()                 # convert to a dictionary\n    >>> d['x']\n    11\n    >>> Point(**d)                      # convert from a dictionary\n    Point(x=11, y=22)\n    >>> p._replace(x=100)               # _replace() is like str.replace() but targets named fields\n    Point(x=100, y=22)\n\n    \"\"\"\n\n    # Validate the field names.  At the user's option, either generate an error\n    # message or automatically replace the field name with a valid name.\n    if isinstance(field_names, str):\n        field_names = field_names.replace(',', ' ').split()\n    field_names = list(map(str, field_names))\n    typename = _sys.intern(str(typename))\n\n    if rename:\n        seen = set()\n        for index, name in enumerate(field_names):\n            if (not name.isidentifier()\n                or _iskeyword(name)\n                or name.startswith('_')\n                or name in seen):\n                field_names[index] = f'_{index}'\n            seen.add(name)\n\n    for name in [typename] + field_names:\n        if type(name) is not str:\n            raise TypeError('Type names and field names must be strings')\n        if not name.isidentifier():\n            raise ValueError('Type names and field names must be valid '\n                             f'identifiers: {name!r}')\n        if _iskeyword(name):\n            raise ValueError('Type names and field names cannot be a '\n                             f'keyword: {name!r}')\n\n    seen = set()\n    for name in field_names:\n        if name.startswith('_') and not rename:\n            raise ValueError('Field names cannot start with an underscore: '\n                             f'{name!r}')\n        if name in seen:\n            raise ValueError(f'Encountered duplicate field name: {name!r}')\n        seen.add(name)\n\n    field_defaults = {}\n    if defaults is not None:\n        defaults = tuple(defaults)\n        if len(defaults) > len(field_names):\n            raise TypeError('Got more default values than field names')\n        field_defaults = dict(reversed(list(zip(reversed(field_names),\n                                                reversed(defaults)))))\n\n    # Variables used in the methods and docstrings\n    field_names = tuple(map(_sys.intern, field_names))\n    num_fields = len(field_names)\n    arg_list = ', '.join(field_names)\n    if num_fields == 1:\n        arg_list += ','\n    repr_fmt = '(' + ', '.join(f'{name}=%r' for name in field_names) + ')'\n    tuple_new = tuple.__new__\n    _dict, _tuple, _len, _map, _zip = dict, tuple, len, map, zip\n\n    # Create all the named tuple methods to be added to the class namespace\n\n    namespace = {\n        '_tuple_new': tuple_new,\n        '__builtins__': {},\n        '__name__': f'namedtuple_{typename}',\n    }\n    code = f'lambda _cls, {arg_list}: _tuple_new(_cls, ({arg_list}))'\n    __new__ = eval(code, namespace)\n    __new__.__name__ = '__new__'\n    __new__.__doc__ = f'Create new instance of {typename}({arg_list})'\n    if defaults is not None:\n        __new__.__defaults__ = defaults\n\n    @classmethod\n    def _make(cls, iterable):\n        result = tuple_new(cls, iterable)\n        if _len(result) != num_fields:\n            raise TypeError(f'Expected {num_fields} arguments, got {len(result)}')\n        return result\n\n    _make.__func__.__doc__ = (f'Make a new {typename} object from a sequence '\n                              'or iterable')\n\n    def _replace(self, /, **kwds):\n        result = self._make(_map(kwds.pop, field_names, self))\n        if kwds:\n            raise ValueError(f'Got unexpected field names: {list(kwds)!r}')\n        return result\n\n    _replace.__doc__ = (f'Return a new {typename} object replacing specified '\n                        'fields with new values')\n\n    def __repr__(self):\n        'Return a nicely formatted representation string'\n        return self.__class__.__name__ + repr_fmt % self\n\n    def _asdict(self):\n        'Return a new dict which maps field names to their values.'\n        return _dict(_zip(self._fields, self))\n\n    def __getnewargs__(self):\n        'Return self as a plain tuple.  Used by copy and pickle.'\n        return _tuple(self)\n\n    # Modify function metadata to help with introspection and debugging\n    for method in (\n        __new__,\n        _make.__func__,\n        _replace,\n        __repr__,\n        _asdict,\n        __getnewargs__,\n    ):\n        method.__qualname__ = f'{typename}.{method.__name__}'\n\n    # Build-up the class namespace dictionary\n    # and use type() to build the result class\n    class_namespace = {\n        '__doc__': f'{typename}({arg_list})',\n        '__slots__': (),\n        '_fields': field_names,\n        '_field_defaults': field_defaults,\n        '__new__': __new__,\n        '_make': _make,\n        '_replace': _replace,\n        '__repr__': __repr__,\n        '_asdict': _asdict,\n        '__getnewargs__': __getnewargs__,\n    }\n    for index, name in enumerate(field_names):\n        doc = _sys.intern(f'Alias for field number {index}')\n        class_namespace[name] = _tuplegetter(index, doc)\n\n    result = type(typename, (tuple,), class_namespace)\n\n    # For pickling to work, the __module__ variable needs to be set to the frame\n    # where the named tuple is created.  Bypass this step in environments where\n    # sys._getframe is not defined (Jython for example) or sys._getframe is not\n    # defined for arguments greater than 0 (IronPython), or where the user has\n    # specified a particular module.\n    if module is None:\n        try:\n            module = _sys._getframe(1).f_globals.get('__name__', '__main__')\n        except (AttributeError, ValueError):\n            pass\n    if module is not None:\n        result.__module__ = module\n\n    return result\n\n\n########################################################################\n###  Counter\n########################################################################\n\ndef _count_elements(mapping, iterable):\n    'Tally elements from the iterable.'\n    mapping_get = mapping.get\n    for elem in iterable:\n        mapping[elem] = mapping_get(elem, 0) + 1\n\ntry:                                    # Load C helper function if available\n    from _collections import _count_elements\nexcept ImportError:\n    pass\n\nclass Counter(dict):\n    '''Dict subclass for counting hashable items.  Sometimes called a bag\n    or multiset.  Elements are stored as dictionary keys and their counts\n    are stored as dictionary values.\n\n    >>> c = Counter('abcdeabcdabcaba')  # count elements from a string\n\n    >>> c.most_common(3)                # three most common elements\n    [('a', 5), ('b', 4), ('c', 3)]\n    >>> sorted(c)                       # list all unique elements\n    ['a', 'b', 'c', 'd', 'e']\n    >>> ''.join(sorted(c.elements()))   # list elements with repetitions\n    'aaaaabbbbcccdde'\n    >>> sum(c.values())                 # total of all counts\n    15\n\n    >>> c['a']                          # count of letter 'a'\n    5\n    >>> for elem in 'shazam':           # update counts from an iterable\n    ...     c[elem] += 1                # by adding 1 to each element's count\n    >>> c['a']                          # now there are seven 'a'\n    7\n    >>> del c['b']                      # remove all 'b'\n    >>> c['b']                          # now there are zero 'b'\n    0\n\n    >>> d = Counter('simsalabim')       # make another counter\n    >>> c.update(d)                     # add in the second counter\n    >>> c['a']                          # now there are nine 'a'\n    9\n\n    >>> c.clear()                       # empty the counter\n    >>> c\n    Counter()\n\n    Note:  If a count is set to zero or reduced to zero, it will remain\n    in the counter until the entry is deleted or the counter is cleared:\n\n    >>> c = Counter('aaabbc')\n    >>> c['b'] -= 2                     # reduce the count of 'b' by two\n    >>> c.most_common()                 # 'b' is still in, but its count is zero\n    [('a', 3), ('c', 1), ('b', 0)]\n\n    '''\n    # References:\n    #   http://en.wikipedia.org/wiki/Multiset\n    #   http://www.gnu.org/software/smalltalk/manual-base/html_node/Bag.html\n    #   http://www.demo2s.com/Tutorial/Cpp/0380__set-multiset/Catalog0380__set-multiset.htm\n    #   http://code.activestate.com/recipes/259174/\n    #   Knuth, TAOCP Vol. II section 4.6.3\n\n    def __init__(self, iterable=None, /, **kwds):\n        '''Create a new, empty Counter object.  And if given, count elements\n        from an input iterable.  Or, initialize the count from another mapping\n        of elements to their counts.\n\n        >>> c = Counter()                           # a new, empty counter\n        >>> c = Counter('gallahad')                 # a new counter from an iterable\n        >>> c = Counter({'a': 4, 'b': 2})           # a new counter from a mapping\n        >>> c = Counter(a=4, b=2)                   # a new counter from keyword args\n\n        '''\n        super().__init__()\n        self.update(iterable, **kwds)\n\n    def __missing__(self, key):\n        'The count of elements not in the Counter is zero.'\n        # Needed so that self[missing_item] does not raise KeyError\n        return 0\n\n    def most_common(self, n=None):\n        '''List the n most common elements and their counts from the most\n        common to the least.  If n is None, then list all element counts.\n\n        >>> Counter('abracadabra').most_common(3)\n        [('a', 5), ('b', 2), ('r', 2)]\n\n        '''\n        # Emulate Bag.sortedByCount from Smalltalk\n        if n is None:\n            return sorted(self.items(), key=_itemgetter(1), reverse=True)\n        return _heapq.nlargest(n, self.items(), key=_itemgetter(1))\n\n    def elements(self):\n        '''Iterator over elements repeating each as many times as its count.\n\n        >>> c = Counter('ABCABC')\n        >>> sorted(c.elements())\n        ['A', 'A', 'B', 'B', 'C', 'C']\n\n        # Knuth's example for prime factors of 1836:  2**2 * 3**3 * 17**1\n        >>> prime_factors = Counter({2: 2, 3: 3, 17: 1})\n        >>> product = 1\n        >>> for factor in prime_factors.elements():     # loop over factors\n        ...     product *= factor                       # and multiply them\n        >>> product\n        1836\n\n        Note, if an element's count has been set to zero or is a negative\n        number, elements() will ignore it.\n\n        '''\n        # Emulate Bag.do from Smalltalk and Multiset.begin from C++.\n        return _chain.from_iterable(_starmap(_repeat, self.items()))\n\n    # Override dict methods where necessary\n\n    @classmethod\n    def fromkeys(cls, iterable, v=None):\n        # There is no equivalent method for counters because the semantics\n        # would be ambiguous in cases such as Counter.fromkeys('aaabbc', v=2).\n        # Initializing counters to zero values isn't necessary because zero\n        # is already the default value for counter lookups.  Initializing\n        # to one is easily accomplished with Counter(set(iterable)).  For\n        # more exotic cases, create a dictionary first using a dictionary\n        # comprehension or dict.fromkeys().\n        raise NotImplementedError(\n            'Counter.fromkeys() is undefined.  Use Counter(iterable) instead.')\n\n    def update(self, iterable=None, /, **kwds):\n        '''Like dict.update() but add counts instead of replacing them.\n\n        Source can be an iterable, a dictionary, or another Counter instance.\n\n        >>> c = Counter('which')\n        >>> c.update('witch')           # add elements from another iterable\n        >>> d = Counter('watch')\n        >>> c.update(d)                 # add elements from another counter\n        >>> c['h']                      # four 'h' in which, witch, and watch\n        4\n\n        '''\n        # The regular dict.update() operation makes no sense here because the\n        # replace behavior results in the some of original untouched counts\n        # being mixed-in with all of the other counts for a mismash that\n        # doesn't have a straight-forward interpretation in most counting\n        # contexts.  Instead, we implement straight-addition.  Both the inputs\n        # and outputs are allowed to contain zero and negative counts.\n\n        if iterable is not None:\n            if isinstance(iterable, _collections_abc.Mapping):\n                if self:\n                    self_get = self.get\n                    for elem, count in iterable.items():\n                        self[elem] = count + self_get(elem, 0)\n                else:\n                    # fast path when counter is empty\n                    super().update(iterable)\n            else:\n                _count_elements(self, iterable)\n        if kwds:\n            self.update(kwds)\n\n    def subtract(self, iterable=None, /, **kwds):\n        '''Like dict.update() but subtracts counts instead of replacing them.\n        Counts can be reduced below zero.  Both the inputs and outputs are\n        allowed to contain zero and negative counts.\n\n        Source can be an iterable, a dictionary, or another Counter instance.\n\n        >>> c = Counter('which')\n        >>> c.subtract('witch')             # subtract elements from another iterable\n        >>> c.subtract(Counter('watch'))    # subtract elements from another counter\n        >>> c['h']                          # 2 in which, minus 1 in witch, minus 1 in watch\n        0\n        >>> c['w']                          # 1 in which, minus 1 in witch, minus 1 in watch\n        -1\n\n        '''\n        if iterable is not None:\n            self_get = self.get\n            if isinstance(iterable, _collections_abc.Mapping):\n                for elem, count in iterable.items():\n                    self[elem] = self_get(elem, 0) - count\n            else:\n                for elem in iterable:\n                    self[elem] = self_get(elem, 0) - 1\n        if kwds:\n            self.subtract(kwds)\n\n    def copy(self):\n        'Return a shallow copy.'\n        return self.__class__(self)\n\n    def __reduce__(self):\n        return self.__class__, (dict(self),)\n\n    def __delitem__(self, elem):\n        'Like dict.__delitem__() but does not raise KeyError for missing values.'\n        if elem in self:\n            super().__delitem__(elem)\n\n    def __repr__(self):\n        if not self:\n            return f'{self.__class__.__name__}()'\n        try:\n            # dict() preserves the ordering returned by most_common()\n            d = dict(self.most_common())\n        except TypeError:\n            # handle case where values are not orderable\n            d = dict(self)\n        return f'{self.__class__.__name__}({d!r})'\n\n    # Multiset-style mathematical operations discussed in:\n    #       Knuth TAOCP Volume II section 4.6.3 exercise 19\n    #       and at http://en.wikipedia.org/wiki/Multiset\n    #\n    # Outputs guaranteed to only include positive counts.\n    #\n    # To strip negative and zero counts, add-in an empty counter:\n    #       c += Counter()\n    #\n    # Rich comparison operators for multiset subset and superset tests\n    # are deliberately omitted due to semantic conflicts with the\n    # existing inherited dict equality method.  Subset and superset\n    # semantics ignore zero counts and require that p\u2264q \u2227 p\u2265q \u2192 p=q;\n    # however, that would not be the case for p=Counter(a=1, b=0)\n    # and q=Counter(a=1) where the dictionaries are not equal.\n\n    def __add__(self, other):\n        '''Add counts from two counters.\n\n        >>> Counter('abbb') + Counter('bcc')\n        Counter({'b': 4, 'c': 2, 'a': 1})\n\n        '''\n        if not isinstance(other, Counter):\n            return NotImplemented\n        result = Counter()\n        for elem, count in self.items():\n            newcount = count + other[elem]\n            if newcount > 0:\n                result[elem] = newcount\n        for elem, count in other.items():\n            if elem not in self and count > 0:\n                result[elem] = count\n        return result\n\n    def __sub__(self, other):\n        ''' Subtract count, but keep only results with positive counts.\n\n        >>> Counter('abbbc') - Counter('bccd')\n        Counter({'b': 2, 'a': 1})\n\n        '''\n        if not isinstance(other, Counter):\n            return NotImplemented\n        result = Counter()\n        for elem, count in self.items():\n            newcount = count - other[elem]\n            if newcount > 0:\n                result[elem] = newcount\n        for elem, count in other.items():\n            if elem not in self and count < 0:\n                result[elem] = 0 - count\n        return result\n\n    def __or__(self, other):\n        '''Union is the maximum of value in either of the input counters.\n\n        >>> Counter('abbb') | Counter('bcc')\n        Counter({'b': 3, 'c': 2, 'a': 1})\n\n        '''\n        if not isinstance(other, Counter):\n            return NotImplemented\n        result = Counter()\n        for elem, count in self.items():\n            other_count = other[elem]\n            newcount = other_count if count < other_count else count\n            if newcount > 0:\n                result[elem] = newcount\n        for elem, count in other.items():\n            if elem not in self and count > 0:\n                result[elem] = count\n        return result\n\n    def __and__(self, other):\n        ''' Intersection is the minimum of corresponding counts.\n\n        >>> Counter('abbb') & Counter('bcc')\n        Counter({'b': 1})\n\n        '''\n        if not isinstance(other, Counter):\n            return NotImplemented\n        result = Counter()\n        for elem, count in self.items():\n            other_count = other[elem]\n            newcount = count if count < other_count else other_count\n            if newcount > 0:\n                result[elem] = newcount\n        return result\n\n    def __pos__(self):\n        'Adds an empty counter, effectively stripping negative and zero counts'\n        result = Counter()\n        for elem, count in self.items():\n            if count > 0:\n                result[elem] = count\n        return result\n\n    def __neg__(self):\n        '''Subtracts from an empty counter.  Strips positive and zero counts,\n        and flips the sign on negative counts.\n\n        '''\n        result = Counter()\n        for elem, count in self.items():\n            if count < 0:\n                result[elem] = 0 - count\n        return result\n\n    def _keep_positive(self):\n        '''Internal method to strip elements with a negative or zero count'''\n        nonpositive = [elem for elem, count in self.items() if not count > 0]\n        for elem in nonpositive:\n            del self[elem]\n        return self\n\n    def __iadd__(self, other):\n        '''Inplace add from another counter, keeping only positive counts.\n\n        >>> c = Counter('abbb')\n        >>> c += Counter('bcc')\n        >>> c\n        Counter({'b': 4, 'c': 2, 'a': 1})\n\n        '''\n        for elem, count in other.items():\n            self[elem] += count\n        return self._keep_positive()\n\n    def __isub__(self, other):\n        '''Inplace subtract counter, but keep only results with positive counts.\n\n        >>> c = Counter('abbbc')\n        >>> c -= Counter('bccd')\n        >>> c\n        Counter({'b': 2, 'a': 1})\n\n        '''\n        for elem, count in other.items():\n            self[elem] -= count\n        return self._keep_positive()\n\n    def __ior__(self, other):\n        '''Inplace union is the maximum of value from either counter.\n\n        >>> c = Counter('abbb')\n        >>> c |= Counter('bcc')\n        >>> c\n        Counter({'b': 3, 'c': 2, 'a': 1})\n\n        '''\n        for elem, other_count in other.items():\n            count = self[elem]\n            if other_count > count:\n                self[elem] = other_count\n        return self._keep_positive()\n\n    def __iand__(self, other):\n        '''Inplace intersection is the minimum of corresponding counts.\n\n        >>> c = Counter('abbb')\n        >>> c &= Counter('bcc')\n        >>> c\n        Counter({'b': 1})\n\n        '''\n        for elem, count in self.items():\n            other_count = other[elem]\n            if other_count < count:\n                self[elem] = other_count\n        return self._keep_positive()\n\n\n########################################################################\n###  ChainMap\n########################################################################\n\nclass ChainMap(_collections_abc.MutableMapping):\n    ''' A ChainMap groups multiple dicts (or other mappings) together\n    to create a single, updateable view.\n\n    The underlying mappings are stored in a list.  That list is public and can\n    be accessed or updated using the *maps* attribute.  There is no other\n    state.\n\n    Lookups search the underlying mappings successively until a key is found.\n    In contrast, writes, updates, and deletions only operate on the first\n    mapping.\n\n    '''\n\n    def __init__(self, *maps):\n        '''Initialize a ChainMap by setting *maps* to the given mappings.\n        If no mappings are provided, a single empty dictionary is used.\n\n        '''\n        self.maps = list(maps) or [{}]          # always at least one map\n\n    def __missing__(self, key):\n        raise KeyError(key)\n\n    def __getitem__(self, key):\n        for mapping in self.maps:\n            try:\n                return mapping[key]             # can't use 'key in mapping' with defaultdict\n            except KeyError:\n                pass\n        return self.__missing__(key)            # support subclasses that define __missing__\n\n    def get(self, key, default=None):\n        return self[key] if key in self else default\n\n    def __len__(self):\n        return len(set().union(*self.maps))     # reuses stored hash values if possible\n\n    def __iter__(self):\n        d = {}\n        for mapping in reversed(self.maps):\n            d.update(dict.fromkeys(mapping))    # reuses stored hash values if possible\n        return iter(d)\n\n    def __contains__(self, key):\n        return any(key in m for m in self.maps)\n\n    def __bool__(self):\n        return any(self.maps)\n\n    @_recursive_repr()\n    def __repr__(self):\n        return f'{self.__class__.__name__}({\", \".join(map(repr, self.maps))})'\n\n    @classmethod\n    def fromkeys(cls, iterable, *args):\n        'Create a ChainMap with a single dict created from the iterable.'\n        return cls(dict.fromkeys(iterable, *args))\n\n    def copy(self):\n        'New ChainMap or subclass with a new copy of maps[0] and refs to maps[1:]'\n        return self.__class__(self.maps[0].copy(), *self.maps[1:])\n\n    __copy__ = copy\n\n    def new_child(self, m=None):                # like Django's Context.push()\n        '''New ChainMap with a new map followed by all previous maps.\n        If no map is provided, an empty dict is used.\n        '''\n        if m is None:\n            m = {}\n        return self.__class__(m, *self.maps)\n\n    @property\n    def parents(self):                          # like Django's Context.pop()\n        'New ChainMap from maps[1:].'\n        return self.__class__(*self.maps[1:])\n\n    def __setitem__(self, key, value):\n        self.maps[0][key] = value\n\n    def __delitem__(self, key):\n        try:\n            del self.maps[0][key]\n        except KeyError:\n            raise KeyError(f'Key not found in the first mapping: {key!r}')\n\n    def popitem(self):\n        'Remove and return an item pair from maps[0]. Raise KeyError is maps[0] is empty.'\n        try:\n            return self.maps[0].popitem()\n        except KeyError:\n            raise KeyError('No keys found in the first mapping.')\n\n    def pop(self, key, *args):\n        'Remove *key* from maps[0] and return its value. Raise KeyError if *key* not in maps[0].'\n        try:\n            return self.maps[0].pop(key, *args)\n        except KeyError:\n            raise KeyError(f'Key not found in the first mapping: {key!r}')\n\n    def clear(self):\n        'Clear maps[0], leaving maps[1:] intact.'\n        self.maps[0].clear()\n\n    def __ior__(self, other):\n        self.maps[0].update(other)\n        return self\n\n    def __or__(self, other):\n        if not isinstance(other, _collections_abc.Mapping):\n            return NotImplemented\n        m = self.copy()\n        m.maps[0].update(other)\n        return m\n\n    def __ror__(self, other):\n        if not isinstance(other, _collections_abc.Mapping):\n            return NotImplemented\n        m = dict(other)\n        for child in reversed(self.maps):\n            m.update(child)\n        return self.__class__(m)\n\n\n################################################################################\n### UserDict\n################################################################################\n\nclass UserDict(_collections_abc.MutableMapping):\n\n    # Start by filling-out the abstract methods\n    def __init__(self, dict=None, /, **kwargs):\n        self.data = {}\n        if dict is not None:\n            self.update(dict)\n        if kwargs:\n            self.update(kwargs)\n\n    def __len__(self):\n        return len(self.data)\n\n    def __getitem__(self, key):\n        if key in self.data:\n            return self.data[key]\n        if hasattr(self.__class__, \"__missing__\"):\n            return self.__class__.__missing__(self, key)\n        raise KeyError(key)\n\n    def __setitem__(self, key, item):\n        self.data[key] = item\n\n    def __delitem__(self, key):\n        del self.data[key]\n\n    def __iter__(self):\n        return iter(self.data)\n\n    # Modify __contains__ to work correctly when __missing__ is present\n    def __contains__(self, key):\n        return key in self.data\n\n    # Now, add the methods in dicts but not in MutableMapping\n    def __repr__(self):\n        return repr(self.data)\n\n    def __or__(self, other):\n        if isinstance(other, UserDict):\n            return self.__class__(self.data | other.data)\n        if isinstance(other, dict):\n            return self.__class__(self.data | other)\n        return NotImplemented\n\n    def __ror__(self, other):\n        if isinstance(other, UserDict):\n            return self.__class__(other.data | self.data)\n        if isinstance(other, dict):\n            return self.__class__(other | self.data)\n        return NotImplemented\n\n    def __ior__(self, other):\n        if isinstance(other, UserDict):\n            self.data |= other.data\n        else:\n            self.data |= other\n        return self\n\n    def __copy__(self):\n        inst = self.__class__.__new__(self.__class__)\n        inst.__dict__.update(self.__dict__)\n        # Create a copy and avoid triggering descriptors\n        inst.__dict__[\"data\"] = self.__dict__[\"data\"].copy()\n        return inst\n\n    def copy(self):\n        if self.__class__ is UserDict:\n            return UserDict(self.data.copy())\n        import copy\n        data = self.data\n        try:\n            self.data = {}\n            c = copy.copy(self)\n        finally:\n            self.data = data\n        c.update(self)\n        return c\n\n    @classmethod\n    def fromkeys(cls, iterable, value=None):\n        d = cls()\n        for key in iterable:\n            d[key] = value\n        return d\n\n\n################################################################################\n### UserList\n################################################################################\n\nclass UserList(_collections_abc.MutableSequence):\n    \"\"\"A more or less complete user-defined wrapper around list objects.\"\"\"\n\n    def __init__(self, initlist=None):\n        self.data = []\n        if initlist is not None:\n            # XXX should this accept an arbitrary sequence?\n            if type(initlist) == type(self.data):\n                self.data[:] = initlist\n            elif isinstance(initlist, UserList):\n                self.data[:] = initlist.data[:]\n            else:\n                self.data = list(initlist)\n\n    def __repr__(self):\n        return repr(self.data)\n\n    def __lt__(self, other):\n        return self.data < self.__cast(other)\n\n    def __le__(self, other):\n        return self.data <= self.__cast(other)\n\n    def __eq__(self, other):\n        return self.data == self.__cast(other)\n\n    def __gt__(self, other):\n        return self.data > self.__cast(other)\n\n    def __ge__(self, other):\n        return self.data >= self.__cast(other)\n\n    def __cast(self, other):\n        return other.data if isinstance(other, UserList) else other\n\n    def __contains__(self, item):\n        return item in self.data\n\n    def __len__(self):\n        return len(self.data)\n\n    def __getitem__(self, i):\n        if isinstance(i, slice):\n            return self.__class__(self.data[i])\n        else:\n            return self.data[i]\n\n    def __setitem__(self, i, item):\n        self.data[i] = item\n\n    def __delitem__(self, i):\n        del self.data[i]\n\n    def __add__(self, other):\n        if isinstance(other, UserList):\n            return self.__class__(self.data + other.data)\n        elif isinstance(other, type(self.data)):\n            return self.__class__(self.data + other)\n        return self.__class__(self.data + list(other))\n\n    def __radd__(self, other):\n        if isinstance(other, UserList):\n            return self.__class__(other.data + self.data)\n        elif isinstance(other, type(self.data)):\n            return self.__class__(other + self.data)\n        return self.__class__(list(other) + self.data)\n\n    def __iadd__(self, other):\n        if isinstance(other, UserList):\n            self.data += other.data\n        elif isinstance(other, type(self.data)):\n            self.data += other\n        else:\n            self.data += list(other)\n        return self\n\n    def __mul__(self, n):\n        return self.__class__(self.data * n)\n\n    __rmul__ = __mul__\n\n    def __imul__(self, n):\n        self.data *= n\n        return self\n\n    def __copy__(self):\n        inst = self.__class__.__new__(self.__class__)\n        inst.__dict__.update(self.__dict__)\n        # Create a copy and avoid triggering descriptors\n        inst.__dict__[\"data\"] = self.__dict__[\"data\"][:]\n        return inst\n\n    def append(self, item):\n        self.data.append(item)\n\n    def insert(self, i, item):\n        self.data.insert(i, item)\n\n    def pop(self, i=-1):\n        return self.data.pop(i)\n\n    def remove(self, item):\n        self.data.remove(item)\n\n    def clear(self):\n        self.data.clear()\n\n    def copy(self):\n        return self.__class__(self)\n\n    def count(self, item):\n        return self.data.count(item)\n\n    def index(self, item, *args):\n        return self.data.index(item, *args)\n\n    def reverse(self):\n        self.data.reverse()\n\n    def sort(self, /, *args, **kwds):\n        self.data.sort(*args, **kwds)\n\n    def extend(self, other):\n        if isinstance(other, UserList):\n            self.data.extend(other.data)\n        else:\n            self.data.extend(other)\n\n\n################################################################################\n### UserString\n################################################################################\n\nclass UserString(_collections_abc.Sequence):\n\n    def __init__(self, seq):\n        if isinstance(seq, str):\n            self.data = seq\n        elif isinstance(seq, UserString):\n            self.data = seq.data[:]\n        else:\n            self.data = str(seq)\n\n    def __str__(self):\n        return str(self.data)\n\n    def __repr__(self):\n        return repr(self.data)\n\n    def __int__(self):\n        return int(self.data)\n\n    def __float__(self):\n        return float(self.data)\n\n    def __complex__(self):\n        return complex(self.data)\n\n    def __hash__(self):\n        return hash(self.data)\n\n    def __getnewargs__(self):\n        return (self.data[:],)\n\n    def __eq__(self, string):\n        if isinstance(string, UserString):\n            return self.data == string.data\n        return self.data == string\n\n    def __lt__(self, string):\n        if isinstance(string, UserString):\n            return self.data < string.data\n        return self.data < string\n\n    def __le__(self, string):\n        if isinstance(string, UserString):\n            return self.data <= string.data\n        return self.data <= string\n\n    def __gt__(self, string):\n        if isinstance(string, UserString):\n            return self.data > string.data\n        return self.data > string\n\n    def __ge__(self, string):\n        if isinstance(string, UserString):\n            return self.data >= string.data\n        return self.data >= string\n\n    def __contains__(self, char):\n        if isinstance(char, UserString):\n            char = char.data\n        return char in self.data\n\n    def __len__(self):\n        return len(self.data)\n\n    def __getitem__(self, index):\n        return self.__class__(self.data[index])\n\n    def __add__(self, other):\n        if isinstance(other, UserString):\n            return self.__class__(self.data + other.data)\n        elif isinstance(other, str):\n            return self.__class__(self.data + other)\n        return self.__class__(self.data + str(other))\n\n    def __radd__(self, other):\n        if isinstance(other, str):\n            return self.__class__(other + self.data)\n        return self.__class__(str(other) + self.data)\n\n    def __mul__(self, n):\n        return self.__class__(self.data * n)\n\n    __rmul__ = __mul__\n\n    def __mod__(self, args):\n        return self.__class__(self.data % args)\n\n    def __rmod__(self, template):\n        return self.__class__(str(template) % self)\n\n    # the following methods are defined in alphabetical order:\n    def capitalize(self):\n        return self.__class__(self.data.capitalize())\n\n    def casefold(self):\n        return self.__class__(self.data.casefold())\n\n    def center(self, width, *args):\n        return self.__class__(self.data.center(width, *args))\n\n    def count(self, sub, start=0, end=_sys.maxsize):\n        if isinstance(sub, UserString):\n            sub = sub.data\n        return self.data.count(sub, start, end)\n\n    def removeprefix(self, prefix, /):\n        if isinstance(prefix, UserString):\n            prefix = prefix.data\n        return self.__class__(self.data.removeprefix(prefix))\n\n    def removesuffix(self, suffix, /):\n        if isinstance(suffix, UserString):\n            suffix = suffix.data\n        return self.__class__(self.data.removesuffix(suffix))\n\n    def encode(self, encoding='utf-8', errors='strict'):\n        encoding = 'utf-8' if encoding is None else encoding\n        errors = 'strict' if errors is None else errors\n        return self.data.encode(encoding, errors)\n\n    def endswith(self, suffix, start=0, end=_sys.maxsize):\n        return self.data.endswith(suffix, start, end)\n\n    def expandtabs(self, tabsize=8):\n        return self.__class__(self.data.expandtabs(tabsize))\n\n    def find(self, sub, start=0, end=_sys.maxsize):\n        if isinstance(sub, UserString):\n            sub = sub.data\n        return self.data.find(sub, start, end)\n\n    def format(self, /, *args, **kwds):\n        return self.data.format(*args, **kwds)\n\n    def format_map(self, mapping):\n        return self.data.format_map(mapping)\n\n    def index(self, sub, start=0, end=_sys.maxsize):\n        return self.data.index(sub, start, end)\n\n    def isalpha(self):\n        return self.data.isalpha()\n\n    def isalnum(self):\n        return self.data.isalnum()\n\n    def isascii(self):\n        return self.data.isascii()\n\n    def isdecimal(self):\n        return self.data.isdecimal()\n\n    def isdigit(self):\n        return self.data.isdigit()\n\n    def isidentifier(self):\n        return self.data.isidentifier()\n\n    def islower(self):\n        return self.data.islower()\n\n    def isnumeric(self):\n        return self.data.isnumeric()\n\n    def isprintable(self):\n        return self.data.isprintable()\n\n    def isspace(self):\n        return self.data.isspace()\n\n    def istitle(self):\n        return self.data.istitle()\n\n    def isupper(self):\n        return self.data.isupper()\n\n    def join(self, seq):\n        return self.data.join(seq)\n\n    def ljust(self, width, *args):\n        return self.__class__(self.data.ljust(width, *args))\n\n    def lower(self):\n        return self.__class__(self.data.lower())\n\n    def lstrip(self, chars=None):\n        return self.__class__(self.data.lstrip(chars))\n\n    maketrans = str.maketrans\n\n    def partition(self, sep):\n        return self.data.partition(sep)\n\n    def replace(self, old, new, maxsplit=-1):\n        if isinstance(old, UserString):\n            old = old.data\n        if isinstance(new, UserString):\n            new = new.data\n        return self.__class__(self.data.replace(old, new, maxsplit))\n\n    def rfind(self, sub, start=0, end=_sys.maxsize):\n        if isinstance(sub, UserString):\n            sub = sub.data\n        return self.data.rfind(sub, start, end)\n\n    def rindex(self, sub, start=0, end=_sys.maxsize):\n        return self.data.rindex(sub, start, end)\n\n    def rjust(self, width, *args):\n        return self.__class__(self.data.rjust(width, *args))\n\n    def rpartition(self, sep):\n        return self.data.rpartition(sep)\n\n    def rstrip(self, chars=None):\n        return self.__class__(self.data.rstrip(chars))\n\n    def split(self, sep=None, maxsplit=-1):\n        return self.data.split(sep, maxsplit)\n\n    def rsplit(self, sep=None, maxsplit=-1):\n        return self.data.rsplit(sep, maxsplit)\n\n    def splitlines(self, keepends=False):\n        return self.data.splitlines(keepends)\n\n    def startswith(self, prefix, start=0, end=_sys.maxsize):\n        return self.data.startswith(prefix, start, end)\n\n    def strip(self, chars=None):\n        return self.__class__(self.data.strip(chars))\n\n    def swapcase(self):\n        return self.__class__(self.data.swapcase())\n\n    def title(self):\n        return self.__class__(self.data.title())\n\n    def translate(self, *args):\n        return self.__class__(self.data.translate(*args))\n\n    def upper(self):\n        return self.__class__(self.data.upper())\n\n    def zfill(self, width):\n        return self.__class__(self.data.zfill(width))\n", 1508], "C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py": ["# Copyright 2009 Brian Quinlan. All Rights Reserved.\n# Licensed to PSF under a Contributor Agreement.\n\n\"\"\"Implements ProcessPoolExecutor.\n\nThe following diagram and text describe the data-flow through the system:\n\n|======================= In-process =====================|== Out-of-process ==|\n\n+----------+     +----------+       +--------+     +-----------+    +---------+\n|          |  => | Work Ids |       |        |     | Call Q    |    | Process |\n|          |     +----------+       |        |     +-----------+    |  Pool   |\n|          |     | ...      |       |        |     | ...       |    +---------+\n|          |     | 6        |    => |        |  => | 5, call() | => |         |\n|          |     | 7        |       |        |     | ...       |    |         |\n| Process  |     | ...      |       | Local  |     +-----------+    | Process |\n|  Pool    |     +----------+       | Worker |                      |  #1..n  |\n| Executor |                        | Thread |                      |         |\n|          |     +----------- +     |        |     +-----------+    |         |\n|          | <=> | Work Items | <=> |        | <=  | Result Q  | <= |         |\n|          |     +------------+     |        |     +-----------+    |         |\n|          |     | 6: call()  |     |        |     | ...       |    |         |\n|          |     |    future  |     |        |     | 4, result |    |         |\n|          |     | ...        |     |        |     | 3, except |    |         |\n+----------+     +------------+     +--------+     +-----------+    +---------+\n\nExecutor.submit() called:\n- creates a uniquely numbered _WorkItem and adds it to the \"Work Items\" dict\n- adds the id of the _WorkItem to the \"Work Ids\" queue\n\nLocal worker thread:\n- reads work ids from the \"Work Ids\" queue and looks up the corresponding\n  WorkItem from the \"Work Items\" dict: if the work item has been cancelled then\n  it is simply removed from the dict, otherwise it is repackaged as a\n  _CallItem and put in the \"Call Q\". New _CallItems are put in the \"Call Q\"\n  until \"Call Q\" is full. NOTE: the size of the \"Call Q\" is kept small because\n  calls placed in the \"Call Q\" can no longer be cancelled with Future.cancel().\n- reads _ResultItems from \"Result Q\", updates the future stored in the\n  \"Work Items\" dict and deletes the dict entry\n\nProcess #1..n:\n- reads _CallItems from \"Call Q\", executes the calls, and puts the resulting\n  _ResultItems in \"Result Q\"\n\"\"\"\n\n__author__ = 'Brian Quinlan (brian@sweetapp.com)'\n\nimport os\nfrom concurrent.futures import _base\nimport queue\nimport multiprocessing as mp\nimport multiprocessing.connection\nfrom multiprocessing.queues import Queue\nimport threading\nimport weakref\nfrom functools import partial\nimport itertools\nimport sys\nimport traceback\n\n\n_threads_wakeups = weakref.WeakKeyDictionary()\n_global_shutdown = False\n\n\nclass _ThreadWakeup:\n    def __init__(self):\n        self._closed = False\n        self._reader, self._writer = mp.Pipe(duplex=False)\n\n    def close(self):\n        if not self._closed:\n            self._closed = True\n            self._writer.close()\n            self._reader.close()\n\n    def wakeup(self):\n        if not self._closed:\n            self._writer.send_bytes(b\"\")\n\n    def clear(self):\n        if not self._closed:\n            while self._reader.poll():\n                self._reader.recv_bytes()\n\n\ndef _python_exit():\n    global _global_shutdown\n    _global_shutdown = True\n    items = list(_threads_wakeups.items())\n    for _, thread_wakeup in items:\n        # call not protected by ProcessPoolExecutor._shutdown_lock\n        thread_wakeup.wakeup()\n    for t, _ in items:\n        t.join()\n\n# Register for `_python_exit()` to be called just before joining all\n# non-daemon threads. This is used instead of `atexit.register()` for\n# compatibility with subinterpreters, which no longer support daemon threads.\n# See bpo-39812 for context.\nthreading._register_atexit(_python_exit)\n\n# Controls how many more calls than processes will be queued in the call queue.\n# A smaller number will mean that processes spend more time idle waiting for\n# work while a larger number will make Future.cancel() succeed less frequently\n# (Futures in the call queue cannot be cancelled).\nEXTRA_QUEUED_CALLS = 1\n\n\n# On Windows, WaitForMultipleObjects is used to wait for processes to finish.\n# It can wait on, at most, 63 objects. There is an overhead of two objects:\n# - the result queue reader\n# - the thread wakeup reader\n_MAX_WINDOWS_WORKERS = 63 - 2\n\n# Hack to embed stringification of remote traceback in local traceback\n\nclass _RemoteTraceback(Exception):\n    def __init__(self, tb):\n        self.tb = tb\n    def __str__(self):\n        return self.tb\n\nclass _ExceptionWithTraceback:\n    def __init__(self, exc, tb):\n        tb = traceback.format_exception(type(exc), exc, tb)\n        tb = ''.join(tb)\n        self.exc = exc\n        self.tb = '\\n\"\"\"\\n%s\"\"\"' % tb\n    def __reduce__(self):\n        return _rebuild_exc, (self.exc, self.tb)\n\ndef _rebuild_exc(exc, tb):\n    exc.__cause__ = _RemoteTraceback(tb)\n    return exc\n\nclass _WorkItem(object):\n    def __init__(self, future, fn, args, kwargs):\n        self.future = future\n        self.fn = fn\n        self.args = args\n        self.kwargs = kwargs\n\nclass _ResultItem(object):\n    def __init__(self, work_id, exception=None, result=None):\n        self.work_id = work_id\n        self.exception = exception\n        self.result = result\n\nclass _CallItem(object):\n    def __init__(self, work_id, fn, args, kwargs):\n        self.work_id = work_id\n        self.fn = fn\n        self.args = args\n        self.kwargs = kwargs\n\n\nclass _SafeQueue(Queue):\n    \"\"\"Safe Queue set exception to the future object linked to a job\"\"\"\n    def __init__(self, max_size=0, *, ctx, pending_work_items, shutdown_lock,\n                 thread_wakeup):\n        self.pending_work_items = pending_work_items\n        self.shutdown_lock = shutdown_lock\n        self.thread_wakeup = thread_wakeup\n        super().__init__(max_size, ctx=ctx)\n\n    def _on_queue_feeder_error(self, e, obj):\n        if isinstance(obj, _CallItem):\n            tb = traceback.format_exception(type(e), e, e.__traceback__)\n            e.__cause__ = _RemoteTraceback('\\n\"\"\"\\n{}\"\"\"'.format(''.join(tb)))\n            work_item = self.pending_work_items.pop(obj.work_id, None)\n            with self.shutdown_lock:\n                self.thread_wakeup.wakeup()\n            # work_item can be None if another process terminated. In this\n            # case, the executor_manager_thread fails all work_items\n            # with BrokenProcessPool\n            if work_item is not None:\n                work_item.future.set_exception(e)\n        else:\n            super()._on_queue_feeder_error(e, obj)\n\n\ndef _get_chunks(*iterables, chunksize):\n    \"\"\" Iterates over zip()ed iterables in chunks. \"\"\"\n    it = zip(*iterables)\n    while True:\n        chunk = tuple(itertools.islice(it, chunksize))\n        if not chunk:\n            return\n        yield chunk\n\n\ndef _process_chunk(fn, chunk):\n    \"\"\" Processes a chunk of an iterable passed to map.\n\n    Runs the function passed to map() on a chunk of the\n    iterable passed to map.\n\n    This function is run in a separate process.\n\n    \"\"\"\n    return [fn(*args) for args in chunk]\n\n\ndef _sendback_result(result_queue, work_id, result=None, exception=None):\n    \"\"\"Safely send back the given result or exception\"\"\"\n    try:\n        result_queue.put(_ResultItem(work_id, result=result,\n                                     exception=exception))\n    except BaseException as e:\n        exc = _ExceptionWithTraceback(e, e.__traceback__)\n        result_queue.put(_ResultItem(work_id, exception=exc))\n\n\ndef _process_worker(call_queue, result_queue, initializer, initargs):\n    \"\"\"Evaluates calls from call_queue and places the results in result_queue.\n\n    This worker is run in a separate process.\n\n    Args:\n        call_queue: A ctx.Queue of _CallItems that will be read and\n            evaluated by the worker.\n        result_queue: A ctx.Queue of _ResultItems that will written\n            to by the worker.\n        initializer: A callable initializer, or None\n        initargs: A tuple of args for the initializer\n    \"\"\"\n    if initializer is not None:\n        try:\n            initializer(*initargs)\n        except BaseException:\n            _base.LOGGER.critical('Exception in initializer:', exc_info=True)\n            # The parent will notice that the process stopped and\n            # mark the pool broken\n            return\n    while True:\n        call_item = call_queue.get(block=True)\n        if call_item is None:\n            # Wake up queue management thread\n            result_queue.put(os.getpid())\n            return\n        try:\n            r = call_item.fn(*call_item.args, **call_item.kwargs)\n        except BaseException as e:\n            exc = _ExceptionWithTraceback(e, e.__traceback__)\n            _sendback_result(result_queue, call_item.work_id, exception=exc)\n        else:\n            _sendback_result(result_queue, call_item.work_id, result=r)\n            del r\n\n        # Liberate the resource as soon as possible, to avoid holding onto\n        # open files or shared memory that is not needed anymore\n        del call_item\n\n\nclass _ExecutorManagerThread(threading.Thread):\n    \"\"\"Manages the communication between this process and the worker processes.\n\n    The manager is run in a local thread.\n\n    Args:\n        executor: A reference to the ProcessPoolExecutor that owns\n            this thread. A weakref will be own by the manager as well as\n            references to internal objects used to introspect the state of\n            the executor.\n    \"\"\"\n\n    def __init__(self, executor):\n        # Store references to necessary internals of the executor.\n\n        # A _ThreadWakeup to allow waking up the queue_manager_thread from the\n        # main Thread and avoid deadlocks caused by permanently locked queues.\n        self.thread_wakeup = executor._executor_manager_thread_wakeup\n        self.shutdown_lock = executor._shutdown_lock\n\n        # A weakref.ref to the ProcessPoolExecutor that owns this thread. Used\n        # to determine if the ProcessPoolExecutor has been garbage collected\n        # and that the manager can exit.\n        # When the executor gets garbage collected, the weakref callback\n        # will wake up the queue management thread so that it can terminate\n        # if there is no pending work item.\n        def weakref_cb(_,\n                       thread_wakeup=self.thread_wakeup,\n                       shutdown_lock=self.shutdown_lock):\n            mp.util.debug('Executor collected: triggering callback for'\n                          ' QueueManager wakeup')\n            with shutdown_lock:\n                thread_wakeup.wakeup()\n\n        self.executor_reference = weakref.ref(executor, weakref_cb)\n\n        # A list of the ctx.Process instances used as workers.\n        self.processes = executor._processes\n\n        # A ctx.Queue that will be filled with _CallItems derived from\n        # _WorkItems for processing by the process workers.\n        self.call_queue = executor._call_queue\n\n        # A ctx.SimpleQueue of _ResultItems generated by the process workers.\n        self.result_queue = executor._result_queue\n\n        # A queue.Queue of work ids e.g. Queue([5, 6, ...]).\n        self.work_ids_queue = executor._work_ids\n\n        # A dict mapping work ids to _WorkItems e.g.\n        #     {5: <_WorkItem...>, 6: <_WorkItem...>, ...}\n        self.pending_work_items = executor._pending_work_items\n\n        super().__init__()\n\n    def run(self):\n        # Main loop for the executor manager thread.\n\n        while True:\n            self.add_call_item_to_queue()\n\n            result_item, is_broken, cause = self.wait_result_broken_or_wakeup()\n\n            if is_broken:\n                self.terminate_broken(cause)\n                return\n            if result_item is not None:\n                self.process_result_item(result_item)\n                # Delete reference to result_item to avoid keeping references\n                # while waiting on new results.\n                del result_item\n\n                # attempt to increment idle process count\n                executor = self.executor_reference()\n                if executor is not None:\n                    executor._idle_worker_semaphore.release()\n                del executor\n\n            if self.is_shutting_down():\n                self.flag_executor_shutting_down()\n\n                # Since no new work items can be added, it is safe to shutdown\n                # this thread if there are no pending work items.\n                if not self.pending_work_items:\n                    self.join_executor_internals()\n                    return\n\n    def add_call_item_to_queue(self):\n        # Fills call_queue with _WorkItems from pending_work_items.\n        # This function never blocks.\n        while True:\n            if self.call_queue.full():\n                return\n            try:\n                work_id = self.work_ids_queue.get(block=False)\n            except queue.Empty:\n                return\n            else:\n                work_item = self.pending_work_items[work_id]\n\n                if work_item.future.set_running_or_notify_cancel():\n                    self.call_queue.put(_CallItem(work_id,\n                                                  work_item.fn,\n                                                  work_item.args,\n                                                  work_item.kwargs),\n                                        block=True)\n                else:\n                    del self.pending_work_items[work_id]\n                    continue\n\n    def wait_result_broken_or_wakeup(self):\n        # Wait for a result to be ready in the result_queue while checking\n        # that all worker processes are still running, or for a wake up\n        # signal send. The wake up signals come either from new tasks being\n        # submitted, from the executor being shutdown/gc-ed, or from the\n        # shutdown of the python interpreter.\n        result_reader = self.result_queue._reader\n        assert not self.thread_wakeup._closed\n        wakeup_reader = self.thread_wakeup._reader\n        readers = [result_reader, wakeup_reader]\n        worker_sentinels = [p.sentinel for p in self.processes.values()]\n        ready = mp.connection.wait(readers + worker_sentinels)\n\n        cause = None\n        is_broken = True\n        result_item = None\n        if result_reader in ready:\n            try:\n                result_item = result_reader.recv()\n                is_broken = False\n            except BaseException as e:\n                cause = traceback.format_exception(type(e), e, e.__traceback__)\n\n        elif wakeup_reader in ready:\n            is_broken = False\n\n        with self.shutdown_lock:\n            self.thread_wakeup.clear()\n\n        return result_item, is_broken, cause\n\n    def process_result_item(self, result_item):\n        # Process the received a result_item. This can be either the PID of a\n        # worker that exited gracefully or a _ResultItem\n\n        if isinstance(result_item, int):\n            # Clean shutdown of a worker using its PID\n            # (avoids marking the executor broken)\n            assert self.is_shutting_down()\n            p = self.processes.pop(result_item)\n            p.join()\n            if not self.processes:\n                self.join_executor_internals()\n                return\n        else:\n            # Received a _ResultItem so mark the future as completed.\n            work_item = self.pending_work_items.pop(result_item.work_id, None)\n            # work_item can be None if another process terminated (see above)\n            if work_item is not None:\n                if result_item.exception:\n                    work_item.future.set_exception(result_item.exception)\n                else:\n                    work_item.future.set_result(result_item.result)\n\n    def is_shutting_down(self):\n        # Check whether we should start shutting down the executor.\n        executor = self.executor_reference()\n        # No more work items can be added if:\n        #   - The interpreter is shutting down OR\n        #   - The executor that owns this worker has been collected OR\n        #   - The executor that owns this worker has been shutdown.\n        return (_global_shutdown or executor is None\n                or executor._shutdown_thread)\n\n    def terminate_broken(self, cause):\n        # Terminate the executor because it is in a broken state. The cause\n        # argument can be used to display more information on the error that\n        # lead the executor into becoming broken.\n\n        # Mark the process pool broken so that submits fail right now.\n        executor = self.executor_reference()\n        if executor is not None:\n            executor._broken = ('A child process terminated '\n                                'abruptly, the process pool is not '\n                                'usable anymore')\n            executor._shutdown_thread = True\n            executor = None\n\n        # All pending tasks are to be marked failed with the following\n        # BrokenProcessPool error\n        bpe = BrokenProcessPool(\"A process in the process pool was \"\n                                \"terminated abruptly while the future was \"\n                                \"running or pending.\")\n        if cause is not None:\n            bpe.__cause__ = _RemoteTraceback(\n                f\"\\n'''\\n{''.join(cause)}'''\")\n\n        # Mark pending tasks as failed.\n        for work_id, work_item in self.pending_work_items.items():\n            work_item.future.set_exception(bpe)\n            # Delete references to object. See issue16284\n            del work_item\n        self.pending_work_items.clear()\n\n        # Terminate remaining workers forcibly: the queues or their\n        # locks may be in a dirty state and block forever.\n        for p in self.processes.values():\n            p.terminate()\n\n        # clean up resources\n        self.join_executor_internals()\n\n    def flag_executor_shutting_down(self):\n        # Flag the executor as shutting down and cancel remaining tasks if\n        # requested as early as possible if it is not gc-ed yet.\n        executor = self.executor_reference()\n        if executor is not None:\n            executor._shutdown_thread = True\n            # Cancel pending work items if requested.\n            if executor._cancel_pending_futures:\n                # Cancel all pending futures and update pending_work_items\n                # to only have futures that are currently running.\n                new_pending_work_items = {}\n                for work_id, work_item in self.pending_work_items.items():\n                    if not work_item.future.cancel():\n                        new_pending_work_items[work_id] = work_item\n                self.pending_work_items = new_pending_work_items\n                # Drain work_ids_queue since we no longer need to\n                # add items to the call queue.\n                while True:\n                    try:\n                        self.work_ids_queue.get_nowait()\n                    except queue.Empty:\n                        break\n                # Make sure we do this only once to not waste time looping\n                # on running processes over and over.\n                executor._cancel_pending_futures = False\n\n    def shutdown_workers(self):\n        n_children_to_stop = self.get_n_children_alive()\n        n_sentinels_sent = 0\n        # Send the right number of sentinels, to make sure all children are\n        # properly terminated.\n        while (n_sentinels_sent < n_children_to_stop\n                and self.get_n_children_alive() > 0):\n            for i in range(n_children_to_stop - n_sentinels_sent):\n                try:\n                    self.call_queue.put_nowait(None)\n                    n_sentinels_sent += 1\n                except queue.Full:\n                    break\n\n    def join_executor_internals(self):\n        self.shutdown_workers()\n        # Release the queue's resources as soon as possible.\n        self.call_queue.close()\n        self.call_queue.join_thread()\n        with self.shutdown_lock:\n            self.thread_wakeup.close()\n        # If .join() is not called on the created processes then\n        # some ctx.Queue methods may deadlock on Mac OS X.\n        for p in self.processes.values():\n            p.join()\n\n    def get_n_children_alive(self):\n        # This is an upper bound on the number of children alive.\n        return sum(p.is_alive() for p in self.processes.values())\n\n\n_system_limits_checked = False\n_system_limited = None\n\n\ndef _check_system_limits():\n    global _system_limits_checked, _system_limited\n    if _system_limits_checked:\n        if _system_limited:\n            raise NotImplementedError(_system_limited)\n    _system_limits_checked = True\n    try:\n        nsems_max = os.sysconf(\"SC_SEM_NSEMS_MAX\")\n    except (AttributeError, ValueError):\n        # sysconf not available or setting not available\n        return\n    if nsems_max == -1:\n        # indetermined limit, assume that limit is determined\n        # by available memory only\n        return\n    if nsems_max >= 256:\n        # minimum number of semaphores available\n        # according to POSIX\n        return\n    _system_limited = (\"system provides too few semaphores (%d\"\n                       \" available, 256 necessary)\" % nsems_max)\n    raise NotImplementedError(_system_limited)\n\n\ndef _chain_from_iterable_of_lists(iterable):\n    \"\"\"\n    Specialized implementation of itertools.chain.from_iterable.\n    Each item in *iterable* should be a list.  This function is\n    careful not to keep references to yielded objects.\n    \"\"\"\n    for element in iterable:\n        element.reverse()\n        while element:\n            yield element.pop()\n\n\nclass BrokenProcessPool(_base.BrokenExecutor):\n    \"\"\"\n    Raised when a process in a ProcessPoolExecutor terminated abruptly\n    while a future was in the running state.\n    \"\"\"\n\n\nclass ProcessPoolExecutor(_base.Executor):\n    def __init__(self, max_workers=None, mp_context=None,\n                 initializer=None, initargs=()):\n        \"\"\"Initializes a new ProcessPoolExecutor instance.\n\n        Args:\n            max_workers: The maximum number of processes that can be used to\n                execute the given calls. If None or not given then as many\n                worker processes will be created as the machine has processors.\n            mp_context: A multiprocessing context to launch the workers. This\n                object should provide SimpleQueue, Queue and Process.\n            initializer: A callable used to initialize worker processes.\n            initargs: A tuple of arguments to pass to the initializer.\n        \"\"\"\n        _check_system_limits()\n\n        if max_workers is None:\n            self._max_workers = os.cpu_count() or 1\n            if sys.platform == 'win32':\n                self._max_workers = min(_MAX_WINDOWS_WORKERS,\n                                        self._max_workers)\n        else:\n            if max_workers <= 0:\n                raise ValueError(\"max_workers must be greater than 0\")\n            elif (sys.platform == 'win32' and\n                max_workers > _MAX_WINDOWS_WORKERS):\n                raise ValueError(\n                    f\"max_workers must be <= {_MAX_WINDOWS_WORKERS}\")\n\n            self._max_workers = max_workers\n\n        if mp_context is None:\n            mp_context = mp.get_context()\n        self._mp_context = mp_context\n\n        if initializer is not None and not callable(initializer):\n            raise TypeError(\"initializer must be a callable\")\n        self._initializer = initializer\n        self._initargs = initargs\n\n        # Management thread\n        self._executor_manager_thread = None\n\n        # Map of pids to processes\n        self._processes = {}\n\n        # Shutdown is a two-step process.\n        self._shutdown_thread = False\n        self._shutdown_lock = threading.Lock()\n        self._idle_worker_semaphore = threading.Semaphore(0)\n        self._broken = False\n        self._queue_count = 0\n        self._pending_work_items = {}\n        self._cancel_pending_futures = False\n\n        # _ThreadWakeup is a communication channel used to interrupt the wait\n        # of the main loop of executor_manager_thread from another thread (e.g.\n        # when calling executor.submit or executor.shutdown). We do not use the\n        # _result_queue to send wakeup signals to the executor_manager_thread\n        # as it could result in a deadlock if a worker process dies with the\n        # _result_queue write lock still acquired.\n        #\n        # _shutdown_lock must be locked to access _ThreadWakeup.\n        self._executor_manager_thread_wakeup = _ThreadWakeup()\n\n        # Create communication channels for the executor\n        # Make the call queue slightly larger than the number of processes to\n        # prevent the worker processes from idling. But don't make it too big\n        # because futures in the call queue cannot be cancelled.\n        queue_size = self._max_workers + EXTRA_QUEUED_CALLS\n        self._call_queue = _SafeQueue(\n            max_size=queue_size, ctx=self._mp_context,\n            pending_work_items=self._pending_work_items,\n            shutdown_lock=self._shutdown_lock,\n            thread_wakeup=self._executor_manager_thread_wakeup)\n        # Killed worker processes can produce spurious \"broken pipe\"\n        # tracebacks in the queue's own worker thread. But we detect killed\n        # processes anyway, so silence the tracebacks.\n        self._call_queue._ignore_epipe = True\n        self._result_queue = mp_context.SimpleQueue()\n        self._work_ids = queue.Queue()\n\n    def _start_executor_manager_thread(self):\n        if self._executor_manager_thread is None:\n            # Start the processes so that their sentinels are known.\n            self._executor_manager_thread = _ExecutorManagerThread(self)\n            self._executor_manager_thread.start()\n            _threads_wakeups[self._executor_manager_thread] = \\\n                self._executor_manager_thread_wakeup\n\n    def _adjust_process_count(self):\n        # if there's an idle process, we don't need to spawn a new one.\n        if self._idle_worker_semaphore.acquire(blocking=False):\n            return\n\n        process_count = len(self._processes)\n        if process_count < self._max_workers:\n            p = self._mp_context.Process(\n                target=_process_worker,\n                args=(self._call_queue,\n                      self._result_queue,\n                      self._initializer,\n                      self._initargs))\n            p.start()\n            self._processes[p.pid] = p\n\n    def submit(self, fn, /, *args, **kwargs):\n        with self._shutdown_lock:\n            if self._broken:\n                raise BrokenProcessPool(self._broken)\n            if self._shutdown_thread:\n                raise RuntimeError('cannot schedule new futures after shutdown')\n            if _global_shutdown:\n                raise RuntimeError('cannot schedule new futures after '\n                                   'interpreter shutdown')\n\n            f = _base.Future()\n            w = _WorkItem(f, fn, args, kwargs)\n\n            self._pending_work_items[self._queue_count] = w\n            self._work_ids.put(self._queue_count)\n            self._queue_count += 1\n            # Wake up queue management thread\n            self._executor_manager_thread_wakeup.wakeup()\n\n            self._adjust_process_count()\n            self._start_executor_manager_thread()\n            return f\n    submit.__doc__ = _base.Executor.submit.__doc__\n\n    def map(self, fn, *iterables, timeout=None, chunksize=1):\n        \"\"\"Returns an iterator equivalent to map(fn, iter).\n\n        Args:\n            fn: A callable that will take as many arguments as there are\n                passed iterables.\n            timeout: The maximum number of seconds to wait. If None, then there\n                is no limit on the wait time.\n            chunksize: If greater than one, the iterables will be chopped into\n                chunks of size chunksize and submitted to the process pool.\n                If set to one, the items in the list will be sent one at a time.\n\n        Returns:\n            An iterator equivalent to: map(func, *iterables) but the calls may\n            be evaluated out-of-order.\n\n        Raises:\n            TimeoutError: If the entire result iterator could not be generated\n                before the given timeout.\n            Exception: If fn(*args) raises for any values.\n        \"\"\"\n        if chunksize < 1:\n            raise ValueError(\"chunksize must be >= 1.\")\n\n        results = super().map(partial(_process_chunk, fn),\n                              _get_chunks(*iterables, chunksize=chunksize),\n                              timeout=timeout)\n        return _chain_from_iterable_of_lists(results)\n\n    def shutdown(self, wait=True, *, cancel_futures=False):\n        with self._shutdown_lock:\n            self._cancel_pending_futures = cancel_futures\n            self._shutdown_thread = True\n            if self._executor_manager_thread_wakeup is not None:\n                # Wake up queue management thread\n                self._executor_manager_thread_wakeup.wakeup()\n\n        if self._executor_manager_thread is not None and wait:\n            self._executor_manager_thread.join()\n        # To reduce the risk of opening too many files, remove references to\n        # objects that use file descriptors.\n        self._executor_manager_thread = None\n        self._call_queue = None\n        if self._result_queue is not None and wait:\n            self._result_queue.close()\n        self._result_queue = None\n        self._processes = None\n        self._executor_manager_thread_wakeup = None\n\n    shutdown.__doc__ = _base.Executor.shutdown.__doc__\n", 751], "C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\copyreg.py": ["\"\"\"Helper to provide extensibility for pickle.\n\nThis is only useful to add pickle support for extension types defined in\nC, not for instances of user-defined classes.\n\"\"\"\n\n__all__ = [\"pickle\", \"constructor\",\n           \"add_extension\", \"remove_extension\", \"clear_extension_cache\"]\n\ndispatch_table = {}\n\ndef pickle(ob_type, pickle_function, constructor_ob=None):\n    if not callable(pickle_function):\n        raise TypeError(\"reduction functions must be callable\")\n    dispatch_table[ob_type] = pickle_function\n\n    # The constructor_ob function is a vestige of safe for unpickling.\n    # There is no reason for the caller to pass it anymore.\n    if constructor_ob is not None:\n        constructor(constructor_ob)\n\ndef constructor(object):\n    if not callable(object):\n        raise TypeError(\"constructors must be callable\")\n\n# Example: provide pickling support for complex numbers.\n\ntry:\n    complex\nexcept NameError:\n    pass\nelse:\n\n    def pickle_complex(c):\n        return complex, (c.real, c.imag)\n\n    pickle(complex, pickle_complex, complex)\n\n# Support for pickling new-style objects\n\ndef _reconstructor(cls, base, state):\n    if base is object:\n        obj = object.__new__(cls)\n    else:\n        obj = base.__new__(cls, state)\n        if base.__init__ != object.__init__:\n            base.__init__(obj, state)\n    return obj\n\n_HEAPTYPE = 1<<9\n_new_type = type(int.__new__)\n\n# Python code for object.__reduce_ex__ for protocols 0 and 1\n\ndef _reduce_ex(self, proto):\n    assert proto < 2\n    cls = self.__class__\n    for base in cls.__mro__:\n        if hasattr(base, '__flags__') and not base.__flags__ & _HEAPTYPE:\n            break\n        new = base.__new__\n        if isinstance(new, _new_type) and new.__self__ is base:\n            break\n    else:\n        base = object # not really reachable\n    if base is object:\n        state = None\n    else:\n        if base is cls:\n            raise TypeError(f\"cannot pickle {cls.__name__!r} object\")\n        state = base(self)\n    args = (cls, base, state)\n    try:\n        getstate = self.__getstate__\n    except AttributeError:\n        if getattr(self, \"__slots__\", None):\n            raise TypeError(f\"cannot pickle {cls.__name__!r} object: \"\n                            f\"a class that defines __slots__ without \"\n                            f\"defining __getstate__ cannot be pickled \"\n                            f\"with protocol {proto}\") from None\n        try:\n            dict = self.__dict__\n        except AttributeError:\n            dict = None\n    else:\n        dict = getstate()\n    if dict:\n        return _reconstructor, args, dict\n    else:\n        return _reconstructor, args\n\n# Helper for __reduce_ex__ protocol 2\n\ndef __newobj__(cls, *args):\n    return cls.__new__(cls, *args)\n\ndef __newobj_ex__(cls, args, kwargs):\n    \"\"\"Used by pickle protocol 4, instead of __newobj__ to allow classes with\n    keyword-only arguments to be pickled correctly.\n    \"\"\"\n    return cls.__new__(cls, *args, **kwargs)\n\ndef _slotnames(cls):\n    \"\"\"Return a list of slot names for a given class.\n\n    This needs to find slots defined by the class and its bases, so we\n    can't simply return the __slots__ attribute.  We must walk down\n    the Method Resolution Order and concatenate the __slots__ of each\n    class found there.  (This assumes classes don't modify their\n    __slots__ attribute to misrepresent their slots after the class is\n    defined.)\n    \"\"\"\n\n    # Get the value from a cache in the class if possible\n    names = cls.__dict__.get(\"__slotnames__\")\n    if names is not None:\n        return names\n\n    # Not cached -- calculate the value\n    names = []\n    if not hasattr(cls, \"__slots__\"):\n        # This class has no slots\n        pass\n    else:\n        # Slots found -- gather slot names from all base classes\n        for c in cls.__mro__:\n            if \"__slots__\" in c.__dict__:\n                slots = c.__dict__['__slots__']\n                # if class has a single slot, it can be given as a string\n                if isinstance(slots, str):\n                    slots = (slots,)\n                for name in slots:\n                    # special descriptors\n                    if name in (\"__dict__\", \"__weakref__\"):\n                        continue\n                    # mangled names\n                    elif name.startswith('__') and not name.endswith('__'):\n                        stripped = c.__name__.lstrip('_')\n                        if stripped:\n                            names.append('_%s%s' % (stripped, name))\n                        else:\n                            names.append(name)\n                    else:\n                        names.append(name)\n\n    # Cache the outcome in the class if at all possible\n    try:\n        cls.__slotnames__ = names\n    except:\n        pass # But don't die if we can't\n\n    return names\n\n# A registry of extension codes.  This is an ad-hoc compression\n# mechanism.  Whenever a global reference to <module>, <name> is about\n# to be pickled, the (<module>, <name>) tuple is looked up here to see\n# if it is a registered extension code for it.  Extension codes are\n# universal, so that the meaning of a pickle does not depend on\n# context.  (There are also some codes reserved for local use that\n# don't have this restriction.)  Codes are positive ints; 0 is\n# reserved.\n\n_extension_registry = {}                # key -> code\n_inverted_registry = {}                 # code -> key\n_extension_cache = {}                   # code -> object\n# Don't ever rebind those names:  pickling grabs a reference to them when\n# it's initialized, and won't see a rebinding.\n\ndef add_extension(module, name, code):\n    \"\"\"Register an extension code.\"\"\"\n    code = int(code)\n    if not 1 <= code <= 0x7fffffff:\n        raise ValueError(\"code out of range\")\n    key = (module, name)\n    if (_extension_registry.get(key) == code and\n        _inverted_registry.get(code) == key):\n        return # Redundant registrations are benign\n    if key in _extension_registry:\n        raise ValueError(\"key %s is already registered with code %s\" %\n                         (key, _extension_registry[key]))\n    if code in _inverted_registry:\n        raise ValueError(\"code %s is already in use for key %s\" %\n                         (code, _inverted_registry[code]))\n    _extension_registry[key] = code\n    _inverted_registry[code] = key\n\ndef remove_extension(module, name, code):\n    \"\"\"Unregister an extension code.  For testing only.\"\"\"\n    key = (module, name)\n    if (_extension_registry.get(key) != code or\n        _inverted_registry.get(code) != key):\n        raise ValueError(\"key %s is not registered with code %s\" %\n                         (key, code))\n    del _extension_registry[key]\n    del _inverted_registry[code]\n    if code in _extension_cache:\n        del _extension_cache[code]\n\ndef clear_extension_cache():\n    _extension_cache.clear()\n\n# Standard extension code assignments\n\n# Reserved ranges\n\n# First  Last Count  Purpose\n#     1   127   127  Reserved for Python standard library\n#   128   191    64  Reserved for Zope\n#   192   239    48  Reserved for 3rd parties\n#   240   255    16  Reserved for private use (will never be assigned)\n#   256   Inf   Inf  Reserved for future assignment\n\n# Extension codes are assigned by the Python Software Foundation.\n", 213], "C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py": ["#\n# Module providing the `Process` class which emulates `threading.Thread`\n#\n# multiprocessing/process.py\n#\n# Copyright (c) 2006-2008, R Oudkerk\n# Licensed to PSF under a Contributor Agreement.\n#\n\n__all__ = ['BaseProcess', 'current_process', 'active_children',\n           'parent_process']\n\n#\n# Imports\n#\n\nimport os\nimport sys\nimport signal\nimport itertools\nimport threading\nfrom _weakrefset import WeakSet\n\n#\n#\n#\n\ntry:\n    ORIGINAL_DIR = os.path.abspath(os.getcwd())\nexcept OSError:\n    ORIGINAL_DIR = None\n\n#\n# Public functions\n#\n\ndef current_process():\n    '''\n    Return process object representing the current process\n    '''\n    return _current_process\n\ndef active_children():\n    '''\n    Return list of process objects corresponding to live child processes\n    '''\n    _cleanup()\n    return list(_children)\n\n\ndef parent_process():\n    '''\n    Return process object representing the parent process\n    '''\n    return _parent_process\n\n#\n#\n#\n\ndef _cleanup():\n    # check for processes which have finished\n    for p in list(_children):\n        if p._popen.poll() is not None:\n            _children.discard(p)\n\n#\n# The `Process` class\n#\n\nclass BaseProcess(object):\n    '''\n    Process objects represent activity that is run in a separate process\n\n    The class is analogous to `threading.Thread`\n    '''\n    def _Popen(self):\n        raise NotImplementedError\n\n    def __init__(self, group=None, target=None, name=None, args=(), kwargs={},\n                 *, daemon=None):\n        assert group is None, 'group argument must be None for now'\n        count = next(_process_counter)\n        self._identity = _current_process._identity + (count,)\n        self._config = _current_process._config.copy()\n        self._parent_pid = os.getpid()\n        self._parent_name = _current_process.name\n        self._popen = None\n        self._closed = False\n        self._target = target\n        self._args = tuple(args)\n        self._kwargs = dict(kwargs)\n        self._name = name or type(self).__name__ + '-' + \\\n                     ':'.join(str(i) for i in self._identity)\n        if daemon is not None:\n            self.daemon = daemon\n        _dangling.add(self)\n\n    def _check_closed(self):\n        if self._closed:\n            raise ValueError(\"process object is closed\")\n\n    def run(self):\n        '''\n        Method to be run in sub-process; can be overridden in sub-class\n        '''\n        if self._target:\n            self._target(*self._args, **self._kwargs)\n\n    def start(self):\n        '''\n        Start child process\n        '''\n        self._check_closed()\n        assert self._popen is None, 'cannot start a process twice'\n        assert self._parent_pid == os.getpid(), \\\n               'can only start a process object created by current process'\n        assert not _current_process._config.get('daemon'), \\\n               'daemonic processes are not allowed to have children'\n        _cleanup()\n        self._popen = self._Popen(self)\n        self._sentinel = self._popen.sentinel\n        # Avoid a refcycle if the target function holds an indirect\n        # reference to the process object (see bpo-30775)\n        del self._target, self._args, self._kwargs\n        _children.add(self)\n\n    def terminate(self):\n        '''\n        Terminate process; sends SIGTERM signal or uses TerminateProcess()\n        '''\n        self._check_closed()\n        self._popen.terminate()\n\n    def kill(self):\n        '''\n        Terminate process; sends SIGKILL signal or uses TerminateProcess()\n        '''\n        self._check_closed()\n        self._popen.kill()\n\n    def join(self, timeout=None):\n        '''\n        Wait until child process terminates\n        '''\n        self._check_closed()\n        assert self._parent_pid == os.getpid(), 'can only join a child process'\n        assert self._popen is not None, 'can only join a started process'\n        res = self._popen.wait(timeout)\n        if res is not None:\n            _children.discard(self)\n\n    def is_alive(self):\n        '''\n        Return whether process is alive\n        '''\n        self._check_closed()\n        if self is _current_process:\n            return True\n        assert self._parent_pid == os.getpid(), 'can only test a child process'\n\n        if self._popen is None:\n            return False\n\n        returncode = self._popen.poll()\n        if returncode is None:\n            return True\n        else:\n            _children.discard(self)\n            return False\n\n    def close(self):\n        '''\n        Close the Process object.\n\n        This method releases resources held by the Process object.  It is\n        an error to call this method if the child process is still running.\n        '''\n        if self._popen is not None:\n            if self._popen.poll() is None:\n                raise ValueError(\"Cannot close a process while it is still running. \"\n                                 \"You should first call join() or terminate().\")\n            self._popen.close()\n            self._popen = None\n            del self._sentinel\n            _children.discard(self)\n        self._closed = True\n\n    @property\n    def name(self):\n        return self._name\n\n    @name.setter\n    def name(self, name):\n        assert isinstance(name, str), 'name must be a string'\n        self._name = name\n\n    @property\n    def daemon(self):\n        '''\n        Return whether process is a daemon\n        '''\n        return self._config.get('daemon', False)\n\n    @daemon.setter\n    def daemon(self, daemonic):\n        '''\n        Set whether process is a daemon\n        '''\n        assert self._popen is None, 'process has already started'\n        self._config['daemon'] = daemonic\n\n    @property\n    def authkey(self):\n        return self._config['authkey']\n\n    @authkey.setter\n    def authkey(self, authkey):\n        '''\n        Set authorization key of process\n        '''\n        self._config['authkey'] = AuthenticationString(authkey)\n\n    @property\n    def exitcode(self):\n        '''\n        Return exit code of process or `None` if it has yet to stop\n        '''\n        self._check_closed()\n        if self._popen is None:\n            return self._popen\n        return self._popen.poll()\n\n    @property\n    def ident(self):\n        '''\n        Return identifier (PID) of process or `None` if it has yet to start\n        '''\n        self._check_closed()\n        if self is _current_process:\n            return os.getpid()\n        else:\n            return self._popen and self._popen.pid\n\n    pid = ident\n\n    @property\n    def sentinel(self):\n        '''\n        Return a file descriptor (Unix) or handle (Windows) suitable for\n        waiting for process termination.\n        '''\n        self._check_closed()\n        try:\n            return self._sentinel\n        except AttributeError:\n            raise ValueError(\"process not started\") from None\n\n    def __repr__(self):\n        exitcode = None\n        if self is _current_process:\n            status = 'started'\n        elif self._closed:\n            status = 'closed'\n        elif self._parent_pid != os.getpid():\n            status = 'unknown'\n        elif self._popen is None:\n            status = 'initial'\n        else:\n            exitcode = self._popen.poll()\n            if exitcode is not None:\n                status = 'stopped'\n            else:\n                status = 'started'\n\n        info = [type(self).__name__, 'name=%r' % self._name]\n        if self._popen is not None:\n            info.append('pid=%s' % self._popen.pid)\n        info.append('parent=%s' % self._parent_pid)\n        info.append(status)\n        if exitcode is not None:\n            exitcode = _exitcode_to_name.get(exitcode, exitcode)\n            info.append('exitcode=%s' % exitcode)\n        if self.daemon:\n            info.append('daemon')\n        return '<%s>' % ' '.join(info)\n\n    ##\n\n    def _bootstrap(self, parent_sentinel=None):\n        from . import util, context\n        global _current_process, _parent_process, _process_counter, _children\n\n        try:\n            if self._start_method is not None:\n                context._force_start_method(self._start_method)\n            _process_counter = itertools.count(1)\n            _children = set()\n            util._close_stdin()\n            old_process = _current_process\n            _current_process = self\n            _parent_process = _ParentProcess(\n                self._parent_name, self._parent_pid, parent_sentinel)\n            if threading._HAVE_THREAD_NATIVE_ID:\n                threading.main_thread()._set_native_id()\n            try:\n                util._finalizer_registry.clear()\n                util._run_after_forkers()\n            finally:\n                # delay finalization of the old process object until after\n                # _run_after_forkers() is executed\n                del old_process\n            util.info('child process calling self.run()')\n            try:\n                self.run()\n                exitcode = 0\n            finally:\n                util._exit_function()\n        except SystemExit as e:\n            if e.code is None:\n                exitcode = 0\n            elif isinstance(e.code, int):\n                exitcode = e.code\n            else:\n                sys.stderr.write(str(e.code) + '\\n')\n                exitcode = 1\n        except:\n            exitcode = 1\n            import traceback\n            sys.stderr.write('Process %s:\\n' % self.name)\n            traceback.print_exc()\n        finally:\n            threading._shutdown()\n            util.info('process exiting with exitcode %d' % exitcode)\n            util._flush_std_streams()\n\n        return exitcode\n\n#\n# We subclass bytes to avoid accidental transmission of auth keys over network\n#\n\nclass AuthenticationString(bytes):\n    def __reduce__(self):\n        from .context import get_spawning_popen\n        if get_spawning_popen() is None:\n            raise TypeError(\n                'Pickling an AuthenticationString object is '\n                'disallowed for security reasons'\n                )\n        return AuthenticationString, (bytes(self),)\n\n\n#\n# Create object representing the parent process\n#\n\nclass _ParentProcess(BaseProcess):\n\n    def __init__(self, name, pid, sentinel):\n        self._identity = ()\n        self._name = name\n        self._pid = pid\n        self._parent_pid = None\n        self._popen = None\n        self._closed = False\n        self._sentinel = sentinel\n        self._config = {}\n\n    def is_alive(self):\n        from multiprocessing.connection import wait\n        return not wait([self._sentinel], timeout=0)\n\n    @property\n    def ident(self):\n        return self._pid\n\n    def join(self, timeout=None):\n        '''\n        Wait until parent process terminates\n        '''\n        from multiprocessing.connection import wait\n        wait([self._sentinel], timeout=timeout)\n\n    pid = ident\n\n#\n# Create object representing the main process\n#\n\nclass _MainProcess(BaseProcess):\n\n    def __init__(self):\n        self._identity = ()\n        self._name = 'MainProcess'\n        self._parent_pid = None\n        self._popen = None\n        self._closed = False\n        self._config = {'authkey': AuthenticationString(os.urandom(32)),\n                        'semprefix': '/mp'}\n        # Note that some versions of FreeBSD only allow named\n        # semaphores to have names of up to 14 characters.  Therefore\n        # we choose a short prefix.\n        #\n        # On MacOSX in a sandbox it may be necessary to use a\n        # different prefix -- see #19478.\n        #\n        # Everything in self._config will be inherited by descendant\n        # processes.\n\n    def close(self):\n        pass\n\n\n_parent_process = None\n_current_process = _MainProcess()\n_process_counter = itertools.count(1)\n_children = set()\ndel _MainProcess\n\n#\n# Give names to some return codes\n#\n\n_exitcode_to_name = {}\n\nfor name, signum in list(signal.__dict__.items()):\n    if name[:3]=='SIG' and '_' not in name:\n        _exitcode_to_name[-signum] = f'-{name}'\n\n# For debug and leak testing\n_dangling = WeakSet()\n", 432], "C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py": ["#\n# Module providing various facilities to other parts of the package\n#\n# multiprocessing/util.py\n#\n# Copyright (c) 2006-2008, R Oudkerk\n# Licensed to PSF under a Contributor Agreement.\n#\n\nimport os\nimport itertools\nimport sys\nimport weakref\nimport atexit\nimport threading        # we want threading to install it's\n                        # cleanup function before multiprocessing does\nfrom subprocess import _args_from_interpreter_flags\n\nfrom . import process\n\n__all__ = [\n    'sub_debug', 'debug', 'info', 'sub_warning', 'get_logger',\n    'log_to_stderr', 'get_temp_dir', 'register_after_fork',\n    'is_exiting', 'Finalize', 'ForkAwareThreadLock', 'ForkAwareLocal',\n    'close_all_fds_except', 'SUBDEBUG', 'SUBWARNING',\n    ]\n\n#\n# Logging\n#\n\nNOTSET = 0\nSUBDEBUG = 5\nDEBUG = 10\nINFO = 20\nSUBWARNING = 25\n\nLOGGER_NAME = 'multiprocessing'\nDEFAULT_LOGGING_FORMAT = '[%(levelname)s/%(processName)s] %(message)s'\n\n_logger = None\n_log_to_stderr = False\n\ndef sub_debug(msg, *args):\n    if _logger:\n        _logger.log(SUBDEBUG, msg, *args)\n\ndef debug(msg, *args):\n    if _logger:\n        _logger.log(DEBUG, msg, *args)\n\ndef info(msg, *args):\n    if _logger:\n        _logger.log(INFO, msg, *args)\n\ndef sub_warning(msg, *args):\n    if _logger:\n        _logger.log(SUBWARNING, msg, *args)\n\ndef get_logger():\n    '''\n    Returns logger used by multiprocessing\n    '''\n    global _logger\n    import logging\n\n    logging._acquireLock()\n    try:\n        if not _logger:\n\n            _logger = logging.getLogger(LOGGER_NAME)\n            _logger.propagate = 0\n\n            # XXX multiprocessing should cleanup before logging\n            if hasattr(atexit, 'unregister'):\n                atexit.unregister(_exit_function)\n                atexit.register(_exit_function)\n            else:\n                atexit._exithandlers.remove((_exit_function, (), {}))\n                atexit._exithandlers.append((_exit_function, (), {}))\n\n    finally:\n        logging._releaseLock()\n\n    return _logger\n\ndef log_to_stderr(level=None):\n    '''\n    Turn on logging and add a handler which prints to stderr\n    '''\n    global _log_to_stderr\n    import logging\n\n    logger = get_logger()\n    formatter = logging.Formatter(DEFAULT_LOGGING_FORMAT)\n    handler = logging.StreamHandler()\n    handler.setFormatter(formatter)\n    logger.addHandler(handler)\n\n    if level:\n        logger.setLevel(level)\n    _log_to_stderr = True\n    return _logger\n\n\n# Abstract socket support\n\ndef _platform_supports_abstract_sockets():\n    if sys.platform == \"linux\":\n        return True\n    if hasattr(sys, 'getandroidapilevel'):\n        return True\n    return False\n\n\ndef is_abstract_socket_namespace(address):\n    if not address:\n        return False\n    if isinstance(address, bytes):\n        return address[0] == 0\n    elif isinstance(address, str):\n        return address[0] == \"\\0\"\n    raise TypeError('address type of {address!r} unrecognized')\n\n\nabstract_sockets_supported = _platform_supports_abstract_sockets()\n\n#\n# Function returning a temp directory which will be removed on exit\n#\n\ndef _remove_temp_dir(rmtree, tempdir):\n    rmtree(tempdir)\n\n    current_process = process.current_process()\n    # current_process() can be None if the finalizer is called\n    # late during Python finalization\n    if current_process is not None:\n        current_process._config['tempdir'] = None\n\ndef get_temp_dir():\n    # get name of a temp directory which will be automatically cleaned up\n    tempdir = process.current_process()._config.get('tempdir')\n    if tempdir is None:\n        import shutil, tempfile\n        tempdir = tempfile.mkdtemp(prefix='pymp-')\n        info('created temp directory %s', tempdir)\n        # keep a strong reference to shutil.rmtree(), since the finalizer\n        # can be called late during Python shutdown\n        Finalize(None, _remove_temp_dir, args=(shutil.rmtree, tempdir),\n                 exitpriority=-100)\n        process.current_process()._config['tempdir'] = tempdir\n    return tempdir\n\n#\n# Support for reinitialization of objects when bootstrapping a child process\n#\n\n_afterfork_registry = weakref.WeakValueDictionary()\n_afterfork_counter = itertools.count()\n\ndef _run_after_forkers():\n    items = list(_afterfork_registry.items())\n    items.sort()\n    for (index, ident, func), obj in items:\n        try:\n            func(obj)\n        except Exception as e:\n            info('after forker raised exception %s', e)\n\ndef register_after_fork(obj, func):\n    _afterfork_registry[(next(_afterfork_counter), id(obj), func)] = obj\n\n#\n# Finalization using weakrefs\n#\n\n_finalizer_registry = {}\n_finalizer_counter = itertools.count()\n\n\nclass Finalize(object):\n    '''\n    Class which supports object finalization using weakrefs\n    '''\n    def __init__(self, obj, callback, args=(), kwargs=None, exitpriority=None):\n        if (exitpriority is not None) and not isinstance(exitpriority,int):\n            raise TypeError(\n                \"Exitpriority ({0!r}) must be None or int, not {1!s}\".format(\n                    exitpriority, type(exitpriority)))\n\n        if obj is not None:\n            self._weakref = weakref.ref(obj, self)\n        elif exitpriority is None:\n            raise ValueError(\"Without object, exitpriority cannot be None\")\n\n        self._callback = callback\n        self._args = args\n        self._kwargs = kwargs or {}\n        self._key = (exitpriority, next(_finalizer_counter))\n        self._pid = os.getpid()\n\n        _finalizer_registry[self._key] = self\n\n    def __call__(self, wr=None,\n                 # Need to bind these locally because the globals can have\n                 # been cleared at shutdown\n                 _finalizer_registry=_finalizer_registry,\n                 sub_debug=sub_debug, getpid=os.getpid):\n        '''\n        Run the callback unless it has already been called or cancelled\n        '''\n        try:\n            del _finalizer_registry[self._key]\n        except KeyError:\n            sub_debug('finalizer no longer registered')\n        else:\n            if self._pid != getpid():\n                sub_debug('finalizer ignored because different process')\n                res = None\n            else:\n                sub_debug('finalizer calling %s with args %s and kwargs %s',\n                          self._callback, self._args, self._kwargs)\n                res = self._callback(*self._args, **self._kwargs)\n            self._weakref = self._callback = self._args = \\\n                            self._kwargs = self._key = None\n            return res\n\n    def cancel(self):\n        '''\n        Cancel finalization of the object\n        '''\n        try:\n            del _finalizer_registry[self._key]\n        except KeyError:\n            pass\n        else:\n            self._weakref = self._callback = self._args = \\\n                            self._kwargs = self._key = None\n\n    def still_active(self):\n        '''\n        Return whether this finalizer is still waiting to invoke callback\n        '''\n        return self._key in _finalizer_registry\n\n    def __repr__(self):\n        try:\n            obj = self._weakref()\n        except (AttributeError, TypeError):\n            obj = None\n\n        if obj is None:\n            return '<%s object, dead>' % self.__class__.__name__\n\n        x = '<%s object, callback=%s' % (\n                self.__class__.__name__,\n                getattr(self._callback, '__name__', self._callback))\n        if self._args:\n            x += ', args=' + str(self._args)\n        if self._kwargs:\n            x += ', kwargs=' + str(self._kwargs)\n        if self._key[0] is not None:\n            x += ', exitpriority=' + str(self._key[0])\n        return x + '>'\n\n\ndef _run_finalizers(minpriority=None):\n    '''\n    Run all finalizers whose exit priority is not None and at least minpriority\n\n    Finalizers with highest priority are called first; finalizers with\n    the same priority will be called in reverse order of creation.\n    '''\n    if _finalizer_registry is None:\n        # This function may be called after this module's globals are\n        # destroyed.  See the _exit_function function in this module for more\n        # notes.\n        return\n\n    if minpriority is None:\n        f = lambda p : p[0] is not None\n    else:\n        f = lambda p : p[0] is not None and p[0] >= minpriority\n\n    # Careful: _finalizer_registry may be mutated while this function\n    # is running (either by a GC run or by another thread).\n\n    # list(_finalizer_registry) should be atomic, while\n    # list(_finalizer_registry.items()) is not.\n    keys = [key for key in list(_finalizer_registry) if f(key)]\n    keys.sort(reverse=True)\n\n    for key in keys:\n        finalizer = _finalizer_registry.get(key)\n        # key may have been removed from the registry\n        if finalizer is not None:\n            sub_debug('calling %s', finalizer)\n            try:\n                finalizer()\n            except Exception:\n                import traceback\n                traceback.print_exc()\n\n    if minpriority is None:\n        _finalizer_registry.clear()\n\n#\n# Clean up on exit\n#\n\ndef is_exiting():\n    '''\n    Returns true if the process is shutting down\n    '''\n    return _exiting or _exiting is None\n\n_exiting = False\n\ndef _exit_function(info=info, debug=debug, _run_finalizers=_run_finalizers,\n                   active_children=process.active_children,\n                   current_process=process.current_process):\n    # We hold on to references to functions in the arglist due to the\n    # situation described below, where this function is called after this\n    # module's globals are destroyed.\n\n    global _exiting\n\n    if not _exiting:\n        _exiting = True\n\n        info('process shutting down')\n        debug('running all \"atexit\" finalizers with priority >= 0')\n        _run_finalizers(0)\n\n        if current_process() is not None:\n            # We check if the current process is None here because if\n            # it's None, any call to ``active_children()`` will raise\n            # an AttributeError (active_children winds up trying to\n            # get attributes from util._current_process).  One\n            # situation where this can happen is if someone has\n            # manipulated sys.modules, causing this module to be\n            # garbage collected.  The destructor for the module type\n            # then replaces all values in the module dict with None.\n            # For instance, after setuptools runs a test it replaces\n            # sys.modules with a copy created earlier.  See issues\n            # #9775 and #15881.  Also related: #4106, #9205, and\n            # #9207.\n\n            for p in active_children():\n                if p.daemon:\n                    info('calling terminate() for daemon %s', p.name)\n                    p._popen.terminate()\n\n            for p in active_children():\n                info('calling join() for process %s', p.name)\n                p.join()\n\n        debug('running the remaining \"atexit\" finalizers')\n        _run_finalizers()\n\natexit.register(_exit_function)\n\n#\n# Some fork aware types\n#\n\nclass ForkAwareThreadLock(object):\n    def __init__(self):\n        self._lock = threading.Lock()\n        self.acquire = self._lock.acquire\n        self.release = self._lock.release\n        register_after_fork(self, ForkAwareThreadLock._at_fork_reinit)\n\n    def _at_fork_reinit(self):\n        self._lock._at_fork_reinit()\n\n    def __enter__(self):\n        return self._lock.__enter__()\n\n    def __exit__(self, *args):\n        return self._lock.__exit__(*args)\n\n\nclass ForkAwareLocal(threading.local):\n    def __init__(self):\n        register_after_fork(self, lambda obj : obj.__dict__.clear())\n    def __reduce__(self):\n        return type(self), ()\n\n#\n# Close fds except those specified\n#\n\ntry:\n    MAXFD = os.sysconf(\"SC_OPEN_MAX\")\nexcept Exception:\n    MAXFD = 256\n\ndef close_all_fds_except(fds):\n    fds = list(fds) + [-1, MAXFD]\n    fds.sort()\n    assert fds[-1] == MAXFD, 'fd too large'\n    for i in range(len(fds) - 1):\n        os.closerange(fds[i]+1, fds[i+1])\n#\n# Close sys.stdin and replace stdin with os.devnull\n#\n\ndef _close_stdin():\n    if sys.stdin is None:\n        return\n\n    try:\n        sys.stdin.close()\n    except (OSError, ValueError):\n        pass\n\n    try:\n        fd = os.open(os.devnull, os.O_RDONLY)\n        try:\n            sys.stdin = open(fd, closefd=False)\n        except:\n            os.close(fd)\n            raise\n    except (OSError, ValueError):\n        pass\n\n#\n# Flush standard streams, if any\n#\n\ndef _flush_std_streams():\n    try:\n        sys.stdout.flush()\n    except (AttributeError, ValueError):\n        pass\n    try:\n        sys.stderr.flush()\n    except (AttributeError, ValueError):\n        pass\n\n#\n# Start a program with only specified fds kept open\n#\n\ndef spawnv_passfds(path, args, passfds):\n    import _posixsubprocess\n    passfds = tuple(sorted(map(int, passfds)))\n    errpipe_read, errpipe_write = os.pipe()\n    try:\n        return _posixsubprocess.fork_exec(\n            args, [os.fsencode(path)], True, passfds, None, None,\n            -1, -1, -1, -1, -1, -1, errpipe_read, errpipe_write,\n            False, False, None, None, None, -1, None)\n    finally:\n        os.close(errpipe_read)\n        os.close(errpipe_write)\n\n\ndef close_fds(*fds):\n    \"\"\"Close each file descriptor given as an argument\"\"\"\n    for fd in fds:\n        os.close(fd)\n\n\ndef _cleanup_tests():\n    \"\"\"Cleanup multiprocessing resources when multiprocessing tests\n    completed.\"\"\"\n\n    from test import support\n\n    # cleanup multiprocessing\n    process._cleanup()\n\n    # Stop the ForkServer process if it's running\n    from multiprocessing import forkserver\n    forkserver._forkserver._stop()\n\n    # Stop the ResourceTracker process if it's running\n    from multiprocessing import resource_tracker\n    resource_tracker._resource_tracker._stop()\n\n    # bpo-37421: Explicitly call _run_finalizers() to remove immediately\n    # temporary directories created by multiprocessing.util.get_temp_dir().\n    _run_finalizers()\n    support.gc_collect()\n\n    support.reap_children()\n", 489], "C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\weakref.py": ["\"\"\"Weak reference support for Python.\n\nThis module is an implementation of PEP 205:\n\nhttps://www.python.org/dev/peps/pep-0205/\n\"\"\"\n\n# Naming convention: Variables named \"wr\" are weak reference objects;\n# they are called this instead of \"ref\" to avoid name collisions with\n# the module-global ref() function imported from _weakref.\n\nfrom _weakref import (\n     getweakrefcount,\n     getweakrefs,\n     ref,\n     proxy,\n     CallableProxyType,\n     ProxyType,\n     ReferenceType,\n     _remove_dead_weakref)\n\nfrom _weakrefset import WeakSet, _IterationGuard\n\nimport _collections_abc  # Import after _weakref to avoid circular import.\nimport sys\nimport itertools\n\nProxyTypes = (ProxyType, CallableProxyType)\n\n__all__ = [\"ref\", \"proxy\", \"getweakrefcount\", \"getweakrefs\",\n           \"WeakKeyDictionary\", \"ReferenceType\", \"ProxyType\",\n           \"CallableProxyType\", \"ProxyTypes\", \"WeakValueDictionary\",\n           \"WeakSet\", \"WeakMethod\", \"finalize\"]\n\n\n_collections_abc.Set.register(WeakSet)\n_collections_abc.MutableSet.register(WeakSet)\n\nclass WeakMethod(ref):\n    \"\"\"\n    A custom `weakref.ref` subclass which simulates a weak reference to\n    a bound method, working around the lifetime problem of bound methods.\n    \"\"\"\n\n    __slots__ = \"_func_ref\", \"_meth_type\", \"_alive\", \"__weakref__\"\n\n    def __new__(cls, meth, callback=None):\n        try:\n            obj = meth.__self__\n            func = meth.__func__\n        except AttributeError:\n            raise TypeError(\"argument should be a bound method, not {}\"\n                            .format(type(meth))) from None\n        def _cb(arg):\n            # The self-weakref trick is needed to avoid creating a reference\n            # cycle.\n            self = self_wr()\n            if self._alive:\n                self._alive = False\n                if callback is not None:\n                    callback(self)\n        self = ref.__new__(cls, obj, _cb)\n        self._func_ref = ref(func, _cb)\n        self._meth_type = type(meth)\n        self._alive = True\n        self_wr = ref(self)\n        return self\n\n    def __call__(self):\n        obj = super().__call__()\n        func = self._func_ref()\n        if obj is None or func is None:\n            return None\n        return self._meth_type(func, obj)\n\n    def __eq__(self, other):\n        if isinstance(other, WeakMethod):\n            if not self._alive or not other._alive:\n                return self is other\n            return ref.__eq__(self, other) and self._func_ref == other._func_ref\n        return NotImplemented\n\n    def __ne__(self, other):\n        if isinstance(other, WeakMethod):\n            if not self._alive or not other._alive:\n                return self is not other\n            return ref.__ne__(self, other) or self._func_ref != other._func_ref\n        return NotImplemented\n\n    __hash__ = ref.__hash__\n\n\nclass WeakValueDictionary(_collections_abc.MutableMapping):\n    \"\"\"Mapping class that references values weakly.\n\n    Entries in the dictionary will be discarded when no strong\n    reference to the value exists anymore\n    \"\"\"\n    # We inherit the constructor without worrying about the input\n    # dictionary; since it uses our .update() method, we get the right\n    # checks (if the other dictionary is a WeakValueDictionary,\n    # objects are unwrapped on the way out, and we always wrap on the\n    # way in).\n\n    def __init__(self, other=(), /, **kw):\n        def remove(wr, selfref=ref(self), _atomic_removal=_remove_dead_weakref):\n            self = selfref()\n            if self is not None:\n                if self._iterating:\n                    self._pending_removals.append(wr.key)\n                else:\n                    # Atomic removal is necessary since this function\n                    # can be called asynchronously by the GC\n                    _atomic_removal(self.data, wr.key)\n        self._remove = remove\n        # A list of keys to be removed\n        self._pending_removals = []\n        self._iterating = set()\n        self.data = {}\n        self.update(other, **kw)\n\n    def _commit_removals(self, _atomic_removal=_remove_dead_weakref):\n        pop = self._pending_removals.pop\n        d = self.data\n        # We shouldn't encounter any KeyError, because this method should\n        # always be called *before* mutating the dict.\n        while True:\n            try:\n                key = pop()\n            except IndexError:\n                return\n            _atomic_removal(d, key)\n\n    def __getitem__(self, key):\n        if self._pending_removals:\n            self._commit_removals()\n        o = self.data[key]()\n        if o is None:\n            raise KeyError(key)\n        else:\n            return o\n\n    def __delitem__(self, key):\n        if self._pending_removals:\n            self._commit_removals()\n        del self.data[key]\n\n    def __len__(self):\n        if self._pending_removals:\n            self._commit_removals()\n        return len(self.data)\n\n    def __contains__(self, key):\n        if self._pending_removals:\n            self._commit_removals()\n        try:\n            o = self.data[key]()\n        except KeyError:\n            return False\n        return o is not None\n\n    def __repr__(self):\n        return \"<%s at %#x>\" % (self.__class__.__name__, id(self))\n\n    def __setitem__(self, key, value):\n        if self._pending_removals:\n            self._commit_removals()\n        self.data[key] = KeyedRef(value, self._remove, key)\n\n    def copy(self):\n        if self._pending_removals:\n            self._commit_removals()\n        new = WeakValueDictionary()\n        with _IterationGuard(self):\n            for key, wr in self.data.items():\n                o = wr()\n                if o is not None:\n                    new[key] = o\n        return new\n\n    __copy__ = copy\n\n    def __deepcopy__(self, memo):\n        from copy import deepcopy\n        if self._pending_removals:\n            self._commit_removals()\n        new = self.__class__()\n        with _IterationGuard(self):\n            for key, wr in self.data.items():\n                o = wr()\n                if o is not None:\n                    new[deepcopy(key, memo)] = o\n        return new\n\n    def get(self, key, default=None):\n        if self._pending_removals:\n            self._commit_removals()\n        try:\n            wr = self.data[key]\n        except KeyError:\n            return default\n        else:\n            o = wr()\n            if o is None:\n                # This should only happen\n                return default\n            else:\n                return o\n\n    def items(self):\n        if self._pending_removals:\n            self._commit_removals()\n        with _IterationGuard(self):\n            for k, wr in self.data.items():\n                v = wr()\n                if v is not None:\n                    yield k, v\n\n    def keys(self):\n        if self._pending_removals:\n            self._commit_removals()\n        with _IterationGuard(self):\n            for k, wr in self.data.items():\n                if wr() is not None:\n                    yield k\n\n    __iter__ = keys\n\n    def itervaluerefs(self):\n        \"\"\"Return an iterator that yields the weak references to the values.\n\n        The references are not guaranteed to be 'live' at the time\n        they are used, so the result of calling the references needs\n        to be checked before being used.  This can be used to avoid\n        creating references that will cause the garbage collector to\n        keep the values around longer than needed.\n\n        \"\"\"\n        if self._pending_removals:\n            self._commit_removals()\n        with _IterationGuard(self):\n            yield from self.data.values()\n\n    def values(self):\n        if self._pending_removals:\n            self._commit_removals()\n        with _IterationGuard(self):\n            for wr in self.data.values():\n                obj = wr()\n                if obj is not None:\n                    yield obj\n\n    def popitem(self):\n        if self._pending_removals:\n            self._commit_removals()\n        while True:\n            key, wr = self.data.popitem()\n            o = wr()\n            if o is not None:\n                return key, o\n\n    def pop(self, key, *args):\n        if self._pending_removals:\n            self._commit_removals()\n        try:\n            o = self.data.pop(key)()\n        except KeyError:\n            o = None\n        if o is None:\n            if args:\n                return args[0]\n            else:\n                raise KeyError(key)\n        else:\n            return o\n\n    def setdefault(self, key, default=None):\n        try:\n            o = self.data[key]()\n        except KeyError:\n            o = None\n        if o is None:\n            if self._pending_removals:\n                self._commit_removals()\n            self.data[key] = KeyedRef(default, self._remove, key)\n            return default\n        else:\n            return o\n\n    def update(self, other=None, /, **kwargs):\n        if self._pending_removals:\n            self._commit_removals()\n        d = self.data\n        if other is not None:\n            if not hasattr(other, \"items\"):\n                other = dict(other)\n            for key, o in other.items():\n                d[key] = KeyedRef(o, self._remove, key)\n        for key, o in kwargs.items():\n            d[key] = KeyedRef(o, self._remove, key)\n\n    def valuerefs(self):\n        \"\"\"Return a list of weak references to the values.\n\n        The references are not guaranteed to be 'live' at the time\n        they are used, so the result of calling the references needs\n        to be checked before being used.  This can be used to avoid\n        creating references that will cause the garbage collector to\n        keep the values around longer than needed.\n\n        \"\"\"\n        if self._pending_removals:\n            self._commit_removals()\n        return list(self.data.values())\n\n    def __ior__(self, other):\n        self.update(other)\n        return self\n\n    def __or__(self, other):\n        if isinstance(other, _collections_abc.Mapping):\n            c = self.copy()\n            c.update(other)\n            return c\n        return NotImplemented\n\n    def __ror__(self, other):\n        if isinstance(other, _collections_abc.Mapping):\n            c = self.__class__()\n            c.update(other)\n            c.update(self)\n            return c\n        return NotImplemented\n\n\nclass KeyedRef(ref):\n    \"\"\"Specialized reference that includes a key corresponding to the value.\n\n    This is used in the WeakValueDictionary to avoid having to create\n    a function object for each key stored in the mapping.  A shared\n    callback object can use the 'key' attribute of a KeyedRef instead\n    of getting a reference to the key from an enclosing scope.\n\n    \"\"\"\n\n    __slots__ = \"key\",\n\n    def __new__(type, ob, callback, key):\n        self = ref.__new__(type, ob, callback)\n        self.key = key\n        return self\n\n    def __init__(self, ob, callback, key):\n        super().__init__(ob, callback)\n\n\nclass WeakKeyDictionary(_collections_abc.MutableMapping):\n    \"\"\" Mapping class that references keys weakly.\n\n    Entries in the dictionary will be discarded when there is no\n    longer a strong reference to the key. This can be used to\n    associate additional data with an object owned by other parts of\n    an application without adding attributes to those objects. This\n    can be especially useful with objects that override attribute\n    accesses.\n    \"\"\"\n\n    def __init__(self, dict=None):\n        self.data = {}\n        def remove(k, selfref=ref(self)):\n            self = selfref()\n            if self is not None:\n                if self._iterating:\n                    self._pending_removals.append(k)\n                else:\n                    try:\n                        del self.data[k]\n                    except KeyError:\n                        pass\n        self._remove = remove\n        # A list of dead weakrefs (keys to be removed)\n        self._pending_removals = []\n        self._iterating = set()\n        self._dirty_len = False\n        if dict is not None:\n            self.update(dict)\n\n    def _commit_removals(self):\n        # NOTE: We don't need to call this method before mutating the dict,\n        # because a dead weakref never compares equal to a live weakref,\n        # even if they happened to refer to equal objects.\n        # However, it means keys may already have been removed.\n        pop = self._pending_removals.pop\n        d = self.data\n        while True:\n            try:\n                key = pop()\n            except IndexError:\n                return\n\n            try:\n                del d[key]\n            except KeyError:\n                pass\n\n    def _scrub_removals(self):\n        d = self.data\n        self._pending_removals = [k for k in self._pending_removals if k in d]\n        self._dirty_len = False\n\n    def __delitem__(self, key):\n        self._dirty_len = True\n        del self.data[ref(key)]\n\n    def __getitem__(self, key):\n        return self.data[ref(key)]\n\n    def __len__(self):\n        if self._dirty_len and self._pending_removals:\n            # self._pending_removals may still contain keys which were\n            # explicitly removed, we have to scrub them (see issue #21173).\n            self._scrub_removals()\n        return len(self.data) - len(self._pending_removals)\n\n    def __repr__(self):\n        return \"<%s at %#x>\" % (self.__class__.__name__, id(self))\n\n    def __setitem__(self, key, value):\n        self.data[ref(key, self._remove)] = value\n\n    def copy(self):\n        new = WeakKeyDictionary()\n        with _IterationGuard(self):\n            for key, value in self.data.items():\n                o = key()\n                if o is not None:\n                    new[o] = value\n        return new\n\n    __copy__ = copy\n\n    def __deepcopy__(self, memo):\n        from copy import deepcopy\n        new = self.__class__()\n        with _IterationGuard(self):\n            for key, value in self.data.items():\n                o = key()\n                if o is not None:\n                    new[o] = deepcopy(value, memo)\n        return new\n\n    def get(self, key, default=None):\n        return self.data.get(ref(key),default)\n\n    def __contains__(self, key):\n        try:\n            wr = ref(key)\n        except TypeError:\n            return False\n        return wr in self.data\n\n    def items(self):\n        with _IterationGuard(self):\n            for wr, value in self.data.items():\n                key = wr()\n                if key is not None:\n                    yield key, value\n\n    def keys(self):\n        with _IterationGuard(self):\n            for wr in self.data:\n                obj = wr()\n                if obj is not None:\n                    yield obj\n\n    __iter__ = keys\n\n    def values(self):\n        with _IterationGuard(self):\n            for wr, value in self.data.items():\n                if wr() is not None:\n                    yield value\n\n    def keyrefs(self):\n        \"\"\"Return a list of weak references to the keys.\n\n        The references are not guaranteed to be 'live' at the time\n        they are used, so the result of calling the references needs\n        to be checked before being used.  This can be used to avoid\n        creating references that will cause the garbage collector to\n        keep the keys around longer than needed.\n\n        \"\"\"\n        return list(self.data)\n\n    def popitem(self):\n        self._dirty_len = True\n        while True:\n            key, value = self.data.popitem()\n            o = key()\n            if o is not None:\n                return o, value\n\n    def pop(self, key, *args):\n        self._dirty_len = True\n        return self.data.pop(ref(key), *args)\n\n    def setdefault(self, key, default=None):\n        return self.data.setdefault(ref(key, self._remove),default)\n\n    def update(self, dict=None, /, **kwargs):\n        d = self.data\n        if dict is not None:\n            if not hasattr(dict, \"items\"):\n                dict = type({})(dict)\n            for key, value in dict.items():\n                d[ref(key, self._remove)] = value\n        if len(kwargs):\n            self.update(kwargs)\n\n    def __ior__(self, other):\n        self.update(other)\n        return self\n\n    def __or__(self, other):\n        if isinstance(other, _collections_abc.Mapping):\n            c = self.copy()\n            c.update(other)\n            return c\n        return NotImplemented\n\n    def __ror__(self, other):\n        if isinstance(other, _collections_abc.Mapping):\n            c = self.__class__()\n            c.update(other)\n            c.update(self)\n            return c\n        return NotImplemented\n\n\nclass finalize:\n    \"\"\"Class for finalization of weakrefable objects\n\n    finalize(obj, func, *args, **kwargs) returns a callable finalizer\n    object which will be called when obj is garbage collected. The\n    first time the finalizer is called it evaluates func(*arg, **kwargs)\n    and returns the result. After this the finalizer is dead, and\n    calling it just returns None.\n\n    When the program exits any remaining finalizers for which the\n    atexit attribute is true will be run in reverse order of creation.\n    By default atexit is true.\n    \"\"\"\n\n    # Finalizer objects don't have any state of their own.  They are\n    # just used as keys to lookup _Info objects in the registry.  This\n    # ensures that they cannot be part of a ref-cycle.\n\n    __slots__ = ()\n    _registry = {}\n    _shutdown = False\n    _index_iter = itertools.count()\n    _dirty = False\n    _registered_with_atexit = False\n\n    class _Info:\n        __slots__ = (\"weakref\", \"func\", \"args\", \"kwargs\", \"atexit\", \"index\")\n\n    def __init__(self, obj, func, /, *args, **kwargs):\n        if not self._registered_with_atexit:\n            # We may register the exit function more than once because\n            # of a thread race, but that is harmless\n            import atexit\n            atexit.register(self._exitfunc)\n            finalize._registered_with_atexit = True\n        info = self._Info()\n        info.weakref = ref(obj, self)\n        info.func = func\n        info.args = args\n        info.kwargs = kwargs or None\n        info.atexit = True\n        info.index = next(self._index_iter)\n        self._registry[self] = info\n        finalize._dirty = True\n\n    def __call__(self, _=None):\n        \"\"\"If alive then mark as dead and return func(*args, **kwargs);\n        otherwise return None\"\"\"\n        info = self._registry.pop(self, None)\n        if info and not self._shutdown:\n            return info.func(*info.args, **(info.kwargs or {}))\n\n    def detach(self):\n        \"\"\"If alive then mark as dead and return (obj, func, args, kwargs);\n        otherwise return None\"\"\"\n        info = self._registry.get(self)\n        obj = info and info.weakref()\n        if obj is not None and self._registry.pop(self, None):\n            return (obj, info.func, info.args, info.kwargs or {})\n\n    def peek(self):\n        \"\"\"If alive then return (obj, func, args, kwargs);\n        otherwise return None\"\"\"\n        info = self._registry.get(self)\n        obj = info and info.weakref()\n        if obj is not None:\n            return (obj, info.func, info.args, info.kwargs or {})\n\n    @property\n    def alive(self):\n        \"\"\"Whether finalizer is alive\"\"\"\n        return self in self._registry\n\n    @property\n    def atexit(self):\n        \"\"\"Whether finalizer should be called at exit\"\"\"\n        info = self._registry.get(self)\n        return bool(info) and info.atexit\n\n    @atexit.setter\n    def atexit(self, value):\n        info = self._registry.get(self)\n        if info:\n            info.atexit = bool(value)\n\n    def __repr__(self):\n        info = self._registry.get(self)\n        obj = info and info.weakref()\n        if obj is None:\n            return '<%s object at %#x; dead>' % (type(self).__name__, id(self))\n        else:\n            return '<%s object at %#x; for %r at %#x>' % \\\n                (type(self).__name__, id(self), type(obj).__name__, id(obj))\n\n    @classmethod\n    def _select_for_exit(cls):\n        # Return live finalizers marked for exit, oldest first\n        L = [(f,i) for (f,i) in cls._registry.items() if i.atexit]\n        L.sort(key=lambda item:item[1].index)\n        return [f for (f,i) in L]\n\n    @classmethod\n    def _exitfunc(cls):\n        # At shutdown invoke finalizers for which atexit is true.\n        # This is called once all other non-daemonic threads have been\n        # joined.\n        reenable_gc = False\n        try:\n            if cls._registry:\n                import gc\n                if gc.isenabled():\n                    reenable_gc = True\n                    gc.disable()\n                pending = None\n                while True:\n                    if pending is None or finalize._dirty:\n                        pending = cls._select_for_exit()\n                        finalize._dirty = False\n                    if not pending:\n                        break\n                    f = pending.pop()\n                    try:\n                        # gc is disabled, so (assuming no daemonic\n                        # threads) the following is the only line in\n                        # this function which might trigger creation\n                        # of a new finalizer\n                        f()\n                    except Exception:\n                        sys.excepthook(*sys.exc_info())\n                    assert f not in cls._registry\n        finally:\n            # prevent any more finalizers from executing during shutdown\n            finalize._shutdown = True\n            if reenable_gc:\n                gc.enable()\n", 675], "C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py": ["\"\"\"Thread module emulating a subset of Java's threading model.\"\"\"\n\nimport os as _os\nimport sys as _sys\nimport _thread\nimport functools\n\nfrom time import monotonic as _time\nfrom _weakrefset import WeakSet\nfrom itertools import islice as _islice, count as _count\ntry:\n    from _collections import deque as _deque\nexcept ImportError:\n    from collections import deque as _deque\n\n# Note regarding PEP 8 compliant names\n#  This threading model was originally inspired by Java, and inherited\n# the convention of camelCase function and method names from that\n# language. Those original names are not in any imminent danger of\n# being deprecated (even for Py3k),so this module provides them as an\n# alias for the PEP 8 compliant names\n# Note that using the new PEP 8 compliant names facilitates substitution\n# with the multiprocessing module, which doesn't provide the old\n# Java inspired names.\n\n__all__ = ['get_ident', 'active_count', 'Condition', 'current_thread',\n           'enumerate', 'main_thread', 'TIMEOUT_MAX',\n           'Event', 'Lock', 'RLock', 'Semaphore', 'BoundedSemaphore', 'Thread',\n           'Barrier', 'BrokenBarrierError', 'Timer', 'ThreadError',\n           'setprofile', 'settrace', 'local', 'stack_size',\n           'excepthook', 'ExceptHookArgs']\n\n# Rename some stuff so \"from threading import *\" is safe\n_start_new_thread = _thread.start_new_thread\n_allocate_lock = _thread.allocate_lock\n_set_sentinel = _thread._set_sentinel\nget_ident = _thread.get_ident\ntry:\n    get_native_id = _thread.get_native_id\n    _HAVE_THREAD_NATIVE_ID = True\n    __all__.append('get_native_id')\nexcept AttributeError:\n    _HAVE_THREAD_NATIVE_ID = False\nThreadError = _thread.error\ntry:\n    _CRLock = _thread.RLock\nexcept AttributeError:\n    _CRLock = None\nTIMEOUT_MAX = _thread.TIMEOUT_MAX\ndel _thread\n\n\n# Support for profile and trace hooks\n\n_profile_hook = None\n_trace_hook = None\n\ndef setprofile(func):\n    \"\"\"Set a profile function for all threads started from the threading module.\n\n    The func will be passed to sys.setprofile() for each thread, before its\n    run() method is called.\n\n    \"\"\"\n    global _profile_hook\n    _profile_hook = func\n\ndef settrace(func):\n    \"\"\"Set a trace function for all threads started from the threading module.\n\n    The func will be passed to sys.settrace() for each thread, before its run()\n    method is called.\n\n    \"\"\"\n    global _trace_hook\n    _trace_hook = func\n\n# Synchronization classes\n\nLock = _allocate_lock\n\ndef RLock(*args, **kwargs):\n    \"\"\"Factory function that returns a new reentrant lock.\n\n    A reentrant lock must be released by the thread that acquired it. Once a\n    thread has acquired a reentrant lock, the same thread may acquire it again\n    without blocking; the thread must release it once for each time it has\n    acquired it.\n\n    \"\"\"\n    if _CRLock is None:\n        return _PyRLock(*args, **kwargs)\n    return _CRLock(*args, **kwargs)\n\nclass _RLock:\n    \"\"\"This class implements reentrant lock objects.\n\n    A reentrant lock must be released by the thread that acquired it. Once a\n    thread has acquired a reentrant lock, the same thread may acquire it\n    again without blocking; the thread must release it once for each time it\n    has acquired it.\n\n    \"\"\"\n\n    def __init__(self):\n        self._block = _allocate_lock()\n        self._owner = None\n        self._count = 0\n\n    def __repr__(self):\n        owner = self._owner\n        try:\n            owner = _active[owner].name\n        except KeyError:\n            pass\n        return \"<%s %s.%s object owner=%r count=%d at %s>\" % (\n            \"locked\" if self._block.locked() else \"unlocked\",\n            self.__class__.__module__,\n            self.__class__.__qualname__,\n            owner,\n            self._count,\n            hex(id(self))\n        )\n\n    def _at_fork_reinit(self):\n        self._block._at_fork_reinit()\n        self._owner = None\n        self._count = 0\n\n    def acquire(self, blocking=True, timeout=-1):\n        \"\"\"Acquire a lock, blocking or non-blocking.\n\n        When invoked without arguments: if this thread already owns the lock,\n        increment the recursion level by one, and return immediately. Otherwise,\n        if another thread owns the lock, block until the lock is unlocked. Once\n        the lock is unlocked (not owned by any thread), then grab ownership, set\n        the recursion level to one, and return. If more than one thread is\n        blocked waiting until the lock is unlocked, only one at a time will be\n        able to grab ownership of the lock. There is no return value in this\n        case.\n\n        When invoked with the blocking argument set to true, do the same thing\n        as when called without arguments, and return true.\n\n        When invoked with the blocking argument set to false, do not block. If a\n        call without an argument would block, return false immediately;\n        otherwise, do the same thing as when called without arguments, and\n        return true.\n\n        When invoked with the floating-point timeout argument set to a positive\n        value, block for at most the number of seconds specified by timeout\n        and as long as the lock cannot be acquired.  Return true if the lock has\n        been acquired, false if the timeout has elapsed.\n\n        \"\"\"\n        me = get_ident()\n        if self._owner == me:\n            self._count += 1\n            return 1\n        rc = self._block.acquire(blocking, timeout)\n        if rc:\n            self._owner = me\n            self._count = 1\n        return rc\n\n    __enter__ = acquire\n\n    def release(self):\n        \"\"\"Release a lock, decrementing the recursion level.\n\n        If after the decrement it is zero, reset the lock to unlocked (not owned\n        by any thread), and if any other threads are blocked waiting for the\n        lock to become unlocked, allow exactly one of them to proceed. If after\n        the decrement the recursion level is still nonzero, the lock remains\n        locked and owned by the calling thread.\n\n        Only call this method when the calling thread owns the lock. A\n        RuntimeError is raised if this method is called when the lock is\n        unlocked.\n\n        There is no return value.\n\n        \"\"\"\n        if self._owner != get_ident():\n            raise RuntimeError(\"cannot release un-acquired lock\")\n        self._count = count = self._count - 1\n        if not count:\n            self._owner = None\n            self._block.release()\n\n    def __exit__(self, t, v, tb):\n        self.release()\n\n    # Internal methods used by condition variables\n\n    def _acquire_restore(self, state):\n        self._block.acquire()\n        self._count, self._owner = state\n\n    def _release_save(self):\n        if self._count == 0:\n            raise RuntimeError(\"cannot release un-acquired lock\")\n        count = self._count\n        self._count = 0\n        owner = self._owner\n        self._owner = None\n        self._block.release()\n        return (count, owner)\n\n    def _is_owned(self):\n        return self._owner == get_ident()\n\n_PyRLock = _RLock\n\n\nclass Condition:\n    \"\"\"Class that implements a condition variable.\n\n    A condition variable allows one or more threads to wait until they are\n    notified by another thread.\n\n    If the lock argument is given and not None, it must be a Lock or RLock\n    object, and it is used as the underlying lock. Otherwise, a new RLock object\n    is created and used as the underlying lock.\n\n    \"\"\"\n\n    def __init__(self, lock=None):\n        if lock is None:\n            lock = RLock()\n        self._lock = lock\n        # Export the lock's acquire() and release() methods\n        self.acquire = lock.acquire\n        self.release = lock.release\n        # If the lock defines _release_save() and/or _acquire_restore(),\n        # these override the default implementations (which just call\n        # release() and acquire() on the lock).  Ditto for _is_owned().\n        try:\n            self._release_save = lock._release_save\n        except AttributeError:\n            pass\n        try:\n            self._acquire_restore = lock._acquire_restore\n        except AttributeError:\n            pass\n        try:\n            self._is_owned = lock._is_owned\n        except AttributeError:\n            pass\n        self._waiters = _deque()\n\n    def _at_fork_reinit(self):\n        self._lock._at_fork_reinit()\n        self._waiters.clear()\n\n    def __enter__(self):\n        return self._lock.__enter__()\n\n    def __exit__(self, *args):\n        return self._lock.__exit__(*args)\n\n    def __repr__(self):\n        return \"<Condition(%s, %d)>\" % (self._lock, len(self._waiters))\n\n    def _release_save(self):\n        self._lock.release()           # No state to save\n\n    def _acquire_restore(self, x):\n        self._lock.acquire()           # Ignore saved state\n\n    def _is_owned(self):\n        # Return True if lock is owned by current_thread.\n        # This method is called only if _lock doesn't have _is_owned().\n        if self._lock.acquire(False):\n            self._lock.release()\n            return False\n        else:\n            return True\n\n    def wait(self, timeout=None):\n        \"\"\"Wait until notified or until a timeout occurs.\n\n        If the calling thread has not acquired the lock when this method is\n        called, a RuntimeError is raised.\n\n        This method releases the underlying lock, and then blocks until it is\n        awakened by a notify() or notify_all() call for the same condition\n        variable in another thread, or until the optional timeout occurs. Once\n        awakened or timed out, it re-acquires the lock and returns.\n\n        When the timeout argument is present and not None, it should be a\n        floating point number specifying a timeout for the operation in seconds\n        (or fractions thereof).\n\n        When the underlying lock is an RLock, it is not released using its\n        release() method, since this may not actually unlock the lock when it\n        was acquired multiple times recursively. Instead, an internal interface\n        of the RLock class is used, which really unlocks it even when it has\n        been recursively acquired several times. Another internal interface is\n        then used to restore the recursion level when the lock is reacquired.\n\n        \"\"\"\n        if not self._is_owned():\n            raise RuntimeError(\"cannot wait on un-acquired lock\")\n        waiter = _allocate_lock()\n        waiter.acquire()\n        self._waiters.append(waiter)\n        saved_state = self._release_save()\n        gotit = False\n        try:    # restore state no matter what (e.g., KeyboardInterrupt)\n            if timeout is None:\n                waiter.acquire()\n                gotit = True\n            else:\n                if timeout > 0:\n                    gotit = waiter.acquire(True, timeout)\n                else:\n                    gotit = waiter.acquire(False)\n            return gotit\n        finally:\n            self._acquire_restore(saved_state)\n            if not gotit:\n                try:\n                    self._waiters.remove(waiter)\n                except ValueError:\n                    pass\n\n    def wait_for(self, predicate, timeout=None):\n        \"\"\"Wait until a condition evaluates to True.\n\n        predicate should be a callable which result will be interpreted as a\n        boolean value.  A timeout may be provided giving the maximum time to\n        wait.\n\n        \"\"\"\n        endtime = None\n        waittime = timeout\n        result = predicate()\n        while not result:\n            if waittime is not None:\n                if endtime is None:\n                    endtime = _time() + waittime\n                else:\n                    waittime = endtime - _time()\n                    if waittime <= 0:\n                        break\n            self.wait(waittime)\n            result = predicate()\n        return result\n\n    def notify(self, n=1):\n        \"\"\"Wake up one or more threads waiting on this condition, if any.\n\n        If the calling thread has not acquired the lock when this method is\n        called, a RuntimeError is raised.\n\n        This method wakes up at most n of the threads waiting for the condition\n        variable; it is a no-op if no threads are waiting.\n\n        \"\"\"\n        if not self._is_owned():\n            raise RuntimeError(\"cannot notify on un-acquired lock\")\n        all_waiters = self._waiters\n        waiters_to_notify = _deque(_islice(all_waiters, n))\n        if not waiters_to_notify:\n            return\n        for waiter in waiters_to_notify:\n            waiter.release()\n            try:\n                all_waiters.remove(waiter)\n            except ValueError:\n                pass\n\n    def notify_all(self):\n        \"\"\"Wake up all threads waiting on this condition.\n\n        If the calling thread has not acquired the lock when this method\n        is called, a RuntimeError is raised.\n\n        \"\"\"\n        self.notify(len(self._waiters))\n\n    notifyAll = notify_all\n\n\nclass Semaphore:\n    \"\"\"This class implements semaphore objects.\n\n    Semaphores manage a counter representing the number of release() calls minus\n    the number of acquire() calls, plus an initial value. The acquire() method\n    blocks if necessary until it can return without making the counter\n    negative. If not given, value defaults to 1.\n\n    \"\"\"\n\n    # After Tim Peters' semaphore class, but not quite the same (no maximum)\n\n    def __init__(self, value=1):\n        if value < 0:\n            raise ValueError(\"semaphore initial value must be >= 0\")\n        self._cond = Condition(Lock())\n        self._value = value\n\n    def acquire(self, blocking=True, timeout=None):\n        \"\"\"Acquire a semaphore, decrementing the internal counter by one.\n\n        When invoked without arguments: if the internal counter is larger than\n        zero on entry, decrement it by one and return immediately. If it is zero\n        on entry, block, waiting until some other thread has called release() to\n        make it larger than zero. This is done with proper interlocking so that\n        if multiple acquire() calls are blocked, release() will wake exactly one\n        of them up. The implementation may pick one at random, so the order in\n        which blocked threads are awakened should not be relied on. There is no\n        return value in this case.\n\n        When invoked with blocking set to true, do the same thing as when called\n        without arguments, and return true.\n\n        When invoked with blocking set to false, do not block. If a call without\n        an argument would block, return false immediately; otherwise, do the\n        same thing as when called without arguments, and return true.\n\n        When invoked with a timeout other than None, it will block for at\n        most timeout seconds.  If acquire does not complete successfully in\n        that interval, return false.  Return true otherwise.\n\n        \"\"\"\n        if not blocking and timeout is not None:\n            raise ValueError(\"can't specify timeout for non-blocking acquire\")\n        rc = False\n        endtime = None\n        with self._cond:\n            while self._value == 0:\n                if not blocking:\n                    break\n                if timeout is not None:\n                    if endtime is None:\n                        endtime = _time() + timeout\n                    else:\n                        timeout = endtime - _time()\n                        if timeout <= 0:\n                            break\n                self._cond.wait(timeout)\n            else:\n                self._value -= 1\n                rc = True\n        return rc\n\n    __enter__ = acquire\n\n    def release(self, n=1):\n        \"\"\"Release a semaphore, incrementing the internal counter by one or more.\n\n        When the counter is zero on entry and another thread is waiting for it\n        to become larger than zero again, wake up that thread.\n\n        \"\"\"\n        if n < 1:\n            raise ValueError('n must be one or more')\n        with self._cond:\n            self._value += n\n            for i in range(n):\n                self._cond.notify()\n\n    def __exit__(self, t, v, tb):\n        self.release()\n\n\nclass BoundedSemaphore(Semaphore):\n    \"\"\"Implements a bounded semaphore.\n\n    A bounded semaphore checks to make sure its current value doesn't exceed its\n    initial value. If it does, ValueError is raised. In most situations\n    semaphores are used to guard resources with limited capacity.\n\n    If the semaphore is released too many times it's a sign of a bug. If not\n    given, value defaults to 1.\n\n    Like regular semaphores, bounded semaphores manage a counter representing\n    the number of release() calls minus the number of acquire() calls, plus an\n    initial value. The acquire() method blocks if necessary until it can return\n    without making the counter negative. If not given, value defaults to 1.\n\n    \"\"\"\n\n    def __init__(self, value=1):\n        Semaphore.__init__(self, value)\n        self._initial_value = value\n\n    def release(self, n=1):\n        \"\"\"Release a semaphore, incrementing the internal counter by one or more.\n\n        When the counter is zero on entry and another thread is waiting for it\n        to become larger than zero again, wake up that thread.\n\n        If the number of releases exceeds the number of acquires,\n        raise a ValueError.\n\n        \"\"\"\n        if n < 1:\n            raise ValueError('n must be one or more')\n        with self._cond:\n            if self._value + n > self._initial_value:\n                raise ValueError(\"Semaphore released too many times\")\n            self._value += n\n            for i in range(n):\n                self._cond.notify()\n\n\nclass Event:\n    \"\"\"Class implementing event objects.\n\n    Events manage a flag that can be set to true with the set() method and reset\n    to false with the clear() method. The wait() method blocks until the flag is\n    true.  The flag is initially false.\n\n    \"\"\"\n\n    # After Tim Peters' event class (without is_posted())\n\n    def __init__(self):\n        self._cond = Condition(Lock())\n        self._flag = False\n\n    def _at_fork_reinit(self):\n        # Private method called by Thread._reset_internal_locks()\n        self._cond._at_fork_reinit()\n\n    def is_set(self):\n        \"\"\"Return true if and only if the internal flag is true.\"\"\"\n        return self._flag\n\n    isSet = is_set\n\n    def set(self):\n        \"\"\"Set the internal flag to true.\n\n        All threads waiting for it to become true are awakened. Threads\n        that call wait() once the flag is true will not block at all.\n\n        \"\"\"\n        with self._cond:\n            self._flag = True\n            self._cond.notify_all()\n\n    def clear(self):\n        \"\"\"Reset the internal flag to false.\n\n        Subsequently, threads calling wait() will block until set() is called to\n        set the internal flag to true again.\n\n        \"\"\"\n        with self._cond:\n            self._flag = False\n\n    def wait(self, timeout=None):\n        \"\"\"Block until the internal flag is true.\n\n        If the internal flag is true on entry, return immediately. Otherwise,\n        block until another thread calls set() to set the flag to true, or until\n        the optional timeout occurs.\n\n        When the timeout argument is present and not None, it should be a\n        floating point number specifying a timeout for the operation in seconds\n        (or fractions thereof).\n\n        This method returns the internal flag on exit, so it will always return\n        True except if a timeout is given and the operation times out.\n\n        \"\"\"\n        with self._cond:\n            signaled = self._flag\n            if not signaled:\n                signaled = self._cond.wait(timeout)\n            return signaled\n\n\n# A barrier class.  Inspired in part by the pthread_barrier_* api and\n# the CyclicBarrier class from Java.  See\n# http://sourceware.org/pthreads-win32/manual/pthread_barrier_init.html and\n# http://java.sun.com/j2se/1.5.0/docs/api/java/util/concurrent/\n#        CyclicBarrier.html\n# for information.\n# We maintain two main states, 'filling' and 'draining' enabling the barrier\n# to be cyclic.  Threads are not allowed into it until it has fully drained\n# since the previous cycle.  In addition, a 'resetting' state exists which is\n# similar to 'draining' except that threads leave with a BrokenBarrierError,\n# and a 'broken' state in which all threads get the exception.\nclass Barrier:\n    \"\"\"Implements a Barrier.\n\n    Useful for synchronizing a fixed number of threads at known synchronization\n    points.  Threads block on 'wait()' and are simultaneously awoken once they\n    have all made that call.\n\n    \"\"\"\n\n    def __init__(self, parties, action=None, timeout=None):\n        \"\"\"Create a barrier, initialised to 'parties' threads.\n\n        'action' is a callable which, when supplied, will be called by one of\n        the threads after they have all entered the barrier and just prior to\n        releasing them all. If a 'timeout' is provided, it is used as the\n        default for all subsequent 'wait()' calls.\n\n        \"\"\"\n        self._cond = Condition(Lock())\n        self._action = action\n        self._timeout = timeout\n        self._parties = parties\n        self._state = 0 #0 filling, 1, draining, -1 resetting, -2 broken\n        self._count = 0\n\n    def wait(self, timeout=None):\n        \"\"\"Wait for the barrier.\n\n        When the specified number of threads have started waiting, they are all\n        simultaneously awoken. If an 'action' was provided for the barrier, one\n        of the threads will have executed that callback prior to returning.\n        Returns an individual index number from 0 to 'parties-1'.\n\n        \"\"\"\n        if timeout is None:\n            timeout = self._timeout\n        with self._cond:\n            self._enter() # Block while the barrier drains.\n            index = self._count\n            self._count += 1\n            try:\n                if index + 1 == self._parties:\n                    # We release the barrier\n                    self._release()\n                else:\n                    # We wait until someone releases us\n                    self._wait(timeout)\n                return index\n            finally:\n                self._count -= 1\n                # Wake up any threads waiting for barrier to drain.\n                self._exit()\n\n    # Block until the barrier is ready for us, or raise an exception\n    # if it is broken.\n    def _enter(self):\n        while self._state in (-1, 1):\n            # It is draining or resetting, wait until done\n            self._cond.wait()\n        #see if the barrier is in a broken state\n        if self._state < 0:\n            raise BrokenBarrierError\n        assert self._state == 0\n\n    # Optionally run the 'action' and release the threads waiting\n    # in the barrier.\n    def _release(self):\n        try:\n            if self._action:\n                self._action()\n            # enter draining state\n            self._state = 1\n            self._cond.notify_all()\n        except:\n            #an exception during the _action handler.  Break and reraise\n            self._break()\n            raise\n\n    # Wait in the barrier until we are released.  Raise an exception\n    # if the barrier is reset or broken.\n    def _wait(self, timeout):\n        if not self._cond.wait_for(lambda : self._state != 0, timeout):\n            #timed out.  Break the barrier\n            self._break()\n            raise BrokenBarrierError\n        if self._state < 0:\n            raise BrokenBarrierError\n        assert self._state == 1\n\n    # If we are the last thread to exit the barrier, signal any threads\n    # waiting for the barrier to drain.\n    def _exit(self):\n        if self._count == 0:\n            if self._state in (-1, 1):\n                #resetting or draining\n                self._state = 0\n                self._cond.notify_all()\n\n    def reset(self):\n        \"\"\"Reset the barrier to the initial state.\n\n        Any threads currently waiting will get the BrokenBarrier exception\n        raised.\n\n        \"\"\"\n        with self._cond:\n            if self._count > 0:\n                if self._state == 0:\n                    #reset the barrier, waking up threads\n                    self._state = -1\n                elif self._state == -2:\n                    #was broken, set it to reset state\n                    #which clears when the last thread exits\n                    self._state = -1\n            else:\n                self._state = 0\n            self._cond.notify_all()\n\n    def abort(self):\n        \"\"\"Place the barrier into a 'broken' state.\n\n        Useful in case of error.  Any currently waiting threads and threads\n        attempting to 'wait()' will have BrokenBarrierError raised.\n\n        \"\"\"\n        with self._cond:\n            self._break()\n\n    def _break(self):\n        # An internal error was detected.  The barrier is set to\n        # a broken state all parties awakened.\n        self._state = -2\n        self._cond.notify_all()\n\n    @property\n    def parties(self):\n        \"\"\"Return the number of threads required to trip the barrier.\"\"\"\n        return self._parties\n\n    @property\n    def n_waiting(self):\n        \"\"\"Return the number of threads currently waiting at the barrier.\"\"\"\n        # We don't need synchronization here since this is an ephemeral result\n        # anyway.  It returns the correct value in the steady state.\n        if self._state == 0:\n            return self._count\n        return 0\n\n    @property\n    def broken(self):\n        \"\"\"Return True if the barrier is in a broken state.\"\"\"\n        return self._state == -2\n\n# exception raised by the Barrier class\nclass BrokenBarrierError(RuntimeError):\n    pass\n\n\n# Helper to generate new thread names\n_counter = _count().__next__\n_counter() # Consume 0 so first non-main thread has id 1.\ndef _newname(template=\"Thread-%d\"):\n    return template % _counter()\n\n# Active thread administration.\n#\n# bpo-44422: Use a reentrant lock to allow reentrant calls to functions like\n# threading.enumerate().\n_active_limbo_lock = RLock()\n_active = {}    # maps thread id to Thread object\n_limbo = {}\n_dangling = WeakSet()\n\n# Set of Thread._tstate_lock locks of non-daemon threads used by _shutdown()\n# to wait until all Python thread states get deleted:\n# see Thread._set_tstate_lock().\n_shutdown_locks_lock = _allocate_lock()\n_shutdown_locks = set()\n\ndef _maintain_shutdown_locks():\n    \"\"\"\n    Drop any shutdown locks that don't correspond to running threads anymore.\n\n    Calling this from time to time avoids an ever-growing _shutdown_locks\n    set when Thread objects are not joined explicitly. See bpo-37788.\n\n    This must be called with _shutdown_locks_lock acquired.\n    \"\"\"\n    # If a lock was released, the corresponding thread has exited\n    to_remove = [lock for lock in _shutdown_locks if not lock.locked()]\n    _shutdown_locks.difference_update(to_remove)\n\n\n# Main class for threads\n\nclass Thread:\n    \"\"\"A class that represents a thread of control.\n\n    This class can be safely subclassed in a limited fashion. There are two ways\n    to specify the activity: by passing a callable object to the constructor, or\n    by overriding the run() method in a subclass.\n\n    \"\"\"\n\n    _initialized = False\n\n    def __init__(self, group=None, target=None, name=None,\n                 args=(), kwargs=None, *, daemon=None):\n        \"\"\"This constructor should always be called with keyword arguments. Arguments are:\n\n        *group* should be None; reserved for future extension when a ThreadGroup\n        class is implemented.\n\n        *target* is the callable object to be invoked by the run()\n        method. Defaults to None, meaning nothing is called.\n\n        *name* is the thread name. By default, a unique name is constructed of\n        the form \"Thread-N\" where N is a small decimal number.\n\n        *args* is the argument tuple for the target invocation. Defaults to ().\n\n        *kwargs* is a dictionary of keyword arguments for the target\n        invocation. Defaults to {}.\n\n        If a subclass overrides the constructor, it must make sure to invoke\n        the base class constructor (Thread.__init__()) before doing anything\n        else to the thread.\n\n        \"\"\"\n        assert group is None, \"group argument must be None for now\"\n        if kwargs is None:\n            kwargs = {}\n        self._target = target\n        self._name = str(name or _newname())\n        self._args = args\n        self._kwargs = kwargs\n        if daemon is not None:\n            self._daemonic = daemon\n        else:\n            self._daemonic = current_thread().daemon\n        self._ident = None\n        if _HAVE_THREAD_NATIVE_ID:\n            self._native_id = None\n        self._tstate_lock = None\n        self._started = Event()\n        self._is_stopped = False\n        self._initialized = True\n        # Copy of sys.stderr used by self._invoke_excepthook()\n        self._stderr = _sys.stderr\n        self._invoke_excepthook = _make_invoke_excepthook()\n        # For debugging and _after_fork()\n        _dangling.add(self)\n\n    def _reset_internal_locks(self, is_alive):\n        # private!  Called by _after_fork() to reset our internal locks as\n        # they may be in an invalid state leading to a deadlock or crash.\n        self._started._at_fork_reinit()\n        if is_alive:\n            # bpo-42350: If the fork happens when the thread is already stopped\n            # (ex: after threading._shutdown() has been called), _tstate_lock\n            # is None. Do nothing in this case.\n            if self._tstate_lock is not None:\n                self._tstate_lock._at_fork_reinit()\n                self._tstate_lock.acquire()\n        else:\n            # The thread isn't alive after fork: it doesn't have a tstate\n            # anymore.\n            self._is_stopped = True\n            self._tstate_lock = None\n\n    def __repr__(self):\n        assert self._initialized, \"Thread.__init__() was not called\"\n        status = \"initial\"\n        if self._started.is_set():\n            status = \"started\"\n        self.is_alive() # easy way to get ._is_stopped set when appropriate\n        if self._is_stopped:\n            status = \"stopped\"\n        if self._daemonic:\n            status += \" daemon\"\n        if self._ident is not None:\n            status += \" %s\" % self._ident\n        return \"<%s(%s, %s)>\" % (self.__class__.__name__, self._name, status)\n\n    def start(self):\n        \"\"\"Start the thread's activity.\n\n        It must be called at most once per thread object. It arranges for the\n        object's run() method to be invoked in a separate thread of control.\n\n        This method will raise a RuntimeError if called more than once on the\n        same thread object.\n\n        \"\"\"\n        if not self._initialized:\n            raise RuntimeError(\"thread.__init__() not called\")\n\n        if self._started.is_set():\n            raise RuntimeError(\"threads can only be started once\")\n\n        with _active_limbo_lock:\n            _limbo[self] = self\n        try:\n            _start_new_thread(self._bootstrap, ())\n        except Exception:\n            with _active_limbo_lock:\n                del _limbo[self]\n            raise\n        self._started.wait()\n\n    def run(self):\n        \"\"\"Method representing the thread's activity.\n\n        You may override this method in a subclass. The standard run() method\n        invokes the callable object passed to the object's constructor as the\n        target argument, if any, with sequential and keyword arguments taken\n        from the args and kwargs arguments, respectively.\n\n        \"\"\"\n        try:\n            if self._target:\n                self._target(*self._args, **self._kwargs)\n        finally:\n            # Avoid a refcycle if the thread is running a function with\n            # an argument that has a member that points to the thread.\n            del self._target, self._args, self._kwargs\n\n    def _bootstrap(self):\n        # Wrapper around the real bootstrap code that ignores\n        # exceptions during interpreter cleanup.  Those typically\n        # happen when a daemon thread wakes up at an unfortunate\n        # moment, finds the world around it destroyed, and raises some\n        # random exception *** while trying to report the exception in\n        # _bootstrap_inner() below ***.  Those random exceptions\n        # don't help anybody, and they confuse users, so we suppress\n        # them.  We suppress them only when it appears that the world\n        # indeed has already been destroyed, so that exceptions in\n        # _bootstrap_inner() during normal business hours are properly\n        # reported.  Also, we only suppress them for daemonic threads;\n        # if a non-daemonic encounters this, something else is wrong.\n        try:\n            self._bootstrap_inner()\n        except:\n            if self._daemonic and _sys is None:\n                return\n            raise\n\n    def _set_ident(self):\n        self._ident = get_ident()\n\n    if _HAVE_THREAD_NATIVE_ID:\n        def _set_native_id(self):\n            self._native_id = get_native_id()\n\n    def _set_tstate_lock(self):\n        \"\"\"\n        Set a lock object which will be released by the interpreter when\n        the underlying thread state (see pystate.h) gets deleted.\n        \"\"\"\n        self._tstate_lock = _set_sentinel()\n        self._tstate_lock.acquire()\n\n        if not self.daemon:\n            with _shutdown_locks_lock:\n                _maintain_shutdown_locks()\n                _shutdown_locks.add(self._tstate_lock)\n\n    def _bootstrap_inner(self):\n        try:\n            self._set_ident()\n            self._set_tstate_lock()\n            if _HAVE_THREAD_NATIVE_ID:\n                self._set_native_id()\n            self._started.set()\n            with _active_limbo_lock:\n                _active[self._ident] = self\n                del _limbo[self]\n\n            if _trace_hook:\n                _sys.settrace(_trace_hook)\n            if _profile_hook:\n                _sys.setprofile(_profile_hook)\n\n            try:\n                self.run()\n            except:\n                self._invoke_excepthook(self)\n        finally:\n            with _active_limbo_lock:\n                try:\n                    # We don't call self._delete() because it also\n                    # grabs _active_limbo_lock.\n                    del _active[get_ident()]\n                except:\n                    pass\n\n    def _stop(self):\n        # After calling ._stop(), .is_alive() returns False and .join() returns\n        # immediately.  ._tstate_lock must be released before calling ._stop().\n        #\n        # Normal case:  C code at the end of the thread's life\n        # (release_sentinel in _threadmodule.c) releases ._tstate_lock, and\n        # that's detected by our ._wait_for_tstate_lock(), called by .join()\n        # and .is_alive().  Any number of threads _may_ call ._stop()\n        # simultaneously (for example, if multiple threads are blocked in\n        # .join() calls), and they're not serialized.  That's harmless -\n        # they'll just make redundant rebindings of ._is_stopped and\n        # ._tstate_lock.  Obscure:  we rebind ._tstate_lock last so that the\n        # \"assert self._is_stopped\" in ._wait_for_tstate_lock() always works\n        # (the assert is executed only if ._tstate_lock is None).\n        #\n        # Special case:  _main_thread releases ._tstate_lock via this\n        # module's _shutdown() function.\n        lock = self._tstate_lock\n        if lock is not None:\n            assert not lock.locked()\n        self._is_stopped = True\n        self._tstate_lock = None\n        if not self.daemon:\n            with _shutdown_locks_lock:\n                # Remove our lock and other released locks from _shutdown_locks\n                _maintain_shutdown_locks()\n\n    def _delete(self):\n        \"Remove current thread from the dict of currently running threads.\"\n        with _active_limbo_lock:\n            del _active[get_ident()]\n            # There must not be any python code between the previous line\n            # and after the lock is released.  Otherwise a tracing function\n            # could try to acquire the lock again in the same thread, (in\n            # current_thread()), and would block.\n\n    def join(self, timeout=None):\n        \"\"\"Wait until the thread terminates.\n\n        This blocks the calling thread until the thread whose join() method is\n        called terminates -- either normally or through an unhandled exception\n        or until the optional timeout occurs.\n\n        When the timeout argument is present and not None, it should be a\n        floating point number specifying a timeout for the operation in seconds\n        (or fractions thereof). As join() always returns None, you must call\n        is_alive() after join() to decide whether a timeout happened -- if the\n        thread is still alive, the join() call timed out.\n\n        When the timeout argument is not present or None, the operation will\n        block until the thread terminates.\n\n        A thread can be join()ed many times.\n\n        join() raises a RuntimeError if an attempt is made to join the current\n        thread as that would cause a deadlock. It is also an error to join() a\n        thread before it has been started and attempts to do so raises the same\n        exception.\n\n        \"\"\"\n        if not self._initialized:\n            raise RuntimeError(\"Thread.__init__() not called\")\n        if not self._started.is_set():\n            raise RuntimeError(\"cannot join thread before it is started\")\n        if self is current_thread():\n            raise RuntimeError(\"cannot join current thread\")\n\n        if timeout is None:\n            self._wait_for_tstate_lock()\n        else:\n            # the behavior of a negative timeout isn't documented, but\n            # historically .join(timeout=x) for x<0 has acted as if timeout=0\n            self._wait_for_tstate_lock(timeout=max(timeout, 0))\n\n    def _wait_for_tstate_lock(self, block=True, timeout=-1):\n        # Issue #18808: wait for the thread state to be gone.\n        # At the end of the thread's life, after all knowledge of the thread\n        # is removed from C data structures, C code releases our _tstate_lock.\n        # This method passes its arguments to _tstate_lock.acquire().\n        # If the lock is acquired, the C code is done, and self._stop() is\n        # called.  That sets ._is_stopped to True, and ._tstate_lock to None.\n        lock = self._tstate_lock\n        if lock is None:  # already determined that the C code is done\n            assert self._is_stopped\n        elif lock.acquire(block, timeout):\n            lock.release()\n            self._stop()\n\n    @property\n    def name(self):\n        \"\"\"A string used for identification purposes only.\n\n        It has no semantics. Multiple threads may be given the same name. The\n        initial name is set by the constructor.\n\n        \"\"\"\n        assert self._initialized, \"Thread.__init__() not called\"\n        return self._name\n\n    @name.setter\n    def name(self, name):\n        assert self._initialized, \"Thread.__init__() not called\"\n        self._name = str(name)\n\n    @property\n    def ident(self):\n        \"\"\"Thread identifier of this thread or None if it has not been started.\n\n        This is a nonzero integer. See the get_ident() function. Thread\n        identifiers may be recycled when a thread exits and another thread is\n        created. The identifier is available even after the thread has exited.\n\n        \"\"\"\n        assert self._initialized, \"Thread.__init__() not called\"\n        return self._ident\n\n    if _HAVE_THREAD_NATIVE_ID:\n        @property\n        def native_id(self):\n            \"\"\"Native integral thread ID of this thread, or None if it has not been started.\n\n            This is a non-negative integer. See the get_native_id() function.\n            This represents the Thread ID as reported by the kernel.\n\n            \"\"\"\n            assert self._initialized, \"Thread.__init__() not called\"\n            return self._native_id\n\n    def is_alive(self):\n        \"\"\"Return whether the thread is alive.\n\n        This method returns True just before the run() method starts until just\n        after the run() method terminates. See also the module function\n        enumerate().\n\n        \"\"\"\n        assert self._initialized, \"Thread.__init__() not called\"\n        if self._is_stopped or not self._started.is_set():\n            return False\n        self._wait_for_tstate_lock(False)\n        return not self._is_stopped\n\n    @property\n    def daemon(self):\n        \"\"\"A boolean value indicating whether this thread is a daemon thread.\n\n        This must be set before start() is called, otherwise RuntimeError is\n        raised. Its initial value is inherited from the creating thread; the\n        main thread is not a daemon thread and therefore all threads created in\n        the main thread default to daemon = False.\n\n        The entire Python program exits when only daemon threads are left.\n\n        \"\"\"\n        assert self._initialized, \"Thread.__init__() not called\"\n        return self._daemonic\n\n    @daemon.setter\n    def daemon(self, daemonic):\n        if not self._initialized:\n            raise RuntimeError(\"Thread.__init__() not called\")\n        if self._started.is_set():\n            raise RuntimeError(\"cannot set daemon status of active thread\")\n        self._daemonic = daemonic\n\n    def isDaemon(self):\n        return self.daemon\n\n    def setDaemon(self, daemonic):\n        self.daemon = daemonic\n\n    def getName(self):\n        return self.name\n\n    def setName(self, name):\n        self.name = name\n\n\ntry:\n    from _thread import (_excepthook as excepthook,\n                         _ExceptHookArgs as ExceptHookArgs)\nexcept ImportError:\n    # Simple Python implementation if _thread._excepthook() is not available\n    from traceback import print_exception as _print_exception\n    from collections import namedtuple\n\n    _ExceptHookArgs = namedtuple(\n        'ExceptHookArgs',\n        'exc_type exc_value exc_traceback thread')\n\n    def ExceptHookArgs(args):\n        return _ExceptHookArgs(*args)\n\n    def excepthook(args, /):\n        \"\"\"\n        Handle uncaught Thread.run() exception.\n        \"\"\"\n        if args.exc_type == SystemExit:\n            # silently ignore SystemExit\n            return\n\n        if _sys is not None and _sys.stderr is not None:\n            stderr = _sys.stderr\n        elif args.thread is not None:\n            stderr = args.thread._stderr\n            if stderr is None:\n                # do nothing if sys.stderr is None and sys.stderr was None\n                # when the thread was created\n                return\n        else:\n            # do nothing if sys.stderr is None and args.thread is None\n            return\n\n        if args.thread is not None:\n            name = args.thread.name\n        else:\n            name = get_ident()\n        print(f\"Exception in thread {name}:\",\n              file=stderr, flush=True)\n        _print_exception(args.exc_type, args.exc_value, args.exc_traceback,\n                         file=stderr)\n        stderr.flush()\n\n\ndef _make_invoke_excepthook():\n    # Create a local namespace to ensure that variables remain alive\n    # when _invoke_excepthook() is called, even if it is called late during\n    # Python shutdown. It is mostly needed for daemon threads.\n\n    old_excepthook = excepthook\n    old_sys_excepthook = _sys.excepthook\n    if old_excepthook is None:\n        raise RuntimeError(\"threading.excepthook is None\")\n    if old_sys_excepthook is None:\n        raise RuntimeError(\"sys.excepthook is None\")\n\n    sys_exc_info = _sys.exc_info\n    local_print = print\n    local_sys = _sys\n\n    def invoke_excepthook(thread):\n        global excepthook\n        try:\n            hook = excepthook\n            if hook is None:\n                hook = old_excepthook\n\n            args = ExceptHookArgs([*sys_exc_info(), thread])\n\n            hook(args)\n        except Exception as exc:\n            exc.__suppress_context__ = True\n            del exc\n\n            if local_sys is not None and local_sys.stderr is not None:\n                stderr = local_sys.stderr\n            else:\n                stderr = thread._stderr\n\n            local_print(\"Exception in threading.excepthook:\",\n                        file=stderr, flush=True)\n\n            if local_sys is not None and local_sys.excepthook is not None:\n                sys_excepthook = local_sys.excepthook\n            else:\n                sys_excepthook = old_sys_excepthook\n\n            sys_excepthook(*sys_exc_info())\n        finally:\n            # Break reference cycle (exception stored in a variable)\n            args = None\n\n    return invoke_excepthook\n\n\n# The timer class was contributed by Itamar Shtull-Trauring\n\nclass Timer(Thread):\n    \"\"\"Call a function after a specified number of seconds:\n\n            t = Timer(30.0, f, args=None, kwargs=None)\n            t.start()\n            t.cancel()     # stop the timer's action if it's still waiting\n\n    \"\"\"\n\n    def __init__(self, interval, function, args=None, kwargs=None):\n        Thread.__init__(self)\n        self.interval = interval\n        self.function = function\n        self.args = args if args is not None else []\n        self.kwargs = kwargs if kwargs is not None else {}\n        self.finished = Event()\n\n    def cancel(self):\n        \"\"\"Stop the timer if it hasn't finished yet.\"\"\"\n        self.finished.set()\n\n    def run(self):\n        self.finished.wait(self.interval)\n        if not self.finished.is_set():\n            self.function(*self.args, **self.kwargs)\n        self.finished.set()\n\n\n# Special thread class to represent the main thread\n\nclass _MainThread(Thread):\n\n    def __init__(self):\n        Thread.__init__(self, name=\"MainThread\", daemon=False)\n        self._set_tstate_lock()\n        self._started.set()\n        self._set_ident()\n        if _HAVE_THREAD_NATIVE_ID:\n            self._set_native_id()\n        with _active_limbo_lock:\n            _active[self._ident] = self\n\n\n# Dummy thread class to represent threads not started here.\n# These aren't garbage collected when they die, nor can they be waited for.\n# If they invoke anything in threading.py that calls current_thread(), they\n# leave an entry in the _active dict forever after.\n# Their purpose is to return *something* from current_thread().\n# They are marked as daemon threads so we won't wait for them\n# when we exit (conform previous semantics).\n\nclass _DummyThread(Thread):\n\n    def __init__(self):\n        Thread.__init__(self, name=_newname(\"Dummy-%d\"), daemon=True)\n\n        self._started.set()\n        self._set_ident()\n        if _HAVE_THREAD_NATIVE_ID:\n            self._set_native_id()\n        with _active_limbo_lock:\n            _active[self._ident] = self\n\n    def _stop(self):\n        pass\n\n    def is_alive(self):\n        assert not self._is_stopped and self._started.is_set()\n        return True\n\n    def join(self, timeout=None):\n        assert False, \"cannot join a dummy thread\"\n\n\n# Global API functions\n\ndef current_thread():\n    \"\"\"Return the current Thread object, corresponding to the caller's thread of control.\n\n    If the caller's thread of control was not created through the threading\n    module, a dummy thread object with limited functionality is returned.\n\n    \"\"\"\n    try:\n        return _active[get_ident()]\n    except KeyError:\n        return _DummyThread()\n\ncurrentThread = current_thread\n\ndef active_count():\n    \"\"\"Return the number of Thread objects currently alive.\n\n    The returned count is equal to the length of the list returned by\n    enumerate().\n\n    \"\"\"\n    with _active_limbo_lock:\n        return len(_active) + len(_limbo)\n\nactiveCount = active_count\n\ndef _enumerate():\n    # Same as enumerate(), but without the lock. Internal use only.\n    return list(_active.values()) + list(_limbo.values())\n\ndef enumerate():\n    \"\"\"Return a list of all Thread objects currently alive.\n\n    The list includes daemonic threads, dummy thread objects created by\n    current_thread(), and the main thread. It excludes terminated threads and\n    threads that have not yet been started.\n\n    \"\"\"\n    with _active_limbo_lock:\n        return list(_active.values()) + list(_limbo.values())\n\n\n_threading_atexits = []\n_SHUTTING_DOWN = False\n\ndef _register_atexit(func, *arg, **kwargs):\n    \"\"\"CPython internal: register *func* to be called before joining threads.\n\n    The registered *func* is called with its arguments just before all\n    non-daemon threads are joined in `_shutdown()`. It provides a similar\n    purpose to `atexit.register()`, but its functions are called prior to\n    threading shutdown instead of interpreter shutdown.\n\n    For similarity to atexit, the registered functions are called in reverse.\n    \"\"\"\n    if _SHUTTING_DOWN:\n        raise RuntimeError(\"can't register atexit after shutdown\")\n\n    call = functools.partial(func, *arg, **kwargs)\n    _threading_atexits.append(call)\n\n\nfrom _thread import stack_size\n\n# Create the main thread object,\n# and make it available for the interpreter\n# (Py_Main) as threading._shutdown.\n\n_main_thread = _MainThread()\n\ndef _shutdown():\n    \"\"\"\n    Wait until the Python thread state of all non-daemon threads get deleted.\n    \"\"\"\n    # Obscure:  other threads may be waiting to join _main_thread.  That's\n    # dubious, but some code does it.  We can't wait for C code to release\n    # the main thread's tstate_lock - that won't happen until the interpreter\n    # is nearly dead.  So we release it here.  Note that just calling _stop()\n    # isn't enough:  other threads may already be waiting on _tstate_lock.\n    if _main_thread._is_stopped:\n        # _shutdown() was already called\n        return\n\n    global _SHUTTING_DOWN\n    _SHUTTING_DOWN = True\n    # Main thread\n    tlock = _main_thread._tstate_lock\n    # The main thread isn't finished yet, so its thread state lock can't have\n    # been released.\n    assert tlock is not None\n    assert tlock.locked()\n    tlock.release()\n    _main_thread._stop()\n\n    # Call registered threading atexit functions before threads are joined.\n    # Order is reversed, similar to atexit.\n    for atexit_call in reversed(_threading_atexits):\n        atexit_call()\n\n    # Join all non-deamon threads\n    while True:\n        with _shutdown_locks_lock:\n            locks = list(_shutdown_locks)\n            _shutdown_locks.clear()\n\n        if not locks:\n            break\n\n        for lock in locks:\n            # mimick Thread.join()\n            lock.acquire()\n            lock.release()\n\n        # new threads can be spawned while we were waiting for the other\n        # threads to complete\n\n\ndef main_thread():\n    \"\"\"Return the main thread object.\n\n    In normal conditions, the main thread is the thread from which the\n    Python interpreter was started.\n    \"\"\"\n    return _main_thread\n\n# get thread-local implementation, either from the thread\n# module, or from the python fallback\n\ntry:\n    from _thread import _local as local\nexcept ImportError:\n    from _threading_local import local\n\n\ndef _after_fork():\n    \"\"\"\n    Cleanup threading module state that should not exist after a fork.\n    \"\"\"\n    # Reset _active_limbo_lock, in case we forked while the lock was held\n    # by another (non-forked) thread.  http://bugs.python.org/issue874900\n    global _active_limbo_lock, _main_thread\n    global _shutdown_locks_lock, _shutdown_locks\n    _active_limbo_lock = RLock()\n\n    # fork() only copied the current thread; clear references to others.\n    new_active = {}\n\n    try:\n        current = _active[get_ident()]\n    except KeyError:\n        # fork() was called in a thread which was not spawned\n        # by threading.Thread. For example, a thread spawned\n        # by thread.start_new_thread().\n        current = _MainThread()\n\n    _main_thread = current\n\n    # reset _shutdown() locks: threads re-register their _tstate_lock below\n    _shutdown_locks_lock = _allocate_lock()\n    _shutdown_locks = set()\n\n    with _active_limbo_lock:\n        # Dangling thread instances must still have their locks reset,\n        # because someone may join() them.\n        threads = set(_enumerate())\n        threads.update(_dangling)\n        for thread in threads:\n            # Any lock/condition variable may be currently locked or in an\n            # invalid state, so we reinitialize them.\n            if thread is current:\n                # There is only one active thread. We reset the ident to\n                # its new value since it can have changed.\n                thread._reset_internal_locks(True)\n                ident = get_ident()\n                thread._ident = ident\n                new_active[ident] = thread\n            else:\n                # All the others are already stopped.\n                thread._reset_internal_locks(False)\n                thread._stop()\n\n        _limbo.clear()\n        _active.clear()\n        _active.update(new_active)\n        assert len(_active) == 1\n\n\nif hasattr(_os, \"register_at_fork\"):\n    _os.register_at_fork(after_in_child=_after_fork)\n", 1526], "C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\__init__.py": ["# Copyright 2009 Brian Quinlan. All Rights Reserved.\n# Licensed to PSF under a Contributor Agreement.\n\n\"\"\"Execute computations asynchronously using threads or processes.\"\"\"\n\n__author__ = 'Brian Quinlan (brian@sweetapp.com)'\n\nfrom concurrent.futures._base import (FIRST_COMPLETED,\n                                      FIRST_EXCEPTION,\n                                      ALL_COMPLETED,\n                                      CancelledError,\n                                      TimeoutError,\n                                      InvalidStateError,\n                                      BrokenExecutor,\n                                      Future,\n                                      Executor,\n                                      wait,\n                                      as_completed)\n\n__all__ = (\n    'FIRST_COMPLETED',\n    'FIRST_EXCEPTION',\n    'ALL_COMPLETED',\n    'CancelledError',\n    'TimeoutError',\n    'BrokenExecutor',\n    'Future',\n    'Executor',\n    'wait',\n    'as_completed',\n    'ProcessPoolExecutor',\n    'ThreadPoolExecutor',\n)\n\n\ndef __dir__():\n    return __all__ + ('__author__', '__doc__')\n\n\ndef __getattr__(name):\n    global ProcessPoolExecutor, ThreadPoolExecutor\n\n    if name == 'ProcessPoolExecutor':\n        from .process import ProcessPoolExecutor as pe\n        ProcessPoolExecutor = pe\n        return pe\n\n    if name == 'ThreadPoolExecutor':\n        from .thread import ThreadPoolExecutor as te\n        ThreadPoolExecutor = te\n        return te\n\n    raise AttributeError(f\"module {__name__} has no attribute {name}\")\n", 53], "C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py": ["# Module 'ntpath' -- common operations on WinNT/Win95 pathnames\n\"\"\"Common pathname manipulations, WindowsNT/95 version.\n\nInstead of importing this module directly, import os and refer to this\nmodule as os.path.\n\"\"\"\n\n# strings representing various path-related bits and pieces\n# These are primarily for export; internally, they are hardcoded.\n# Should be set before imports for resolving cyclic dependency.\ncurdir = '.'\npardir = '..'\nextsep = '.'\nsep = '\\\\'\npathsep = ';'\naltsep = '/'\ndefpath = '.;C:\\\\bin'\ndevnull = 'nul'\n\nimport os\nimport sys\nimport stat\nimport genericpath\nfrom genericpath import *\n\n__all__ = [\"normcase\",\"isabs\",\"join\",\"splitdrive\",\"split\",\"splitext\",\n           \"basename\",\"dirname\",\"commonprefix\",\"getsize\",\"getmtime\",\n           \"getatime\",\"getctime\", \"islink\",\"exists\",\"lexists\",\"isdir\",\"isfile\",\n           \"ismount\", \"expanduser\",\"expandvars\",\"normpath\",\"abspath\",\n           \"curdir\",\"pardir\",\"sep\",\"pathsep\",\"defpath\",\"altsep\",\n           \"extsep\",\"devnull\",\"realpath\",\"supports_unicode_filenames\",\"relpath\",\n           \"samefile\", \"sameopenfile\", \"samestat\", \"commonpath\"]\n\ndef _get_bothseps(path):\n    if isinstance(path, bytes):\n        return b'\\\\/'\n    else:\n        return '\\\\/'\n\n# Normalize the case of a pathname and map slashes to backslashes.\n# Other normalizations (such as optimizing '../' away) are not done\n# (this is done by normpath).\n\ndef normcase(s):\n    \"\"\"Normalize case of pathname.\n\n    Makes all characters lowercase and all slashes into backslashes.\"\"\"\n    s = os.fspath(s)\n    if isinstance(s, bytes):\n        return s.replace(b'/', b'\\\\').lower()\n    else:\n        return s.replace('/', '\\\\').lower()\n\n\n# Return whether a path is absolute.\n# Trivial in Posix, harder on Windows.\n# For Windows it is absolute if it starts with a slash or backslash (current\n# volume), or if a pathname after the volume-letter-and-colon or UNC-resource\n# starts with a slash or backslash.\n\ndef isabs(s):\n    \"\"\"Test whether a path is absolute\"\"\"\n    s = os.fspath(s)\n    # Paths beginning with \\\\?\\ are always absolute, but do not\n    # necessarily contain a drive.\n    if isinstance(s, bytes):\n        if s.replace(b'/', b'\\\\').startswith(b'\\\\\\\\?\\\\'):\n            return True\n    else:\n        if s.replace('/', '\\\\').startswith('\\\\\\\\?\\\\'):\n            return True\n    s = splitdrive(s)[1]\n    return len(s) > 0 and s[0] in _get_bothseps(s)\n\n\n# Join two (or more) paths.\ndef join(path, *paths):\n    path = os.fspath(path)\n    if isinstance(path, bytes):\n        sep = b'\\\\'\n        seps = b'\\\\/'\n        colon = b':'\n    else:\n        sep = '\\\\'\n        seps = '\\\\/'\n        colon = ':'\n    try:\n        if not paths:\n            path[:0] + sep  #23780: Ensure compatible data type even if p is null.\n        result_drive, result_path = splitdrive(path)\n        for p in map(os.fspath, paths):\n            p_drive, p_path = splitdrive(p)\n            if p_path and p_path[0] in seps:\n                # Second path is absolute\n                if p_drive or not result_drive:\n                    result_drive = p_drive\n                result_path = p_path\n                continue\n            elif p_drive and p_drive != result_drive:\n                if p_drive.lower() != result_drive.lower():\n                    # Different drives => ignore the first path entirely\n                    result_drive = p_drive\n                    result_path = p_path\n                    continue\n                # Same drive in different case\n                result_drive = p_drive\n            # Second path is relative to the first\n            if result_path and result_path[-1] not in seps:\n                result_path = result_path + sep\n            result_path = result_path + p_path\n        ## add separator between UNC and non-absolute path\n        if (result_path and result_path[0] not in seps and\n            result_drive and result_drive[-1:] != colon):\n            return result_drive + sep + result_path\n        return result_drive + result_path\n    except (TypeError, AttributeError, BytesWarning):\n        genericpath._check_arg_types('join', path, *paths)\n        raise\n\n\n# Split a path in a drive specification (a drive letter followed by a\n# colon) and the path specification.\n# It is always true that drivespec + pathspec == p\ndef splitdrive(p):\n    \"\"\"Split a pathname into drive/UNC sharepoint and relative path specifiers.\n    Returns a 2-tuple (drive_or_unc, path); either part may be empty.\n\n    If you assign\n        result = splitdrive(p)\n    It is always true that:\n        result[0] + result[1] == p\n\n    If the path contained a drive letter, drive_or_unc will contain everything\n    up to and including the colon.  e.g. splitdrive(\"c:/dir\") returns (\"c:\", \"/dir\")\n\n    If the path contained a UNC path, the drive_or_unc will contain the host name\n    and share up to but not including the fourth directory separator character.\n    e.g. splitdrive(\"//host/computer/dir\") returns (\"//host/computer\", \"/dir\")\n\n    Paths cannot contain both a drive letter and a UNC path.\n\n    \"\"\"\n    p = os.fspath(p)\n    if len(p) >= 2:\n        if isinstance(p, bytes):\n            sep = b'\\\\'\n            altsep = b'/'\n            colon = b':'\n        else:\n            sep = '\\\\'\n            altsep = '/'\n            colon = ':'\n        normp = p.replace(altsep, sep)\n        if (normp[0:2] == sep*2) and (normp[2:3] != sep):\n            # is a UNC path:\n            # vvvvvvvvvvvvvvvvvvvv drive letter or UNC path\n            # \\\\machine\\mountpoint\\directory\\etc\\...\n            #           directory ^^^^^^^^^^^^^^^\n            index = normp.find(sep, 2)\n            if index == -1:\n                return p[:0], p\n            index2 = normp.find(sep, index + 1)\n            # a UNC path can't have two slashes in a row\n            # (after the initial two)\n            if index2 == index + 1:\n                return p[:0], p\n            if index2 == -1:\n                index2 = len(p)\n            return p[:index2], p[index2:]\n        if normp[1:2] == colon:\n            return p[:2], p[2:]\n    return p[:0], p\n\n\n# Split a path in head (everything up to the last '/') and tail (the\n# rest).  After the trailing '/' is stripped, the invariant\n# join(head, tail) == p holds.\n# The resulting head won't end in '/' unless it is the root.\n\ndef split(p):\n    \"\"\"Split a pathname.\n\n    Return tuple (head, tail) where tail is everything after the final slash.\n    Either part may be empty.\"\"\"\n    p = os.fspath(p)\n    seps = _get_bothseps(p)\n    d, p = splitdrive(p)\n    # set i to index beyond p's last slash\n    i = len(p)\n    while i and p[i-1] not in seps:\n        i -= 1\n    head, tail = p[:i], p[i:]  # now tail has no slashes\n    # remove trailing slashes from head, unless it's all slashes\n    head = head.rstrip(seps) or head\n    return d + head, tail\n\n\n# Split a path in root and extension.\n# The extension is everything starting at the last dot in the last\n# pathname component; the root is everything before that.\n# It is always true that root + ext == p.\n\ndef splitext(p):\n    p = os.fspath(p)\n    if isinstance(p, bytes):\n        return genericpath._splitext(p, b'\\\\', b'/', b'.')\n    else:\n        return genericpath._splitext(p, '\\\\', '/', '.')\nsplitext.__doc__ = genericpath._splitext.__doc__\n\n\n# Return the tail (basename) part of a path.\n\ndef basename(p):\n    \"\"\"Returns the final component of a pathname\"\"\"\n    return split(p)[1]\n\n\n# Return the head (dirname) part of a path.\n\ndef dirname(p):\n    \"\"\"Returns the directory component of a pathname\"\"\"\n    return split(p)[0]\n\n# Is a path a symbolic link?\n# This will always return false on systems where os.lstat doesn't exist.\n\ndef islink(path):\n    \"\"\"Test whether a path is a symbolic link.\n    This will always return false for Windows prior to 6.0.\n    \"\"\"\n    try:\n        st = os.lstat(path)\n    except (OSError, ValueError, AttributeError):\n        return False\n    return stat.S_ISLNK(st.st_mode)\n\n# Being true for dangling symbolic links is also useful.\n\ndef lexists(path):\n    \"\"\"Test whether a path exists.  Returns True for broken symbolic links\"\"\"\n    try:\n        st = os.lstat(path)\n    except (OSError, ValueError):\n        return False\n    return True\n\n# Is a path a mount point?\n# Any drive letter root (eg c:\\)\n# Any share UNC (eg \\\\server\\share)\n# Any volume mounted on a filesystem folder\n#\n# No one method detects all three situations. Historically we've lexically\n# detected drive letter roots and share UNCs. The canonical approach to\n# detecting mounted volumes (querying the reparse tag) fails for the most\n# common case: drive letter roots. The alternative which uses GetVolumePathName\n# fails if the drive letter is the result of a SUBST.\ntry:\n    from nt import _getvolumepathname\nexcept ImportError:\n    _getvolumepathname = None\ndef ismount(path):\n    \"\"\"Test whether a path is a mount point (a drive root, the root of a\n    share, or a mounted volume)\"\"\"\n    path = os.fspath(path)\n    seps = _get_bothseps(path)\n    path = abspath(path)\n    root, rest = splitdrive(path)\n    if root and root[0] in seps:\n        return (not rest) or (rest in seps)\n    if rest in seps:\n        return True\n\n    if _getvolumepathname:\n        return path.rstrip(seps) == _getvolumepathname(path).rstrip(seps)\n    else:\n        return False\n\n\n# Expand paths beginning with '~' or '~user'.\n# '~' means $HOME; '~user' means that user's home directory.\n# If the path doesn't begin with '~', or if the user or $HOME is unknown,\n# the path is returned unchanged (leaving error reporting to whatever\n# function is called with the expanded path as argument).\n# See also module 'glob' for expansion of *, ? and [...] in pathnames.\n# (A function should also be defined to do full *sh-style environment\n# variable expansion.)\n\ndef expanduser(path):\n    \"\"\"Expand ~ and ~user constructs.\n\n    If user or $HOME is unknown, do nothing.\"\"\"\n    path = os.fspath(path)\n    if isinstance(path, bytes):\n        tilde = b'~'\n    else:\n        tilde = '~'\n    if not path.startswith(tilde):\n        return path\n    i, n = 1, len(path)\n    while i < n and path[i] not in _get_bothseps(path):\n        i += 1\n\n    if 'USERPROFILE' in os.environ:\n        userhome = os.environ['USERPROFILE']\n    elif not 'HOMEPATH' in os.environ:\n        return path\n    else:\n        try:\n            drive = os.environ['HOMEDRIVE']\n        except KeyError:\n            drive = ''\n        userhome = join(drive, os.environ['HOMEPATH'])\n\n    if isinstance(path, bytes):\n        userhome = os.fsencode(userhome)\n\n    if i != 1: #~user\n        userhome = join(dirname(userhome), path[1:i])\n\n    return userhome + path[i:]\n\n\n# Expand paths containing shell variable substitutions.\n# The following rules apply:\n#       - no expansion within single quotes\n#       - '$$' is translated into '$'\n#       - '%%' is translated into '%' if '%%' are not seen in %var1%%var2%\n#       - ${varname} is accepted.\n#       - $varname is accepted.\n#       - %varname% is accepted.\n#       - varnames can be made out of letters, digits and the characters '_-'\n#         (though is not verified in the ${varname} and %varname% cases)\n# XXX With COMMAND.COM you can use any characters in a variable name,\n# XXX except '^|<>='.\n\ndef expandvars(path):\n    \"\"\"Expand shell variables of the forms $var, ${var} and %var%.\n\n    Unknown variables are left unchanged.\"\"\"\n    path = os.fspath(path)\n    if isinstance(path, bytes):\n        if b'$' not in path and b'%' not in path:\n            return path\n        import string\n        varchars = bytes(string.ascii_letters + string.digits + '_-', 'ascii')\n        quote = b'\\''\n        percent = b'%'\n        brace = b'{'\n        rbrace = b'}'\n        dollar = b'$'\n        environ = getattr(os, 'environb', None)\n    else:\n        if '$' not in path and '%' not in path:\n            return path\n        import string\n        varchars = string.ascii_letters + string.digits + '_-'\n        quote = '\\''\n        percent = '%'\n        brace = '{'\n        rbrace = '}'\n        dollar = '$'\n        environ = os.environ\n    res = path[:0]\n    index = 0\n    pathlen = len(path)\n    while index < pathlen:\n        c = path[index:index+1]\n        if c == quote:   # no expansion within single quotes\n            path = path[index + 1:]\n            pathlen = len(path)\n            try:\n                index = path.index(c)\n                res += c + path[:index + 1]\n            except ValueError:\n                res += c + path\n                index = pathlen - 1\n        elif c == percent:  # variable or '%'\n            if path[index + 1:index + 2] == percent:\n                res += c\n                index += 1\n            else:\n                path = path[index+1:]\n                pathlen = len(path)\n                try:\n                    index = path.index(percent)\n                except ValueError:\n                    res += percent + path\n                    index = pathlen - 1\n                else:\n                    var = path[:index]\n                    try:\n                        if environ is None:\n                            value = os.fsencode(os.environ[os.fsdecode(var)])\n                        else:\n                            value = environ[var]\n                    except KeyError:\n                        value = percent + var + percent\n                    res += value\n        elif c == dollar:  # variable or '$$'\n            if path[index + 1:index + 2] == dollar:\n                res += c\n                index += 1\n            elif path[index + 1:index + 2] == brace:\n                path = path[index+2:]\n                pathlen = len(path)\n                try:\n                    index = path.index(rbrace)\n                except ValueError:\n                    res += dollar + brace + path\n                    index = pathlen - 1\n                else:\n                    var = path[:index]\n                    try:\n                        if environ is None:\n                            value = os.fsencode(os.environ[os.fsdecode(var)])\n                        else:\n                            value = environ[var]\n                    except KeyError:\n                        value = dollar + brace + var + rbrace\n                    res += value\n            else:\n                var = path[:0]\n                index += 1\n                c = path[index:index + 1]\n                while c and c in varchars:\n                    var += c\n                    index += 1\n                    c = path[index:index + 1]\n                try:\n                    if environ is None:\n                        value = os.fsencode(os.environ[os.fsdecode(var)])\n                    else:\n                        value = environ[var]\n                except KeyError:\n                    value = dollar + var\n                res += value\n                if c:\n                    index -= 1\n        else:\n            res += c\n        index += 1\n    return res\n\n\n# Normalize a path, e.g. A//B, A/./B and A/foo/../B all become A\\B.\n# Previously, this function also truncated pathnames to 8+3 format,\n# but as this module is called \"ntpath\", that's obviously wrong!\n\ndef normpath(path):\n    \"\"\"Normalize path, eliminating double slashes, etc.\"\"\"\n    path = os.fspath(path)\n    if isinstance(path, bytes):\n        sep = b'\\\\'\n        altsep = b'/'\n        curdir = b'.'\n        pardir = b'..'\n        special_prefixes = (b'\\\\\\\\.\\\\', b'\\\\\\\\?\\\\')\n    else:\n        sep = '\\\\'\n        altsep = '/'\n        curdir = '.'\n        pardir = '..'\n        special_prefixes = ('\\\\\\\\.\\\\', '\\\\\\\\?\\\\')\n    if path.startswith(special_prefixes):\n        # in the case of paths with these prefixes:\n        # \\\\.\\ -> device names\n        # \\\\?\\ -> literal paths\n        # do not do any normalization, but return the path\n        # unchanged apart from the call to os.fspath()\n        return path\n    path = path.replace(altsep, sep)\n    prefix, path = splitdrive(path)\n\n    # collapse initial backslashes\n    if path.startswith(sep):\n        prefix += sep\n        path = path.lstrip(sep)\n\n    comps = path.split(sep)\n    i = 0\n    while i < len(comps):\n        if not comps[i] or comps[i] == curdir:\n            del comps[i]\n        elif comps[i] == pardir:\n            if i > 0 and comps[i-1] != pardir:\n                del comps[i-1:i+1]\n                i -= 1\n            elif i == 0 and prefix.endswith(sep):\n                del comps[i]\n            else:\n                i += 1\n        else:\n            i += 1\n    # If the path is now empty, substitute '.'\n    if not prefix and not comps:\n        comps.append(curdir)\n    return prefix + sep.join(comps)\n\ndef _abspath_fallback(path):\n    \"\"\"Return the absolute version of a path as a fallback function in case\n    `nt._getfullpathname` is not available or raises OSError. See bpo-31047 for\n    more.\n\n    \"\"\"\n\n    path = os.fspath(path)\n    if not isabs(path):\n        if isinstance(path, bytes):\n            cwd = os.getcwdb()\n        else:\n            cwd = os.getcwd()\n        path = join(cwd, path)\n    return normpath(path)\n\n# Return an absolute path.\ntry:\n    from nt import _getfullpathname\n\nexcept ImportError: # not running on Windows - mock up something sensible\n    abspath = _abspath_fallback\n\nelse:  # use native Windows method on Windows\n    def abspath(path):\n        \"\"\"Return the absolute version of a path.\"\"\"\n        try:\n            return normpath(_getfullpathname(path))\n        except (OSError, ValueError):\n            return _abspath_fallback(path)\n\ntry:\n    from nt import _getfinalpathname, readlink as _nt_readlink\nexcept ImportError:\n    # realpath is a no-op on systems without _getfinalpathname support.\n    realpath = abspath\nelse:\n    def _readlink_deep(path):\n        # These error codes indicate that we should stop reading links and\n        # return the path we currently have.\n        # 1: ERROR_INVALID_FUNCTION\n        # 2: ERROR_FILE_NOT_FOUND\n        # 3: ERROR_DIRECTORY_NOT_FOUND\n        # 5: ERROR_ACCESS_DENIED\n        # 21: ERROR_NOT_READY (implies drive with no media)\n        # 32: ERROR_SHARING_VIOLATION (probably an NTFS paging file)\n        # 50: ERROR_NOT_SUPPORTED (implies no support for reparse points)\n        # 67: ERROR_BAD_NET_NAME (implies remote server unavailable)\n        # 87: ERROR_INVALID_PARAMETER\n        # 4390: ERROR_NOT_A_REPARSE_POINT\n        # 4392: ERROR_INVALID_REPARSE_DATA\n        # 4393: ERROR_REPARSE_TAG_INVALID\n        allowed_winerror = 1, 2, 3, 5, 21, 32, 50, 67, 87, 4390, 4392, 4393\n\n        seen = set()\n        while normcase(path) not in seen:\n            seen.add(normcase(path))\n            try:\n                old_path = path\n                path = _nt_readlink(path)\n                # Links may be relative, so resolve them against their\n                # own location\n                if not isabs(path):\n                    # If it's something other than a symlink, we don't know\n                    # what it's actually going to be resolved against, so\n                    # just return the old path.\n                    if not islink(old_path):\n                        path = old_path\n                        break\n                    path = normpath(join(dirname(old_path), path))\n            except OSError as ex:\n                if ex.winerror in allowed_winerror:\n                    break\n                raise\n            except ValueError:\n                # Stop on reparse points that are not symlinks\n                break\n        return path\n\n    def _getfinalpathname_nonstrict(path):\n        # These error codes indicate that we should stop resolving the path\n        # and return the value we currently have.\n        # 1: ERROR_INVALID_FUNCTION\n        # 2: ERROR_FILE_NOT_FOUND\n        # 3: ERROR_DIRECTORY_NOT_FOUND\n        # 5: ERROR_ACCESS_DENIED\n        # 21: ERROR_NOT_READY (implies drive with no media)\n        # 32: ERROR_SHARING_VIOLATION (probably an NTFS paging file)\n        # 50: ERROR_NOT_SUPPORTED\n        # 67: ERROR_BAD_NET_NAME (implies remote server unavailable)\n        # 87: ERROR_INVALID_PARAMETER\n        # 123: ERROR_INVALID_NAME\n        # 1920: ERROR_CANT_ACCESS_FILE\n        # 1921: ERROR_CANT_RESOLVE_FILENAME (implies unfollowable symlink)\n        allowed_winerror = 1, 2, 3, 5, 21, 32, 50, 67, 87, 123, 1920, 1921\n\n        # Non-strict algorithm is to find as much of the target directory\n        # as we can and join the rest.\n        tail = ''\n        while path:\n            try:\n                path = _getfinalpathname(path)\n                return join(path, tail) if tail else path\n            except OSError as ex:\n                if ex.winerror not in allowed_winerror:\n                    raise\n                try:\n                    # The OS could not resolve this path fully, so we attempt\n                    # to follow the link ourselves. If we succeed, join the tail\n                    # and return.\n                    new_path = _readlink_deep(path)\n                    if new_path != path:\n                        return join(new_path, tail) if tail else new_path\n                except OSError:\n                    # If we fail to readlink(), let's keep traversing\n                    pass\n                path, name = split(path)\n                # TODO (bpo-38186): Request the real file name from the directory\n                # entry using FindFirstFileW. For now, we will return the path\n                # as best we have it\n                if path and not name:\n                    return path + tail\n                tail = join(name, tail) if tail else name\n        return tail\n\n    def realpath(path):\n        path = normpath(path)\n        if isinstance(path, bytes):\n            prefix = b'\\\\\\\\?\\\\'\n            unc_prefix = b'\\\\\\\\?\\\\UNC\\\\'\n            new_unc_prefix = b'\\\\\\\\'\n            cwd = os.getcwdb()\n            # bpo-38081: Special case for realpath(b'nul')\n            if normcase(path) == normcase(os.fsencode(devnull)):\n                return b'\\\\\\\\.\\\\NUL'\n        else:\n            prefix = '\\\\\\\\?\\\\'\n            unc_prefix = '\\\\\\\\?\\\\UNC\\\\'\n            new_unc_prefix = '\\\\\\\\'\n            cwd = os.getcwd()\n            # bpo-38081: Special case for realpath('nul')\n            if normcase(path) == normcase(devnull):\n                return '\\\\\\\\.\\\\NUL'\n        had_prefix = path.startswith(prefix)\n        if not had_prefix and not isabs(path):\n            path = join(cwd, path)\n        try:\n            path = _getfinalpathname(path)\n            initial_winerror = 0\n        except OSError as ex:\n            initial_winerror = ex.winerror\n            path = _getfinalpathname_nonstrict(path)\n        # The path returned by _getfinalpathname will always start with \\\\?\\ -\n        # strip off that prefix unless it was already provided on the original\n        # path.\n        if not had_prefix and path.startswith(prefix):\n            # For UNC paths, the prefix will actually be \\\\?\\UNC\\\n            # Handle that case as well.\n            if path.startswith(unc_prefix):\n                spath = new_unc_prefix + path[len(unc_prefix):]\n            else:\n                spath = path[len(prefix):]\n            # Ensure that the non-prefixed path resolves to the same path\n            try:\n                if _getfinalpathname(spath) == path:\n                    path = spath\n            except OSError as ex:\n                # If the path does not exist and originally did not exist, then\n                # strip the prefix anyway.\n                if ex.winerror == initial_winerror:\n                    path = spath\n        return path\n\n\n# Win9x family and earlier have no Unicode filename support.\nsupports_unicode_filenames = (hasattr(sys, \"getwindowsversion\") and\n                              sys.getwindowsversion()[3] >= 2)\n\ndef relpath(path, start=None):\n    \"\"\"Return a relative version of a path\"\"\"\n    path = os.fspath(path)\n    if isinstance(path, bytes):\n        sep = b'\\\\'\n        curdir = b'.'\n        pardir = b'..'\n    else:\n        sep = '\\\\'\n        curdir = '.'\n        pardir = '..'\n\n    if start is None:\n        start = curdir\n\n    if not path:\n        raise ValueError(\"no path specified\")\n\n    start = os.fspath(start)\n    try:\n        start_abs = abspath(normpath(start))\n        path_abs = abspath(normpath(path))\n        start_drive, start_rest = splitdrive(start_abs)\n        path_drive, path_rest = splitdrive(path_abs)\n        if normcase(start_drive) != normcase(path_drive):\n            raise ValueError(\"path is on mount %r, start on mount %r\" % (\n                path_drive, start_drive))\n\n        start_list = [x for x in start_rest.split(sep) if x]\n        path_list = [x for x in path_rest.split(sep) if x]\n        # Work out how much of the filepath is shared by start and path.\n        i = 0\n        for e1, e2 in zip(start_list, path_list):\n            if normcase(e1) != normcase(e2):\n                break\n            i += 1\n\n        rel_list = [pardir] * (len(start_list)-i) + path_list[i:]\n        if not rel_list:\n            return curdir\n        return join(*rel_list)\n    except (TypeError, ValueError, AttributeError, BytesWarning, DeprecationWarning):\n        genericpath._check_arg_types('relpath', path, start)\n        raise\n\n\n# Return the longest common sub-path of the sequence of paths given as input.\n# The function is case-insensitive and 'separator-insensitive', i.e. if the\n# only difference between two paths is the use of '\\' versus '/' as separator,\n# they are deemed to be equal.\n#\n# However, the returned path will have the standard '\\' separator (even if the\n# given paths had the alternative '/' separator) and will have the case of the\n# first path given in the sequence. Additionally, any trailing separator is\n# stripped from the returned path.\n\ndef commonpath(paths):\n    \"\"\"Given a sequence of path names, returns the longest common sub-path.\"\"\"\n\n    if not paths:\n        raise ValueError('commonpath() arg is an empty sequence')\n\n    paths = tuple(map(os.fspath, paths))\n    if isinstance(paths[0], bytes):\n        sep = b'\\\\'\n        altsep = b'/'\n        curdir = b'.'\n    else:\n        sep = '\\\\'\n        altsep = '/'\n        curdir = '.'\n\n    try:\n        drivesplits = [splitdrive(p.replace(altsep, sep).lower()) for p in paths]\n        split_paths = [p.split(sep) for d, p in drivesplits]\n\n        try:\n            isabs, = set(p[:1] == sep for d, p in drivesplits)\n        except ValueError:\n            raise ValueError(\"Can't mix absolute and relative paths\") from None\n\n        # Check that all drive letters or UNC paths match. The check is made only\n        # now otherwise type errors for mixing strings and bytes would not be\n        # caught.\n        if len(set(d for d, p in drivesplits)) != 1:\n            raise ValueError(\"Paths don't have the same drive\")\n\n        drive, path = splitdrive(paths[0].replace(altsep, sep))\n        common = path.split(sep)\n        common = [c for c in common if c and c != curdir]\n\n        split_paths = [[c for c in s if c and c != curdir] for s in split_paths]\n        s1 = min(split_paths)\n        s2 = max(split_paths)\n        for i, c in enumerate(s1):\n            if c != s2[i]:\n                common = common[:i]\n                break\n        else:\n            common = common[:len(s1)]\n\n        prefix = drive + sep if isabs else drive\n        return prefix + sep.join(common)\n    except (TypeError, AttributeError):\n        genericpath._check_arg_types('commonpath', *paths)\n        raise\n\n\ntry:\n    # The genericpath.isdir implementation uses os.stat and checks the mode\n    # attribute to tell whether or not the path is a directory.\n    # This is overkill on Windows - just pass the path to GetFileAttributes\n    # and check the attribute from there.\n    from nt import _isdir as isdir\nexcept ImportError:\n    # Use genericpath.isdir as imported above.\n    pass\n", 794], "C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py": ["import os\nimport sys\nimport threading\n\nfrom . import process\nfrom . import reduction\n\n__all__ = ()\n\n#\n# Exceptions\n#\n\nclass ProcessError(Exception):\n    pass\n\nclass BufferTooShort(ProcessError):\n    pass\n\nclass TimeoutError(ProcessError):\n    pass\n\nclass AuthenticationError(ProcessError):\n    pass\n\n#\n# Base type for contexts. Bound methods of an instance of this type are included in __all__ of __init__.py\n#\n\nclass BaseContext(object):\n\n    ProcessError = ProcessError\n    BufferTooShort = BufferTooShort\n    TimeoutError = TimeoutError\n    AuthenticationError = AuthenticationError\n\n    current_process = staticmethod(process.current_process)\n    parent_process = staticmethod(process.parent_process)\n    active_children = staticmethod(process.active_children)\n\n    def cpu_count(self):\n        '''Returns the number of CPUs in the system'''\n        num = os.cpu_count()\n        if num is None:\n            raise NotImplementedError('cannot determine number of cpus')\n        else:\n            return num\n\n    def Manager(self):\n        '''Returns a manager associated with a running server process\n\n        The managers methods such as `Lock()`, `Condition()` and `Queue()`\n        can be used to create shared objects.\n        '''\n        from .managers import SyncManager\n        m = SyncManager(ctx=self.get_context())\n        m.start()\n        return m\n\n    def Pipe(self, duplex=True):\n        '''Returns two connection object connected by a pipe'''\n        from .connection import Pipe\n        return Pipe(duplex)\n\n    def Lock(self):\n        '''Returns a non-recursive lock object'''\n        from .synchronize import Lock\n        return Lock(ctx=self.get_context())\n\n    def RLock(self):\n        '''Returns a recursive lock object'''\n        from .synchronize import RLock\n        return RLock(ctx=self.get_context())\n\n    def Condition(self, lock=None):\n        '''Returns a condition object'''\n        from .synchronize import Condition\n        return Condition(lock, ctx=self.get_context())\n\n    def Semaphore(self, value=1):\n        '''Returns a semaphore object'''\n        from .synchronize import Semaphore\n        return Semaphore(value, ctx=self.get_context())\n\n    def BoundedSemaphore(self, value=1):\n        '''Returns a bounded semaphore object'''\n        from .synchronize import BoundedSemaphore\n        return BoundedSemaphore(value, ctx=self.get_context())\n\n    def Event(self):\n        '''Returns an event object'''\n        from .synchronize import Event\n        return Event(ctx=self.get_context())\n\n    def Barrier(self, parties, action=None, timeout=None):\n        '''Returns a barrier object'''\n        from .synchronize import Barrier\n        return Barrier(parties, action, timeout, ctx=self.get_context())\n\n    def Queue(self, maxsize=0):\n        '''Returns a queue object'''\n        from .queues import Queue\n        return Queue(maxsize, ctx=self.get_context())\n\n    def JoinableQueue(self, maxsize=0):\n        '''Returns a queue object'''\n        from .queues import JoinableQueue\n        return JoinableQueue(maxsize, ctx=self.get_context())\n\n    def SimpleQueue(self):\n        '''Returns a queue object'''\n        from .queues import SimpleQueue\n        return SimpleQueue(ctx=self.get_context())\n\n    def Pool(self, processes=None, initializer=None, initargs=(),\n             maxtasksperchild=None):\n        '''Returns a process pool object'''\n        from .pool import Pool\n        return Pool(processes, initializer, initargs, maxtasksperchild,\n                    context=self.get_context())\n\n    def RawValue(self, typecode_or_type, *args):\n        '''Returns a shared object'''\n        from .sharedctypes import RawValue\n        return RawValue(typecode_or_type, *args)\n\n    def RawArray(self, typecode_or_type, size_or_initializer):\n        '''Returns a shared array'''\n        from .sharedctypes import RawArray\n        return RawArray(typecode_or_type, size_or_initializer)\n\n    def Value(self, typecode_or_type, *args, lock=True):\n        '''Returns a synchronized shared object'''\n        from .sharedctypes import Value\n        return Value(typecode_or_type, *args, lock=lock,\n                     ctx=self.get_context())\n\n    def Array(self, typecode_or_type, size_or_initializer, *, lock=True):\n        '''Returns a synchronized shared array'''\n        from .sharedctypes import Array\n        return Array(typecode_or_type, size_or_initializer, lock=lock,\n                     ctx=self.get_context())\n\n    def freeze_support(self):\n        '''Check whether this is a fake forked process in a frozen executable.\n        If so then run code specified by commandline and exit.\n        '''\n        if sys.platform == 'win32' and getattr(sys, 'frozen', False):\n            from .spawn import freeze_support\n            freeze_support()\n\n    def get_logger(self):\n        '''Return package logger -- if it does not already exist then\n        it is created.\n        '''\n        from .util import get_logger\n        return get_logger()\n\n    def log_to_stderr(self, level=None):\n        '''Turn on logging and add a handler which prints to stderr'''\n        from .util import log_to_stderr\n        return log_to_stderr(level)\n\n    def allow_connection_pickling(self):\n        '''Install support for sending connections and sockets\n        between processes\n        '''\n        # This is undocumented.  In previous versions of multiprocessing\n        # its only effect was to make socket objects inheritable on Windows.\n        from . import connection\n\n    def set_executable(self, executable):\n        '''Sets the path to a python.exe or pythonw.exe binary used to run\n        child processes instead of sys.executable when using the 'spawn'\n        start method.  Useful for people embedding Python.\n        '''\n        from .spawn import set_executable\n        set_executable(executable)\n\n    def set_forkserver_preload(self, module_names):\n        '''Set list of module names to try to load in forkserver process.\n        This is really just a hint.\n        '''\n        from .forkserver import set_forkserver_preload\n        set_forkserver_preload(module_names)\n\n    def get_context(self, method=None):\n        if method is None:\n            return self\n        try:\n            ctx = _concrete_contexts[method]\n        except KeyError:\n            raise ValueError('cannot find context for %r' % method) from None\n        ctx._check_available()\n        return ctx\n\n    def get_start_method(self, allow_none=False):\n        return self._name\n\n    def set_start_method(self, method, force=False):\n        raise ValueError('cannot set start method of concrete context')\n\n    @property\n    def reducer(self):\n        '''Controls how objects will be reduced to a form that can be\n        shared with other processes.'''\n        return globals().get('reduction')\n\n    @reducer.setter\n    def reducer(self, reduction):\n        globals()['reduction'] = reduction\n\n    def _check_available(self):\n        pass\n\n#\n# Type of default context -- underlying context can be set at most once\n#\n\nclass Process(process.BaseProcess):\n    _start_method = None\n    @staticmethod\n    def _Popen(process_obj):\n        return _default_context.get_context().Process._Popen(process_obj)\n\nclass DefaultContext(BaseContext):\n    Process = Process\n\n    def __init__(self, context):\n        self._default_context = context\n        self._actual_context = None\n\n    def get_context(self, method=None):\n        if method is None:\n            if self._actual_context is None:\n                self._actual_context = self._default_context\n            return self._actual_context\n        else:\n            return super().get_context(method)\n\n    def set_start_method(self, method, force=False):\n        if self._actual_context is not None and not force:\n            raise RuntimeError('context has already been set')\n        if method is None and force:\n            self._actual_context = None\n            return\n        self._actual_context = self.get_context(method)\n\n    def get_start_method(self, allow_none=False):\n        if self._actual_context is None:\n            if allow_none:\n                return None\n            self._actual_context = self._default_context\n        return self._actual_context._name\n\n    def get_all_start_methods(self):\n        if sys.platform == 'win32':\n            return ['spawn']\n        else:\n            methods = ['spawn', 'fork'] if sys.platform == 'darwin' else ['fork', 'spawn']\n            if reduction.HAVE_SEND_HANDLE:\n                methods.append('forkserver')\n            return methods\n\n\n#\n# Context types for fixed start method\n#\n\nif sys.platform != 'win32':\n\n    class ForkProcess(process.BaseProcess):\n        _start_method = 'fork'\n        @staticmethod\n        def _Popen(process_obj):\n            from .popen_fork import Popen\n            return Popen(process_obj)\n\n    class SpawnProcess(process.BaseProcess):\n        _start_method = 'spawn'\n        @staticmethod\n        def _Popen(process_obj):\n            from .popen_spawn_posix import Popen\n            return Popen(process_obj)\n\n    class ForkServerProcess(process.BaseProcess):\n        _start_method = 'forkserver'\n        @staticmethod\n        def _Popen(process_obj):\n            from .popen_forkserver import Popen\n            return Popen(process_obj)\n\n    class ForkContext(BaseContext):\n        _name = 'fork'\n        Process = ForkProcess\n\n    class SpawnContext(BaseContext):\n        _name = 'spawn'\n        Process = SpawnProcess\n\n    class ForkServerContext(BaseContext):\n        _name = 'forkserver'\n        Process = ForkServerProcess\n        def _check_available(self):\n            if not reduction.HAVE_SEND_HANDLE:\n                raise ValueError('forkserver start method not available')\n\n    _concrete_contexts = {\n        'fork': ForkContext(),\n        'spawn': SpawnContext(),\n        'forkserver': ForkServerContext(),\n    }\n    if sys.platform == 'darwin':\n        # bpo-33725: running arbitrary code after fork() is no longer reliable\n        # on macOS since macOS 10.14 (Mojave). Use spawn by default instead.\n        _default_context = DefaultContext(_concrete_contexts['spawn'])\n    else:\n        _default_context = DefaultContext(_concrete_contexts['fork'])\n\nelse:\n\n    class SpawnProcess(process.BaseProcess):\n        _start_method = 'spawn'\n        @staticmethod\n        def _Popen(process_obj):\n            from .popen_spawn_win32 import Popen\n            return Popen(process_obj)\n\n    class SpawnContext(BaseContext):\n        _name = 'spawn'\n        Process = SpawnProcess\n\n    _concrete_contexts = {\n        'spawn': SpawnContext(),\n    }\n    _default_context = DefaultContext(_concrete_contexts['spawn'])\n\n#\n# Force the start method\n#\n\ndef _force_start_method(method):\n    _default_context._actual_context = _concrete_contexts[method]\n\n#\n# Check that the current thread is spawning a child process\n#\n\n_tls = threading.local()\n\ndef get_spawning_popen():\n    return getattr(_tls, 'spawning_popen', None)\n\ndef set_spawning_popen(popen):\n    _tls.spawning_popen = popen\n\ndef assert_spawning(obj):\n    if get_spawning_popen() is None:\n        raise RuntimeError(\n            '%s objects should only be shared between processes'\n            ' through inheritance' % type(obj).__name__\n            )\n", 362], "C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py": ["\"\"\"Temporary files.\n\nThis module provides generic, low- and high-level interfaces for\ncreating temporary files and directories.  All of the interfaces\nprovided by this module can be used without fear of race conditions\nexcept for 'mktemp'.  'mktemp' is subject to race conditions and\nshould not be used; it is provided for backward compatibility only.\n\nThe default path names are returned as str.  If you supply bytes as\ninput, all return values will be in bytes.  Ex:\n\n    >>> tempfile.mkstemp()\n    (4, '/tmp/tmptpu9nin8')\n    >>> tempfile.mkdtemp(suffix=b'')\n    b'/tmp/tmppbi8f0hy'\n\nThis module also provides some data items to the user:\n\n  TMP_MAX  - maximum number of names that will be tried before\n             giving up.\n  tempdir  - If this is set to a string before the first use of\n             any routine from this module, it will be considered as\n             another candidate location to store temporary files.\n\"\"\"\n\n__all__ = [\n    \"NamedTemporaryFile\", \"TemporaryFile\", # high level safe interfaces\n    \"SpooledTemporaryFile\", \"TemporaryDirectory\",\n    \"mkstemp\", \"mkdtemp\",                  # low level safe interfaces\n    \"mktemp\",                              # deprecated unsafe interface\n    \"TMP_MAX\", \"gettempprefix\",            # constants\n    \"tempdir\", \"gettempdir\",\n    \"gettempprefixb\", \"gettempdirb\",\n   ]\n\n\n# Imports.\n\nimport functools as _functools\nimport warnings as _warnings\nimport io as _io\nimport os as _os\nimport shutil as _shutil\nimport errno as _errno\nfrom random import Random as _Random\nimport sys as _sys\nimport types as _types\nimport weakref as _weakref\nimport _thread\n_allocate_lock = _thread.allocate_lock\n\n_text_openflags = _os.O_RDWR | _os.O_CREAT | _os.O_EXCL\nif hasattr(_os, 'O_NOFOLLOW'):\n    _text_openflags |= _os.O_NOFOLLOW\n\n_bin_openflags = _text_openflags\nif hasattr(_os, 'O_BINARY'):\n    _bin_openflags |= _os.O_BINARY\n\nif hasattr(_os, 'TMP_MAX'):\n    TMP_MAX = _os.TMP_MAX\nelse:\n    TMP_MAX = 10000\n\n# This variable _was_ unused for legacy reasons, see issue 10354.\n# But as of 3.5 we actually use it at runtime so changing it would\n# have a possibly desirable side effect...  But we do not want to support\n# that as an API.  It is undocumented on purpose.  Do not depend on this.\ntemplate = \"tmp\"\n\n# Internal routines.\n\n_once_lock = _allocate_lock()\n\n\ndef _exists(fn):\n    try:\n        _os.lstat(fn)\n    except OSError:\n        return False\n    else:\n        return True\n\n\ndef _infer_return_type(*args):\n    \"\"\"Look at the type of all args and divine their implied return type.\"\"\"\n    return_type = None\n    for arg in args:\n        if arg is None:\n            continue\n        if isinstance(arg, bytes):\n            if return_type is str:\n                raise TypeError(\"Can't mix bytes and non-bytes in \"\n                                \"path components.\")\n            return_type = bytes\n        else:\n            if return_type is bytes:\n                raise TypeError(\"Can't mix bytes and non-bytes in \"\n                                \"path components.\")\n            return_type = str\n    if return_type is None:\n        return str  # tempfile APIs return a str by default.\n    return return_type\n\n\ndef _sanitize_params(prefix, suffix, dir):\n    \"\"\"Common parameter processing for most APIs in this module.\"\"\"\n    output_type = _infer_return_type(prefix, suffix, dir)\n    if suffix is None:\n        suffix = output_type()\n    if prefix is None:\n        if output_type is str:\n            prefix = template\n        else:\n            prefix = _os.fsencode(template)\n    if dir is None:\n        if output_type is str:\n            dir = gettempdir()\n        else:\n            dir = gettempdirb()\n    return prefix, suffix, dir, output_type\n\n\nclass _RandomNameSequence:\n    \"\"\"An instance of _RandomNameSequence generates an endless\n    sequence of unpredictable strings which can safely be incorporated\n    into file names.  Each string is eight characters long.  Multiple\n    threads can safely use the same instance at the same time.\n\n    _RandomNameSequence is an iterator.\"\"\"\n\n    characters = \"abcdefghijklmnopqrstuvwxyz0123456789_\"\n\n    @property\n    def rng(self):\n        cur_pid = _os.getpid()\n        if cur_pid != getattr(self, '_rng_pid', None):\n            self._rng = _Random()\n            self._rng_pid = cur_pid\n        return self._rng\n\n    def __iter__(self):\n        return self\n\n    def __next__(self):\n        c = self.characters\n        choose = self.rng.choice\n        letters = [choose(c) for dummy in range(8)]\n        return ''.join(letters)\n\ndef _candidate_tempdir_list():\n    \"\"\"Generate a list of candidate temporary directories which\n    _get_default_tempdir will try.\"\"\"\n\n    dirlist = []\n\n    # First, try the environment.\n    for envname in 'TMPDIR', 'TEMP', 'TMP':\n        dirname = _os.getenv(envname)\n        if dirname: dirlist.append(dirname)\n\n    # Failing that, try OS-specific locations.\n    if _os.name == 'nt':\n        dirlist.extend([ _os.path.expanduser(r'~\\AppData\\Local\\Temp'),\n                         _os.path.expandvars(r'%SYSTEMROOT%\\Temp'),\n                         r'c:\\temp', r'c:\\tmp', r'\\temp', r'\\tmp' ])\n    else:\n        dirlist.extend([ '/tmp', '/var/tmp', '/usr/tmp' ])\n\n    # As a last resort, the current directory.\n    try:\n        dirlist.append(_os.getcwd())\n    except (AttributeError, OSError):\n        dirlist.append(_os.curdir)\n\n    return dirlist\n\ndef _get_default_tempdir():\n    \"\"\"Calculate the default directory to use for temporary files.\n    This routine should be called exactly once.\n\n    We determine whether or not a candidate temp dir is usable by\n    trying to create and write to a file in that directory.  If this\n    is successful, the test file is deleted.  To prevent denial of\n    service, the name of the test file must be randomized.\"\"\"\n\n    namer = _RandomNameSequence()\n    dirlist = _candidate_tempdir_list()\n\n    for dir in dirlist:\n        if dir != _os.curdir:\n            dir = _os.path.abspath(dir)\n        # Try only a few names per directory.\n        for seq in range(100):\n            name = next(namer)\n            filename = _os.path.join(dir, name)\n            try:\n                fd = _os.open(filename, _bin_openflags, 0o600)\n                try:\n                    try:\n                        with _io.open(fd, 'wb', closefd=False) as fp:\n                            fp.write(b'blat')\n                    finally:\n                        _os.close(fd)\n                finally:\n                    _os.unlink(filename)\n                return dir\n            except FileExistsError:\n                pass\n            except PermissionError:\n                # This exception is thrown when a directory with the chosen name\n                # already exists on windows.\n                if (_os.name == 'nt' and _os.path.isdir(dir) and\n                    _os.access(dir, _os.W_OK)):\n                    continue\n                break   # no point trying more names in this directory\n            except OSError:\n                break   # no point trying more names in this directory\n    raise FileNotFoundError(_errno.ENOENT,\n                            \"No usable temporary directory found in %s\" %\n                            dirlist)\n\n_name_sequence = None\n\ndef _get_candidate_names():\n    \"\"\"Common setup sequence for all user-callable interfaces.\"\"\"\n\n    global _name_sequence\n    if _name_sequence is None:\n        _once_lock.acquire()\n        try:\n            if _name_sequence is None:\n                _name_sequence = _RandomNameSequence()\n        finally:\n            _once_lock.release()\n    return _name_sequence\n\n\ndef _mkstemp_inner(dir, pre, suf, flags, output_type):\n    \"\"\"Code common to mkstemp, TemporaryFile, and NamedTemporaryFile.\"\"\"\n\n    names = _get_candidate_names()\n    if output_type is bytes:\n        names = map(_os.fsencode, names)\n\n    for seq in range(TMP_MAX):\n        name = next(names)\n        file = _os.path.join(dir, pre + name + suf)\n        _sys.audit(\"tempfile.mkstemp\", file)\n        try:\n            fd = _os.open(file, flags, 0o600)\n        except FileExistsError:\n            continue    # try again\n        except PermissionError:\n            # This exception is thrown when a directory with the chosen name\n            # already exists on windows.\n            if (_os.name == 'nt' and _os.path.isdir(dir) and\n                _os.access(dir, _os.W_OK)):\n                continue\n            else:\n                raise\n        return (fd, _os.path.abspath(file))\n\n    raise FileExistsError(_errno.EEXIST,\n                          \"No usable temporary file name found\")\n\n\n# User visible interfaces.\n\ndef gettempprefix():\n    \"\"\"The default prefix for temporary directories.\"\"\"\n    return template\n\ndef gettempprefixb():\n    \"\"\"The default prefix for temporary directories as bytes.\"\"\"\n    return _os.fsencode(gettempprefix())\n\ntempdir = None\n\ndef gettempdir():\n    \"\"\"Accessor for tempfile.tempdir.\"\"\"\n    global tempdir\n    if tempdir is None:\n        _once_lock.acquire()\n        try:\n            if tempdir is None:\n                tempdir = _get_default_tempdir()\n        finally:\n            _once_lock.release()\n    return tempdir\n\ndef gettempdirb():\n    \"\"\"A bytes version of tempfile.gettempdir().\"\"\"\n    return _os.fsencode(gettempdir())\n\ndef mkstemp(suffix=None, prefix=None, dir=None, text=False):\n    \"\"\"User-callable function to create and return a unique temporary\n    file.  The return value is a pair (fd, name) where fd is the\n    file descriptor returned by os.open, and name is the filename.\n\n    If 'suffix' is not None, the file name will end with that suffix,\n    otherwise there will be no suffix.\n\n    If 'prefix' is not None, the file name will begin with that prefix,\n    otherwise a default prefix is used.\n\n    If 'dir' is not None, the file will be created in that directory,\n    otherwise a default directory is used.\n\n    If 'text' is specified and true, the file is opened in text\n    mode.  Else (the default) the file is opened in binary mode.\n\n    If any of 'suffix', 'prefix' and 'dir' are not None, they must be the\n    same type.  If they are bytes, the returned name will be bytes; str\n    otherwise.\n\n    The file is readable and writable only by the creating user ID.\n    If the operating system uses permission bits to indicate whether a\n    file is executable, the file is executable by no one. The file\n    descriptor is not inherited by children of this process.\n\n    Caller is responsible for deleting the file when done with it.\n    \"\"\"\n\n    prefix, suffix, dir, output_type = _sanitize_params(prefix, suffix, dir)\n\n    if text:\n        flags = _text_openflags\n    else:\n        flags = _bin_openflags\n\n    return _mkstemp_inner(dir, prefix, suffix, flags, output_type)\n\n\ndef mkdtemp(suffix=None, prefix=None, dir=None):\n    \"\"\"User-callable function to create and return a unique temporary\n    directory.  The return value is the pathname of the directory.\n\n    Arguments are as for mkstemp, except that the 'text' argument is\n    not accepted.\n\n    The directory is readable, writable, and searchable only by the\n    creating user.\n\n    Caller is responsible for deleting the directory when done with it.\n    \"\"\"\n\n    prefix, suffix, dir, output_type = _sanitize_params(prefix, suffix, dir)\n\n    names = _get_candidate_names()\n    if output_type is bytes:\n        names = map(_os.fsencode, names)\n\n    for seq in range(TMP_MAX):\n        name = next(names)\n        file = _os.path.join(dir, prefix + name + suffix)\n        _sys.audit(\"tempfile.mkdtemp\", file)\n        try:\n            _os.mkdir(file, 0o700)\n        except FileExistsError:\n            continue    # try again\n        except PermissionError:\n            # This exception is thrown when a directory with the chosen name\n            # already exists on windows.\n            if (_os.name == 'nt' and _os.path.isdir(dir) and\n                _os.access(dir, _os.W_OK)):\n                continue\n            else:\n                raise\n        return file\n\n    raise FileExistsError(_errno.EEXIST,\n                          \"No usable temporary directory name found\")\n\ndef mktemp(suffix=\"\", prefix=template, dir=None):\n    \"\"\"User-callable function to return a unique temporary file name.  The\n    file is not created.\n\n    Arguments are similar to mkstemp, except that the 'text' argument is\n    not accepted, and suffix=None, prefix=None and bytes file names are not\n    supported.\n\n    THIS FUNCTION IS UNSAFE AND SHOULD NOT BE USED.  The file name may\n    refer to a file that did not exist at some point, but by the time\n    you get around to creating it, someone else may have beaten you to\n    the punch.\n    \"\"\"\n\n##    from warnings import warn as _warn\n##    _warn(\"mktemp is a potential security risk to your program\",\n##          RuntimeWarning, stacklevel=2)\n\n    if dir is None:\n        dir = gettempdir()\n\n    names = _get_candidate_names()\n    for seq in range(TMP_MAX):\n        name = next(names)\n        file = _os.path.join(dir, prefix + name + suffix)\n        if not _exists(file):\n            return file\n\n    raise FileExistsError(_errno.EEXIST,\n                          \"No usable temporary filename found\")\n\n\nclass _TemporaryFileCloser:\n    \"\"\"A separate object allowing proper closing of a temporary file's\n    underlying file object, without adding a __del__ method to the\n    temporary file.\"\"\"\n\n    file = None  # Set here since __del__ checks it\n    close_called = False\n\n    def __init__(self, file, name, delete=True):\n        self.file = file\n        self.name = name\n        self.delete = delete\n\n    # NT provides delete-on-close as a primitive, so we don't need\n    # the wrapper to do anything special.  We still use it so that\n    # file.name is useful (i.e. not \"(fdopen)\") with NamedTemporaryFile.\n    if _os.name != 'nt':\n        # Cache the unlinker so we don't get spurious errors at\n        # shutdown when the module-level \"os\" is None'd out.  Note\n        # that this must be referenced as self.unlink, because the\n        # name TemporaryFileWrapper may also get None'd out before\n        # __del__ is called.\n\n        def close(self, unlink=_os.unlink):\n            if not self.close_called and self.file is not None:\n                self.close_called = True\n                try:\n                    self.file.close()\n                finally:\n                    if self.delete:\n                        unlink(self.name)\n\n        # Need to ensure the file is deleted on __del__\n        def __del__(self):\n            self.close()\n\n    else:\n        def close(self):\n            if not self.close_called:\n                self.close_called = True\n                self.file.close()\n\n\nclass _TemporaryFileWrapper:\n    \"\"\"Temporary file wrapper\n\n    This class provides a wrapper around files opened for\n    temporary use.  In particular, it seeks to automatically\n    remove the file when it is no longer needed.\n    \"\"\"\n\n    def __init__(self, file, name, delete=True):\n        self.file = file\n        self.name = name\n        self.delete = delete\n        self._closer = _TemporaryFileCloser(file, name, delete)\n\n    def __getattr__(self, name):\n        # Attribute lookups are delegated to the underlying file\n        # and cached for non-numeric results\n        # (i.e. methods are cached, closed and friends are not)\n        file = self.__dict__['file']\n        a = getattr(file, name)\n        if hasattr(a, '__call__'):\n            func = a\n            @_functools.wraps(func)\n            def func_wrapper(*args, **kwargs):\n                return func(*args, **kwargs)\n            # Avoid closing the file as long as the wrapper is alive,\n            # see issue #18879.\n            func_wrapper._closer = self._closer\n            a = func_wrapper\n        if not isinstance(a, int):\n            setattr(self, name, a)\n        return a\n\n    # The underlying __enter__ method returns the wrong object\n    # (self.file) so override it to return the wrapper\n    def __enter__(self):\n        self.file.__enter__()\n        return self\n\n    # Need to trap __exit__ as well to ensure the file gets\n    # deleted when used in a with statement\n    def __exit__(self, exc, value, tb):\n        result = self.file.__exit__(exc, value, tb)\n        self.close()\n        return result\n\n    def close(self):\n        \"\"\"\n        Close the temporary file, possibly deleting it.\n        \"\"\"\n        self._closer.close()\n\n    # iter() doesn't use __getattr__ to find the __iter__ method\n    def __iter__(self):\n        # Don't return iter(self.file), but yield from it to avoid closing\n        # file as long as it's being used as iterator (see issue #23700).  We\n        # can't use 'yield from' here because iter(file) returns the file\n        # object itself, which has a close method, and thus the file would get\n        # closed when the generator is finalized, due to PEP380 semantics.\n        for line in self.file:\n            yield line\n\n\ndef NamedTemporaryFile(mode='w+b', buffering=-1, encoding=None,\n                       newline=None, suffix=None, prefix=None,\n                       dir=None, delete=True, *, errors=None):\n    \"\"\"Create and return a temporary file.\n    Arguments:\n    'prefix', 'suffix', 'dir' -- as for mkstemp.\n    'mode' -- the mode argument to io.open (default \"w+b\").\n    'buffering' -- the buffer size argument to io.open (default -1).\n    'encoding' -- the encoding argument to io.open (default None)\n    'newline' -- the newline argument to io.open (default None)\n    'delete' -- whether the file is deleted on close (default True).\n    'errors' -- the errors argument to io.open (default None)\n    The file is created as mkstemp() would do it.\n\n    Returns an object with a file-like interface; the name of the file\n    is accessible as its 'name' attribute.  The file will be automatically\n    deleted when it is closed unless the 'delete' argument is set to False.\n    \"\"\"\n\n    prefix, suffix, dir, output_type = _sanitize_params(prefix, suffix, dir)\n\n    flags = _bin_openflags\n\n    # Setting O_TEMPORARY in the flags causes the OS to delete\n    # the file when it is closed.  This is only supported by Windows.\n    if _os.name == 'nt' and delete:\n        flags |= _os.O_TEMPORARY\n\n    (fd, name) = _mkstemp_inner(dir, prefix, suffix, flags, output_type)\n    try:\n        file = _io.open(fd, mode, buffering=buffering,\n                        newline=newline, encoding=encoding, errors=errors)\n\n        return _TemporaryFileWrapper(file, name, delete)\n    except BaseException:\n        _os.unlink(name)\n        _os.close(fd)\n        raise\n\nif _os.name != 'posix' or _sys.platform == 'cygwin':\n    # On non-POSIX and Cygwin systems, assume that we cannot unlink a file\n    # while it is open.\n    TemporaryFile = NamedTemporaryFile\n\nelse:\n    # Is the O_TMPFILE flag available and does it work?\n    # The flag is set to False if os.open(dir, os.O_TMPFILE) raises an\n    # IsADirectoryError exception\n    _O_TMPFILE_WORKS = hasattr(_os, 'O_TMPFILE')\n\n    def TemporaryFile(mode='w+b', buffering=-1, encoding=None,\n                      newline=None, suffix=None, prefix=None,\n                      dir=None, *, errors=None):\n        \"\"\"Create and return a temporary file.\n        Arguments:\n        'prefix', 'suffix', 'dir' -- as for mkstemp.\n        'mode' -- the mode argument to io.open (default \"w+b\").\n        'buffering' -- the buffer size argument to io.open (default -1).\n        'encoding' -- the encoding argument to io.open (default None)\n        'newline' -- the newline argument to io.open (default None)\n        'errors' -- the errors argument to io.open (default None)\n        The file is created as mkstemp() would do it.\n\n        Returns an object with a file-like interface.  The file has no\n        name, and will cease to exist when it is closed.\n        \"\"\"\n        global _O_TMPFILE_WORKS\n\n        prefix, suffix, dir, output_type = _sanitize_params(prefix, suffix, dir)\n\n        flags = _bin_openflags\n        if _O_TMPFILE_WORKS:\n            try:\n                flags2 = (flags | _os.O_TMPFILE) & ~_os.O_CREAT\n                fd = _os.open(dir, flags2, 0o600)\n            except IsADirectoryError:\n                # Linux kernel older than 3.11 ignores the O_TMPFILE flag:\n                # O_TMPFILE is read as O_DIRECTORY. Trying to open a directory\n                # with O_RDWR|O_DIRECTORY fails with IsADirectoryError, a\n                # directory cannot be open to write. Set flag to False to not\n                # try again.\n                _O_TMPFILE_WORKS = False\n            except OSError:\n                # The filesystem of the directory does not support O_TMPFILE.\n                # For example, OSError(95, 'Operation not supported').\n                #\n                # On Linux kernel older than 3.11, trying to open a regular\n                # file (or a symbolic link to a regular file) with O_TMPFILE\n                # fails with NotADirectoryError, because O_TMPFILE is read as\n                # O_DIRECTORY.\n                pass\n            else:\n                try:\n                    return _io.open(fd, mode, buffering=buffering,\n                                    newline=newline, encoding=encoding,\n                                    errors=errors)\n                except:\n                    _os.close(fd)\n                    raise\n            # Fallback to _mkstemp_inner().\n\n        (fd, name) = _mkstemp_inner(dir, prefix, suffix, flags, output_type)\n        try:\n            _os.unlink(name)\n            return _io.open(fd, mode, buffering=buffering,\n                            newline=newline, encoding=encoding, errors=errors)\n        except:\n            _os.close(fd)\n            raise\n\nclass SpooledTemporaryFile:\n    \"\"\"Temporary file wrapper, specialized to switch from BytesIO\n    or StringIO to a real file when it exceeds a certain size or\n    when a fileno is needed.\n    \"\"\"\n    _rolled = False\n\n    def __init__(self, max_size=0, mode='w+b', buffering=-1,\n                 encoding=None, newline=None,\n                 suffix=None, prefix=None, dir=None, *, errors=None):\n        if 'b' in mode:\n            self._file = _io.BytesIO()\n        else:\n            self._file = _io.TextIOWrapper(_io.BytesIO(),\n                            encoding=encoding, errors=errors,\n                            newline=newline)\n        self._max_size = max_size\n        self._rolled = False\n        self._TemporaryFileArgs = {'mode': mode, 'buffering': buffering,\n                                   'suffix': suffix, 'prefix': prefix,\n                                   'encoding': encoding, 'newline': newline,\n                                   'dir': dir, 'errors': errors}\n\n    __class_getitem__ = classmethod(_types.GenericAlias)\n\n    def _check(self, file):\n        if self._rolled: return\n        max_size = self._max_size\n        if max_size and file.tell() > max_size:\n            self.rollover()\n\n    def rollover(self):\n        if self._rolled: return\n        file = self._file\n        newfile = self._file = TemporaryFile(**self._TemporaryFileArgs)\n        del self._TemporaryFileArgs\n\n        pos = file.tell()\n        if hasattr(newfile, 'buffer'):\n            newfile.buffer.write(file.detach().getvalue())\n        else:\n            newfile.write(file.getvalue())\n        newfile.seek(pos, 0)\n\n        self._rolled = True\n\n    # The method caching trick from NamedTemporaryFile\n    # won't work here, because _file may change from a\n    # BytesIO/StringIO instance to a real file. So we list\n    # all the methods directly.\n\n    # Context management protocol\n    def __enter__(self):\n        if self._file.closed:\n            raise ValueError(\"Cannot enter context with closed file\")\n        return self\n\n    def __exit__(self, exc, value, tb):\n        self._file.close()\n\n    # file protocol\n    def __iter__(self):\n        return self._file.__iter__()\n\n    def close(self):\n        self._file.close()\n\n    @property\n    def closed(self):\n        return self._file.closed\n\n    @property\n    def encoding(self):\n        return self._file.encoding\n\n    @property\n    def errors(self):\n        return self._file.errors\n\n    def fileno(self):\n        self.rollover()\n        return self._file.fileno()\n\n    def flush(self):\n        self._file.flush()\n\n    def isatty(self):\n        return self._file.isatty()\n\n    @property\n    def mode(self):\n        try:\n            return self._file.mode\n        except AttributeError:\n            return self._TemporaryFileArgs['mode']\n\n    @property\n    def name(self):\n        try:\n            return self._file.name\n        except AttributeError:\n            return None\n\n    @property\n    def newlines(self):\n        return self._file.newlines\n\n    def read(self, *args):\n        return self._file.read(*args)\n\n    def readline(self, *args):\n        return self._file.readline(*args)\n\n    def readlines(self, *args):\n        return self._file.readlines(*args)\n\n    def seek(self, *args):\n        return self._file.seek(*args)\n\n    def tell(self):\n        return self._file.tell()\n\n    def truncate(self, size=None):\n        if size is None:\n            self._file.truncate()\n        else:\n            if size > self._max_size:\n                self.rollover()\n            self._file.truncate(size)\n\n    def write(self, s):\n        file = self._file\n        rv = file.write(s)\n        self._check(file)\n        return rv\n\n    def writelines(self, iterable):\n        file = self._file\n        rv = file.writelines(iterable)\n        self._check(file)\n        return rv\n\n\nclass TemporaryDirectory(object):\n    \"\"\"Create and return a temporary directory.  This has the same\n    behavior as mkdtemp but can be used as a context manager.  For\n    example:\n\n        with TemporaryDirectory() as tmpdir:\n            ...\n\n    Upon exiting the context, the directory and everything contained\n    in it are removed.\n    \"\"\"\n\n    def __init__(self, suffix=None, prefix=None, dir=None):\n        self.name = mkdtemp(suffix, prefix, dir)\n        self._finalizer = _weakref.finalize(\n            self, self._cleanup, self.name,\n            warn_message=\"Implicitly cleaning up {!r}\".format(self))\n\n    @classmethod\n    def _rmtree(cls, name):\n        def onerror(func, path, exc_info):\n            if issubclass(exc_info[0], PermissionError):\n                def resetperms(path):\n                    try:\n                        _os.chflags(path, 0)\n                    except AttributeError:\n                        pass\n                    _os.chmod(path, 0o700)\n\n                try:\n                    if path != name:\n                        resetperms(_os.path.dirname(path))\n                    resetperms(path)\n\n                    try:\n                        _os.unlink(path)\n                    # PermissionError is raised on FreeBSD for directories\n                    except (IsADirectoryError, PermissionError):\n                        cls._rmtree(path)\n                except FileNotFoundError:\n                    pass\n            elif issubclass(exc_info[0], FileNotFoundError):\n                pass\n            else:\n                raise\n\n        _shutil.rmtree(name, onerror=onerror)\n\n    @classmethod\n    def _cleanup(cls, name, warn_message):\n        cls._rmtree(name)\n        _warnings.warn(warn_message, ResourceWarning)\n\n    def __repr__(self):\n        return \"<{} {!r}>\".format(self.__class__.__name__, self.name)\n\n    def __enter__(self):\n        return self.name\n\n    def __exit__(self, exc, value, tb):\n        self.cleanup()\n\n    def cleanup(self):\n        if self._finalizer.detach():\n            self._rmtree(self.name)\n\n    __class_getitem__ = classmethod(_types.GenericAlias)\n", 832], "C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py": ["\"\"\"Random variable generators.\n\n    bytes\n    -----\n           uniform bytes (values between 0 and 255)\n\n    integers\n    --------\n           uniform within range\n\n    sequences\n    ---------\n           pick random element\n           pick random sample\n           pick weighted random sample\n           generate random permutation\n\n    distributions on the real line:\n    ------------------------------\n           uniform\n           triangular\n           normal (Gaussian)\n           lognormal\n           negative exponential\n           gamma\n           beta\n           pareto\n           Weibull\n\n    distributions on the circle (angles 0 to 2pi)\n    ---------------------------------------------\n           circular uniform\n           von Mises\n\nGeneral notes on the underlying Mersenne Twister core generator:\n\n* The period is 2**19937-1.\n* It is one of the most extensively tested generators in existence.\n* The random() method is implemented in C, executes in a single Python step,\n  and is, therefore, threadsafe.\n\n\"\"\"\n\n# Translated by Guido van Rossum from C source provided by\n# Adrian Baddeley.  Adapted by Raymond Hettinger for use with\n# the Mersenne Twister  and os.urandom() core generators.\n\nfrom warnings import warn as _warn\nfrom math import log as _log, exp as _exp, pi as _pi, e as _e, ceil as _ceil\nfrom math import sqrt as _sqrt, acos as _acos, cos as _cos, sin as _sin\nfrom math import tau as TWOPI, floor as _floor\nfrom os import urandom as _urandom\nfrom _collections_abc import Set as _Set, Sequence as _Sequence\nfrom itertools import accumulate as _accumulate, repeat as _repeat\nfrom bisect import bisect as _bisect\nimport os as _os\nimport _random\n\ntry:\n    # hashlib is pretty heavy to load, try lean internal module first\n    from _sha512 import sha512 as _sha512\nexcept ImportError:\n    # fallback to official implementation\n    from hashlib import sha512 as _sha512\n\n__all__ = [\n    \"Random\",\n    \"SystemRandom\",\n    \"betavariate\",\n    \"choice\",\n    \"choices\",\n    \"expovariate\",\n    \"gammavariate\",\n    \"gauss\",\n    \"getrandbits\",\n    \"getstate\",\n    \"lognormvariate\",\n    \"normalvariate\",\n    \"paretovariate\",\n    \"randbytes\",\n    \"randint\",\n    \"random\",\n    \"randrange\",\n    \"sample\",\n    \"seed\",\n    \"setstate\",\n    \"shuffle\",\n    \"triangular\",\n    \"uniform\",\n    \"vonmisesvariate\",\n    \"weibullvariate\",\n]\n\nNV_MAGICCONST = 4 * _exp(-0.5) / _sqrt(2.0)\nLOG4 = _log(4.0)\nSG_MAGICCONST = 1.0 + _log(4.5)\nBPF = 53        # Number of bits in a float\nRECIP_BPF = 2 ** -BPF\n\n\nclass Random(_random.Random):\n    \"\"\"Random number generator base class used by bound module functions.\n\n    Used to instantiate instances of Random to get generators that don't\n    share state.\n\n    Class Random can also be subclassed if you want to use a different basic\n    generator of your own devising: in that case, override the following\n    methods:  random(), seed(), getstate(), and setstate().\n    Optionally, implement a getrandbits() method so that randrange()\n    can cover arbitrarily large ranges.\n\n    \"\"\"\n\n    VERSION = 3     # used by getstate/setstate\n\n    def __init__(self, x=None):\n        \"\"\"Initialize an instance.\n\n        Optional argument x controls seeding, as for Random.seed().\n        \"\"\"\n\n        self.seed(x)\n        self.gauss_next = None\n\n    def seed(self, a=None, version=2):\n        \"\"\"Initialize internal state from a seed.\n\n        The only supported seed types are None, int, float,\n        str, bytes, and bytearray.\n\n        None or no argument seeds from current time or from an operating\n        system specific randomness source if available.\n\n        If *a* is an int, all bits are used.\n\n        For version 2 (the default), all of the bits are used if *a* is a str,\n        bytes, or bytearray.  For version 1 (provided for reproducing random\n        sequences from older versions of Python), the algorithm for str and\n        bytes generates a narrower range of seeds.\n\n        \"\"\"\n\n        if version == 1 and isinstance(a, (str, bytes)):\n            a = a.decode('latin-1') if isinstance(a, bytes) else a\n            x = ord(a[0]) << 7 if a else 0\n            for c in map(ord, a):\n                x = ((1000003 * x) ^ c) & 0xFFFFFFFFFFFFFFFF\n            x ^= len(a)\n            a = -2 if x == -1 else x\n\n        elif version == 2 and isinstance(a, (str, bytes, bytearray)):\n            if isinstance(a, str):\n                a = a.encode()\n            a = int.from_bytes(a + _sha512(a).digest(), 'big')\n\n        elif not isinstance(a, (type(None), int, float, str, bytes, bytearray)):\n            _warn('Seeding based on hashing is deprecated\\n'\n                  'since Python 3.9 and will be removed in a subsequent '\n                  'version. The only \\n'\n                  'supported seed types are: None, '\n                  'int, float, str, bytes, and bytearray.',\n                  DeprecationWarning, 2)\n\n        super().seed(a)\n        self.gauss_next = None\n\n    def getstate(self):\n        \"\"\"Return internal state; can be passed to setstate() later.\"\"\"\n        return self.VERSION, super().getstate(), self.gauss_next\n\n    def setstate(self, state):\n        \"\"\"Restore internal state from object returned by getstate().\"\"\"\n        version = state[0]\n        if version == 3:\n            version, internalstate, self.gauss_next = state\n            super().setstate(internalstate)\n        elif version == 2:\n            version, internalstate, self.gauss_next = state\n            # In version 2, the state was saved as signed ints, which causes\n            #   inconsistencies between 32/64-bit systems. The state is\n            #   really unsigned 32-bit ints, so we convert negative ints from\n            #   version 2 to positive longs for version 3.\n            try:\n                internalstate = tuple(x % (2 ** 32) for x in internalstate)\n            except ValueError as e:\n                raise TypeError from e\n            super().setstate(internalstate)\n        else:\n            raise ValueError(\"state with version %s passed to \"\n                             \"Random.setstate() of version %s\" %\n                             (version, self.VERSION))\n\n\n    ## -------------------------------------------------------\n    ## ---- Methods below this point do not need to be overridden or extended\n    ## ---- when subclassing for the purpose of using a different core generator.\n\n\n    ## -------------------- pickle support  -------------------\n\n    # Issue 17489: Since __reduce__ was defined to fix #759889 this is no\n    # longer called; we leave it here because it has been here since random was\n    # rewritten back in 2001 and why risk breaking something.\n    def __getstate__(self):  # for pickle\n        return self.getstate()\n\n    def __setstate__(self, state):  # for pickle\n        self.setstate(state)\n\n    def __reduce__(self):\n        return self.__class__, (), self.getstate()\n\n\n    ## ---- internal support method for evenly distributed integers ----\n\n    def __init_subclass__(cls, /, **kwargs):\n        \"\"\"Control how subclasses generate random integers.\n\n        The algorithm a subclass can use depends on the random() and/or\n        getrandbits() implementation available to it and determines\n        whether it can generate random integers from arbitrarily large\n        ranges.\n        \"\"\"\n\n        for c in cls.__mro__:\n            if '_randbelow' in c.__dict__:\n                # just inherit it\n                break\n            if 'getrandbits' in c.__dict__:\n                cls._randbelow = cls._randbelow_with_getrandbits\n                break\n            if 'random' in c.__dict__:\n                cls._randbelow = cls._randbelow_without_getrandbits\n                break\n\n    def _randbelow_with_getrandbits(self, n):\n        \"Return a random int in the range [0,n).  Returns 0 if n==0.\"\n\n        if not n:\n            return 0\n        getrandbits = self.getrandbits\n        k = n.bit_length()  # don't use (n-1) here because n can be 1\n        r = getrandbits(k)  # 0 <= r < 2**k\n        while r >= n:\n            r = getrandbits(k)\n        return r\n\n    def _randbelow_without_getrandbits(self, n, maxsize=1<<BPF):\n        \"\"\"Return a random int in the range [0,n).  Returns 0 if n==0.\n\n        The implementation does not use getrandbits, but only random.\n        \"\"\"\n\n        random = self.random\n        if n >= maxsize:\n            _warn(\"Underlying random() generator does not supply \\n\"\n                \"enough bits to choose from a population range this large.\\n\"\n                \"To remove the range limitation, add a getrandbits() method.\")\n            return _floor(random() * n)\n        if n == 0:\n            return 0\n        rem = maxsize % n\n        limit = (maxsize - rem) / maxsize   # int(limit * maxsize) % n == 0\n        r = random()\n        while r >= limit:\n            r = random()\n        return _floor(r * maxsize) % n\n\n    _randbelow = _randbelow_with_getrandbits\n\n\n    ## --------------------------------------------------------\n    ## ---- Methods below this point generate custom distributions\n    ## ---- based on the methods defined above.  They do not\n    ## ---- directly touch the underlying generator and only\n    ## ---- access randomness through the methods:  random(),\n    ## ---- getrandbits(), or _randbelow().\n\n\n    ## -------------------- bytes methods ---------------------\n\n    def randbytes(self, n):\n        \"\"\"Generate n random bytes.\"\"\"\n        return self.getrandbits(n * 8).to_bytes(n, 'little')\n\n\n    ## -------------------- integer methods  -------------------\n\n    def randrange(self, start, stop=None, step=1):\n        \"\"\"Choose a random item from range(start, stop[, step]).\n\n        This fixes the problem with randint() which includes the\n        endpoint; in Python this is usually not what you want.\n\n        \"\"\"\n\n        # This code is a bit messy to make it fast for the\n        # common case while still doing adequate error checking.\n        istart = int(start)\n        if istart != start:\n            raise ValueError(\"non-integer arg 1 for randrange()\")\n        if stop is None:\n            if istart > 0:\n                return self._randbelow(istart)\n            raise ValueError(\"empty range for randrange()\")\n\n        # stop argument supplied.\n        istop = int(stop)\n        if istop != stop:\n            raise ValueError(\"non-integer stop for randrange()\")\n        width = istop - istart\n        if step == 1 and width > 0:\n            return istart + self._randbelow(width)\n        if step == 1:\n            raise ValueError(\"empty range for randrange() (%d, %d, %d)\" % (istart, istop, width))\n\n        # Non-unit step argument supplied.\n        istep = int(step)\n        if istep != step:\n            raise ValueError(\"non-integer step for randrange()\")\n        if istep > 0:\n            n = (width + istep - 1) // istep\n        elif istep < 0:\n            n = (width + istep + 1) // istep\n        else:\n            raise ValueError(\"zero step for randrange()\")\n\n        if n <= 0:\n            raise ValueError(\"empty range for randrange()\")\n\n        return istart + istep * self._randbelow(n)\n\n    def randint(self, a, b):\n        \"\"\"Return random integer in range [a, b], including both end points.\n        \"\"\"\n\n        return self.randrange(a, b+1)\n\n\n    ## -------------------- sequence methods  -------------------\n\n    def choice(self, seq):\n        \"\"\"Choose a random element from a non-empty sequence.\"\"\"\n        # raises IndexError if seq is empty\n        return seq[self._randbelow(len(seq))]\n\n    def shuffle(self, x, random=None):\n        \"\"\"Shuffle list x in place, and return None.\n\n        Optional argument random is a 0-argument function returning a\n        random float in [0.0, 1.0); if it is the default None, the\n        standard random.random will be used.\n\n        \"\"\"\n\n        if random is None:\n            randbelow = self._randbelow\n            for i in reversed(range(1, len(x))):\n                # pick an element in x[:i+1] with which to exchange x[i]\n                j = randbelow(i + 1)\n                x[i], x[j] = x[j], x[i]\n        else:\n            _warn('The *random* parameter to shuffle() has been deprecated\\n'\n                  'since Python 3.9 and will be removed in a subsequent '\n                  'version.',\n                  DeprecationWarning, 2)\n            floor = _floor\n            for i in reversed(range(1, len(x))):\n                # pick an element in x[:i+1] with which to exchange x[i]\n                j = floor(random() * (i + 1))\n                x[i], x[j] = x[j], x[i]\n\n    def sample(self, population, k, *, counts=None):\n        \"\"\"Chooses k unique random elements from a population sequence or set.\n\n        Returns a new list containing elements from the population while\n        leaving the original population unchanged.  The resulting list is\n        in selection order so that all sub-slices will also be valid random\n        samples.  This allows raffle winners (the sample) to be partitioned\n        into grand prize and second place winners (the subslices).\n\n        Members of the population need not be hashable or unique.  If the\n        population contains repeats, then each occurrence is a possible\n        selection in the sample.\n\n        Repeated elements can be specified one at a time or with the optional\n        counts parameter.  For example:\n\n            sample(['red', 'blue'], counts=[4, 2], k=5)\n\n        is equivalent to:\n\n            sample(['red', 'red', 'red', 'red', 'blue', 'blue'], k=5)\n\n        To choose a sample from a range of integers, use range() for the\n        population argument.  This is especially fast and space efficient\n        for sampling from a large population:\n\n            sample(range(10000000), 60)\n\n        \"\"\"\n\n        # Sampling without replacement entails tracking either potential\n        # selections (the pool) in a list or previous selections in a set.\n\n        # When the number of selections is small compared to the\n        # population, then tracking selections is efficient, requiring\n        # only a small set and an occasional reselection.  For\n        # a larger number of selections, the pool tracking method is\n        # preferred since the list takes less space than the\n        # set and it doesn't suffer from frequent reselections.\n\n        # The number of calls to _randbelow() is kept at or near k, the\n        # theoretical minimum.  This is important because running time\n        # is dominated by _randbelow() and because it extracts the\n        # least entropy from the underlying random number generators.\n\n        # Memory requirements are kept to the smaller of a k-length\n        # set or an n-length list.\n\n        # There are other sampling algorithms that do not require\n        # auxiliary memory, but they were rejected because they made\n        # too many calls to _randbelow(), making them slower and\n        # causing them to eat more entropy than necessary.\n\n        if isinstance(population, _Set):\n            _warn('Sampling from a set deprecated\\n'\n                  'since Python 3.9 and will be removed in a subsequent version.',\n                  DeprecationWarning, 2)\n            population = tuple(population)\n        if not isinstance(population, _Sequence):\n            raise TypeError(\"Population must be a sequence.  For dicts or sets, use sorted(d).\")\n        n = len(population)\n        if counts is not None:\n            cum_counts = list(_accumulate(counts))\n            if len(cum_counts) != n:\n                raise ValueError('The number of counts does not match the population')\n            total = cum_counts.pop()\n            if not isinstance(total, int):\n                raise TypeError('Counts must be integers')\n            if total <= 0:\n                raise ValueError('Total of counts must be greater than zero')\n            selections = self.sample(range(total), k=k)\n            bisect = _bisect\n            return [population[bisect(cum_counts, s)] for s in selections]\n        randbelow = self._randbelow\n        if not 0 <= k <= n:\n            raise ValueError(\"Sample larger than population or is negative\")\n        result = [None] * k\n        setsize = 21        # size of a small set minus size of an empty list\n        if k > 5:\n            setsize += 4 ** _ceil(_log(k * 3, 4))  # table size for big sets\n        if n <= setsize:\n            # An n-length list is smaller than a k-length set.\n            # Invariant:  non-selected at pool[0 : n-i]\n            pool = list(population)\n            for i in range(k):\n                j = randbelow(n - i)\n                result[i] = pool[j]\n                pool[j] = pool[n - i - 1]  # move non-selected item into vacancy\n        else:\n            selected = set()\n            selected_add = selected.add\n            for i in range(k):\n                j = randbelow(n)\n                while j in selected:\n                    j = randbelow(n)\n                selected_add(j)\n                result[i] = population[j]\n        return result\n\n    def choices(self, population, weights=None, *, cum_weights=None, k=1):\n        \"\"\"Return a k sized list of population elements chosen with replacement.\n\n        If the relative weights or cumulative weights are not specified,\n        the selections are made with equal probability.\n\n        \"\"\"\n        random = self.random\n        n = len(population)\n        if cum_weights is None:\n            if weights is None:\n                floor = _floor\n                n += 0.0    # convert to float for a small speed improvement\n                return [population[floor(random() * n)] for i in _repeat(None, k)]\n            try:\n                cum_weights = list(_accumulate(weights))\n            except TypeError:\n                if not isinstance(weights, int):\n                    raise\n                k = weights\n                raise TypeError(\n                    f'The number of choices must be a keyword argument: {k=}'\n                ) from None\n        elif weights is not None:\n            raise TypeError('Cannot specify both weights and cumulative weights')\n        if len(cum_weights) != n:\n            raise ValueError('The number of weights does not match the population')\n        total = cum_weights[-1] + 0.0   # convert to float\n        if total <= 0.0:\n            raise ValueError('Total of weights must be greater than zero')\n        bisect = _bisect\n        hi = n - 1\n        return [population[bisect(cum_weights, random() * total, 0, hi)]\n                for i in _repeat(None, k)]\n\n\n    ## -------------------- real-valued distributions  -------------------\n\n    def uniform(self, a, b):\n        \"Get a random number in the range [a, b) or [a, b] depending on rounding.\"\n        return a + (b - a) * self.random()\n\n    def triangular(self, low=0.0, high=1.0, mode=None):\n        \"\"\"Triangular distribution.\n\n        Continuous distribution bounded by given lower and upper limits,\n        and having a given mode value in-between.\n\n        http://en.wikipedia.org/wiki/Triangular_distribution\n\n        \"\"\"\n        u = self.random()\n        try:\n            c = 0.5 if mode is None else (mode - low) / (high - low)\n        except ZeroDivisionError:\n            return low\n        if u > c:\n            u = 1.0 - u\n            c = 1.0 - c\n            low, high = high, low\n        return low + (high - low) * _sqrt(u * c)\n\n    def normalvariate(self, mu, sigma):\n        \"\"\"Normal distribution.\n\n        mu is the mean, and sigma is the standard deviation.\n\n        \"\"\"\n        # Uses Kinderman and Monahan method. Reference: Kinderman,\n        # A.J. and Monahan, J.F., \"Computer generation of random\n        # variables using the ratio of uniform deviates\", ACM Trans\n        # Math Software, 3, (1977), pp257-260.\n\n        random = self.random\n        while True:\n            u1 = random()\n            u2 = 1.0 - random()\n            z = NV_MAGICCONST * (u1 - 0.5) / u2\n            zz = z * z / 4.0\n            if zz <= -_log(u2):\n                break\n        return mu + z * sigma\n\n    def gauss(self, mu, sigma):\n        \"\"\"Gaussian distribution.\n\n        mu is the mean, and sigma is the standard deviation.  This is\n        slightly faster than the normalvariate() function.\n\n        Not thread-safe without a lock around calls.\n\n        \"\"\"\n        # When x and y are two variables from [0, 1), uniformly\n        # distributed, then\n        #\n        #    cos(2*pi*x)*sqrt(-2*log(1-y))\n        #    sin(2*pi*x)*sqrt(-2*log(1-y))\n        #\n        # are two *independent* variables with normal distribution\n        # (mu = 0, sigma = 1).\n        # (Lambert Meertens)\n        # (corrected version; bug discovered by Mike Miller, fixed by LM)\n\n        # Multithreading note: When two threads call this function\n        # simultaneously, it is possible that they will receive the\n        # same return value.  The window is very small though.  To\n        # avoid this, you have to use a lock around all calls.  (I\n        # didn't want to slow this down in the serial case by using a\n        # lock here.)\n\n        random = self.random\n        z = self.gauss_next\n        self.gauss_next = None\n        if z is None:\n            x2pi = random() * TWOPI\n            g2rad = _sqrt(-2.0 * _log(1.0 - random()))\n            z = _cos(x2pi) * g2rad\n            self.gauss_next = _sin(x2pi) * g2rad\n\n        return mu + z * sigma\n\n    def lognormvariate(self, mu, sigma):\n        \"\"\"Log normal distribution.\n\n        If you take the natural logarithm of this distribution, you'll get a\n        normal distribution with mean mu and standard deviation sigma.\n        mu can have any value, and sigma must be greater than zero.\n\n        \"\"\"\n        return _exp(self.normalvariate(mu, sigma))\n\n    def expovariate(self, lambd):\n        \"\"\"Exponential distribution.\n\n        lambd is 1.0 divided by the desired mean.  It should be\n        nonzero.  (The parameter would be called \"lambda\", but that is\n        a reserved word in Python.)  Returned values range from 0 to\n        positive infinity if lambd is positive, and from negative\n        infinity to 0 if lambd is negative.\n\n        \"\"\"\n        # lambd: rate lambd = 1/mean\n        # ('lambda' is a Python reserved word)\n\n        # we use 1-random() instead of random() to preclude the\n        # possibility of taking the log of zero.\n        return -_log(1.0 - self.random()) / lambd\n\n    def vonmisesvariate(self, mu, kappa):\n        \"\"\"Circular data distribution.\n\n        mu is the mean angle, expressed in radians between 0 and 2*pi, and\n        kappa is the concentration parameter, which must be greater than or\n        equal to zero.  If kappa is equal to zero, this distribution reduces\n        to a uniform random angle over the range 0 to 2*pi.\n\n        \"\"\"\n        # Based upon an algorithm published in: Fisher, N.I.,\n        # \"Statistical Analysis of Circular Data\", Cambridge\n        # University Press, 1993.\n\n        # Thanks to Magnus Kessler for a correction to the\n        # implementation of step 4.\n\n        random = self.random\n        if kappa <= 1e-6:\n            return TWOPI * random()\n\n        s = 0.5 / kappa\n        r = s + _sqrt(1.0 + s * s)\n\n        while True:\n            u1 = random()\n            z = _cos(_pi * u1)\n\n            d = z / (r + z)\n            u2 = random()\n            if u2 < 1.0 - d * d or u2 <= (1.0 - d) * _exp(d):\n                break\n\n        q = 1.0 / r\n        f = (q + z) / (1.0 + q * z)\n        u3 = random()\n        if u3 > 0.5:\n            theta = (mu + _acos(f)) % TWOPI\n        else:\n            theta = (mu - _acos(f)) % TWOPI\n\n        return theta\n\n    def gammavariate(self, alpha, beta):\n        \"\"\"Gamma distribution.  Not the gamma function!\n\n        Conditions on the parameters are alpha > 0 and beta > 0.\n\n        The probability distribution function is:\n\n                    x ** (alpha - 1) * math.exp(-x / beta)\n          pdf(x) =  --------------------------------------\n                      math.gamma(alpha) * beta ** alpha\n\n        \"\"\"\n        # alpha > 0, beta > 0, mean is alpha*beta, variance is alpha*beta**2\n\n        # Warning: a few older sources define the gamma distribution in terms\n        # of alpha > -1.0\n        if alpha <= 0.0 or beta <= 0.0:\n            raise ValueError('gammavariate: alpha and beta must be > 0.0')\n\n        random = self.random\n        if alpha > 1.0:\n\n            # Uses R.C.H. Cheng, \"The generation of Gamma\n            # variables with non-integral shape parameters\",\n            # Applied Statistics, (1977), 26, No. 1, p71-74\n\n            ainv = _sqrt(2.0 * alpha - 1.0)\n            bbb = alpha - LOG4\n            ccc = alpha + ainv\n\n            while 1:\n                u1 = random()\n                if not 1e-7 < u1 < 0.9999999:\n                    continue\n                u2 = 1.0 - random()\n                v = _log(u1 / (1.0 - u1)) / ainv\n                x = alpha * _exp(v)\n                z = u1 * u1 * u2\n                r = bbb + ccc * v - x\n                if r + SG_MAGICCONST - 4.5 * z >= 0.0 or r >= _log(z):\n                    return x * beta\n\n        elif alpha == 1.0:\n            # expovariate(1/beta)\n            return -_log(1.0 - random()) * beta\n\n        else:\n            # alpha is between 0 and 1 (exclusive)\n            # Uses ALGORITHM GS of Statistical Computing - Kennedy & Gentle\n            while True:\n                u = random()\n                b = (_e + alpha) / _e\n                p = b * u\n                if p <= 1.0:\n                    x = p ** (1.0 / alpha)\n                else:\n                    x = -_log((b - p) / alpha)\n                u1 = random()\n                if p > 1.0:\n                    if u1 <= x ** (alpha - 1.0):\n                        break\n                elif u1 <= _exp(-x):\n                    break\n            return x * beta\n\n    def betavariate(self, alpha, beta):\n        \"\"\"Beta distribution.\n\n        Conditions on the parameters are alpha > 0 and beta > 0.\n        Returned values range between 0 and 1.\n\n        \"\"\"\n        ## See\n        ## http://mail.python.org/pipermail/python-bugs-list/2001-January/003752.html\n        ## for Ivan Frohne's insightful analysis of why the original implementation:\n        ##\n        ##    def betavariate(self, alpha, beta):\n        ##        # Discrete Event Simulation in C, pp 87-88.\n        ##\n        ##        y = self.expovariate(alpha)\n        ##        z = self.expovariate(1.0/beta)\n        ##        return z/(y+z)\n        ##\n        ## was dead wrong, and how it probably got that way.\n\n        # This version due to Janne Sinkkonen, and matches all the std\n        # texts (e.g., Knuth Vol 2 Ed 3 pg 134 \"the beta distribution\").\n        y = self.gammavariate(alpha, 1.0)\n        if y:\n            return y / (y + self.gammavariate(beta, 1.0))\n        return 0.0\n\n    def paretovariate(self, alpha):\n        \"\"\"Pareto distribution.  alpha is the shape parameter.\"\"\"\n        # Jain, pg. 495\n\n        u = 1.0 - self.random()\n        return 1.0 / u ** (1.0 / alpha)\n\n    def weibullvariate(self, alpha, beta):\n        \"\"\"Weibull distribution.\n\n        alpha is the scale parameter and beta is the shape parameter.\n\n        \"\"\"\n        # Jain, pg. 499; bug fix courtesy Bill Arms\n\n        u = 1.0 - self.random()\n        return alpha * (-_log(u)) ** (1.0 / beta)\n\n\n## ------------------------------------------------------------------\n## --------------- Operating System Random Source  ------------------\n\n\nclass SystemRandom(Random):\n    \"\"\"Alternate random number generator using sources provided\n    by the operating system (such as /dev/urandom on Unix or\n    CryptGenRandom on Windows).\n\n     Not available on all systems (see os.urandom() for details).\n\n    \"\"\"\n\n    def random(self):\n        \"\"\"Get the next random number in the range [0.0, 1.0).\"\"\"\n        return (int.from_bytes(_urandom(7), 'big') >> 3) * RECIP_BPF\n\n    def getrandbits(self, k):\n        \"\"\"getrandbits(k) -> x.  Generates an int with k random bits.\"\"\"\n        if k < 0:\n            raise ValueError('number of bits must be non-negative')\n        numbytes = (k + 7) // 8                       # bits / 8 and rounded up\n        x = int.from_bytes(_urandom(numbytes), 'big')\n        return x >> (numbytes * 8 - k)                # trim excess bits\n\n    def randbytes(self, n):\n        \"\"\"Generate n random bytes.\"\"\"\n        # os.urandom(n) fails with ValueError for n < 0\n        # and returns an empty bytes string for n == 0.\n        return _urandom(n)\n\n    def seed(self, *args, **kwds):\n        \"Stub method.  Not used for a system random number generator.\"\n        return None\n\n    def _notimplemented(self, *args, **kwds):\n        \"Method should not be called for a system random number generator.\"\n        raise NotImplementedError('System entropy source does not have state.')\n    getstate = setstate = _notimplemented\n\n\n# ----------------------------------------------------------------------\n# Create one instance, seeded from current time, and export its methods\n# as module-level functions.  The functions share state across all uses\n# (both in the user's code and in the Python libraries), but that's fine\n# for most programs and is easier for the casual user than making them\n# instantiate their own Random() instance.\n\n_inst = Random()\nseed = _inst.seed\nrandom = _inst.random\nuniform = _inst.uniform\ntriangular = _inst.triangular\nrandint = _inst.randint\nchoice = _inst.choice\nrandrange = _inst.randrange\nsample = _inst.sample\nshuffle = _inst.shuffle\nchoices = _inst.choices\nnormalvariate = _inst.normalvariate\nlognormvariate = _inst.lognormvariate\nexpovariate = _inst.expovariate\nvonmisesvariate = _inst.vonmisesvariate\ngammavariate = _inst.gammavariate\ngauss = _inst.gauss\nbetavariate = _inst.betavariate\nparetovariate = _inst.paretovariate\nweibullvariate = _inst.weibullvariate\ngetstate = _inst.getstate\nsetstate = _inst.setstate\ngetrandbits = _inst.getrandbits\nrandbytes = _inst.randbytes\n\n\n## ------------------------------------------------------\n## ----------------- test program -----------------------\n\ndef _test_generator(n, func, args):\n    from statistics import stdev, fmean as mean\n    from time import perf_counter\n\n    t0 = perf_counter()\n    data = [func(*args) for i in range(n)]\n    t1 = perf_counter()\n\n    xbar = mean(data)\n    sigma = stdev(data, xbar)\n    low = min(data)\n    high = max(data)\n\n    print(f'{t1 - t0:.3f} sec, {n} times {func.__name__}')\n    print('avg %g, stddev %g, min %g, max %g\\n' % (xbar, sigma, low, high))\n\n\ndef _test(N=2000):\n    _test_generator(N, random, ())\n    _test_generator(N, normalvariate, (0.0, 1.0))\n    _test_generator(N, lognormvariate, (0.0, 1.0))\n    _test_generator(N, vonmisesvariate, (0.0, 1.0))\n    _test_generator(N, gammavariate, (0.01, 1.0))\n    _test_generator(N, gammavariate, (0.1, 1.0))\n    _test_generator(N, gammavariate, (0.1, 2.0))\n    _test_generator(N, gammavariate, (0.5, 1.0))\n    _test_generator(N, gammavariate, (0.9, 1.0))\n    _test_generator(N, gammavariate, (1.0, 1.0))\n    _test_generator(N, gammavariate, (2.0, 1.0))\n    _test_generator(N, gammavariate, (20.0, 1.0))\n    _test_generator(N, gammavariate, (200.0, 1.0))\n    _test_generator(N, gauss, (0.0, 1.0))\n    _test_generator(N, betavariate, (3.0, 3.0))\n    _test_generator(N, triangular, (0.0, 1.0, 1.0 / 3.0))\n\n\n## ------------------------------------------------------\n## ------------------ fork support  ---------------------\n\nif hasattr(_os, \"fork\"):\n    _os.register_at_fork(after_in_child=_inst.seed)\n\n\nif __name__ == '__main__':\n    _test()\n", 895], "C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py": ["'''A multi-producer, multi-consumer queue.'''\n\nimport threading\nimport types\nfrom collections import deque\nfrom heapq import heappush, heappop\nfrom time import monotonic as time\ntry:\n    from _queue import SimpleQueue\nexcept ImportError:\n    SimpleQueue = None\n\n__all__ = ['Empty', 'Full', 'Queue', 'PriorityQueue', 'LifoQueue', 'SimpleQueue']\n\n\ntry:\n    from _queue import Empty\nexcept ImportError:\n    class Empty(Exception):\n        'Exception raised by Queue.get(block=0)/get_nowait().'\n        pass\n\nclass Full(Exception):\n    'Exception raised by Queue.put(block=0)/put_nowait().'\n    pass\n\n\nclass Queue:\n    '''Create a queue object with a given maximum size.\n\n    If maxsize is <= 0, the queue size is infinite.\n    '''\n\n    def __init__(self, maxsize=0):\n        self.maxsize = maxsize\n        self._init(maxsize)\n\n        # mutex must be held whenever the queue is mutating.  All methods\n        # that acquire mutex must release it before returning.  mutex\n        # is shared between the three conditions, so acquiring and\n        # releasing the conditions also acquires and releases mutex.\n        self.mutex = threading.Lock()\n\n        # Notify not_empty whenever an item is added to the queue; a\n        # thread waiting to get is notified then.\n        self.not_empty = threading.Condition(self.mutex)\n\n        # Notify not_full whenever an item is removed from the queue;\n        # a thread waiting to put is notified then.\n        self.not_full = threading.Condition(self.mutex)\n\n        # Notify all_tasks_done whenever the number of unfinished tasks\n        # drops to zero; thread waiting to join() is notified to resume\n        self.all_tasks_done = threading.Condition(self.mutex)\n        self.unfinished_tasks = 0\n\n    def task_done(self):\n        '''Indicate that a formerly enqueued task is complete.\n\n        Used by Queue consumer threads.  For each get() used to fetch a task,\n        a subsequent call to task_done() tells the queue that the processing\n        on the task is complete.\n\n        If a join() is currently blocking, it will resume when all items\n        have been processed (meaning that a task_done() call was received\n        for every item that had been put() into the queue).\n\n        Raises a ValueError if called more times than there were items\n        placed in the queue.\n        '''\n        with self.all_tasks_done:\n            unfinished = self.unfinished_tasks - 1\n            if unfinished <= 0:\n                if unfinished < 0:\n                    raise ValueError('task_done() called too many times')\n                self.all_tasks_done.notify_all()\n            self.unfinished_tasks = unfinished\n\n    def join(self):\n        '''Blocks until all items in the Queue have been gotten and processed.\n\n        The count of unfinished tasks goes up whenever an item is added to the\n        queue. The count goes down whenever a consumer thread calls task_done()\n        to indicate the item was retrieved and all work on it is complete.\n\n        When the count of unfinished tasks drops to zero, join() unblocks.\n        '''\n        with self.all_tasks_done:\n            while self.unfinished_tasks:\n                self.all_tasks_done.wait()\n\n    def qsize(self):\n        '''Return the approximate size of the queue (not reliable!).'''\n        with self.mutex:\n            return self._qsize()\n\n    def empty(self):\n        '''Return True if the queue is empty, False otherwise (not reliable!).\n\n        This method is likely to be removed at some point.  Use qsize() == 0\n        as a direct substitute, but be aware that either approach risks a race\n        condition where a queue can grow before the result of empty() or\n        qsize() can be used.\n\n        To create code that needs to wait for all queued tasks to be\n        completed, the preferred technique is to use the join() method.\n        '''\n        with self.mutex:\n            return not self._qsize()\n\n    def full(self):\n        '''Return True if the queue is full, False otherwise (not reliable!).\n\n        This method is likely to be removed at some point.  Use qsize() >= n\n        as a direct substitute, but be aware that either approach risks a race\n        condition where a queue can shrink before the result of full() or\n        qsize() can be used.\n        '''\n        with self.mutex:\n            return 0 < self.maxsize <= self._qsize()\n\n    def put(self, item, block=True, timeout=None):\n        '''Put an item into the queue.\n\n        If optional args 'block' is true and 'timeout' is None (the default),\n        block if necessary until a free slot is available. If 'timeout' is\n        a non-negative number, it blocks at most 'timeout' seconds and raises\n        the Full exception if no free slot was available within that time.\n        Otherwise ('block' is false), put an item on the queue if a free slot\n        is immediately available, else raise the Full exception ('timeout'\n        is ignored in that case).\n        '''\n        with self.not_full:\n            if self.maxsize > 0:\n                if not block:\n                    if self._qsize() >= self.maxsize:\n                        raise Full\n                elif timeout is None:\n                    while self._qsize() >= self.maxsize:\n                        self.not_full.wait()\n                elif timeout < 0:\n                    raise ValueError(\"'timeout' must be a non-negative number\")\n                else:\n                    endtime = time() + timeout\n                    while self._qsize() >= self.maxsize:\n                        remaining = endtime - time()\n                        if remaining <= 0.0:\n                            raise Full\n                        self.not_full.wait(remaining)\n            self._put(item)\n            self.unfinished_tasks += 1\n            self.not_empty.notify()\n\n    def get(self, block=True, timeout=None):\n        '''Remove and return an item from the queue.\n\n        If optional args 'block' is true and 'timeout' is None (the default),\n        block if necessary until an item is available. If 'timeout' is\n        a non-negative number, it blocks at most 'timeout' seconds and raises\n        the Empty exception if no item was available within that time.\n        Otherwise ('block' is false), return an item if one is immediately\n        available, else raise the Empty exception ('timeout' is ignored\n        in that case).\n        '''\n        with self.not_empty:\n            if not block:\n                if not self._qsize():\n                    raise Empty\n            elif timeout is None:\n                while not self._qsize():\n                    self.not_empty.wait()\n            elif timeout < 0:\n                raise ValueError(\"'timeout' must be a non-negative number\")\n            else:\n                endtime = time() + timeout\n                while not self._qsize():\n                    remaining = endtime - time()\n                    if remaining <= 0.0:\n                        raise Empty\n                    self.not_empty.wait(remaining)\n            item = self._get()\n            self.not_full.notify()\n            return item\n\n    def put_nowait(self, item):\n        '''Put an item into the queue without blocking.\n\n        Only enqueue the item if a free slot is immediately available.\n        Otherwise raise the Full exception.\n        '''\n        return self.put(item, block=False)\n\n    def get_nowait(self):\n        '''Remove and return an item from the queue without blocking.\n\n        Only get an item if one is immediately available. Otherwise\n        raise the Empty exception.\n        '''\n        return self.get(block=False)\n\n    # Override these methods to implement other queue organizations\n    # (e.g. stack or priority queue).\n    # These will only be called with appropriate locks held\n\n    # Initialize the queue representation\n    def _init(self, maxsize):\n        self.queue = deque()\n\n    def _qsize(self):\n        return len(self.queue)\n\n    # Put a new item in the queue\n    def _put(self, item):\n        self.queue.append(item)\n\n    # Get an item from the queue\n    def _get(self):\n        return self.queue.popleft()\n\n    __class_getitem__ = classmethod(types.GenericAlias)\n\n\nclass PriorityQueue(Queue):\n    '''Variant of Queue that retrieves open entries in priority order (lowest first).\n\n    Entries are typically tuples of the form:  (priority number, data).\n    '''\n\n    def _init(self, maxsize):\n        self.queue = []\n\n    def _qsize(self):\n        return len(self.queue)\n\n    def _put(self, item):\n        heappush(self.queue, item)\n\n    def _get(self):\n        return heappop(self.queue)\n\n\nclass LifoQueue(Queue):\n    '''Variant of Queue that retrieves most recently added entries first.'''\n\n    def _init(self, maxsize):\n        self.queue = []\n\n    def _qsize(self):\n        return len(self.queue)\n\n    def _put(self, item):\n        self.queue.append(item)\n\n    def _get(self):\n        return self.queue.pop()\n\n\nclass _PySimpleQueue:\n    '''Simple, unbounded FIFO queue.\n\n    This pure Python implementation is not reentrant.\n    '''\n    # Note: while this pure Python version provides fairness\n    # (by using a threading.Semaphore which is itself fair, being based\n    #  on threading.Condition), fairness is not part of the API contract.\n    # This allows the C version to use a different implementation.\n\n    def __init__(self):\n        self._queue = deque()\n        self._count = threading.Semaphore(0)\n\n    def put(self, item, block=True, timeout=None):\n        '''Put the item on the queue.\n\n        The optional 'block' and 'timeout' arguments are ignored, as this method\n        never blocks.  They are provided for compatibility with the Queue class.\n        '''\n        self._queue.append(item)\n        self._count.release()\n\n    def get(self, block=True, timeout=None):\n        '''Remove and return an item from the queue.\n\n        If optional args 'block' is true and 'timeout' is None (the default),\n        block if necessary until an item is available. If 'timeout' is\n        a non-negative number, it blocks at most 'timeout' seconds and raises\n        the Empty exception if no item was available within that time.\n        Otherwise ('block' is false), return an item if one is immediately\n        available, else raise the Empty exception ('timeout' is ignored\n        in that case).\n        '''\n        if timeout is not None and timeout < 0:\n            raise ValueError(\"'timeout' must be a non-negative number\")\n        if not self._count.acquire(block, timeout):\n            raise Empty\n        return self._queue.popleft()\n\n    def put_nowait(self, item):\n        '''Put an item into the queue without blocking.\n\n        This is exactly equivalent to `put(item)` and is only provided\n        for compatibility with the Queue class.\n        '''\n        return self.put(item, block=False)\n\n    def get_nowait(self):\n        '''Remove and return an item from the queue without blocking.\n\n        Only get an item if one is immediately available. Otherwise\n        raise the Empty exception.\n        '''\n        return self.get(block=False)\n\n    def empty(self):\n        '''Return True if the queue is empty, False otherwise (not reliable!).'''\n        return len(self._queue) == 0\n\n    def qsize(self):\n        '''Return the approximate size of the queue (not reliable!).'''\n        return len(self._queue)\n\n    __class_getitem__ = classmethod(types.GenericAlias)\n\n\nif SimpleQueue is None:\n    SimpleQueue = _PySimpleQueue\n", 326], "C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py": ["# Copyright 2009 Brian Quinlan. All Rights Reserved.\n# Licensed to PSF under a Contributor Agreement.\n\n__author__ = 'Brian Quinlan (brian@sweetapp.com)'\n\nimport collections\nimport logging\nimport threading\nimport time\nimport types\n\nFIRST_COMPLETED = 'FIRST_COMPLETED'\nFIRST_EXCEPTION = 'FIRST_EXCEPTION'\nALL_COMPLETED = 'ALL_COMPLETED'\n_AS_COMPLETED = '_AS_COMPLETED'\n\n# Possible future states (for internal use by the futures package).\nPENDING = 'PENDING'\nRUNNING = 'RUNNING'\n# The future was cancelled by the user...\nCANCELLED = 'CANCELLED'\n# ...and _Waiter.add_cancelled() was called by a worker.\nCANCELLED_AND_NOTIFIED = 'CANCELLED_AND_NOTIFIED'\nFINISHED = 'FINISHED'\n\n_FUTURE_STATES = [\n    PENDING,\n    RUNNING,\n    CANCELLED,\n    CANCELLED_AND_NOTIFIED,\n    FINISHED\n]\n\n_STATE_TO_DESCRIPTION_MAP = {\n    PENDING: \"pending\",\n    RUNNING: \"running\",\n    CANCELLED: \"cancelled\",\n    CANCELLED_AND_NOTIFIED: \"cancelled\",\n    FINISHED: \"finished\"\n}\n\n# Logger for internal use by the futures package.\nLOGGER = logging.getLogger(\"concurrent.futures\")\n\nclass Error(Exception):\n    \"\"\"Base class for all future-related exceptions.\"\"\"\n    pass\n\nclass CancelledError(Error):\n    \"\"\"The Future was cancelled.\"\"\"\n    pass\n\nclass TimeoutError(Error):\n    \"\"\"The operation exceeded the given deadline.\"\"\"\n    pass\n\nclass InvalidStateError(Error):\n    \"\"\"The operation is not allowed in this state.\"\"\"\n    pass\n\nclass _Waiter(object):\n    \"\"\"Provides the event that wait() and as_completed() block on.\"\"\"\n    def __init__(self):\n        self.event = threading.Event()\n        self.finished_futures = []\n\n    def add_result(self, future):\n        self.finished_futures.append(future)\n\n    def add_exception(self, future):\n        self.finished_futures.append(future)\n\n    def add_cancelled(self, future):\n        self.finished_futures.append(future)\n\nclass _AsCompletedWaiter(_Waiter):\n    \"\"\"Used by as_completed().\"\"\"\n\n    def __init__(self):\n        super(_AsCompletedWaiter, self).__init__()\n        self.lock = threading.Lock()\n\n    def add_result(self, future):\n        with self.lock:\n            super(_AsCompletedWaiter, self).add_result(future)\n            self.event.set()\n\n    def add_exception(self, future):\n        with self.lock:\n            super(_AsCompletedWaiter, self).add_exception(future)\n            self.event.set()\n\n    def add_cancelled(self, future):\n        with self.lock:\n            super(_AsCompletedWaiter, self).add_cancelled(future)\n            self.event.set()\n\nclass _FirstCompletedWaiter(_Waiter):\n    \"\"\"Used by wait(return_when=FIRST_COMPLETED).\"\"\"\n\n    def add_result(self, future):\n        super().add_result(future)\n        self.event.set()\n\n    def add_exception(self, future):\n        super().add_exception(future)\n        self.event.set()\n\n    def add_cancelled(self, future):\n        super().add_cancelled(future)\n        self.event.set()\n\nclass _AllCompletedWaiter(_Waiter):\n    \"\"\"Used by wait(return_when=FIRST_EXCEPTION and ALL_COMPLETED).\"\"\"\n\n    def __init__(self, num_pending_calls, stop_on_exception):\n        self.num_pending_calls = num_pending_calls\n        self.stop_on_exception = stop_on_exception\n        self.lock = threading.Lock()\n        super().__init__()\n\n    def _decrement_pending_calls(self):\n        with self.lock:\n            self.num_pending_calls -= 1\n            if not self.num_pending_calls:\n                self.event.set()\n\n    def add_result(self, future):\n        super().add_result(future)\n        self._decrement_pending_calls()\n\n    def add_exception(self, future):\n        super().add_exception(future)\n        if self.stop_on_exception:\n            self.event.set()\n        else:\n            self._decrement_pending_calls()\n\n    def add_cancelled(self, future):\n        super().add_cancelled(future)\n        self._decrement_pending_calls()\n\nclass _AcquireFutures(object):\n    \"\"\"A context manager that does an ordered acquire of Future conditions.\"\"\"\n\n    def __init__(self, futures):\n        self.futures = sorted(futures, key=id)\n\n    def __enter__(self):\n        for future in self.futures:\n            future._condition.acquire()\n\n    def __exit__(self, *args):\n        for future in self.futures:\n            future._condition.release()\n\ndef _create_and_install_waiters(fs, return_when):\n    if return_when == _AS_COMPLETED:\n        waiter = _AsCompletedWaiter()\n    elif return_when == FIRST_COMPLETED:\n        waiter = _FirstCompletedWaiter()\n    else:\n        pending_count = sum(\n                f._state not in [CANCELLED_AND_NOTIFIED, FINISHED] for f in fs)\n\n        if return_when == FIRST_EXCEPTION:\n            waiter = _AllCompletedWaiter(pending_count, stop_on_exception=True)\n        elif return_when == ALL_COMPLETED:\n            waiter = _AllCompletedWaiter(pending_count, stop_on_exception=False)\n        else:\n            raise ValueError(\"Invalid return condition: %r\" % return_when)\n\n    for f in fs:\n        f._waiters.append(waiter)\n\n    return waiter\n\n\ndef _yield_finished_futures(fs, waiter, ref_collect):\n    \"\"\"\n    Iterate on the list *fs*, yielding finished futures one by one in\n    reverse order.\n    Before yielding a future, *waiter* is removed from its waiters\n    and the future is removed from each set in the collection of sets\n    *ref_collect*.\n\n    The aim of this function is to avoid keeping stale references after\n    the future is yielded and before the iterator resumes.\n    \"\"\"\n    while fs:\n        f = fs[-1]\n        for futures_set in ref_collect:\n            futures_set.remove(f)\n        with f._condition:\n            f._waiters.remove(waiter)\n        del f\n        # Careful not to keep a reference to the popped value\n        yield fs.pop()\n\n\ndef as_completed(fs, timeout=None):\n    \"\"\"An iterator over the given futures that yields each as it completes.\n\n    Args:\n        fs: The sequence of Futures (possibly created by different Executors) to\n            iterate over.\n        timeout: The maximum number of seconds to wait. If None, then there\n            is no limit on the wait time.\n\n    Returns:\n        An iterator that yields the given Futures as they complete (finished or\n        cancelled). If any given Futures are duplicated, they will be returned\n        once.\n\n    Raises:\n        TimeoutError: If the entire result iterator could not be generated\n            before the given timeout.\n    \"\"\"\n    if timeout is not None:\n        end_time = timeout + time.monotonic()\n\n    fs = set(fs)\n    total_futures = len(fs)\n    with _AcquireFutures(fs):\n        finished = set(\n                f for f in fs\n                if f._state in [CANCELLED_AND_NOTIFIED, FINISHED])\n        pending = fs - finished\n        waiter = _create_and_install_waiters(fs, _AS_COMPLETED)\n    finished = list(finished)\n    try:\n        yield from _yield_finished_futures(finished, waiter,\n                                           ref_collect=(fs,))\n\n        while pending:\n            if timeout is None:\n                wait_timeout = None\n            else:\n                wait_timeout = end_time - time.monotonic()\n                if wait_timeout < 0:\n                    raise TimeoutError(\n                            '%d (of %d) futures unfinished' % (\n                            len(pending), total_futures))\n\n            waiter.event.wait(wait_timeout)\n\n            with waiter.lock:\n                finished = waiter.finished_futures\n                waiter.finished_futures = []\n                waiter.event.clear()\n\n            # reverse to keep finishing order\n            finished.reverse()\n            yield from _yield_finished_futures(finished, waiter,\n                                               ref_collect=(fs, pending))\n\n    finally:\n        # Remove waiter from unfinished futures\n        for f in fs:\n            with f._condition:\n                f._waiters.remove(waiter)\n\nDoneAndNotDoneFutures = collections.namedtuple(\n        'DoneAndNotDoneFutures', 'done not_done')\ndef wait(fs, timeout=None, return_when=ALL_COMPLETED):\n    \"\"\"Wait for the futures in the given sequence to complete.\n\n    Args:\n        fs: The sequence of Futures (possibly created by different Executors) to\n            wait upon.\n        timeout: The maximum number of seconds to wait. If None, then there\n            is no limit on the wait time.\n        return_when: Indicates when this function should return. The options\n            are:\n\n            FIRST_COMPLETED - Return when any future finishes or is\n                              cancelled.\n            FIRST_EXCEPTION - Return when any future finishes by raising an\n                              exception. If no future raises an exception\n                              then it is equivalent to ALL_COMPLETED.\n            ALL_COMPLETED -   Return when all futures finish or are cancelled.\n\n    Returns:\n        A named 2-tuple of sets. The first set, named 'done', contains the\n        futures that completed (is finished or cancelled) before the wait\n        completed. The second set, named 'not_done', contains uncompleted\n        futures.\n    \"\"\"\n    with _AcquireFutures(fs):\n        done = set(f for f in fs\n                   if f._state in [CANCELLED_AND_NOTIFIED, FINISHED])\n        not_done = set(fs) - done\n\n        if (return_when == FIRST_COMPLETED) and done:\n            return DoneAndNotDoneFutures(done, not_done)\n        elif (return_when == FIRST_EXCEPTION) and done:\n            if any(f for f in done\n                   if not f.cancelled() and f.exception() is not None):\n                return DoneAndNotDoneFutures(done, not_done)\n\n        if len(done) == len(fs):\n            return DoneAndNotDoneFutures(done, not_done)\n\n        waiter = _create_and_install_waiters(fs, return_when)\n\n    waiter.event.wait(timeout)\n    for f in fs:\n        with f._condition:\n            f._waiters.remove(waiter)\n\n    done.update(waiter.finished_futures)\n    return DoneAndNotDoneFutures(done, set(fs) - done)\n\nclass Future(object):\n    \"\"\"Represents the result of an asynchronous computation.\"\"\"\n\n    def __init__(self):\n        \"\"\"Initializes the future. Should not be called by clients.\"\"\"\n        self._condition = threading.Condition()\n        self._state = PENDING\n        self._result = None\n        self._exception = None\n        self._waiters = []\n        self._done_callbacks = []\n\n    def _invoke_callbacks(self):\n        for callback in self._done_callbacks:\n            try:\n                callback(self)\n            except Exception:\n                LOGGER.exception('exception calling callback for %r', self)\n\n    def __repr__(self):\n        with self._condition:\n            if self._state == FINISHED:\n                if self._exception:\n                    return '<%s at %#x state=%s raised %s>' % (\n                        self.__class__.__name__,\n                        id(self),\n                        _STATE_TO_DESCRIPTION_MAP[self._state],\n                        self._exception.__class__.__name__)\n                else:\n                    return '<%s at %#x state=%s returned %s>' % (\n                        self.__class__.__name__,\n                        id(self),\n                        _STATE_TO_DESCRIPTION_MAP[self._state],\n                        self._result.__class__.__name__)\n            return '<%s at %#x state=%s>' % (\n                    self.__class__.__name__,\n                    id(self),\n                   _STATE_TO_DESCRIPTION_MAP[self._state])\n\n    def cancel(self):\n        \"\"\"Cancel the future if possible.\n\n        Returns True if the future was cancelled, False otherwise. A future\n        cannot be cancelled if it is running or has already completed.\n        \"\"\"\n        with self._condition:\n            if self._state in [RUNNING, FINISHED]:\n                return False\n\n            if self._state in [CANCELLED, CANCELLED_AND_NOTIFIED]:\n                return True\n\n            self._state = CANCELLED\n            self._condition.notify_all()\n\n        self._invoke_callbacks()\n        return True\n\n    def cancelled(self):\n        \"\"\"Return True if the future was cancelled.\"\"\"\n        with self._condition:\n            return self._state in [CANCELLED, CANCELLED_AND_NOTIFIED]\n\n    def running(self):\n        \"\"\"Return True if the future is currently executing.\"\"\"\n        with self._condition:\n            return self._state == RUNNING\n\n    def done(self):\n        \"\"\"Return True of the future was cancelled or finished executing.\"\"\"\n        with self._condition:\n            return self._state in [CANCELLED, CANCELLED_AND_NOTIFIED, FINISHED]\n\n    def __get_result(self):\n        if self._exception:\n            try:\n                raise self._exception\n            finally:\n                # Break a reference cycle with the exception in self._exception\n                self = None\n        else:\n            return self._result\n\n    def add_done_callback(self, fn):\n        \"\"\"Attaches a callable that will be called when the future finishes.\n\n        Args:\n            fn: A callable that will be called with this future as its only\n                argument when the future completes or is cancelled. The callable\n                will always be called by a thread in the same process in which\n                it was added. If the future has already completed or been\n                cancelled then the callable will be called immediately. These\n                callables are called in the order that they were added.\n        \"\"\"\n        with self._condition:\n            if self._state not in [CANCELLED, CANCELLED_AND_NOTIFIED, FINISHED]:\n                self._done_callbacks.append(fn)\n                return\n        try:\n            fn(self)\n        except Exception:\n            LOGGER.exception('exception calling callback for %r', self)\n\n    def result(self, timeout=None):\n        \"\"\"Return the result of the call that the future represents.\n\n        Args:\n            timeout: The number of seconds to wait for the result if the future\n                isn't done. If None, then there is no limit on the wait time.\n\n        Returns:\n            The result of the call that the future represents.\n\n        Raises:\n            CancelledError: If the future was cancelled.\n            TimeoutError: If the future didn't finish executing before the given\n                timeout.\n            Exception: If the call raised then that exception will be raised.\n        \"\"\"\n        try:\n            with self._condition:\n                if self._state in [CANCELLED, CANCELLED_AND_NOTIFIED]:\n                    raise CancelledError()\n                elif self._state == FINISHED:\n                    return self.__get_result()\n\n                self._condition.wait(timeout)\n\n                if self._state in [CANCELLED, CANCELLED_AND_NOTIFIED]:\n                    raise CancelledError()\n                elif self._state == FINISHED:\n                    return self.__get_result()\n                else:\n                    raise TimeoutError()\n        finally:\n            # Break a reference cycle with the exception in self._exception\n            self = None\n\n    def exception(self, timeout=None):\n        \"\"\"Return the exception raised by the call that the future represents.\n\n        Args:\n            timeout: The number of seconds to wait for the exception if the\n                future isn't done. If None, then there is no limit on the wait\n                time.\n\n        Returns:\n            The exception raised by the call that the future represents or None\n            if the call completed without raising.\n\n        Raises:\n            CancelledError: If the future was cancelled.\n            TimeoutError: If the future didn't finish executing before the given\n                timeout.\n        \"\"\"\n\n        with self._condition:\n            if self._state in [CANCELLED, CANCELLED_AND_NOTIFIED]:\n                raise CancelledError()\n            elif self._state == FINISHED:\n                return self._exception\n\n            self._condition.wait(timeout)\n\n            if self._state in [CANCELLED, CANCELLED_AND_NOTIFIED]:\n                raise CancelledError()\n            elif self._state == FINISHED:\n                return self._exception\n            else:\n                raise TimeoutError()\n\n    # The following methods should only be used by Executors and in tests.\n    def set_running_or_notify_cancel(self):\n        \"\"\"Mark the future as running or process any cancel notifications.\n\n        Should only be used by Executor implementations and unit tests.\n\n        If the future has been cancelled (cancel() was called and returned\n        True) then any threads waiting on the future completing (though calls\n        to as_completed() or wait()) are notified and False is returned.\n\n        If the future was not cancelled then it is put in the running state\n        (future calls to running() will return True) and True is returned.\n\n        This method should be called by Executor implementations before\n        executing the work associated with this future. If this method returns\n        False then the work should not be executed.\n\n        Returns:\n            False if the Future was cancelled, True otherwise.\n\n        Raises:\n            RuntimeError: if this method was already called or if set_result()\n                or set_exception() was called.\n        \"\"\"\n        with self._condition:\n            if self._state == CANCELLED:\n                self._state = CANCELLED_AND_NOTIFIED\n                for waiter in self._waiters:\n                    waiter.add_cancelled(self)\n                # self._condition.notify_all() is not necessary because\n                # self.cancel() triggers a notification.\n                return False\n            elif self._state == PENDING:\n                self._state = RUNNING\n                return True\n            else:\n                LOGGER.critical('Future %s in unexpected state: %s',\n                                id(self),\n                                self._state)\n                raise RuntimeError('Future in unexpected state')\n\n    def set_result(self, result):\n        \"\"\"Sets the return value of work associated with the future.\n\n        Should only be used by Executor implementations and unit tests.\n        \"\"\"\n        with self._condition:\n            if self._state in {CANCELLED, CANCELLED_AND_NOTIFIED, FINISHED}:\n                raise InvalidStateError('{}: {!r}'.format(self._state, self))\n            self._result = result\n            self._state = FINISHED\n            for waiter in self._waiters:\n                waiter.add_result(self)\n            self._condition.notify_all()\n        self._invoke_callbacks()\n\n    def set_exception(self, exception):\n        \"\"\"Sets the result of the future as being the given exception.\n\n        Should only be used by Executor implementations and unit tests.\n        \"\"\"\n        with self._condition:\n            if self._state in {CANCELLED, CANCELLED_AND_NOTIFIED, FINISHED}:\n                raise InvalidStateError('{}: {!r}'.format(self._state, self))\n            self._exception = exception\n            self._state = FINISHED\n            for waiter in self._waiters:\n                waiter.add_exception(self)\n            self._condition.notify_all()\n        self._invoke_callbacks()\n\n    __class_getitem__ = classmethod(types.GenericAlias)\n\nclass Executor(object):\n    \"\"\"This is an abstract base class for concrete asynchronous executors.\"\"\"\n\n    def submit(self, fn, /, *args, **kwargs):\n        \"\"\"Submits a callable to be executed with the given arguments.\n\n        Schedules the callable to be executed as fn(*args, **kwargs) and returns\n        a Future instance representing the execution of the callable.\n\n        Returns:\n            A Future representing the given call.\n        \"\"\"\n        raise NotImplementedError()\n\n    def map(self, fn, *iterables, timeout=None, chunksize=1):\n        \"\"\"Returns an iterator equivalent to map(fn, iter).\n\n        Args:\n            fn: A callable that will take as many arguments as there are\n                passed iterables.\n            timeout: The maximum number of seconds to wait. If None, then there\n                is no limit on the wait time.\n            chunksize: The size of the chunks the iterable will be broken into\n                before being passed to a child process. This argument is only\n                used by ProcessPoolExecutor; it is ignored by\n                ThreadPoolExecutor.\n\n        Returns:\n            An iterator equivalent to: map(func, *iterables) but the calls may\n            be evaluated out-of-order.\n\n        Raises:\n            TimeoutError: If the entire result iterator could not be generated\n                before the given timeout.\n            Exception: If fn(*args) raises for any values.\n        \"\"\"\n        if timeout is not None:\n            end_time = timeout + time.monotonic()\n\n        fs = [self.submit(fn, *args) for args in zip(*iterables)]\n\n        # Yield must be hidden in closure so that the futures are submitted\n        # before the first iterator value is required.\n        def result_iterator():\n            try:\n                # reverse to keep finishing order\n                fs.reverse()\n                while fs:\n                    # Careful not to keep a reference to the popped future\n                    if timeout is None:\n                        yield fs.pop().result()\n                    else:\n                        yield fs.pop().result(end_time - time.monotonic())\n            finally:\n                for future in fs:\n                    future.cancel()\n        return result_iterator()\n\n    def shutdown(self, wait=True, *, cancel_futures=False):\n        \"\"\"Clean-up the resources associated with the Executor.\n\n        It is safe to call this method several times. Otherwise, no other\n        methods can be called after this one.\n\n        Args:\n            wait: If True then shutdown will not return until all running\n                futures have finished executing and the resources used by the\n                executor have been reclaimed.\n            cancel_futures: If True then shutdown will cancel all pending\n                futures. Futures that are completed or running will not be\n                cancelled.\n        \"\"\"\n        pass\n\n    def __enter__(self):\n        return self\n\n    def __exit__(self, exc_type, exc_val, exc_tb):\n        self.shutdown(wait=True)\n        return False\n\n\nclass BrokenExecutor(RuntimeError):\n    \"\"\"\n    Raised when a executor has become non-functional after a severe failure.\n    \"\"\"\n", 643], "C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_weakrefset.py": ["# Access WeakSet through the weakref module.\n# This code is separated-out because it is needed\n# by abc.py to load everything else at startup.\n\nfrom _weakref import ref\nfrom types import GenericAlias\n\n__all__ = ['WeakSet']\n\n\nclass _IterationGuard:\n    # This context manager registers itself in the current iterators of the\n    # weak container, such as to delay all removals until the context manager\n    # exits.\n    # This technique should be relatively thread-safe (since sets are).\n\n    def __init__(self, weakcontainer):\n        # Don't create cycles\n        self.weakcontainer = ref(weakcontainer)\n\n    def __enter__(self):\n        w = self.weakcontainer()\n        if w is not None:\n            w._iterating.add(self)\n        return self\n\n    def __exit__(self, e, t, b):\n        w = self.weakcontainer()\n        if w is not None:\n            s = w._iterating\n            s.remove(self)\n            if not s:\n                w._commit_removals()\n\n\nclass WeakSet:\n    def __init__(self, data=None):\n        self.data = set()\n        def _remove(item, selfref=ref(self)):\n            self = selfref()\n            if self is not None:\n                if self._iterating:\n                    self._pending_removals.append(item)\n                else:\n                    self.data.discard(item)\n        self._remove = _remove\n        # A list of keys to be removed\n        self._pending_removals = []\n        self._iterating = set()\n        if data is not None:\n            self.update(data)\n\n    def _commit_removals(self):\n        pop = self._pending_removals.pop\n        discard = self.data.discard\n        while True:\n            try:\n                item = pop()\n            except IndexError:\n                return\n            discard(item)\n\n    def __iter__(self):\n        with _IterationGuard(self):\n            for itemref in self.data:\n                item = itemref()\n                if item is not None:\n                    # Caveat: the iterator will keep a strong reference to\n                    # `item` until it is resumed or closed.\n                    yield item\n\n    def __len__(self):\n        return len(self.data) - len(self._pending_removals)\n\n    def __contains__(self, item):\n        try:\n            wr = ref(item)\n        except TypeError:\n            return False\n        return wr in self.data\n\n    def __reduce__(self):\n        return (self.__class__, (list(self),),\n                getattr(self, '__dict__', None))\n\n    def add(self, item):\n        if self._pending_removals:\n            self._commit_removals()\n        self.data.add(ref(item, self._remove))\n\n    def clear(self):\n        if self._pending_removals:\n            self._commit_removals()\n        self.data.clear()\n\n    def copy(self):\n        return self.__class__(self)\n\n    def pop(self):\n        if self._pending_removals:\n            self._commit_removals()\n        while True:\n            try:\n                itemref = self.data.pop()\n            except KeyError:\n                raise KeyError('pop from empty WeakSet') from None\n            item = itemref()\n            if item is not None:\n                return item\n\n    def remove(self, item):\n        if self._pending_removals:\n            self._commit_removals()\n        self.data.remove(ref(item))\n\n    def discard(self, item):\n        if self._pending_removals:\n            self._commit_removals()\n        self.data.discard(ref(item))\n\n    def update(self, other):\n        if self._pending_removals:\n            self._commit_removals()\n        for element in other:\n            self.add(element)\n\n    def __ior__(self, other):\n        self.update(other)\n        return self\n\n    def difference(self, other):\n        newset = self.copy()\n        newset.difference_update(other)\n        return newset\n    __sub__ = difference\n\n    def difference_update(self, other):\n        self.__isub__(other)\n    def __isub__(self, other):\n        if self._pending_removals:\n            self._commit_removals()\n        if self is other:\n            self.data.clear()\n        else:\n            self.data.difference_update(ref(item) for item in other)\n        return self\n\n    def intersection(self, other):\n        return self.__class__(item for item in other if item in self)\n    __and__ = intersection\n\n    def intersection_update(self, other):\n        self.__iand__(other)\n    def __iand__(self, other):\n        if self._pending_removals:\n            self._commit_removals()\n        self.data.intersection_update(ref(item) for item in other)\n        return self\n\n    def issubset(self, other):\n        return self.data.issubset(ref(item) for item in other)\n    __le__ = issubset\n\n    def __lt__(self, other):\n        return self.data < set(map(ref, other))\n\n    def issuperset(self, other):\n        return self.data.issuperset(ref(item) for item in other)\n    __ge__ = issuperset\n\n    def __gt__(self, other):\n        return self.data > set(map(ref, other))\n\n    def __eq__(self, other):\n        if not isinstance(other, self.__class__):\n            return NotImplemented\n        return self.data == set(map(ref, other))\n\n    def symmetric_difference(self, other):\n        newset = self.copy()\n        newset.symmetric_difference_update(other)\n        return newset\n    __xor__ = symmetric_difference\n\n    def symmetric_difference_update(self, other):\n        self.__ixor__(other)\n    def __ixor__(self, other):\n        if self._pending_removals:\n            self._commit_removals()\n        if self is other:\n            self.data.clear()\n        else:\n            self.data.symmetric_difference_update(ref(item, self._remove) for item in other)\n        return self\n\n    def union(self, other):\n        return self.__class__(e for s in (self, other) for e in s)\n    __or__ = union\n\n    def isdisjoint(self, other):\n        return len(self.intersection(other)) == 0\n\n    def __repr__(self):\n        return repr(self.data)\n\n    __class_getitem__ = classmethod(GenericAlias)\n", 206], "C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py": ["import os\nimport msvcrt\nimport signal\nimport sys\nimport _winapi\n\nfrom .context import reduction, get_spawning_popen, set_spawning_popen\nfrom . import spawn\nfrom . import util\n\n__all__ = ['Popen']\n\n#\n#\n#\n\nTERMINATE = 0x10000\nWINEXE = (sys.platform == 'win32' and getattr(sys, 'frozen', False))\nWINSERVICE = sys.executable.lower().endswith(\"pythonservice.exe\")\n\n\ndef _path_eq(p1, p2):\n    return p1 == p2 or os.path.normcase(p1) == os.path.normcase(p2)\n\nWINENV = not _path_eq(sys.executable, sys._base_executable)\n\n\ndef _close_handles(*handles):\n    for handle in handles:\n        _winapi.CloseHandle(handle)\n\n\n#\n# We define a Popen class similar to the one from subprocess, but\n# whose constructor takes a process object as its argument.\n#\n\nclass Popen(object):\n    '''\n    Start a subprocess to run the code of a process object\n    '''\n    method = 'spawn'\n\n    def __init__(self, process_obj):\n        prep_data = spawn.get_preparation_data(process_obj._name)\n\n        # read end of pipe will be duplicated by the child process\n        # -- see spawn_main() in spawn.py.\n        #\n        # bpo-33929: Previously, the read end of pipe was \"stolen\" by the child\n        # process, but it leaked a handle if the child process had been\n        # terminated before it could steal the handle from the parent process.\n        rhandle, whandle = _winapi.CreatePipe(None, 0)\n        wfd = msvcrt.open_osfhandle(whandle, 0)\n        cmd = spawn.get_command_line(parent_pid=os.getpid(),\n                                     pipe_handle=rhandle)\n        cmd = ' '.join('\"%s\"' % x for x in cmd)\n\n        python_exe = spawn.get_executable()\n\n        # bpo-35797: When running in a venv, we bypass the redirect\n        # executor and launch our base Python.\n        if WINENV and _path_eq(python_exe, sys.executable):\n            python_exe = sys._base_executable\n            env = os.environ.copy()\n            env[\"__PYVENV_LAUNCHER__\"] = sys.executable\n        else:\n            env = None\n\n        with open(wfd, 'wb', closefd=True) as to_child:\n            # start process\n            try:\n                hp, ht, pid, tid = _winapi.CreateProcess(\n                    python_exe, cmd,\n                    None, None, False, 0, env, None, None)\n                _winapi.CloseHandle(ht)\n            except:\n                _winapi.CloseHandle(rhandle)\n                raise\n\n            # set attributes of self\n            self.pid = pid\n            self.returncode = None\n            self._handle = hp\n            self.sentinel = int(hp)\n            self.finalizer = util.Finalize(self, _close_handles,\n                                           (self.sentinel, int(rhandle)))\n\n            # send information to child\n            set_spawning_popen(self)\n            try:\n                reduction.dump(prep_data, to_child)\n                reduction.dump(process_obj, to_child)\n            finally:\n                set_spawning_popen(None)\n\n    def duplicate_for_child(self, handle):\n        assert self is get_spawning_popen()\n        return reduction.duplicate(handle, self.sentinel)\n\n    def wait(self, timeout=None):\n        if self.returncode is None:\n            if timeout is None:\n                msecs = _winapi.INFINITE\n            else:\n                msecs = max(0, int(timeout * 1000 + 0.5))\n\n            res = _winapi.WaitForSingleObject(int(self._handle), msecs)\n            if res == _winapi.WAIT_OBJECT_0:\n                code = _winapi.GetExitCodeProcess(self._handle)\n                if code == TERMINATE:\n                    code = -signal.SIGTERM\n                self.returncode = code\n\n        return self.returncode\n\n    def poll(self):\n        return self.wait(timeout=0)\n\n    def terminate(self):\n        if self.returncode is None:\n            try:\n                _winapi.TerminateProcess(int(self._handle), TERMINATE)\n            except OSError:\n                if self.wait(timeout=1.0) is None:\n                    raise\n\n    kill = terminate\n\n    def close(self):\n        self.finalizer()\n", 131], "C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\spawn.py": ["#\n# Code used to start processes when using the spawn or forkserver\n# start methods.\n#\n# multiprocessing/spawn.py\n#\n# Copyright (c) 2006-2008, R Oudkerk\n# Licensed to PSF under a Contributor Agreement.\n#\n\nimport os\nimport sys\nimport runpy\nimport types\n\nfrom . import get_start_method, set_start_method\nfrom . import process\nfrom .context import reduction\nfrom . import util\n\n__all__ = ['_main', 'freeze_support', 'set_executable', 'get_executable',\n           'get_preparation_data', 'get_command_line', 'import_main_path']\n\n#\n# _python_exe is the assumed path to the python executable.\n# People embedding Python want to modify it.\n#\n\nif sys.platform != 'win32':\n    WINEXE = False\n    WINSERVICE = False\nelse:\n    WINEXE = getattr(sys, 'frozen', False)\n    WINSERVICE = sys.executable.lower().endswith(\"pythonservice.exe\")\n\nif WINSERVICE:\n    _python_exe = os.path.join(sys.exec_prefix, 'python.exe')\nelse:\n    _python_exe = sys.executable\n\ndef set_executable(exe):\n    global _python_exe\n    _python_exe = exe\n\ndef get_executable():\n    return _python_exe\n\n#\n#\n#\n\ndef is_forking(argv):\n    '''\n    Return whether commandline indicates we are forking\n    '''\n    if len(argv) >= 2 and argv[1] == '--multiprocessing-fork':\n        return True\n    else:\n        return False\n\n\ndef freeze_support():\n    '''\n    Run code for process object if this in not the main process\n    '''\n    if is_forking(sys.argv):\n        kwds = {}\n        for arg in sys.argv[2:]:\n            name, value = arg.split('=')\n            if value == 'None':\n                kwds[name] = None\n            else:\n                kwds[name] = int(value)\n        spawn_main(**kwds)\n        sys.exit()\n\n\ndef get_command_line(**kwds):\n    '''\n    Returns prefix of command line used for spawning a child process\n    '''\n    if getattr(sys, 'frozen', False):\n        return ([sys.executable, '--multiprocessing-fork'] +\n                ['%s=%r' % item for item in kwds.items()])\n    else:\n        prog = 'from multiprocessing.spawn import spawn_main; spawn_main(%s)'\n        prog %= ', '.join('%s=%r' % item for item in kwds.items())\n        opts = util._args_from_interpreter_flags()\n        return [_python_exe] + opts + ['-c', prog, '--multiprocessing-fork']\n\n\ndef spawn_main(pipe_handle, parent_pid=None, tracker_fd=None):\n    '''\n    Run code specified by data received over pipe\n    '''\n    assert is_forking(sys.argv), \"Not forking\"\n    if sys.platform == 'win32':\n        import msvcrt\n        import _winapi\n\n        if parent_pid is not None:\n            source_process = _winapi.OpenProcess(\n                _winapi.SYNCHRONIZE | _winapi.PROCESS_DUP_HANDLE,\n                False, parent_pid)\n        else:\n            source_process = None\n        new_handle = reduction.duplicate(pipe_handle,\n                                         source_process=source_process)\n        fd = msvcrt.open_osfhandle(new_handle, os.O_RDONLY)\n        parent_sentinel = source_process\n    else:\n        from . import resource_tracker\n        resource_tracker._resource_tracker._fd = tracker_fd\n        fd = pipe_handle\n        parent_sentinel = os.dup(pipe_handle)\n    exitcode = _main(fd, parent_sentinel)\n    sys.exit(exitcode)\n\n\ndef _main(fd, parent_sentinel):\n    with os.fdopen(fd, 'rb', closefd=True) as from_parent:\n        process.current_process()._inheriting = True\n        try:\n            preparation_data = reduction.pickle.load(from_parent)\n            prepare(preparation_data)\n            self = reduction.pickle.load(from_parent)\n        finally:\n            del process.current_process()._inheriting\n    return self._bootstrap(parent_sentinel)\n\n\ndef _check_not_importing_main():\n    if getattr(process.current_process(), '_inheriting', False):\n        raise RuntimeError('''\n        An attempt has been made to start a new process before the\n        current process has finished its bootstrapping phase.\n\n        This probably means that you are not using fork to start your\n        child processes and you have forgotten to use the proper idiom\n        in the main module:\n\n            if __name__ == '__main__':\n                freeze_support()\n                ...\n\n        The \"freeze_support()\" line can be omitted if the program\n        is not going to be frozen to produce an executable.''')\n\n\ndef get_preparation_data(name):\n    '''\n    Return info about parent needed by child to unpickle process object\n    '''\n    _check_not_importing_main()\n    d = dict(\n        log_to_stderr=util._log_to_stderr,\n        authkey=process.current_process().authkey,\n        )\n\n    if util._logger is not None:\n        d['log_level'] = util._logger.getEffectiveLevel()\n\n    sys_path=sys.path.copy()\n    try:\n        i = sys_path.index('')\n    except ValueError:\n        pass\n    else:\n        sys_path[i] = process.ORIGINAL_DIR\n\n    d.update(\n        name=name,\n        sys_path=sys_path,\n        sys_argv=sys.argv,\n        orig_dir=process.ORIGINAL_DIR,\n        dir=os.getcwd(),\n        start_method=get_start_method(),\n        )\n\n    # Figure out whether to initialise main in the subprocess as a module\n    # or through direct execution (or to leave it alone entirely)\n    main_module = sys.modules['__main__']\n    main_mod_name = getattr(main_module.__spec__, \"name\", None)\n    if main_mod_name is not None:\n        d['init_main_from_name'] = main_mod_name\n    elif sys.platform != 'win32' or (not WINEXE and not WINSERVICE):\n        main_path = getattr(main_module, '__file__', None)\n        if main_path is not None:\n            if (not os.path.isabs(main_path) and\n                        process.ORIGINAL_DIR is not None):\n                main_path = os.path.join(process.ORIGINAL_DIR, main_path)\n            d['init_main_from_path'] = os.path.normpath(main_path)\n\n    return d\n\n#\n# Prepare current process\n#\n\nold_main_modules = []\n\ndef prepare(data):\n    '''\n    Try to get current process ready to unpickle process object\n    '''\n    if 'name' in data:\n        process.current_process().name = data['name']\n\n    if 'authkey' in data:\n        process.current_process().authkey = data['authkey']\n\n    if 'log_to_stderr' in data and data['log_to_stderr']:\n        util.log_to_stderr()\n\n    if 'log_level' in data:\n        util.get_logger().setLevel(data['log_level'])\n\n    if 'sys_path' in data:\n        sys.path = data['sys_path']\n\n    if 'sys_argv' in data:\n        sys.argv = data['sys_argv']\n\n    if 'dir' in data:\n        os.chdir(data['dir'])\n\n    if 'orig_dir' in data:\n        process.ORIGINAL_DIR = data['orig_dir']\n\n    if 'start_method' in data:\n        set_start_method(data['start_method'], force=True)\n\n    if 'init_main_from_name' in data:\n        _fixup_main_from_name(data['init_main_from_name'])\n    elif 'init_main_from_path' in data:\n        _fixup_main_from_path(data['init_main_from_path'])\n\n# Multiprocessing module helpers to fix up the main module in\n# spawned subprocesses\ndef _fixup_main_from_name(mod_name):\n    # __main__.py files for packages, directories, zip archives, etc, run\n    # their \"main only\" code unconditionally, so we don't even try to\n    # populate anything in __main__, nor do we make any changes to\n    # __main__ attributes\n    current_main = sys.modules['__main__']\n    if mod_name == \"__main__\" or mod_name.endswith(\".__main__\"):\n        return\n\n    # If this process was forked, __main__ may already be populated\n    if getattr(current_main.__spec__, \"name\", None) == mod_name:\n        return\n\n    # Otherwise, __main__ may contain some non-main code where we need to\n    # support unpickling it properly. We rerun it as __mp_main__ and make\n    # the normal __main__ an alias to that\n    old_main_modules.append(current_main)\n    main_module = types.ModuleType(\"__mp_main__\")\n    main_content = runpy.run_module(mod_name,\n                                    run_name=\"__mp_main__\",\n                                    alter_sys=True)\n    main_module.__dict__.update(main_content)\n    sys.modules['__main__'] = sys.modules['__mp_main__'] = main_module\n\n\ndef _fixup_main_from_path(main_path):\n    # If this process was forked, __main__ may already be populated\n    current_main = sys.modules['__main__']\n\n    # Unfortunately, the main ipython launch script historically had no\n    # \"if __name__ == '__main__'\" guard, so we work around that\n    # by treating it like a __main__.py file\n    # See https://github.com/ipython/ipython/issues/4698\n    main_name = os.path.splitext(os.path.basename(main_path))[0]\n    if main_name == 'ipython':\n        return\n\n    # Otherwise, if __file__ already has the setting we expect,\n    # there's nothing more to do\n    if getattr(current_main, '__file__', None) == main_path:\n        return\n\n    # If the parent process has sent a path through rather than a module\n    # name we assume it is an executable script that may contain\n    # non-main code that needs to be executed\n    old_main_modules.append(current_main)\n    main_module = types.ModuleType(\"__mp_main__\")\n    main_content = runpy.run_path(main_path,\n                                  run_name=\"__mp_main__\")\n    main_module.__dict__.update(main_content)\n    sys.modules['__main__'] = sys.modules['__mp_main__'] = main_module\n\n\ndef import_main_path(main_path):\n    '''\n    Set sys.modules['__main__'] to module at main_path\n    '''\n    _fixup_main_from_path(main_path)\n", 297], "C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\heapq.py": ["\"\"\"Heap queue algorithm (a.k.a. priority queue).\n\nHeaps are arrays for which a[k] <= a[2*k+1] and a[k] <= a[2*k+2] for\nall k, counting elements from 0.  For the sake of comparison,\nnon-existing elements are considered to be infinite.  The interesting\nproperty of a heap is that a[0] is always its smallest element.\n\nUsage:\n\nheap = []            # creates an empty heap\nheappush(heap, item) # pushes a new item on the heap\nitem = heappop(heap) # pops the smallest item from the heap\nitem = heap[0]       # smallest item on the heap without popping it\nheapify(x)           # transforms list into a heap, in-place, in linear time\nitem = heapreplace(heap, item) # pops and returns smallest item, and adds\n                               # new item; the heap size is unchanged\n\nOur API differs from textbook heap algorithms as follows:\n\n- We use 0-based indexing.  This makes the relationship between the\n  index for a node and the indexes for its children slightly less\n  obvious, but is more suitable since Python uses 0-based indexing.\n\n- Our heappop() method returns the smallest item, not the largest.\n\nThese two make it possible to view the heap as a regular Python list\nwithout surprises: heap[0] is the smallest item, and heap.sort()\nmaintains the heap invariant!\n\"\"\"\n\n# Original code by Kevin O'Connor, augmented by Tim Peters and Raymond Hettinger\n\n__about__ = \"\"\"Heap queues\n\n[explanation by Fran\u00e7ois Pinard]\n\nHeaps are arrays for which a[k] <= a[2*k+1] and a[k] <= a[2*k+2] for\nall k, counting elements from 0.  For the sake of comparison,\nnon-existing elements are considered to be infinite.  The interesting\nproperty of a heap is that a[0] is always its smallest element.\n\nThe strange invariant above is meant to be an efficient memory\nrepresentation for a tournament.  The numbers below are `k', not a[k]:\n\n                                   0\n\n                  1                                 2\n\n          3               4                5               6\n\n      7       8       9       10      11      12      13      14\n\n    15 16   17 18   19 20   21 22   23 24   25 26   27 28   29 30\n\n\nIn the tree above, each cell `k' is topping `2*k+1' and `2*k+2'.  In\na usual binary tournament we see in sports, each cell is the winner\nover the two cells it tops, and we can trace the winner down the tree\nto see all opponents s/he had.  However, in many computer applications\nof such tournaments, we do not need to trace the history of a winner.\nTo be more memory efficient, when a winner is promoted, we try to\nreplace it by something else at a lower level, and the rule becomes\nthat a cell and the two cells it tops contain three different items,\nbut the top cell \"wins\" over the two topped cells.\n\nIf this heap invariant is protected at all time, index 0 is clearly\nthe overall winner.  The simplest algorithmic way to remove it and\nfind the \"next\" winner is to move some loser (let's say cell 30 in the\ndiagram above) into the 0 position, and then percolate this new 0 down\nthe tree, exchanging values, until the invariant is re-established.\nThis is clearly logarithmic on the total number of items in the tree.\nBy iterating over all items, you get an O(n ln n) sort.\n\nA nice feature of this sort is that you can efficiently insert new\nitems while the sort is going on, provided that the inserted items are\nnot \"better\" than the last 0'th element you extracted.  This is\nespecially useful in simulation contexts, where the tree holds all\nincoming events, and the \"win\" condition means the smallest scheduled\ntime.  When an event schedule other events for execution, they are\nscheduled into the future, so they can easily go into the heap.  So, a\nheap is a good structure for implementing schedulers (this is what I\nused for my MIDI sequencer :-).\n\nVarious structures for implementing schedulers have been extensively\nstudied, and heaps are good for this, as they are reasonably speedy,\nthe speed is almost constant, and the worst case is not much different\nthan the average case.  However, there are other representations which\nare more efficient overall, yet the worst cases might be terrible.\n\nHeaps are also very useful in big disk sorts.  You most probably all\nknow that a big sort implies producing \"runs\" (which are pre-sorted\nsequences, which size is usually related to the amount of CPU memory),\nfollowed by a merging passes for these runs, which merging is often\nvery cleverly organised[1].  It is very important that the initial\nsort produces the longest runs possible.  Tournaments are a good way\nto that.  If, using all the memory available to hold a tournament, you\nreplace and percolate items that happen to fit the current run, you'll\nproduce runs which are twice the size of the memory for random input,\nand much better for input fuzzily ordered.\n\nMoreover, if you output the 0'th item on disk and get an input which\nmay not fit in the current tournament (because the value \"wins\" over\nthe last output value), it cannot fit in the heap, so the size of the\nheap decreases.  The freed memory could be cleverly reused immediately\nfor progressively building a second heap, which grows at exactly the\nsame rate the first heap is melting.  When the first heap completely\nvanishes, you switch heaps and start a new run.  Clever and quite\neffective!\n\nIn a word, heaps are useful memory structures to know.  I use them in\na few applications, and I think it is good to keep a `heap' module\naround. :-)\n\n--------------------\n[1] The disk balancing algorithms which are current, nowadays, are\nmore annoying than clever, and this is a consequence of the seeking\ncapabilities of the disks.  On devices which cannot seek, like big\ntape drives, the story was quite different, and one had to be very\nclever to ensure (far in advance) that each tape movement will be the\nmost effective possible (that is, will best participate at\n\"progressing\" the merge).  Some tapes were even able to read\nbackwards, and this was also used to avoid the rewinding time.\nBelieve me, real good tape sorts were quite spectacular to watch!\nFrom all times, sorting has always been a Great Art! :-)\n\"\"\"\n\n__all__ = ['heappush', 'heappop', 'heapify', 'heapreplace', 'merge',\n           'nlargest', 'nsmallest', 'heappushpop']\n\ndef heappush(heap, item):\n    \"\"\"Push item onto heap, maintaining the heap invariant.\"\"\"\n    heap.append(item)\n    _siftdown(heap, 0, len(heap)-1)\n\ndef heappop(heap):\n    \"\"\"Pop the smallest item off the heap, maintaining the heap invariant.\"\"\"\n    lastelt = heap.pop()    # raises appropriate IndexError if heap is empty\n    if heap:\n        returnitem = heap[0]\n        heap[0] = lastelt\n        _siftup(heap, 0)\n        return returnitem\n    return lastelt\n\ndef heapreplace(heap, item):\n    \"\"\"Pop and return the current smallest value, and add the new item.\n\n    This is more efficient than heappop() followed by heappush(), and can be\n    more appropriate when using a fixed-size heap.  Note that the value\n    returned may be larger than item!  That constrains reasonable uses of\n    this routine unless written as part of a conditional replacement:\n\n        if item > heap[0]:\n            item = heapreplace(heap, item)\n    \"\"\"\n    returnitem = heap[0]    # raises appropriate IndexError if heap is empty\n    heap[0] = item\n    _siftup(heap, 0)\n    return returnitem\n\ndef heappushpop(heap, item):\n    \"\"\"Fast version of a heappush followed by a heappop.\"\"\"\n    if heap and heap[0] < item:\n        item, heap[0] = heap[0], item\n        _siftup(heap, 0)\n    return item\n\ndef heapify(x):\n    \"\"\"Transform list into a heap, in-place, in O(len(x)) time.\"\"\"\n    n = len(x)\n    # Transform bottom-up.  The largest index there's any point to looking at\n    # is the largest with a child index in-range, so must have 2*i + 1 < n,\n    # or i < (n-1)/2.  If n is even = 2*j, this is (2*j-1)/2 = j-1/2 so\n    # j-1 is the largest, which is n//2 - 1.  If n is odd = 2*j+1, this is\n    # (2*j+1-1)/2 = j so j-1 is the largest, and that's again n//2-1.\n    for i in reversed(range(n//2)):\n        _siftup(x, i)\n\ndef _heappop_max(heap):\n    \"\"\"Maxheap version of a heappop.\"\"\"\n    lastelt = heap.pop()    # raises appropriate IndexError if heap is empty\n    if heap:\n        returnitem = heap[0]\n        heap[0] = lastelt\n        _siftup_max(heap, 0)\n        return returnitem\n    return lastelt\n\ndef _heapreplace_max(heap, item):\n    \"\"\"Maxheap version of a heappop followed by a heappush.\"\"\"\n    returnitem = heap[0]    # raises appropriate IndexError if heap is empty\n    heap[0] = item\n    _siftup_max(heap, 0)\n    return returnitem\n\ndef _heapify_max(x):\n    \"\"\"Transform list into a maxheap, in-place, in O(len(x)) time.\"\"\"\n    n = len(x)\n    for i in reversed(range(n//2)):\n        _siftup_max(x, i)\n\n# 'heap' is a heap at all indices >= startpos, except possibly for pos.  pos\n# is the index of a leaf with a possibly out-of-order value.  Restore the\n# heap invariant.\ndef _siftdown(heap, startpos, pos):\n    newitem = heap[pos]\n    # Follow the path to the root, moving parents down until finding a place\n    # newitem fits.\n    while pos > startpos:\n        parentpos = (pos - 1) >> 1\n        parent = heap[parentpos]\n        if newitem < parent:\n            heap[pos] = parent\n            pos = parentpos\n            continue\n        break\n    heap[pos] = newitem\n\n# The child indices of heap index pos are already heaps, and we want to make\n# a heap at index pos too.  We do this by bubbling the smaller child of\n# pos up (and so on with that child's children, etc) until hitting a leaf,\n# then using _siftdown to move the oddball originally at index pos into place.\n#\n# We *could* break out of the loop as soon as we find a pos where newitem <=\n# both its children, but turns out that's not a good idea, and despite that\n# many books write the algorithm that way.  During a heap pop, the last array\n# element is sifted in, and that tends to be large, so that comparing it\n# against values starting from the root usually doesn't pay (= usually doesn't\n# get us out of the loop early).  See Knuth, Volume 3, where this is\n# explained and quantified in an exercise.\n#\n# Cutting the # of comparisons is important, since these routines have no\n# way to extract \"the priority\" from an array element, so that intelligence\n# is likely to be hiding in custom comparison methods, or in array elements\n# storing (priority, record) tuples.  Comparisons are thus potentially\n# expensive.\n#\n# On random arrays of length 1000, making this change cut the number of\n# comparisons made by heapify() a little, and those made by exhaustive\n# heappop() a lot, in accord with theory.  Here are typical results from 3\n# runs (3 just to demonstrate how small the variance is):\n#\n# Compares needed by heapify     Compares needed by 1000 heappops\n# --------------------------     --------------------------------\n# 1837 cut to 1663               14996 cut to 8680\n# 1855 cut to 1659               14966 cut to 8678\n# 1847 cut to 1660               15024 cut to 8703\n#\n# Building the heap by using heappush() 1000 times instead required\n# 2198, 2148, and 2219 compares:  heapify() is more efficient, when\n# you can use it.\n#\n# The total compares needed by list.sort() on the same lists were 8627,\n# 8627, and 8632 (this should be compared to the sum of heapify() and\n# heappop() compares):  list.sort() is (unsurprisingly!) more efficient\n# for sorting.\n\ndef _siftup(heap, pos):\n    endpos = len(heap)\n    startpos = pos\n    newitem = heap[pos]\n    # Bubble up the smaller child until hitting a leaf.\n    childpos = 2*pos + 1    # leftmost child position\n    while childpos < endpos:\n        # Set childpos to index of smaller child.\n        rightpos = childpos + 1\n        if rightpos < endpos and not heap[childpos] < heap[rightpos]:\n            childpos = rightpos\n        # Move the smaller child up.\n        heap[pos] = heap[childpos]\n        pos = childpos\n        childpos = 2*pos + 1\n    # The leaf at pos is empty now.  Put newitem there, and bubble it up\n    # to its final resting place (by sifting its parents down).\n    heap[pos] = newitem\n    _siftdown(heap, startpos, pos)\n\ndef _siftdown_max(heap, startpos, pos):\n    'Maxheap variant of _siftdown'\n    newitem = heap[pos]\n    # Follow the path to the root, moving parents down until finding a place\n    # newitem fits.\n    while pos > startpos:\n        parentpos = (pos - 1) >> 1\n        parent = heap[parentpos]\n        if parent < newitem:\n            heap[pos] = parent\n            pos = parentpos\n            continue\n        break\n    heap[pos] = newitem\n\ndef _siftup_max(heap, pos):\n    'Maxheap variant of _siftup'\n    endpos = len(heap)\n    startpos = pos\n    newitem = heap[pos]\n    # Bubble up the larger child until hitting a leaf.\n    childpos = 2*pos + 1    # leftmost child position\n    while childpos < endpos:\n        # Set childpos to index of larger child.\n        rightpos = childpos + 1\n        if rightpos < endpos and not heap[rightpos] < heap[childpos]:\n            childpos = rightpos\n        # Move the larger child up.\n        heap[pos] = heap[childpos]\n        pos = childpos\n        childpos = 2*pos + 1\n    # The leaf at pos is empty now.  Put newitem there, and bubble it up\n    # to its final resting place (by sifting its parents down).\n    heap[pos] = newitem\n    _siftdown_max(heap, startpos, pos)\n\ndef merge(*iterables, key=None, reverse=False):\n    '''Merge multiple sorted inputs into a single sorted output.\n\n    Similar to sorted(itertools.chain(*iterables)) but returns a generator,\n    does not pull the data into memory all at once, and assumes that each of\n    the input streams is already sorted (smallest to largest).\n\n    >>> list(merge([1,3,5,7], [0,2,4,8], [5,10,15,20], [], [25]))\n    [0, 1, 2, 3, 4, 5, 5, 7, 8, 10, 15, 20, 25]\n\n    If *key* is not None, applies a key function to each element to determine\n    its sort order.\n\n    >>> list(merge(['dog', 'horse'], ['cat', 'fish', 'kangaroo'], key=len))\n    ['dog', 'cat', 'fish', 'horse', 'kangaroo']\n\n    '''\n\n    h = []\n    h_append = h.append\n\n    if reverse:\n        _heapify = _heapify_max\n        _heappop = _heappop_max\n        _heapreplace = _heapreplace_max\n        direction = -1\n    else:\n        _heapify = heapify\n        _heappop = heappop\n        _heapreplace = heapreplace\n        direction = 1\n\n    if key is None:\n        for order, it in enumerate(map(iter, iterables)):\n            try:\n                next = it.__next__\n                h_append([next(), order * direction, next])\n            except StopIteration:\n                pass\n        _heapify(h)\n        while len(h) > 1:\n            try:\n                while True:\n                    value, order, next = s = h[0]\n                    yield value\n                    s[0] = next()           # raises StopIteration when exhausted\n                    _heapreplace(h, s)      # restore heap condition\n            except StopIteration:\n                _heappop(h)                 # remove empty iterator\n        if h:\n            # fast case when only a single iterator remains\n            value, order, next = h[0]\n            yield value\n            yield from next.__self__\n        return\n\n    for order, it in enumerate(map(iter, iterables)):\n        try:\n            next = it.__next__\n            value = next()\n            h_append([key(value), order * direction, value, next])\n        except StopIteration:\n            pass\n    _heapify(h)\n    while len(h) > 1:\n        try:\n            while True:\n                key_value, order, value, next = s = h[0]\n                yield value\n                value = next()\n                s[0] = key(value)\n                s[2] = value\n                _heapreplace(h, s)\n        except StopIteration:\n            _heappop(h)\n    if h:\n        key_value, order, value, next = h[0]\n        yield value\n        yield from next.__self__\n\n\n# Algorithm notes for nlargest() and nsmallest()\n# ==============================================\n#\n# Make a single pass over the data while keeping the k most extreme values\n# in a heap.  Memory consumption is limited to keeping k values in a list.\n#\n# Measured performance for random inputs:\n#\n#                                   number of comparisons\n#    n inputs     k-extreme values  (average of 5 trials)   % more than min()\n# -------------   ----------------  ---------------------   -----------------\n#      1,000           100                  3,317               231.7%\n#     10,000           100                 14,046                40.5%\n#    100,000           100                105,749                 5.7%\n#  1,000,000           100              1,007,751                 0.8%\n# 10,000,000           100             10,009,401                 0.1%\n#\n# Theoretical number of comparisons for k smallest of n random inputs:\n#\n# Step   Comparisons                  Action\n# ----   --------------------------   ---------------------------\n#  1     1.66 * k                     heapify the first k-inputs\n#  2     n - k                        compare remaining elements to top of heap\n#  3     k * (1 + lg2(k)) * ln(n/k)   replace the topmost value on the heap\n#  4     k * lg2(k) - (k/2)           final sort of the k most extreme values\n#\n# Combining and simplifying for a rough estimate gives:\n#\n#        comparisons = n + k * (log(k, 2) * log(n/k) + log(k, 2) + log(n/k))\n#\n# Computing the number of comparisons for step 3:\n# -----------------------------------------------\n# * For the i-th new value from the iterable, the probability of being in the\n#   k most extreme values is k/i.  For example, the probability of the 101st\n#   value seen being in the 100 most extreme values is 100/101.\n# * If the value is a new extreme value, the cost of inserting it into the\n#   heap is 1 + log(k, 2).\n# * The probability times the cost gives:\n#            (k/i) * (1 + log(k, 2))\n# * Summing across the remaining n-k elements gives:\n#            sum((k/i) * (1 + log(k, 2)) for i in range(k+1, n+1))\n# * This reduces to:\n#            (H(n) - H(k)) * k * (1 + log(k, 2))\n# * Where H(n) is the n-th harmonic number estimated by:\n#            gamma = 0.5772156649\n#            H(n) = log(n, e) + gamma + 1 / (2 * n)\n#   http://en.wikipedia.org/wiki/Harmonic_series_(mathematics)#Rate_of_divergence\n# * Substituting the H(n) formula:\n#            comparisons = k * (1 + log(k, 2)) * (log(n/k, e) + (1/n - 1/k) / 2)\n#\n# Worst-case for step 3:\n# ----------------------\n# In the worst case, the input data is reversed sorted so that every new element\n# must be inserted in the heap:\n#\n#             comparisons = 1.66 * k + log(k, 2) * (n - k)\n#\n# Alternative Algorithms\n# ----------------------\n# Other algorithms were not used because they:\n# 1) Took much more auxiliary memory,\n# 2) Made multiple passes over the data.\n# 3) Made more comparisons in common cases (small k, large n, semi-random input).\n# See the more detailed comparison of approach at:\n# http://code.activestate.com/recipes/577573-compare-algorithms-for-heapqsmallest\n\ndef nsmallest(n, iterable, key=None):\n    \"\"\"Find the n smallest elements in a dataset.\n\n    Equivalent to:  sorted(iterable, key=key)[:n]\n    \"\"\"\n\n    # Short-cut for n==1 is to use min()\n    if n == 1:\n        it = iter(iterable)\n        sentinel = object()\n        result = min(it, default=sentinel, key=key)\n        return [] if result is sentinel else [result]\n\n    # When n>=size, it's faster to use sorted()\n    try:\n        size = len(iterable)\n    except (TypeError, AttributeError):\n        pass\n    else:\n        if n >= size:\n            return sorted(iterable, key=key)[:n]\n\n    # When key is none, use simpler decoration\n    if key is None:\n        it = iter(iterable)\n        # put the range(n) first so that zip() doesn't\n        # consume one too many elements from the iterator\n        result = [(elem, i) for i, elem in zip(range(n), it)]\n        if not result:\n            return result\n        _heapify_max(result)\n        top = result[0][0]\n        order = n\n        _heapreplace = _heapreplace_max\n        for elem in it:\n            if elem < top:\n                _heapreplace(result, (elem, order))\n                top, _order = result[0]\n                order += 1\n        result.sort()\n        return [elem for (elem, order) in result]\n\n    # General case, slowest method\n    it = iter(iterable)\n    result = [(key(elem), i, elem) for i, elem in zip(range(n), it)]\n    if not result:\n        return result\n    _heapify_max(result)\n    top = result[0][0]\n    order = n\n    _heapreplace = _heapreplace_max\n    for elem in it:\n        k = key(elem)\n        if k < top:\n            _heapreplace(result, (k, order, elem))\n            top, _order, _elem = result[0]\n            order += 1\n    result.sort()\n    return [elem for (k, order, elem) in result]\n\ndef nlargest(n, iterable, key=None):\n    \"\"\"Find the n largest elements in a dataset.\n\n    Equivalent to:  sorted(iterable, key=key, reverse=True)[:n]\n    \"\"\"\n\n    # Short-cut for n==1 is to use max()\n    if n == 1:\n        it = iter(iterable)\n        sentinel = object()\n        result = max(it, default=sentinel, key=key)\n        return [] if result is sentinel else [result]\n\n    # When n>=size, it's faster to use sorted()\n    try:\n        size = len(iterable)\n    except (TypeError, AttributeError):\n        pass\n    else:\n        if n >= size:\n            return sorted(iterable, key=key, reverse=True)[:n]\n\n    # When key is none, use simpler decoration\n    if key is None:\n        it = iter(iterable)\n        result = [(elem, i) for i, elem in zip(range(0, -n, -1), it)]\n        if not result:\n            return result\n        heapify(result)\n        top = result[0][0]\n        order = -n\n        _heapreplace = heapreplace\n        for elem in it:\n            if top < elem:\n                _heapreplace(result, (elem, order))\n                top, _order = result[0]\n                order -= 1\n        result.sort(reverse=True)\n        return [elem for (elem, order) in result]\n\n    # General case, slowest method\n    it = iter(iterable)\n    result = [(key(elem), i, elem) for i, elem in zip(range(0, -n, -1), it)]\n    if not result:\n        return result\n    heapify(result)\n    top = result[0][0]\n    order = -n\n    _heapreplace = heapreplace\n    for elem in it:\n        k = key(elem)\n        if top < k:\n            _heapreplace(result, (k, order, elem))\n            top, _order, _elem = result[0]\n            order -= 1\n    result.sort(reverse=True)\n    return [elem for (k, order, elem) in result]\n\n# If available, use C implementation\ntry:\n    from _heapq import *\nexcept ImportError:\n    pass\ntry:\n    from _heapq import _heapreplace_max\nexcept ImportError:\n    pass\ntry:\n    from _heapq import _heapify_max\nexcept ImportError:\n    pass\ntry:\n    from _heapq import _heappop_max\nexcept ImportError:\n    pass\n\n\nif __name__ == \"__main__\":\n\n    import doctest # pragma: no cover\n    print(doctest.testmod()) # pragma: no cover\n", 601]}, "functions": {"__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:94)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py", 94], "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:139)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py", 139], "_check_readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:143)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py", 143], "_get_more_data (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:337)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py", 337], "_recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:299)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py", 299], "recv_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:213)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py", 213], "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:97)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py", 97], "_rebuild_partial (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:225)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py", 225], "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:98)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py", 98], "getpreferredencoding (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_bootlocale.py:11)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_bootlocale.py", 11], "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\codecs.py:260)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\codecs.py", 260], "decode (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\encodings\\cp1252.py:22)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\encodings\\cp1252.py", 22], "readInData (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:47)": ["C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py", 47], "isstring (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:595)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py", 595], "__next (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:233)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py", 233], "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:224)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py", 224], "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:76)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py", 76], "tell (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:286)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py", 286], "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:111)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py", 111], "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:254)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py", 254], "match (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:249)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py", 249], "_class_escape (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:295)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py", 295], "_uniq (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:432)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py", 432], "append (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:172)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py", 172], "__len__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:160)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py", 160], "__getitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:164)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py", 164], "__setitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:168)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py", 168], "_parse (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:493)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py", 493], "_parse_sub (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:435)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py", 435], "fix_flags (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:921)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py", 921], "parse (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:937)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py", 937], "getwidth (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:174)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py", 174], "_get_iscased (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:453)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py", 453], "_get_literal_prefix (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:461)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py", 461], "_get_charset_prefix (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:492)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py", 492], "_compile_info (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:536)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py", 536], "_simple (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:423)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py", 423], "_optimize_charset (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:276)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py", 276], "_compile_charset (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:249)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py", 249], "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:71)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py", 71], "_code (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:598)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py", 598], "groups (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py:81)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_parse.py", 81], "compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py:759)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\sre_compile.py", 759], "__new__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:670)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py", 670], "__call__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:358)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py", 358], "__and__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py:977)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\enum.py", 977], "_compile (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:289)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py", 289], "sub (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py:203)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\re.py", 203], "cleanAndTokenize (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:64)": ["C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py", 64], "__subclasshook__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py:409)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_collections_abc.py", 409], "__subclasscheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:121)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py", 121], "__instancecheck__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py:117)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\abc.py", 117], "update (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:649)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py", 649], "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:581)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py", 581], "getWordCount (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:83)": ["C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py", 83], "getWordFrequencies (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:101)": ["C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py", 101], "getWordData (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:123)": ["C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py", 123], "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:202)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 202], "_process_chunk (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:193)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 193], "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:145)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 145], "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:38)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py", 38], "_slotnames (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\copyreg.py:103)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\copyreg.py", 103], "__reduce__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:714)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py", 714], "dumps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:48)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py", 48], "_check_writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:147)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py", 147], "_send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:284)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py", 284], "send_bytes (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:186)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py", 186], "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:370)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py", 370], "_sendback_result (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:205)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 205], "_process_worker (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:215)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 215], "run (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:103)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py", 103], "info (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:52)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py", 52], "debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:48)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py", 48], "<lambda> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:284)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py", 284], "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:291)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py", 291], "_run_finalizers (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:268)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py", 268], "current_process (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:37)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py", 37], "_cleanup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:61)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py", 61], "active_children (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:43)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py", 43], "<lambda> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:282)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py", 282], "sub_debug (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:44)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py", 44], "_ConnectionBase (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:119)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py", 119], "PipeConnection (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:273)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py", 273], "Connection (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:353)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py", 353], "Listener (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:437)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py", 437], "SocketListener (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:584)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py", 584], "PipeListener (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:644)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py", 644], "ConnectionWrapper (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:770)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py", 770], "XmlListener (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:792)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py", 792], "register (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:43)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py", 43], "<module> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:10)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py", 10], "Queue (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:35)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py", 35], "JoinableQueue (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:295)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py", 295], "SimpleQueue (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:338)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py", 338], "<module> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:10)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py", 10], "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\weakref.py:368)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\weakref.py", 368], "_ThreadWakeup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:66)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 66], "_register_atexit (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:1383)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py", 1383], "_RemoteTraceback (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:118)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 118], "_ExceptionWithTraceback (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:124)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 124], "_WorkItem (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:137)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 137], "_ResultItem (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:144)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 144], "_CallItem (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:150)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 150], "_SafeQueue (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:158)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 158], "_ExecutorManagerThread (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:256)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 256], "BrokenProcessPool (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:565)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 565], "ProcessPoolExecutor (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:572)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 572], "<module> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:4)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 4], "__getattr__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\__init__.py:40)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\__init__.py", 40], "splitdrive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:124)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py", 124], "normpath (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:450)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py", 450], "normcase (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:44)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py", 44], "_get_bothseps (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:34)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py", 34], "isabs (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:61)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py", 61], "realpath (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:625)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py", 625], "split (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:180)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py", 180], "dirname (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:221)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py", 221], "join (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py:77)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\ntpath.py", 77], "_check_system_limits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:529)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 529], "get_context (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:233)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py", 233], "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:228)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py", 228], "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:398)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py", 398], "_get_candidate_names (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py:225)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py", 225], "rng (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py:134)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py", 134], "_randbelow_with_getrandbits (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:237)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py", 237], "choice (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:343)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py", 343], "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py:148)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py", 148], "__next__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py:145)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py", 145], "_exists (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py:76)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py", 76], "mktemp (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py:375)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\tempfile.py", 375], "arbitrary_address (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:69)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py", 69], "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:122)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py", 122], "Pipe (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:540)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py", 540], "Pipe (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:60)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py", 60], "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:67)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 67], "SemLock (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:46)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py", 46], "Semaphore (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:123)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py", 123], "BoundedSemaphore (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:142)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py", 142], "Lock (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:159)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py", 159], "RLock (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:184)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py", 184], "Condition (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:210)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py", 210], "Event (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:321)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py", 321], "Barrier (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:360)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py", 360], "<module> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:10)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py", 10], "get_context (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:187)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py", 187], "get_start_method (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:197)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py", 197], "seed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:126)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py", 126], "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py:117)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\random.py", 117], "_make_name (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:114)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py", 114], "_make_methods (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:90)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py", 90], "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:50)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py", 50], "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:161)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py", 161], "Lock (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:65)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py", 65], "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:144)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py", 144], "BoundedSemaphore (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:85)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py", 85], "_reset (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:71)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py", 71], "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:37)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py", 37], "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:160)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 160], "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:340)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py", 340], "SimpleQueue (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:110)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py", 110], "_init (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:206)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py", 206], "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:34)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py", 34], "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:573)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 573], "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:632)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py", 632], "_get_chunks (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:183)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 183], "RLock (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:82)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py", 82], "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:317)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py", 317], "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:138)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 138], "__enter__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:256)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py", 256], "_put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:213)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py", 213], "_is_owned (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:271)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py", 271], "notify (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:351)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py", 351], "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:259)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py", 259], "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:122)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py", 122], "wakeup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:77)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 77], "acquire (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:404)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py", 404], "name (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:189)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py", 189], "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:94)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py", 94], "add (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_weakrefset.py:86)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_weakrefset.py", 86], "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:80)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py", 80], "_check_closed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:99)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py", 99], "_path_eq (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:22)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py", 22], "Popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:38)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py", 38], "<module> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:1)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py", 1], "_check_not_importing_main (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\spawn.py:132)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\spawn.py", 132], "authkey (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:213)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py", 213], "get_start_method (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:249)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py", 249], "get_preparation_data (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\spawn.py:150)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\spawn.py", 150], "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:57)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py", 57], "get_executable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\spawn.py:45)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\spawn.py", 45], "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:186)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py", 186], "set_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:354)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py", 354], "get_spawning_popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:351)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py", 351], "__reduce__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:344)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py", 344], "dump (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:58)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py", 58], "assert_spawning (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:357)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py", 357], "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:57)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py", 57], "readable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:163)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py", 163], "writable (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:168)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py", 168], "fileno (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:173)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py", 173], "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:106)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py", 106], "reduce_pipe_connection (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:961)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py", 961], "duplicate (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:71)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py", 71], "duplicate_for_child (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:97)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py", 97], "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py:100)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\synchronize.py", 100], "__getstate__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:356)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py", 356], "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:44)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py", 44], "_Popen (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py:324)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\context.py", 324], "start (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:110)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py", 110], "ident (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:234)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py", 234], "_adjust_process_count (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:662)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 662], "_newname (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:750)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py", 750], "current_thread (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:1338)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py", 1338], "daemon (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:1127)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py", 1127], "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:521)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py", 521], "_make_invoke_excepthook (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:1209)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py", 1209], "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:795)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py", 795], "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:268)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 268], "is_set (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:529)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py", 529], "_release_save (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:265)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py", 265], "full (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:131)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py", 131], "_qsize (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:209)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py", 209], "_get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:217)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py", 217], "get (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py:154)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\queue.py", 154], "set_running_or_notify_cancel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:486)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py", 486], "__init__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:151)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 151], "daemon (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:1142)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py", 1142], "_acquire_restore (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:268)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py", 268], "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:280)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py", 280], "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:556)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py", 556], "start (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:873)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py", 873], "__setitem__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\weakref.py:428)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\weakref.py", 428], "_start_executor_manager_thread (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:654)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 654], "submit (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:678)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 678], "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:101)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py", 101], "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:117)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py", 117], "_start_thread (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:164)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py", 164], "put (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:86)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py", 86], "_reduce_partial (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py:223)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\reduction.py", 223], "add_call_item_to_queue (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:343)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 343], "sentinel (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:247)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py", 247], "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:376)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 376], "_exhaustive_wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:810)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py", 810], "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:907)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py", 907], "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:908)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py", 908], "wait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:832)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py", 832], "_poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:331)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py", 331], "poll (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:258)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py", 258], "clear (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:81)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 81], "wait_result_broken_or_wakeup (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:366)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 366], "is_shutting_down (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:420)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 420], "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:597)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py", 597], "map (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:572)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py", 572], "map (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:702)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 702], "flag_executor_shutting_down (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:468)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 468], "recv (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:251)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py", 251], "notify_all (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:374)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py", 374], "_invoke_callbacks (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:326)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py", 326], "set_result (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:526)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py", 526], "process_result_item (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:397)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 397], "release (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:451)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py", 451], "is_alive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:153)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py", 153], "<genexpr> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:522)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 522], "get_n_children_alive (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:520)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 520], "put_nowait (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:137)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py", 137], "shutdown_workers (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:494)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 494], "_close (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:281)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py", 281], "close (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:178)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py", 178], "_finalize_close (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:206)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py", 206], "__call__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py:205)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\util.py", 205], "close (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:140)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py", 140], "_feed (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:213)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py", 213], "run (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:899)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py", 899], "_stop (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:985)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py", 985], "_wait_for_tstate_lock (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:1059)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py", 1059], "join (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:1021)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py", 1021], "_finalize_join (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:196)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py", 196], "join_thread (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:150)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py", 150], "close (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:71)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 71], "join (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py:142)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\process.py", 142], "join_executor_internals (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:508)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 508], "run (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:311)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 311], "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:778)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py", 778], "_maintain_shutdown_locks (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py:768)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\threading.py", 768], "remove (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\weakref.py:370)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\weakref.py", 370], "_remove (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_weakrefset.py:39)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\_weakrefset.py", 39], "__del__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py:135)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\connection.py", 135], "close (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py:349)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\queues.py", 349], "_close_handles (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py:28)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\multiprocessing\\popen_spawn_win32.py", 28], "shutdown (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:731)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 731], "__exit__ (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:635)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py", 635], "__get_result (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:387)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py", 387], "result (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:417)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py", 417], "result_iterator (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py:601)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\_base.py", 601], "_chain_from_iterable_of_lists (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py:553)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\concurrent\\futures\\process.py", 553], "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\heapq.py:563)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\heapq.py", 563], "<listcomp> (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\heapq.py:577)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\heapq.py", 577], "nlargest (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\heapq.py:521)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\heapq.py", 521], "most_common (C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py:600)": ["C:\\Users\\Matt\\anaconda3\\envs\\CS337-Operating-Systems\\lib\\collections\\__init__.py", 600], "<listcomp> (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:175)": ["C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py", 175], "printTopNWords (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:156)": ["C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py", 156], "printWordFrequencyOverYears (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:182)": ["C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py", 182], "runWordCounter (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:213)": ["C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py", 213], "main (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:280)": ["C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py", 280], "<module> (C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py:1)": ["C:\\Users\\Matt\\PycharmProjects\\CS337-Operating-Systems\\Projects\\Proj5\\multitasking_code_4.py", 1]}}}